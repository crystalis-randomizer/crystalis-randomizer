import { Segment, relocExportLabel } from './util.js';
const { $0d, $fe, $ff } = Segment;
export class Scaling {
    constructor(rom) {
        this.rom = rom;
        this.patk = new Array(48).fill(0);
        this.pdef = new Array(48).fill(0);
        this.php = new Array(48).fill(0);
        this.exp = new Array(48).fill(0);
        this.setPAtkFormula(s => 5 + s * 15 / 32);
        this.setPDefFormula(s => s);
        this.setPhpFormula(s => 48 + 5.5 * s);
        this.setExpScalingFactor(1);
    }
    setExpScalingFactor(f) {
        this.setExpFormula(s => Math.floor(4 * (2 ** ((16 + 9 * s) / 32)) * f));
    }
    setPAtkFormula(f) {
        this.patk = this.patk.map((_, s) => Math.round(8 * f(s)));
    }
    setPDefFormula(f) {
        this.pdef = this.pdef.map((_, s) => Math.round(4 * f(s)));
    }
    setPhpFormula(f) {
        this.php =
            this.php.map((_, s) => Math.min(255, Math.max(5, Math.round(f(s)))));
    }
    setExpFormula(f) {
        this.exp = this.exp.map((_, s) => {
            const e = f(s);
            return e < 0x80 ? e : Math.min(255, 0x80 + (e >> 4));
        });
    }
    write() {
        const a = this.rom.assembler();
        relocExportLabel(a, [$0d, $fe, $ff], 'DiffAtk');
        a.byte(...this.patk);
        relocExportLabel(a, [$0d, $fe, $ff], 'DiffDef');
        a.byte(...this.pdef);
        relocExportLabel(a, [$0d, $fe, $ff], 'DiffHP');
        a.byte(...this.php);
        relocExportLabel(a, [$0d, $fe, $ff], 'DiffExp');
        a.byte(...this.exp);
        return [a.module()];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9qcy9yb20vc2NhbGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRXBELE1BQU0sRUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBQyxHQUFHLE9BQU8sQ0FBQztBQUdoQyxNQUFNLE9BQU8sT0FBTztJQVdsQixZQUFxQixHQUFRO1FBQVIsUUFBRyxHQUFILEdBQUcsQ0FBSztRQUw3QixTQUFJLEdBQWEsSUFBSSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLFNBQUksR0FBYSxJQUFJLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsUUFBRyxHQUFhLElBQUksS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QyxRQUFHLEdBQWEsSUFBSSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBSXBDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUcxQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxDQUFTO1FBRTNCLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVELGNBQWMsQ0FBQyxDQUE4QjtRQUUzQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsY0FBYyxDQUFDLENBQThCO1FBRTNDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxhQUFhLENBQUMsQ0FBOEI7UUFFMUMsSUFBSSxDQUFDLEdBQUc7WUFDSixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELGFBQWEsQ0FBQyxDQUE4QjtRQUcxQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQy9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNmLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2RCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLO1FBQ0gsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUMvQixnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2hELENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckIsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNoRCxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JCLGdCQUFnQixDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDL0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2hELENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEIsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlfSBmcm9tICcuLi9hc20vbW9kdWxlLmpzJztcbmltcG9ydCB7Um9tfSBmcm9tICcuLi9yb20uanMnO1xuaW1wb3J0IHtTZWdtZW50LCByZWxvY0V4cG9ydExhYmVsfSBmcm9tICcuL3V0aWwuanMnO1xuXG5jb25zdCB7JDBkLCAkZmUsICRmZn0gPSBTZWdtZW50O1xuXG4vLyBEYXRhIHN0cnVjdHVyZSBmb3Igc2NhbGluZyB0YWJsZXMuICBHb2VzIHdpdGggcG9zdHNodWZmbGUucy5cbmV4cG9ydCBjbGFzcyBTY2FsaW5nIHtcblxuICAvLyBUT0RPIC0gY29uc2lkZXIgaWYgd2UgY2FuIGVhc2lseSBjaGFuZ2UgdGhlIHNpemUgb2YgdGhlc2UgdGFibGVzP1xuICAvLyBsZXZlbHMgPSA0ODtcblxuICAvLyBUT0RPIC0gaXMgdGhlcmUgc29tZXRoaW5nIGJldHRlciB0byBpbml0aWFsaXplIHRoaXMgd2l0aD9cbiAgcGF0azogbnVtYmVyW10gPSBuZXcgQXJyYXkoNDgpLmZpbGwoMCk7XG4gIHBkZWY6IG51bWJlcltdID0gbmV3IEFycmF5KDQ4KS5maWxsKDApO1xuICBwaHA6IG51bWJlcltdID0gbmV3IEFycmF5KDQ4KS5maWxsKDApO1xuICBleHA6IG51bWJlcltdID0gbmV3IEFycmF5KDQ4KS5maWxsKDApO1xuXG4gIGNvbnN0cnVjdG9yKHJlYWRvbmx5IHJvbTogUm9tKSB7XG4gICAgLy8gUEF0ayA9IDUgKyBzICogMTUvMzJcbiAgICB0aGlzLnNldFBBdGtGb3JtdWxhKHMgPT4gNSArIHMgKiAxNSAvIDMyKTtcbiAgICAvLyBOT1RFOiB1c2VkIHRvIGJlIDMrMypzLzQsIDIrcy8yLCBhbmQgb3RoZXIgdGhpbmdzIGRlcGVuZGluZyBvblxuICAgIC8vIGhvdyBhcm1vcnMgYXJlIHRyZWF0ZWQuICBGb3IgYXJtb3IgY2FwIGF0IDMgKiBMdmwsIHNldCBQRGVmID0gc1xuICAgIHRoaXMuc2V0UERlZkZvcm11bGEocyA9PiBzKTtcbiAgICAvLyBQSFAgPSBtaW4oMjU1LCA0OCArIHJvdW5kKHMgKiAxMSAvIDIpKVxuICAgIHRoaXMuc2V0UGhwRm9ybXVsYShzID0+IDQ4ICsgNS41ICogcyk7XG4gICAgdGhpcy5zZXRFeHBTY2FsaW5nRmFjdG9yKDEpO1xuICB9XG5cbiAgc2V0RXhwU2NhbGluZ0ZhY3RvcihmOiBudW1iZXIpIHtcbiAgICAvLyBQcmUtY29tcHJlc3NlZCBmb3JtdWxhLiAgQWxsb3cgc2V0dGluZyBhIG11bHRpcGxpY2F0aXZlIGZhY3Rvci5cbiAgICB0aGlzLnNldEV4cEZvcm11bGEocyA9PiBNYXRoLmZsb29yKDQgKiAoMiAqKiAoKDE2ICsgOSAqIHMpIC8gMzIpKSAqIGYpKTtcbiAgfVxuXG4gIHNldFBBdGtGb3JtdWxhKGY6IChzY2FsaW5nOiBudW1iZXIpID0+IG51bWJlcikge1xuICAgIC8vIFRhbGUgc3RvcmVzIDggKiBQQXRrLCB3aGVyZSBQQXRrIGlzIGV4cGVjdGVkIHBsYXllciBhdHRhY2suXG4gICAgdGhpcy5wYXRrID0gdGhpcy5wYXRrLm1hcCgoXywgcykgPT4gTWF0aC5yb3VuZCg4ICogZihzKSkpO1xuICB9XG5cbiAgc2V0UERlZkZvcm11bGEoZjogKHNjYWxpbmc6IG51bWJlcikgPT4gbnVtYmVyKSB7XG4gICAgLy8gVGFibGUgc3RvcmVzIDQgKiBQRGVmLCB3aGVyZSBQRGVmIGlzIHRoZSBleHBlY3RlZCBwbGF5ZXIgZGVmZW5zZS5cbiAgICB0aGlzLnBkZWYgPSB0aGlzLnBkZWYubWFwKChfLCBzKSA9PiBNYXRoLnJvdW5kKDQgKiBmKHMpKSk7XG4gIH1cblxuICBzZXRQaHBGb3JtdWxhKGY6IChzY2FsaW5nOiBudW1iZXIpID0+IG51bWJlcikge1xuICAgIC8vIFRhYmxlIHN0b3JlcyBQSFAsIHdoaWNoIGlzIGV4cGVjdGVkIHBsYXllciBIUC5cbiAgICB0aGlzLnBocCA9XG4gICAgICAgIHRoaXMucGhwLm1hcCgoXywgcykgPT4gTWF0aC5taW4oMjU1LCBNYXRoLm1heCg1LCBNYXRoLnJvdW5kKGYocykpKSkpO1xuICB9XG5cbiAgc2V0RXhwRm9ybXVsYShmOiAoc2NhbGluZzogbnVtYmVyKSA9PiBudW1iZXIpIHtcbiAgICAvLyBUYWJsZSBzdG9yZXMgRXhwQiwgd2hpY2ggaXMgdGhlIGNvbXByZXNzZWQgYmFzZSBFWFAgZHJvcC5cbiAgICAvLyBDb21wcmVzcyBtYXBzIHZhbHVlcyA+IDEyNyB0byAkODB8KHg+PjQpXG4gICAgdGhpcy5leHAgPSB0aGlzLmV4cC5tYXAoKF8sIHMpID0+IHtcbiAgICAgIGNvbnN0IGUgPSBmKHMpO1xuICAgICAgcmV0dXJuIGUgPCAweDgwID8gZSA6IE1hdGgubWluKDI1NSwgMHg4MCArIChlID4+IDQpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHdyaXRlKCk6IE1vZHVsZVtdIHtcbiAgICBjb25zdCBhID0gdGhpcy5yb20uYXNzZW1ibGVyKCk7XG4gICAgcmVsb2NFeHBvcnRMYWJlbChhLCBbJDBkLCAkZmUsICRmZl0sICdEaWZmQXRrJyk7XG4gICAgYS5ieXRlKC4uLnRoaXMucGF0ayk7XG4gICAgcmVsb2NFeHBvcnRMYWJlbChhLCBbJDBkLCAkZmUsICRmZl0sICdEaWZmRGVmJyk7XG4gICAgYS5ieXRlKC4uLnRoaXMucGRlZik7XG4gICAgcmVsb2NFeHBvcnRMYWJlbChhLCBbJDBkLCAkZmUsICRmZl0sICdEaWZmSFAnKTtcbiAgICBhLmJ5dGUoLi4udGhpcy5waHApO1xuICAgIHJlbG9jRXhwb3J0TGFiZWwoYSwgWyQwZCwgJGZlLCAkZmZdLCAnRGlmZkV4cCcpO1xuICAgIGEuYnl0ZSguLi50aGlzLmV4cCk7XG4gICAgcmV0dXJuIFthLm1vZHVsZSgpXTtcbiAgfVxufVxuIl19