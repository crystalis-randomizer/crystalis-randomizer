import { Entity } from './entity.js';
import { tuple } from './util.js';
export class AdHocSpawn extends Entity {
    constructor(rom, id) {
        super(rom, id);
        this.data = tuple(rom.prg, this.base, 4);
    }
    get base() {
        return (this.id << 2) + 0x29c00;
    }
    get slotRangeLower() { return this.data[0]; }
    set slotRangeLower(arg) { this.data[0] = arg; }
    get slotRangeUpper() { return this.data[1]; }
    set slotRangeUpper(arg) { this.data[1] = arg; }
    get objectId() { return this.data[2]; }
    set objectId(arg) { this.data[2] = arg; }
    get count() { return this.data[3]; }
    set count(arg) { this.data[3] = arg; }
    write() {
        const a = this.rom.assembler();
        a.segment('14');
        a.org(0x9c00 + (this.id << 2));
        a.byte(...this.data);
        return [a.module()];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRob2NzcGF3bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9qcy9yb20vYWRob2NzcGF3bi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQ25DLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFJaEMsTUFBTSxPQUFPLFVBQVcsU0FBUSxNQUFNO0lBSXBDLFlBQVksR0FBUSxFQUFFLEVBQVU7UUFDOUIsS0FBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFHRCxJQUFJLGNBQWMsS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JELElBQUksY0FBYyxDQUFDLEdBQVcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFHdkQsSUFBSSxjQUFjLEtBQWEsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRCxJQUFJLGNBQWMsQ0FBQyxHQUFXLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBR3ZELElBQUksUUFBUSxLQUFhLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0MsSUFBSSxRQUFRLENBQUMsR0FBVyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUdqRCxJQUFJLEtBQUssS0FBYSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVDLElBQUksS0FBSyxDQUFDLEdBQVcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFOUMsS0FBSztRQUNILE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDL0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQixDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge01vZHVsZX0gZnJvbSAnLi4vYXNtL21vZHVsZS5qcyc7XG5pbXBvcnQge1JvbX0gZnJvbSAnLi4vcm9tLmpzJztcbmltcG9ydCB7RW50aXR5fSBmcm9tICcuL2VudGl0eS5qcyc7XG5pbXBvcnQge3R1cGxlfSBmcm9tICcuL3V0aWwuanMnO1xuXG4vLyBBbiBlbnRyeSBvZiB0aGUgYWQtaG9jIHNwYXduIHRhYmxlLCB3aGljaCBjYW4gYmUgc3Bhd25lZCBhcmJpdHJhcmlseVxuLy8gYnkgQWRIb2NTcGF3bk9iamVjdCAocHJvdmlkZWQgdGhlcmUncyBhbiBhdmFpbGFibGUgc3Bhd24gc2xvdCBpbiByYW5nZSkuXG5leHBvcnQgY2xhc3MgQWRIb2NTcGF3biBleHRlbmRzIEVudGl0eSB7XG5cbiAgZGF0YTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG5cbiAgY29uc3RydWN0b3Iocm9tOiBSb20sIGlkOiBudW1iZXIpIHtcbiAgICBzdXBlcihyb20sIGlkKTtcbiAgICB0aGlzLmRhdGEgPSB0dXBsZShyb20ucHJnLCB0aGlzLmJhc2UsIDQpO1xuICB9XG5cbiAgZ2V0IGJhc2UoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gKHRoaXMuaWQgPDwgMikgKyAweDI5YzAwO1xuICB9XG5cbiAgLy8gQ2xvc2VkIGxvd2VyIGJvdW5kIG9mIGFsbG93ZWQgc3Bhd24gc2xvdCByYW5nZVxuICBnZXQgc2xvdFJhbmdlTG93ZXIoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMuZGF0YVswXTsgfVxuICBzZXQgc2xvdFJhbmdlTG93ZXIoYXJnOiBudW1iZXIpIHsgdGhpcy5kYXRhWzBdID0gYXJnOyB9XG5cbiAgLy8gT3BlbiB1cHBlciBib3VuZCBvZiBhbGxvd2VkIHNwYXduIHNsb3QgcmFuZ2VcbiAgZ2V0IHNsb3RSYW5nZVVwcGVyKCk6IG51bWJlciB7IHJldHVybiB0aGlzLmRhdGFbMV07IH1cbiAgc2V0IHNsb3RSYW5nZVVwcGVyKGFyZzogbnVtYmVyKSB7IHRoaXMuZGF0YVsxXSA9IGFyZzsgfVxuXG4gIC8vIElEIG9mIHRoZSBvYmplY3QgdG8gc3Bhd25cbiAgZ2V0IG9iamVjdElkKCk6IG51bWJlciB7IHJldHVybiB0aGlzLmRhdGFbMl07IH1cbiAgc2V0IG9iamVjdElkKGFyZzogbnVtYmVyKSB7IHRoaXMuZGF0YVsyXSA9IGFyZzsgfVxuXG4gIC8vIE51bWJlciBvZiBvYmplY3RzIHRvIHNwYXduXG4gIGdldCBjb3VudCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy5kYXRhWzNdOyB9XG4gIHNldCBjb3VudChhcmc6IG51bWJlcikgeyB0aGlzLmRhdGFbM10gPSBhcmc7IH1cblxuICB3cml0ZSgpOiBNb2R1bGVbXSB7XG4gICAgY29uc3QgYSA9IHRoaXMucm9tLmFzc2VtYmxlcigpO1xuICAgIGEuc2VnbWVudCgnMTQnKTtcbiAgICBhLm9yZygweDljMDAgKyAodGhpcy5pZCA8PCAyKSk7XG4gICAgYS5ieXRlKC4uLnRoaXMuZGF0YSk7XG4gICAgcmV0dXJuIFthLm1vZHVsZSgpXTtcbiAgfVxufVxuIl19