var b=class{constructor(){this.node=null}insert(t,s,h,i,n){s--,i--;let r=a(Math.max(s,i));for(this.node==null&&(this.node=new o(r));r>this.node.bits;){let l=this.node;this.node=new o(l.bits+1),this.node.children[0]=l}let e=this.node,u=t^s|h^i;for(;e.bit&&!(u&e.bit);){let l=((h&e.bit)<<1|t&e.bit)>>e.bits,c=e.children[l];c||(c=e.children[l]=new o(e.bits-1)),e=c}e.values.add([t,s,h,i,n])}*get(t,s){if(!this.node)return;let h=a(Math.max(t,s));if(this.node.bits<h)return;let i=this.node;for(;i;){for(let n of i.values)t>=n[0]&&t<=n[1]&&s>=n[2]&&s<=n[3]&&(yield n[4]);i=i.children[((s&i.bit)<<1|t&i.bit)>>i.bits]}}clear(){this.node=null}},o=class{constructor(t){this.bits=t,this.bit=t<0?0:1<<t,this.children=[],this.values=new Set}},a=d=>31-Math.clz32(d);export{b as a};
