import{b as z,c as Ze,e as vl,g as bi}from"./chunk-PIDEUWOP.js";function Cd(i){return[...i]}function ft(i){throw new Error(`non-exhaustive check: ${i}`)}function Nd(i){if(!i)throw new Error(`asserted but falsy: ${i}`);return i}function ki(i,...t){let e=i.split(/%/g),s=0,r=e[0];for(let n=1;n<e.length;n++){if(!e[n]){r+="%"+e[++n];continue}let o=/([-+]*)([0\D]?)(\d*)([dxs])/.exec(e[n]);if(!o){r+=t[s++]+e[n];continue}let a=parseInt(o[3])||0,l=o[2]||" ",c=t[s++],d=o[4]==="x"?Number(c).toString(16):String(c);if(o[4]!=="s"&&/\+/.test(o[1])&&Number(c)>=0&&(d="+"+d),d.length<a){let h=l.repeat(a-d.length);d=/-/.test(o[1])?d+h:h+d}r+=d+e[n].substring(o[0].length)}return r}function Xt(i,t=1){return i<0?`~${(~i).toString(16).padStart(t,"0")}`:i.toString(16).padStart(t,"0")}var gi,we,et,yi,wi,Sl,Yr,vi,Si,Ei,Ti,ws,El,Xe=z(()=>{gi=class extends Error{constructor(t){super(t),this.name="UsageError"}},we=class extends Map{constructor(e,s){super(s);this.supplier=e}get(e){let s=super.get(e);return s==null&&super.set(e,s=this.supplier(e)),s}sortedKeys(e){return[...this.keys()].sort(e)}sortedEntries(e){return this.sortedKeys(e).map(s=>[s,this.get(s)])}};(c=>{function*i(...d){for(let h of d)yield*h}c.concat=i;function t(d){return!!d[Symbol.iterator]().next().done}c.isEmpty=t;function*e(d,h){for(let m of d)yield h(m)}c.map=e;function*s(d,h){for(let m of d)h(m)&&(yield m)}c.filter=s;function*r(d,h){for(let m of d)yield*h(m)}c.flatMap=r;function n(d){let h=0;for(let m of d)h++;return h}c.count=n;function*o(d,h){for(let m of d){if(--h<0)return;yield m}}c.take=o;function a(d,h){for(let m of d)return m;if(arguments.length<2)throw new Error(`Empty iterable: ${d}`);return h}c.first=a;function l(d,h,m=(f,g)=>[f,g]){return{*[Symbol.iterator](){let f=d[Symbol.iterator](),g=h[Symbol.iterator](),w,k;for(;w=f.next(),k=g.next(),!w.done&&!k.done;)yield m(w.value,k.value)}}}c.zip=l})(et||={});yi=class{constructor(){this.map=new Map}add(t){this.map.set(t.label,t)}has(t){return this.map.has(t.label)}delete(t){this.map.delete(t.label)}[Symbol.iterator](){return this.map.values()}},wi=Symbol("Invalidated"),Sl=Symbol("Size"),Yr=class{constructor(t,e,s){this.ownerMap=t;this.ownerKey=e;this.currentSet=s}getCurrentSet(){return(!this.currentSet||this.currentSet[wi])&&(this.currentSet=this.ownerMap.get(this.ownerKey)||new Set),this.currentSet}mutateSet(t){let e=this.getCurrentSet(),s=e.size;try{return t(e)}finally{this.ownerMap[Sl]+=e.size-s,e.size||(this.ownerMap.delete(this.ownerKey),e[wi]=!0)}}add(t){return this.mutateSet(e=>e.add(t)),this}has(t){return this.getCurrentSet().has(t)}clear(){this.mutateSet(t=>t.clear())}delete(t){return this.mutateSet(e=>e.delete(t))}[Symbol.iterator](){return this.getCurrentSet()[Symbol.iterator]()}values(){return this.getCurrentSet().values()}keys(){return this.getCurrentSet().keys()}entries(){return this.getCurrentSet().entries()}forEach(t,e){this.getCurrentSet().forEach(t,e)}get size(){return this.getCurrentSet().size}get[Symbol.toStringTag](){return"Set"}};Reflect.setPrototypeOf(Yr.prototype,Set.prototype);vi=class{constructor(t=[]){this.entries=new we(()=>0,t)}add(t){this.entries.set(t,this.entries.get(t)+1)}delete(t){let e=this.entries.get(t)-1;e>0?this.entries.set(t,e):this.entries.delete(t)}unique(){return this.entries.size}count(t){return this.entries.has(t)?this.entries.get(t):0}[Symbol.iterator](){return this.entries.entries()}};Si=class{constructor(t){this.data=t}get(t){return this.data[t]}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}map(t){return this.data.map(t)}},Ei=class{constructor(t){this.data=t;let e=new Map;for(let s=0;s<t.length;s++)e.set(t[s],s);this.rev=e,this.length=t.length}get(t){return this.data[t]}hasValue(t){return this.rev.has(t)}index(t){let e=this.rev.get(t);if(e==null)throw new Error(`Missing index for ${t}`);return e}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}},Ti=class{constructor(){this._fwd=[];this._rev=[]}*[Symbol.iterator](){for(let t=0;t<this._fwd.length;t++){let e=this._fwd[t];e!=null&&(yield[t,e])}}*keys(){for(let t=0;t<this._fwd.length;t++)this._fwd[t]!=null&&(yield t)}*values(){for(let t=0;t<this._rev.length;t++)this._rev[t]!=null&&(yield t)}get(t){return this._fwd[t]}has(t){return this._fwd[t]!=null}hasValue(t){return this._rev[t]!=null}index(t){let e=this._rev[t];if(e==null)throw new Error(`Missing index for ${t}`);return e}set(t,e){if(this._fwd[t])throw new Error(`already has key ${t}`);if(this._rev[e])throw new Error(`already has value ${e}`);this._fwd[t]=e,this._rev[e]=t}replace(t,e){let s=this._rev[e];s!=null&&delete this._fwd[s];let r=this._fwd[t];return r!=null&&delete this._rev[r],this._fwd[t]=e,this._rev[e]=t,r}},ws=class{constructor(t){this._map=new Map;if(t)for(let[e,s,r]of t)this.set(e,s,r)}*[Symbol.iterator](){for(let[t,e]of this._map)for(let[s,r]of e)yield[t,s,r]}set(t,e,s){let r=this._map.get(t);r||this._map.set(t,r=new Map),r.set(e,s)}get(t,e){return this._map.get(t)?.get(e)}has(t,e){return this._map.get(t)?.has(e)||!1}delete(t,e){let s=this._map.get(t);s&&(s.delete(e),s.size||this._map.delete(t))}row(t){return this._map.get(t)??new Map}};(e=>(e.NONE={get requested(){return!1},throwIfRequested(){},register(){return{unregister(){}}}},e.CANCELLED={get requested(){return!0},throwIfRequested(){throw new Error("cancelled")},register(){return{unregister(){}}}}))(El||={})});function Tl(i){throw new Error(`was supposed to be exhaustive but got ${i}`)}var Zr,p,gt=z(()=>{Xe();(e=>{class i{next(){for(;;){this.sink||(this.sink=this.pump());let{value:r,done:n}=this.sink.next();if(!n)return r;this.sink=void 0}}}e.Abstract=i;function t(...s){let r;return{next:()=>{for(;;){if(r||(r=s.shift()),!r)return;let n=r.next();if(n)return n;r=void 0}}}}e.concat=t})(Zr||={});(Z=>{Z.LB={token:"lb"},Z.LC={token:"lc"},Z.LP={token:"lp"},Z.RB={token:"rb"},Z.RC={token:"rc"},Z.RP={token:"rp"},Z.EOL={token:"eol"},Z.EOF={token:"eof"},Z.DEFINE={token:"cs",str:".define"},Z.DOT_EOL={token:"cs",str:".eol"},Z.ELSE={token:"cs",str:".else"},Z.ELSEIF={token:"cs",str:".elseif"},Z.ENDIF={token:"cs",str:".endif"},Z.ENDMAC={token:"cs",str:".endmac"},Z.ENDMACRO={token:"cs",str:".endmacro"},Z.ENDREP={token:"cs",str:".endrep"},Z.ENDREPEAT={token:"cs",str:".endrepeat"},Z.ENDPROC={token:"cs",str:".endproc"},Z.ENDSCOPE={token:"cs",str:".endscope"},Z.LOCAL={token:"cs",str:".local"},Z.MACRO={token:"cs",str:".macro"},Z.REPEAT={token:"cs",str:".repeat"},Z.SET={token:"cs",str:".set"},Z.SKIP={token:"cs",str:".skip"},Z.BYTE={token:"cs",str:".byte"},Z.WORD={token:"cs",str:".word"},Z.COLON={token:"op",str:":"},Z.COMMA={token:"op",str:","},Z.STAR={token:"op",str:"*"},Z.IMMEDIATE={token:"op",str:"#"},Z.ASSIGN={token:"op",str:"="};function _e(N,O){return N.token!==O.token?!1:N.token==="num"||N.token==="str"?!0:N.str===O.str}Z.match=_e;function Oe(N,O){return!(!N||!O||N.token!==O.token||N.token==="grp"||N.str!==O.str||N.num!==O.num)}Z.eq=Oe;function Qe(N){switch(N.token){case"num":return`NUM[$${N.num.toString(16)}]`;case"str":return`STR[$${N.str}]`;case"lb":return"[";case"rb":return"]";case"grp":return"{";case"lc":return"{";case"rc":return"}";case"lp":return"(";case"rp":return")";case"eol":return"EOL";case"eof":return"EOF";case"ident":return N.str;case"cs":case"op":return`${N.str.toUpperCase()}`;default:ft(N)}}Z.name=Qe;function je(N){let O=N.source;if(!O)return"";let J=O.parent?je({source:O.parent}):"";return`
  at ${O.file}:${O.line}:${O.column}${J}`}Z.at=je;function Ye(N){if(!N)return"at unknown";let O=N;return(O.token?Qe(O):"")+je(N)}Z.nameAt=Ye;function Is(N,O="end of line"){if(N)throw new Error(`Expected ${O}: ${Z.nameAt(N)}`)}Z.expectEol=Is;function Bs(N,O,J){if(!O)throw J?new Error(`Expected ${Qe(N)} after ${Ye(O)}`):new Error(`Expected ${Qe(N)}`);if(!Oe(N,O))throw new Error(`Expected ${Qe(N)}: ${Ye(O)}`)}Z.expect=Bs;function Ht(N,O){return Kt("ident","identifier",N,O)}Z.expectIdentifier=Ht;function fs(N,O){return Kt("str","constant string",N,O)}Z.expectString=fs;function Kt(N,O,J,ce){if(!J)throw ce?new Error(`Expected ${O} after ${Ye(ce)}`):new Error(`Expected ${O}`);if(J.token!==N)throw new Error(`Expected ${O}: ${Ye(J)}`);return J.str}function Ds(N){if(!N.length)return[];let O=[];for(let J=0;J<=N.length;J+=2){let ce=N[J];if(ce?.token!=="ident"){if(ce)throw new Error(`Expected identifier: ${Ye(ce)}`);let fe=N[N.length-1];throw new Error(`Expected identifier after ${Ye(fe)}`)}else if(J+1<N.length&&!Oe(N[J+1],Z.COMMA)){let fe=N[J+1];throw new Error(`Expected comma: ${Ye(fe)}`)}O.push(ce.str)}return O}Z.identsFromCList=Ds;function ms(N,O){let J=N[O++].token;if(J!=="lp"&&J!=="lb")throw new Error("non-grouping token");let ce=J==="lp"?"rp":"rb",fe=1;for(;O<N.length;O++){let I=N[O].token;if(fe+=+(I===J)-+(I===ce),!fe)return O}return-1}Z.findBalanced=ms;function Ps(N,O=0,J=N.length){let ce=[],fe=[ce],I=0;for(let se=O;se<J;se++){let $e=N[se];if(!I&&Oe($e,Z.COMMA))fe.push(ce=[]);else if(ce.push($e),Oe($e,Z.LP)&&I++,Oe($e,Z.RP)&&--I<0)throw new Error(`Unbalanced paren${je($e)}`)}return fe}Z.parseArgList=Ps;function xs(N,O){let J=new Map,ce,fe=[];if(O>=N.length)return J;if(!Oe(N[O],Z.COLON))throw new Error(`Unexpected: ${Ye(N[O])}`);for(let I=O+1;I<N.length;I++){let se=N[I];if(Oe(se,Z.COLON)){if(ce==null)throw new Error(`Missing key${je(se)}`);J.set(ce,fe),ce=void 0,fe=[]}else ce==null?ce=Ht(se):fe.push(se)}return ce!=null?J.set(ce,fe):Ht(void 0,N[N.length-1]),J}Z.parseAttrList=xs;function ps(N,O){let J=ht(N,Z.COMMA,O);return J<0?N.length:J}Z.findComma=ps;function ht(N,O,J){for(let ce=J;ce<N.length;ce++)if(Oe(N[ce],O))return ce;return-1}Z.find=ht;function jt(N){let O=0;for(let J of N)J.token==="grp"?O+=2+jt(J.inner):O++;return O}Z.count=jt;function Yt(N,O){return N.token==="ident"&&N.str.toLowerCase()===O}Z.isRegister=Yt;function Ws(N){switch(N.token){case"cs":case"ident":case"str":case"op":return N.str}throw new Error(`Non-string token: ${Z.nameAt(N)}`)}Z.str=Ws;function Os(N){return delete N.source,N}Z.strip=Os;function bs(N){return N.map(O=>{switch(O.token){case"grp":return`{ ${bs(O.inner)} }`;case"lb":return"[";case"lc":return"{";case"lp":return"(";case"rb":return"]";case"rc":return"}";case"rp":return")";case"eol":return".eol";case"eof":throw new Error("Cannot format EOF");case"num":return"$"+O.num.toString(16).padStart(O.num<256?2:4,"0");case"ident":return O.str;case"op":return O.str;case"cs":return O.str;case"str":return`"${O.str.replace(/[\\"]/g,"\\$&")}"`;default:return Tl(O)}}).join(" ")}Z.format=bs})(p||={})});function kl(i,t){return i[0]>t[0]?1:i[0]<t[0]?-1:i[1]!==t[1]?0:i[1]}function Mi(i){let e=Rl.get(i.op)?.(...i.args.map(s=>Number(s.meta?.size)));return e&&((i.meta||(i.meta={})).size=e),i}function Jt(i,t){return i<256&&t&&t.token==="num"&&t.width!=null?{size:t.width}:{size:0<=i&&i<256?1:2}}var ae,Re,kt,Ll,Ml,Al,Li,Rl,Lt=z(()=>{gt();(M=>{function i(y){return y.source?{source:{parent:y.source,file:"js",line:0,column:0}}:{}}function t(y){return{op:"<",args:[y],...i(y)}}M.loByte=t;function e(y){return{op:">",args:[y],...i(y)}}M.hiByte=e;function s(y,S){function v(H){return H.args?{...H,args:H.args.map(ne=>D(ne,H))}:H}function D(H,ne){let K=H.source;return H=S(H,v,ne),K&&!H.source&&(H.source=K),H}return D(y)}M.traverse=s;function r(y,S){return s(y,(v,D)=>S(D(v)))}M.traversePost=r;function n(y){switch(y.op){case".move":case"im":case"sym":return y;case"num":if(y.meta?.rel&&y.meta.org!=null){let{rel:S,...v}=y.meta;return{op:"num",num:y.num+v.org,meta:v}}return y;case".max":return m(y,Math.max);case".min":return m(y,Math.min);default:}if(y.args?.length===1)switch(y.op){case"+":return y.args[0];case"-":return g(y,S=>-S);case"~":return g(y,S=>~S);case"!":return g(y,S=>+!S);case"<":return g(y,S=>S&255);case">":return g(y,S=>S>>8&255);case"^":return f(y.args[0].meta?.bank)??y;default:throw new Error(`Unknown unary operator: ${y.op}`)}switch(y.op){case"+":return k(y);case"-":return E(y);case"*":return w(y,(S,v)=>S*v);case"/":return w(y,(S,v)=>Math.floor(S/v));case".mod":return w(y,(S,v)=>S%v);case"&":return w(y,(S,v)=>S&v);case"|":return w(y,(S,v)=>S|v);case"^":return w(y,(S,v)=>S^v);case"<<":return w(y,(S,v)=>S<<v);case">>":return w(y,(S,v)=>S>>>v);case"<":return w(y,(S,v)=>+(S<v));case"<=":return w(y,(S,v)=>+(S<=v));case">":return w(y,(S,v)=>+(S>v));case">=":return w(y,(S,v)=>+(S>=v));case"=":return w(y,(S,v)=>+(S==v));case"<>":return w(y,(S,v)=>+(S!=v));case"&&":return w(y,(S,v)=>S&&v);case"||":return w(y,(S,v)=>S||v);case".xor":return w(y,(S,v)=>!S&&v||!v&&S||0);default:throw new Error(`Unknown operator: ${y.op}`)}}M.evaluate=n;function o(y){let S={...y};return S.args&&(S.args=S.args.map(o)),delete S.source,S}M.strip=o;function a(y,S=[]){for(let v of y.args||[])a(v,S);return y.op==="sym"&&y.sym&&S.push(y.sym),S}M.symbols=a;function l(y,S,v){switch(y.op){case"sym":return y.sym===S?v:void 0;case".move":case"im":case".max":case".min":case"num":return;default:}if(y.args?.length===1){let xe=y.args[0];switch(y.op){case"+":return l(xe,S,v);case"-":return l(xe,S,-v);case"~":return l(xe,S,~v);case"!":return v===+!!v?l(xe,S,v):void 0;case"<":return v===(v&255)?l(xe,S,v):void 0;case">":return v===(v&255)?l(xe,S,v<<8):void 0;case"^":return;default:throw new Error(`Unknown unary operator: ${y.op}`)}}switch(y.op){case".mod":case"&":case"|":case"<":case"<=":case">":case">=":case"=":case"<>":case"&&":case"||":case".xor":return}let D=n(y.args[0]),H=n(y.args[1]),ne=D.op==="num"?D.num:void 0,K=H.op==="num"?H.num:void 0;if(ne==null==(K==null))return;let U=ne||K,Q=ne==null?D:H;switch(y.op){case"+":return l(Q,S,v-U);case"-":return l(Q,S,ne==null?v+U:U-v);case"*":return v%U===0?l(Q,S,v/U):void 0;case"/":return ne==null?l(Q,S,v*U):U%v!==0?void 0:l(Q,S,U/v);case"^":return l(Q,S,v^U);case"<<":return K==null||v>>>K<<K!==v?void 0:l(Q,S,v>>>K);case">>":return K==null||U>>>K<<K!==U?void 0:l(Q,S,v<<K);default:throw new Error(`Unknown operator: ${y.op}`)}}M.invert=l;function c(y){if(y.op==="sym"&&y.sym)return y.sym;throw new Error(`Expected identifier but got op: ${y.op}`)}M.identifier=c;function d(y,S=0){let[v,D]=h(y,S);if(D<y.length)throw h(y,S),new Error(`Garbage after expression: ${p.nameAt(y[D])}`);if(!v)throw new Error("No expression?");return v}M.parseOnly=d;function h(y,S=0){let v=[],D=[];function H(){let[U,[,,Q]]=v.pop(),xe=D.splice(D.length-Q,Q);if(xe.length!==Q)throw new Error(`shunting parse failed? ${p.nameAt(y[K])}`);D.push(Mi({op:U,args:xe}))}let ne=!0,K=S;for(;K<y.length;K++){let U=y[K];if(ne)if(U.token==="cs"||U.token==="op"){let Q=Li.get(U.str),xe=Ml.get(Q??U.str);if(xe)v.push([U.str,xe]);else if(U.token==="cs"){let He=U.str;if(!Al.has(He))throw new Error(`No such function: ${p.nameAt(U)}`);let _e=y[K+1];if(_e?.token!=="lp")throw new Error(`Bad funcall: ${p.nameAt(_e??U)}`);let Oe=p.findBalanced(y,K+1);if(Oe<0)throw new Error(`Never closed: ${p.nameAt(_e)}`);let Qe=[];for(let je of p.parseArgList(y,K+2,Oe))Qe.push(d(je));K=Oe,D.push(Mi({op:He,args:Qe})),ne=!1}else if(p.eq(U,p.STAR))D.push({op:"sym",sym:"*"}),ne=!1;else throw new Error(`Unknown prefix operator: ${p.nameAt(U)}`)}else if(U.token==="lp"){let Q=p.findBalanced(y,K);if(Q<0)throw new Error(`No close paren: ${p.nameAt(U)}`);let xe=d(y.slice(K+1,Q));D.push(xe),K=Q,ne=!1}else if(U.token==="ident")D.push({op:"sym",sym:U.str}),ne=!1;else if(U.token==="num"){let Q=U.num;D.push({op:"num",num:Q,meta:Jt(Q,U)}),ne=!1}else throw new Error(`Bad expression token: ${p.nameAt(U)}`);else{if(p.eq(U,p.COMMA))break;if(U.token==="cs"||U.token==="op"){let Q=Li.get(U.str),xe=Ll.get(Q??U.str);if(!xe)break;for(;v.length;){let He=v[v.length-1],_e=kl(He[1],xe);if(_e<0)break;if(_e===0)throw new Error(`Mixing ${He[0]} and ${U.str} needs explicit parens.${p.at(U)}`);H()}v.push([U.str,xe]),ne=!0}else break}}for(;v.length;)H();if(!y[S])throw new Error(`No token at ${S}:
${y.map(U=>"  "+p.nameAt(U)+`
`)}`);if(D.length!==1)throw new Error(`expression parse failed: nonunique result ${p.nameAt(y[S])}`);return y[S].source&&(D[0].source=y[S].source),[D[0],K]}M.parse=h;function m(y,S){throw new Error}function f(y){if(y!=null)return{op:"num",num:y,meta:Jt(y)}}function g(y,S){let v=y.args[0];if(!L(v))return y;let D=S(v.num);return{op:"num",num:D,meta:Jt(D)}}function w(y,S){let[v,D]=y.args;if(!L(v)||!L(D))return y;let H=S(v.num,D.num);return{op:"num",num:H,meta:Jt(H)}}function k(y){let[S,v]=y.args;if(S.op!=="num"||v.op!=="num")return y;let D={op:"num",num:S.num+v.num};if(S.meta||v.meta){if(S.meta?.rel&&v.meta?.rel)return y;S.meta?.rel?D.meta=S.meta:v.meta?.rel&&(D.meta=v.meta)}return!D.meta?.rel&&D.meta?.size==null&&((D.meta||(D.meta={})).size=Jt(D.num).size),D}function E(y){let[S,v]=y.args;if(S.op!=="num"||v.op!=="num")return y;let D={op:"num",num:S.num-v.num};return v.meta?.rel?S.meta?.rel&&S.meta.chunk===v.meta.chunk?D:y:(S.meta?.rel&&(D.meta=S.meta),!D.meta?.rel&&D.meta?.size==null&&((D.meta||(D.meta={})).size=Jt(D.num).size),D)}function L(y){return y.op==="num"&&!y.meta?.rel}})(ae||={});Re=2,kt=1,Ll=new Map([["*",[5,4,Re]],["/",[5,4,Re]],[".mod",[5,3,Re]],["&",[5,2,Re]],["^",[5,1,Re]],["<<",[5,0,Re]],[">>",[5,0,Re]],["+",[4,2,Re]],["-",[4,2,Re]],["|",[4,1,Re]],["<",[3,0,Re]],["<=",[3,0,Re]],[">",[3,0,Re]],[">=",[3,0,Re]],["=",[3,0,Re]],["<>",[3,0,Re]],["&&",[2,3,Re]],[".xor",[2,2,Re]],["||",[2,1,Re]]]),Ml=new Map([["+",[9,-1,kt]],["-",[9,-1,kt]],["~",[9,-1,kt]],["<",[9,-1,kt]],[">",[9,-1,kt]],["^",[9,-1,kt]],["!",[2,-1,kt]]]),Al=new Set([".byteat",".wordat",".max",".min"]),Li=new Map([[".bitand","&"],[".bitxor","^"],[".bitor","|"],[".shl","<<"],[".shr",">>"],[".and","&&"],[".or","||"],[".bitnot","~"],[".lobyte","<"],[".hibyte",">"],[".bankbyte","^"],[".not","!"]]),Rl=new Map([["^",(...i)=>i.length===1?1:Math.max(...i)],["<",()=>1],[">",()=>1],["!",()=>1],["<=",()=>1],[">=",()=>1],["<>",()=>1],["=",()=>1],["&",Math.max],["&&",Math.max],["|",Math.max],["||",Math.max],[".xor",Math.max],[".max",Math.max],[".min",Math.max]])});var Ri,Ai=z(()=>{Ri=bi("")});var Jr=Ze(Xr=>{function Ci(i){this.buffer=i,this.pos=0}Ci.prototype.read=function(i,t,e){this.pos+e>this.buffer.length&&(e=this.buffer.length-this.pos);for(var s=0;s<e;s++)i[t+s]=this.buffer[this.pos+s];return this.pos+=e,e};Xr.BrotliInput=Ci;function Ni(i){this.buffer=i,this.pos=0}Ni.prototype.write=function(i,t){if(this.pos+t>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(i.subarray(0,t),this.pos),this.pos+=t,t};Xr.BrotliOutput=Ni});var Di=Ze((Gd,Bi)=>{var Mt=4096,Nl=2*Mt+32,Ii=2*Mt-1,Il=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function At(i){this.buf_=new Uint8Array(Nl),this.input_=i,this.reset()}At.READ_SIZE=Mt;At.IBUF_MASK=Ii;At.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var i=0;i<4;i++)this.val_|=this.buf_[this.pos_]<<8*i,++this.pos_;return this.bit_end_pos_>0};At.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var i=this.buf_ptr_,t=this.input_.read(this.buf_,i,Mt);if(t<0)throw new Error("Unexpected end of input");if(t<Mt){this.eos_=1;for(var e=0;e<32;e++)this.buf_[i+t+e]=0}if(i===0){for(var e=0;e<32;e++)this.buf_[(Mt<<1)+e]=this.buf_[e];this.buf_ptr_=Mt}else this.buf_ptr_=0;this.bit_end_pos_+=t<<3}};At.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[this.pos_&Ii]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};At.prototype.readBits=function(i){32-this.bit_pos_<i&&this.fillBitWindow();var t=this.val_>>>this.bit_pos_&Il[i];return this.bit_pos_+=i,t};Bi.exports=At});var Oi=Ze(Us=>{"use strict";Us.byteLength=Dl;Us.toByteArray=Wl;Us.fromByteArray=Ul;var at=[],Je=[],Bl=typeof Uint8Array<"u"?Uint8Array:Array,_r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(Rt=0,Pi=_r.length;Rt<Pi;++Rt)at[Rt]=_r[Rt],Je[_r.charCodeAt(Rt)]=Rt;var Rt,Pi;Je[45]=62;Je[95]=63;function Wi(i){var t=i.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=i.indexOf("=");e===-1&&(e=t);var s=e===t?0:4-e%4;return[e,s]}function Dl(i){var t=Wi(i),e=t[0],s=t[1];return(e+s)*3/4-s}function Pl(i,t,e){return(t+e)*3/4-e}function Wl(i){var t,e=Wi(i),s=e[0],r=e[1],n=new Bl(Pl(i,s,r)),o=0,a=r>0?s-4:s,l;for(l=0;l<a;l+=4)t=Je[i.charCodeAt(l)]<<18|Je[i.charCodeAt(l+1)]<<12|Je[i.charCodeAt(l+2)]<<6|Je[i.charCodeAt(l+3)],n[o++]=t>>16&255,n[o++]=t>>8&255,n[o++]=t&255;return r===2&&(t=Je[i.charCodeAt(l)]<<2|Je[i.charCodeAt(l+1)]>>4,n[o++]=t&255),r===1&&(t=Je[i.charCodeAt(l)]<<10|Je[i.charCodeAt(l+1)]<<4|Je[i.charCodeAt(l+2)]>>2,n[o++]=t>>8&255,n[o++]=t&255),n}function Ol(i){return at[i>>18&63]+at[i>>12&63]+at[i>>6&63]+at[i&63]}function Fl(i,t,e){for(var s,r=[],n=t;n<e;n+=3)s=(i[n]<<16&16711680)+(i[n+1]<<8&65280)+(i[n+2]&255),r.push(Ol(s));return r.join("")}function Ul(i){for(var t,e=i.length,s=e%3,r=[],n=16383,o=0,a=e-s;o<a;o+=n)r.push(Fl(i,o,o+n>a?a:o+n));return s===1?(t=i[e-1],r.push(at[t>>2]+at[t<<4&63]+"==")):s===2&&(t=(i[e-2]<<8)+i[e-1],r.push(at[t>>10]+at[t>>4&63]+at[t<<2&63]+"=")),r.join("")}});var Ui=Ze((Vd,Fi)=>{Fi.exports=""});var Gi=Ze(zi=>{var zl=Oi();zi.init=function(){var i=Qr().BrotliDecompressBuffer,t=zl.toByteArray(Ui());return i(t)}});var $r=Ze(Ct=>{var Gl=Gi();Ct.init=function(){Ct.dictionary=Gl.init()};Ct.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);Ct.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);Ct.minDictionaryWordLength=4;Ct.maxDictionaryWordLength=24});var tn=Ze(en=>{function Qt(i,t){this.bits=i,this.value=t}en.HuffmanCode=Qt;var _t=15;function qi(i,t){for(var e=1<<t-1;i&e;)e>>=1;return(i&e-1)+e}function Vi(i,t,e,s,r){do s-=e,i[t+s]=new Qt(r.bits,r.value);while(s>0)}function ql(i,t,e){for(var s=1<<t-e;t<_t&&(s-=i[t],!(s<=0));)++t,s<<=1;return t-e}en.BrotliBuildHuffmanTable=function(i,t,e,s,r){var n=t,o,a,l,c,d,h,m,f,g,w,k,E=new Int32Array(_t+1),L=new Int32Array(_t+1);for(k=new Int32Array(r),l=0;l<r;l++)E[s[l]]++;for(L[1]=0,a=1;a<_t;a++)L[a+1]=L[a]+E[a];for(l=0;l<r;l++)s[l]!==0&&(k[L[s[l]]++]=l);if(f=e,g=1<<f,w=g,L[_t]===1){for(c=0;c<w;++c)i[t+c]=new Qt(0,k[0]&65535);return w}for(c=0,l=0,a=1,d=2;a<=e;++a,d<<=1)for(;E[a]>0;--E[a])o=new Qt(a&255,k[l++]&65535),Vi(i,t+c,d,g,o),c=qi(c,a);for(m=w-1,h=-1,a=e+1,d=2;a<=_t;++a,d<<=1)for(;E[a]>0;--E[a])(c&m)!==h&&(t+=g,f=ql(E,a,e),g=1<<f,w+=g,h=c&m,i[n+h]=new Qt(f+e&255,t-n-h&65535)),o=new Qt(a-e&255,k[l++]&65535),Vi(i,t+(c>>e),d,g,o),c=qi(c,a);return w}});var Hi=Ze(sn=>{sn.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);sn.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])});var Ki=Ze($t=>{function P(i,t){this.offset=i,this.nbits=t}$t.kBlockLengthPrefixCode=[new P(1,2),new P(5,2),new P(9,2),new P(13,2),new P(17,3),new P(25,3),new P(33,3),new P(41,3),new P(49,4),new P(65,4),new P(81,4),new P(97,4),new P(113,5),new P(145,5),new P(177,5),new P(209,5),new P(241,6),new P(305,6),new P(369,7),new P(497,8),new P(753,9),new P(1265,10),new P(2289,11),new P(4337,12),new P(8433,13),new P(16625,24)];$t.kInsertLengthPrefixCode=[new P(0,0),new P(1,0),new P(2,0),new P(3,0),new P(4,0),new P(5,0),new P(6,1),new P(8,1),new P(10,2),new P(14,2),new P(18,3),new P(26,3),new P(34,4),new P(50,4),new P(66,5),new P(98,5),new P(130,6),new P(194,7),new P(322,8),new P(578,9),new P(1090,10),new P(2114,12),new P(6210,14),new P(22594,24)];$t.kCopyLengthPrefixCode=[new P(2,0),new P(3,0),new P(4,0),new P(5,0),new P(6,0),new P(7,0),new P(8,0),new P(9,0),new P(10,1),new P(12,1),new P(14,2),new P(18,2),new P(22,3),new P(30,3),new P(38,4),new P(54,4),new P(70,5),new P(102,5),new P(134,6),new P(198,7),new P(326,8),new P(582,9),new P(1094,10),new P(2118,24)];$t.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];$t.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]});var Xi=Ze(zs=>{var Vl=$r(),G=0,ji=1,Hl=2,Kl=3,jl=4,Yl=5,Zl=6,Xl=7,Jl=8,Zi=9,Se=10,ke=11,rn=12,_l=13,Ql=14,$l=15,ec=16,tc=17,sc=18,rc=20;function A(i,t,e){this.prefix=new Uint8Array(i.length),this.transform=t,this.suffix=new Uint8Array(e.length);for(var s=0;s<i.length;s++)this.prefix[s]=i.charCodeAt(s);for(var s=0;s<e.length;s++)this.suffix[s]=e.charCodeAt(s)}var vs=[new A("",G,""),new A("",G," "),new A(" ",G," "),new A("",rn,""),new A("",Se," "),new A("",G," the "),new A(" ",G,""),new A("s ",G," "),new A("",G," of "),new A("",Se,""),new A("",G," and "),new A("",_l,""),new A("",ji,""),new A(", ",G," "),new A("",G,", "),new A(" ",Se," "),new A("",G," in "),new A("",G," to "),new A("e ",G," "),new A("",G,'"'),new A("",G,"."),new A("",G,'">'),new A("",G,`
`),new A("",Kl,""),new A("",G,"]"),new A("",G," for "),new A("",Ql,""),new A("",Hl,""),new A("",G," a "),new A("",G," that "),new A(" ",Se,""),new A("",G,". "),new A(".",G,""),new A(" ",G,", "),new A("",$l,""),new A("",G," with "),new A("",G,"'"),new A("",G," from "),new A("",G," by "),new A("",ec,""),new A("",tc,""),new A(" the ",G,""),new A("",jl,""),new A("",G,". The "),new A("",ke,""),new A("",G," on "),new A("",G," as "),new A("",G," is "),new A("",Xl,""),new A("",ji,"ing "),new A("",G,`
	`),new A("",G,":"),new A(" ",G,". "),new A("",G,"ed "),new A("",rc,""),new A("",sc,""),new A("",Zl,""),new A("",G,"("),new A("",Se,", "),new A("",Jl,""),new A("",G," at "),new A("",G,"ly "),new A(" the ",G," of "),new A("",Yl,""),new A("",Zi,""),new A(" ",Se,", "),new A("",Se,'"'),new A(".",G,"("),new A("",ke," "),new A("",Se,'">'),new A("",G,'="'),new A(" ",G,"."),new A(".com/",G,""),new A(" the ",G," of the "),new A("",Se,"'"),new A("",G,". This "),new A("",G,","),new A(".",G," "),new A("",Se,"("),new A("",Se,"."),new A("",G," not "),new A(" ",G,'="'),new A("",G,"er "),new A(" ",ke," "),new A("",G,"al "),new A(" ",ke,""),new A("",G,"='"),new A("",ke,'"'),new A("",Se,". "),new A(" ",G,"("),new A("",G,"ful "),new A(" ",Se,". "),new A("",G,"ive "),new A("",G,"less "),new A("",ke,"'"),new A("",G,"est "),new A(" ",Se,"."),new A("",ke,'">'),new A(" ",G,"='"),new A("",Se,","),new A("",G,"ize "),new A("",ke,"."),new A("\xC2\xA0",G,""),new A(" ",G,","),new A("",Se,'="'),new A("",ke,'="'),new A("",G,"ous "),new A("",ke,", "),new A("",Se,"='"),new A(" ",Se,","),new A(" ",ke,'="'),new A(" ",ke,", "),new A("",ke,","),new A("",ke,"("),new A("",ke,". "),new A(" ",ke,"."),new A("",ke,"='"),new A(" ",ke,". "),new A(" ",Se,'="'),new A(" ",ke,"='"),new A(" ",Se,"='")];zs.kTransforms=vs;zs.kNumTransforms=vs.length;function Yi(i,t){return i[t]<192?(i[t]>=97&&i[t]<=122&&(i[t]^=32),1):i[t]<224?(i[t+1]^=32,2):(i[t+2]^=5,3)}zs.transformDictionaryWord=function(i,t,e,s,r){var n=vs[r].prefix,o=vs[r].suffix,a=vs[r].transform,l=a<rn?0:a-(rn-1),c=0,d=t,h;l>s&&(l=s);for(var m=0;m<n.length;)i[t++]=n[m++];for(e+=l,s-=l,a<=Zi&&(s-=a),c=0;c<s;c++)i[t++]=Vl.dictionary[e+c];if(h=t-s,a===Se)Yi(i,h);else if(a===ke)for(;s>0;){var f=Yi(i,h);h+=f,s-=f}for(var g=0;g<o.length;)i[t++]=o[g++];return t-d}});var Qr=Ze(Vs=>{var to=Jr().BrotliInput,nc=Jr().BrotliOutput,ss=Di(),ts=$r(),Le=tn().HuffmanCode,so=tn().BrotliBuildHuffmanTable,es=Hi(),yt=Ki(),Ji=Xi(),ic=8,_i=16,oc=256,ac=704,lc=26,Qi=6,$i=2,on=8,cc=255,wt=1080,an=18,dc=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),ln=16,uc=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),hc=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),fc=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function ro(i){var t;return i.readBits(1)===0?16:(t=i.readBits(3),t>0?17+t:(t=i.readBits(3),t>0?8+t:17))}function no(i){if(i.readBits(1)){var t=i.readBits(3);return t===0?1:i.readBits(t)+(1<<t)}return 0}function mc(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function io(i){var t=new mc,e,s,r;if(t.input_end=i.readBits(1),t.input_end&&i.readBits(1))return t;if(e=i.readBits(2)+4,e===7){if(t.is_metadata=!0,i.readBits(1)!==0)throw new Error("Invalid reserved bit");if(s=i.readBits(2),s===0)return t;for(r=0;r<s;r++){var n=i.readBits(8);if(r+1===s&&s>1&&n===0)throw new Error("Invalid size byte");t.meta_block_length|=n<<r*8}}else for(r=0;r<e;++r){var o=i.readBits(4);if(r+1===e&&e>4&&o===0)throw new Error("Invalid size nibble");t.meta_block_length|=o<<r*4}return++t.meta_block_length,!t.input_end&&!t.is_metadata&&(t.is_uncompressed=i.readBits(1)),t}function rs(i,t,e){var s=t,r;return e.fillBitWindow(),t+=e.val_>>>e.bit_pos_&cc,r=i[t].bits-on,r>0&&(e.bit_pos_+=on,t+=i[t].value,t+=e.val_>>>e.bit_pos_&(1<<r)-1),e.bit_pos_+=i[t].bits,i[t].value}function xc(i,t,e,s){for(var r=0,n=ic,o=0,a=0,l=32768,c=[],d=0;d<32;d++)c.push(new Le(0,0));for(so(c,0,5,i,an);r<t&&l>0;){var h=0,m;if(s.readMoreInput(),s.fillBitWindow(),h+=s.val_>>>s.bit_pos_&31,s.bit_pos_+=c[h].bits,m=c[h].value&255,m<_i)o=0,e[r++]=m,m!==0&&(n=m,l-=32768>>m);else{var f=m-14,g,w,k=0;if(m===_i&&(k=n),a!==k&&(o=0,a=k),g=o,o>0&&(o-=2,o<<=f),o+=s.readBits(f)+3,w=o-g,r+w>t)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var E=0;E<w;E++)e[r+E]=a;r+=w,a!==0&&(l-=w<<15-a)}}if(l!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+l);for(;r<t;r++)e[r]=0}function qs(i,t,e,s){var r=0,n,o=new Uint8Array(i);if(s.readMoreInput(),n=s.readBits(2),n===1){for(var a,l=i-1,c=0,d=new Int32Array(4),h=s.readBits(2)+1;l;)l>>=1,++c;for(a=0;a<h;++a)d[a]=s.readBits(c)%i,o[d[a]]=2;switch(o[d[0]]=1,h){case 1:break;case 3:if(d[0]===d[1]||d[0]===d[2]||d[1]===d[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(d[0]===d[1])throw new Error("[ReadHuffmanCode] invalid symbols");o[d[1]]=1;break;case 4:if(d[0]===d[1]||d[0]===d[2]||d[0]===d[3]||d[1]===d[2]||d[1]===d[3]||d[2]===d[3])throw new Error("[ReadHuffmanCode] invalid symbols");s.readBits(1)?(o[d[2]]=3,o[d[3]]=3):o[d[0]]=2;break}}else{var a,m=new Uint8Array(an),f=32,g=0,w=[new Le(2,0),new Le(2,4),new Le(2,3),new Le(3,2),new Le(2,0),new Le(2,4),new Le(2,3),new Le(4,1),new Le(2,0),new Le(2,4),new Le(2,3),new Le(3,2),new Le(2,0),new Le(2,4),new Le(2,3),new Le(4,5)];for(a=n;a<an&&f>0;++a){var k=dc[a],E=0,L;s.fillBitWindow(),E+=s.val_>>>s.bit_pos_&15,s.bit_pos_+=w[E].bits,L=w[E].value,m[k]=L,L!==0&&(f-=32>>L,++g)}if(!(g===1||f===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");xc(m,i,o,s)}if(r=so(t,e,on,o,i),r===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return r}function Gs(i,t,e){var s,r;return s=rs(i,t,e),r=yt.kBlockLengthPrefixCode[s].nbits,yt.kBlockLengthPrefixCode[s].offset+e.readBits(r)}function pc(i,t,e){var s;return i<ln?(e+=uc[i],e&=3,s=t[e]+hc[i]):s=i-ln+1,s}function bc(i,t){for(var e=i[t],s=t;s;--s)i[s]=i[s-1];i[0]=e}function gc(i,t){var e=new Uint8Array(256),s;for(s=0;s<256;++s)e[s]=s;for(s=0;s<t;++s){var r=i[s];i[s]=e[r],r&&bc(e,r)}}function Nt(i,t){this.alphabet_size=i,this.num_htrees=t,this.codes=new Array(t+t*fc[i+31>>>5]),this.htrees=new Uint32Array(t)}Nt.prototype.decode=function(i){var t,e,s=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=s,e=qs(this.alphabet_size,this.codes,s,i),s+=e};function eo(i,t){var e={num_htrees:null,context_map:null},s,r=0,n,o;t.readMoreInput();var a=e.num_htrees=no(t)+1,l=e.context_map=new Uint8Array(i);if(a<=1)return e;for(s=t.readBits(1),s&&(r=t.readBits(4)+1),n=[],o=0;o<wt;o++)n[o]=new Le(0,0);for(qs(a+r,n,0,t),o=0;o<i;){var c;if(t.readMoreInput(),c=rs(n,0,t),c===0)l[o]=0,++o;else if(c<=r)for(var d=1+(1<<c)+t.readBits(c);--d;){if(o>=i)throw new Error("[DecodeContextMap] i >= context_map_size");l[o]=0,++o}else l[o]=c-r,++o}return t.readBits(1)&&gc(l,i),e}function nn(i,t,e,s,r,n,o){var a=e*2,l=e,c=rs(t,e*wt,o),d;c===0?d=r[a+(n[l]&1)]:c===1?d=r[a+(n[l]-1&1)]+1:d=c-2,d>=i&&(d-=i),s[e]=d,r[a+(n[l]&1)]=d,++n[l]}function yc(i,t,e,s,r,n){var o=r+1,a=e&r,l=n.pos_&ss.IBUF_MASK,c;if(t<8||n.bit_pos_+(t<<3)<n.bit_end_pos_){for(;t-- >0;)n.readMoreInput(),s[a++]=n.readBits(8),a===o&&(i.write(s,o),a=0);return}if(n.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;n.bit_pos_<32;)s[a]=n.val_>>>n.bit_pos_,n.bit_pos_+=8,++a,--t;if(c=n.bit_end_pos_-n.bit_pos_>>3,l+c>ss.IBUF_MASK){for(var d=ss.IBUF_MASK+1-l,h=0;h<d;h++)s[a+h]=n.buf_[l+h];c-=d,a+=d,t-=d,l=0}for(var h=0;h<c;h++)s[a+h]=n.buf_[l+h];if(a+=c,t-=c,a>=o){i.write(s,o),a-=o;for(var h=0;h<a;h++)s[h]=s[o+h]}for(;a+t>=o;){if(c=o-a,n.input_.read(s,a,c)<c)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");i.write(s,o),t-=c,a=0}if(n.input_.read(s,a,t)<t)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");n.reset()}function wc(i){var t=i.bit_pos_+7&-8,e=i.readBits(t-i.bit_pos_);return e==0}function oo(i){var t=new to(i),e=new ss(t);ro(e);var s=io(e);return s.meta_block_length}Vs.BrotliDecompressedSize=oo;function vc(i,t){var e=new to(i);t==null&&(t=oo(i));var s=new Uint8Array(t),r=new nc(s);return ao(e,r),r.pos<r.buffer.length&&(r.buffer=r.buffer.subarray(0,r.pos)),r.buffer}Vs.BrotliDecompressBuffer=vc;function ao(i,t){var e,s=0,r=0,n=0,o,a=0,l,c,d,h,m=[16,15,11,4],f=0,g=0,w=0,k=[new Nt(0,0),new Nt(0,0),new Nt(0,0)],E,L,M,y=128+ss.READ_SIZE;M=new ss(i),n=ro(M),o=(1<<n)-16,l=1<<n,c=l-1,d=new Uint8Array(l+y+ts.maxDictionaryWordLength),h=l,E=[],L=[];for(var S=0;S<3*wt;S++)E[S]=new Le(0,0),L[S]=new Le(0,0);for(;!r;){var v=0,D,H=[1<<28,1<<28,1<<28],ne=[0],K=[1,1,1],U=[0,1,0,1,0,1],Q=[0],xe,He,_e,Oe,Qe=null,je=null,Ye,Is=null,Bs,Ht=0,fs=null,Kt=0,Ds=0,ms=null,Ps=0,xs=0,ps=0,ht,jt;for(e=0;e<3;++e)k[e].codes=null,k[e].htrees=null;M.readMoreInput();var Yt=io(M);if(v=Yt.meta_block_length,s+v>t.buffer.length){var Ws=new Uint8Array(s+v);Ws.set(t.buffer),t.buffer=Ws}if(r=Yt.input_end,D=Yt.is_uncompressed,Yt.is_metadata){for(wc(M);v>0;--v)M.readMoreInput(),M.readBits(8);continue}if(v!==0){if(D){M.bit_pos_=M.bit_pos_+7&-8,yc(t,v,s,d,c,M),s+=v;continue}for(e=0;e<3;++e)K[e]=no(M)+1,K[e]>=2&&(qs(K[e]+2,E,e*wt,M),qs(lc,L,e*wt,M),H[e]=Gs(L,e*wt,M),Q[e]=1);for(M.readMoreInput(),xe=M.readBits(2),He=ln+(M.readBits(4)<<xe),_e=(1<<xe)-1,Oe=He+(48<<xe),je=new Uint8Array(K[0]),e=0;e<K[0];++e)M.readMoreInput(),je[e]=M.readBits(2)<<1;var Os=eo(K[0]<<Qi,M);Ye=Os.num_htrees,Qe=Os.context_map;var bs=eo(K[2]<<$i,M);for(Bs=bs.num_htrees,Is=bs.context_map,k[0]=new Nt(oc,Ye),k[1]=new Nt(ac,K[1]),k[2]=new Nt(Oe,Bs),e=0;e<3;++e)k[e].decode(M);for(fs=0,ms=0,ht=je[ne[0]],xs=es.lookupOffsets[ht],ps=es.lookupOffsets[ht+1],jt=k[1].htrees[0];v>0;){var Z,N,O,J,ce,fe,I,se,$e,Zt,gs;for(M.readMoreInput(),H[1]===0&&(nn(K[1],E,1,ne,U,Q,M),H[1]=Gs(L,wt,M),jt=k[1].htrees[ne[1]]),--H[1],Z=rs(k[1].codes,jt,M),N=Z>>6,N>=2?(N-=2,I=-1):I=0,O=yt.kInsertRangeLut[N]+(Z>>3&7),J=yt.kCopyRangeLut[N]+(Z&7),ce=yt.kInsertLengthPrefixCode[O].offset+M.readBits(yt.kInsertLengthPrefixCode[O].nbits),fe=yt.kCopyLengthPrefixCode[J].offset+M.readBits(yt.kCopyLengthPrefixCode[J].nbits),g=d[s-1&c],w=d[s-2&c],Zt=0;Zt<ce;++Zt)M.readMoreInput(),H[0]===0&&(nn(K[0],E,0,ne,U,Q,M),H[0]=Gs(L,0,M),Ht=ne[0]<<Qi,fs=Ht,ht=je[ne[0]],xs=es.lookupOffsets[ht],ps=es.lookupOffsets[ht+1]),$e=es.lookup[xs+g]|es.lookup[ps+w],Kt=Qe[fs+$e],--H[0],w=g,g=rs(k[0].codes,k[0].htrees[Kt],M),d[s&c]=g,(s&c)===c&&t.write(d,l),++s;if(v-=ce,v<=0)break;if(I<0){var $e;if(M.readMoreInput(),H[2]===0&&(nn(K[2],E,2,ne,U,Q,M),H[2]=Gs(L,2*wt,M),Ds=ne[2]<<$i,ms=Ds),--H[2],$e=(fe>4?3:fe-2)&255,Ps=Is[ms+$e],I=rs(k[2].codes,k[2].htrees[Ps],M),I>=He){var Kr,fi,ys;I-=He,fi=I&_e,I>>=xe,Kr=(I>>1)+1,ys=(2+(I&1)<<Kr)-4,I=He+(ys+M.readBits(Kr)<<xe)+fi}}if(se=pc(I,m,f),se<0)throw new Error("[BrotliDecompress] invalid distance");if(s<o&&a!==o?a=s:a=o,gs=s&c,se>a)if(fe>=ts.minDictionaryWordLength&&fe<=ts.maxDictionaryWordLength){var ys=ts.offsetsByLength[fe],mi=se-a-1,xi=ts.sizeBitsByLength[fe],yl=(1<<xi)-1,wl=mi&yl,pi=mi>>xi;if(ys+=wl*fe,pi<Ji.kNumTransforms){var jr=Ji.transformDictionaryWord(d,gs,ys,fe,pi);if(gs+=jr,s+=jr,v-=jr,gs>=h){t.write(d,l);for(var Fs=0;Fs<gs-h;Fs++)d[Fs]=d[h+Fs]}}else throw new Error("Invalid backward reference. pos: "+s+" distance: "+se+" len: "+fe+" bytes left: "+v)}else throw new Error("Invalid backward reference. pos: "+s+" distance: "+se+" len: "+fe+" bytes left: "+v);else{if(I>0&&(m[f&3]=se,++f),fe>v)throw new Error("Invalid backward reference. pos: "+s+" distance: "+se+" len: "+fe+" bytes left: "+v);for(Zt=0;Zt<fe;++Zt)d[s&c]=d[s-se&c],(s&c)===c&&t.write(d,l),++s,--v}g=d[s-1&c],w=d[s-2&c]}s&=1073741823}}t.write(d,s&c)}Vs.BrotliDecompress=ao;ts.init()});var co=Ze((_d,lo)=>{lo.exports=Qr().BrotliDecompressBuffer});function*uo(i){let t=new TextDecoder("UTF-8"),e=i instanceof ArrayBuffer?new Uint8Array(i):new Uint8Array(i.buffer,i.byteOffset,i.byteLength),s=e.byteLength,r=0;for(;r+4<s;){let o=n(0,100);if(!o&&!e[r+1]&&!e[r+2]&&!e[r+2])break;let a=parseInt(n(124,12),8),l=n(156,1);if(n(257,6)==="ustar"){let c=n(345,155);c&&(o=`${c}/${o}`)}if(l==="0"||l===""){let c=e.subarray(r+512,r+512+a);yield{filename:o,contents:c}}r+=512+Math.ceil(a/512)*512}function n(o,a){let l=r+o,c=e.subarray(l,l+a).indexOf(0),d=c<0?l+a:l+c;return t.decode(e.subarray(l,d))}}var ho=z(()=>{});function Sc(i){return(t,e)=>{let s=i(t),r=i(e);return s<r?-1:s>r?1:0}}function Ss(i,t=e=>e){let e=()=>{let s=i();return e=()=>t(s),e()};return()=>e()}function Hs(i){return Array.isArray(i)?i.map(Hs):typeof i!="object"?i:Object.fromEntries(Object.entries(i).map(([t,e])=>[t,Hs(e)]))}function Tc({filename:i,contents:t}){return{filename:i,contents:dn(t)}}var fo,cn,Ec,dn,ru,nu,kc,un,mo=z(()=>{Ai();fo=vl(co());ho();Lt();cn=Ss(()=>[...uo((0,fo.default)(Ri))].sort(Sc(i=>i.filename)));Ec=new TextDecoder,dn=i=>Ec.decode(i);ru=Ss(()=>cn().filter(({filename:i})=>i.endsWith(".s")).map(Tc),Hs),nu=Ss(()=>Object.fromEntries(cn().filter(({filename:i})=>i.endsWith(".nss")).map(({filename:i,contents:t})=>[i,dn(t)])),Hs),kc=Ss(()=>{let i=cn().find(({filename:t})=>t==="refs.json");return JSON.parse(dn(i.contents))}),un=Ss(()=>{let i=new Map;for(let t of kc().refs){let e=ae.symbols(t.expr);if(e.length!==1)continue;let s=i.get(e[0]);s||i.set(e[0],s=[]),s.push(t)}return i})});function mt(i){return i.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace(/Of/g,"of").replace(/_/g," - ")}function po(i){return mt(i).replace(/^./,t=>t.toUpperCase())}function j(i,t=e=>e){return new Array(i).fill(0).map((e,s)=>t(s))}function Lc(i,t,e){return i.slice(t,t+e)}function X(i,t,e){return Array.from(i.slice(t,t+e))}function mn(i){return i<128?i:i-256}function xn(i){return i<0?i+256:i}function Ks(i,t,e,s,r=1/0,n){n||(n=a=>a);let o=[];for(;t+e<=r&&i[t]!==s;)o.push(n(i.slice(t,t+e))),t+=e;return o}function bo(i,t,e=0){return(i[t]|i[t+1]<<8)+e}function go(i,t,e){return e||(e=s=>s),j(Math.max(0,Math.floor(t.length/i)),s=>e(Lc(t,s*i,i)))}function yo(i){return(i*2050&139536|i*32800&558144)*65793>>>16&255}function C(i){return i!=null?i.toString(16).padStart(2,"0"):String(i)}function pn(i){return i.toString(16).padStart(3,"0")}function Bt(i){let t=[];for(let e of i)for(let s of e)t.push(s);return t}function vt(i,t){return i[t]<<8|i[t+1]}function le(i,t){return i[t+1]<<8|i[t]}function js(i,t,e=0){let s=[];for(;i[t]!=e;)s.push(i[t++]);return String.fromCharCode(...s)}function wo(i,t){let e=i[t];return String.fromCharCode(...i.slice(t+1,t+1+e))}function vo(i,t,e){i[t]=e&255,i[t+1]=e>>>8}function So(){let i=Symbol();function t(...e){return{tag:i,args:e}}return t.commit=(e,s)=>{for(let r of Object.getOwnPropertyNames(e)){let n=e[r];n.tag===i&&(e[r]=s(r,...n.args))}},t}function xo(i){let t=hn.get(i);if(!t){t=class extends tt{},Object.defineProperties(t,{name:{value:i.name}}),Object.assign(t,i),Reflect.setPrototypeOf(t.prototype,i.prototype);let e=new i,s={};for(let[r,n]of Object.entries(e))n&&n[fn]&&(s[r]=n);Object.defineProperties(t.prototype,s),hn.set(i,t),hn.set(t,t)}return t}function de(i,t,e,s){i.segment(t.name),i.org(e),i.free(s-e)}function Eo(i,t){i.label(t),i.export(t)}function Ee(i,t,e){e?.length&&i.segment(...e),i.reloc(t),i.label(t),i.export(t)}function Fe(i,t,e){i.assign(t,e),i.export(t)}function lu(i){return[...i]}function Ie(i,t,e){let s=new Set;if(!un().get(i)?.length)throw new Error(`No mappings for ${i}`);for(let n of un().get(i)||[]){let o=t[n.offset]|(n.bytes===2?t[n.offset+1]<<8:0),a=ae.invert(n.expr,i,o);a!=null&&s.add(a)}if(s.size!==1)throw new Error(`Could not determine unique value for ${i}: got [${[...s].map(n=>`$${n.toString(16).padStart(2,"0")}`).join(", ")}]`);let r=s[Symbol.iterator]().next().value;return e?r-e.org+e.offset:r}var It,bn,gn,yn,wn,vn,fn,hn,tt,Mc,me,ge,$=z(()=>{Lt();mo();It=class{constructor(t,e,s=!1){this.last=t;this.clear=e;this.nonEmpty=s}read(t,e=0){let s=[];for(;;){let r=t[e++],n=t[e++],o=(r&3)<<8|n,a=r&this.clear?~o:o;if(a!==-1&&s.push(a),r&this.last)return s}}bytes(t){t=t.filter(s=>s!==-1),this.nonEmpty&&!t.length&&(t=[-1]);let e=[];for(let s=0;s<t.length;s++){let r=t[s];r<0&&(r=this.clear<<8|~r),s===t.length-1&&(r|=this.last<<8),e.push(r>>>8),e.push(r&255)}return e}write(t,e,s=0){let r=this.bytes(e);for(let n=0;n<r.length;n++)t[n+s]=r[n]}},bn=new It(64,128),gn=new It(64,128,!0),yn=new It(64,128,!0),wn=new It(128,32,!0),vn=new It(128,32);fn=Symbol("PROP_TAG"),hn=new WeakMap;tt=class{constructor(t){this.data=t}static of(t){return Object.assign(new(xo(this))(new Array(this.size).fill(0)),t)}static from(t,e=0){let s=xo(this),r=!e&&t.length===this.size?t:X(t,e,this.size);return new s(r)}[Symbol.iterator](){return this.data[Symbol.iterator]()}hex(){return Array.from(this.data,C).join(" ")}clone(){return new this.constructor(this.data)}prop(...t){return{get(){let e=0;for(let[s,r=255,n=0]of t){let o=n<0?-n:0,a=n<0?0:n;e|=(this.data[s]&r)>>>a<<o}return e},set(e){for(let[s,r=255,n=0]of t){let o=n<0?-n:0,a=n<0?0:n,l=e>>>o<<a&r;this.data[s]=this.data[s]&~r|l}},[fn]:!0}}booleanProp(t,e){return{get(){return!!(this.data[t]&1<<e)},set(s){let r=1<<e;s?this.data[t]|=r:this.data[t]&=~r},[fn]:!0}}},Mc=(i,t)=>{let e={get(s,r){let n=s[r];return r==="subarray"?(o,a)=>{let l=s.subarray(o,a);return o<=t&&t<a?Mc(l,t-o):l}:r==="set"?o=>{console.log(`Setting overlapping array ${t}`);debugger;s.set(o)}:(typeof n=="function"&&(n=n.bind(s)),n)},set(s,r,n,o){if(r==t){console.log(`Writing ${t.toString(16)}`);debugger}return s[r]=n,!0}};return new Proxy(i,e)},me=class i{constructor(t,e,s){this.name=t;this.bank=e;this.org=s}get offset(){return(this.bank&31)<<13}static{this.$04=new i("04",4,32768)}static{this.$05=new i("05",5,40960)}static{this.$0a=new i("0a",10,32768)}static{this.$0b=new i("0b",11,40960)}static{this.$0c=new i("0c",12,32768)}static{this.$0d=new i("0d",13,40960)}static{this.$0e=new i("0e",14,32768)}static{this.$0f=new i("0f",15,40960)}static{this.$10=new i("10",16,32768)}static{this.$14=new i("14",20,32768)}static{this.$15=new i("15",21,40960)}static{this.$16_a=new i("16:a",22,40960)}static{this.$17=new i("17",23,40960)}static{this.$18=new i("18",24,32768)}static{this.$19=new i("19",25,40960)}static{this.$1a=new i("1a",26,32768)}static{this.$1b=new i("1b",27,40960)}static{this.$1c=new i("1a",28,32768)}static{this.$1d=new i("1b",29,40960)}static{this.$fe=new i("fe",30,49152)}static{this.$ff=new i("ff",31,57344)}},ge=class i{constructor(t,e){this.seg=t;this.delta=e}static of(t,e){return new i(t,e-t.org)}get offset(){return this.seg.offset+this.delta}get org(){return this.seg.org+this.delta}get segment(){return this.seg.name}plus(t,e){let s=this.delta+t;if(s>=8192){if(!e)throw new Error("Segment changed");if(this.seg.org&8192)throw new Error("Bad segment cross");return new i(e,s&8191)}return new i(this.seg,s)}minus(t){if(t.seg!==this.seg)throw new Error("Incompatible segments");return this.delta-t.delta}read(t){return t[this.offset]}readLittleEndian(t){let e=this.offset;return t[e]|t[e+1]<<8}readAddress(t,...e){let s=this.readLittleEndian(t);e.length||(e=[this.seg]);for(let r of e)if((s&57344)===(r.org&57344))return i.of(r,s);throw new Error(`Could not find valid segment for ${C(s)}`)}loc(t,e){t.segment(this.segment),t.org(this.org,e)}}});function hu(i){let{desert:t,grass:e,lime:s,mountain:r,mountainRiver:n,river:o,sea:a,town:l}=i.metatilesets,c=i.metascreens;c.registerFix(11),t.getTile(95).copyFrom(91).replaceIn(c.oasisCave,c.oasisLake),t.getTile(90).copyFrom(152).setTiles([,,26,24]),t.getTile(91).copyFrom(128).setTiles([52,50,,]),t.getTile(92).copyFrom(128).setTiles([,,55,53]),t.getTile(93).copyFrom(128).setTiles([,55,,52]),t.getTile(94).copyFrom(128).setTiles([53,,50]),c.registerFix(12),t.getTile(99).copyFrom(113),t.getTile(104).copyFrom(112),t.getTile(105).copyFrom(96),t.getTile(106).copyFrom(101),t.getTile(108).copyFrom(112),t.getTile(110).copyFrom(118),t.getTile(111).copyFrom(120),c.registerFix(1),e.getTile(64).copyFrom(81),e.getTile(65).copyFrom(82),e.getTile(66).copyFrom(83),e.getTile(67).copyFrom(84),e.getTile(68).copyFrom(85),e.getTile(69).copyFrom(86),e.getTile(70).copyFrom(88),e.getTile(71).copyFrom(89),c.registerFix(4),a.getTile(173).copyFrom(10).replaceIn(c.beachExitN,c.lighthouseEntrance,c.oceanShrine),a.getTile(10).copyFrom(162),c.boundaryN_cave.screen.set2d(56,[[,0,0],[,10,10],[,247,247],[248,248,248,248]]),c.cornerSE_cave.screen.set2d(73,[[,0,0],[,10,10],[,247,247],[248,247,247],[,253,247]]),c.cornerSE_cave.screen.set2d(74,[[0,0],[10,10],[247,247],[248,247],[128,253],[128,255],[250]]),c.registerFix(17),o.getTile(7).copyFrom(1).replaceIn(...o),o.getTile(14).copyFrom(2).replaceIn(...o),o.getTile(32).copyFrom(3).replaceIn(...o),o.getTile(33).copyFrom(4).replaceIn(...o);for(let f of[t,a,r,n,s])f.getTile(104).copyFrom(1).replaceIn(...f),f.getTile(131).copyFrom(2).replaceIn(...f),f.getTile(136).copyFrom(3).replaceIn(...f),f.getTile(137).copyFrom(4).replaceIn(...f);for(let f of[l])f.getTile(80).copyFrom(26).replaceIn(...f),f.getTile(81).copyFrom(27).replaceIn(...f),f.getTile(26).copyFrom(1).replaceIn(...f),f.getTile(27).copyFrom(2).replaceIn(...f),f.getTile(82).copyFrom(3).replaceIn(...f),f.getTile(87).copyFrom(4).replaceIn(...f);for(let f of[e,o,t])f.getTile(1).copyFrom(193).setAlternative(0),f.getTile(2).copyFrom(215).setAlternative(10),f.getTile(3).copyFrom(193).setAlternative(0),f.getTile(4).copyFrom(215).setAlternative(10);for(let f of[a]){f.getTile(1).copyFrom(193).setAlternative(0),f.getTile(2).copyFrom(203).setAlternative(0),f.getTile(3).copyFrom(193).setAlternative(192),f.getTile(4).copyFrom(203).setAlternative(192);for(let g=1;g<5;g++)f.getTile(g).setTiles(e.getTile(g).tiles)}for(let f of[l])f.getTile(1).copyFrom(99).setAlternative(0),f.getTile(2).copyFrom(100).setAlternative(210),f.getTile(3).copyFrom(99).setAlternative(0),f.getTile(4).copyFrom(100).setAlternative(210);let d=new Set([c.boundaryE_cave,c.boundaryW_cave,c.exitW_cave,c.caveAbovePortoa,c.beachCave,c.outsideWindmill,c.exitS_cave,c.townExitW_cave,c.zombieTownBottom_caveExit]),h=new Set([]);c.isFixed(4)&&(h.add(c.boundaryN_cave),h.add(c.cornerSE_cave));let m=new Set([c.mountainDeadEndW_caveEmpty,c.mountainPathW_cave,c.mountainCave_empty,c.mountainPathE_cave,c.mountainPathN_slopeS_cave,c.mountainPathWE_slopeN_cave,c.mountainPathE_gate]);for(let f of[...d,...h]){let g=f.data.exits.find(E=>E.type==="cave"),w=Math.min(...g.exits)-16,k=h.has(f)?[[3,3],[4,4]]:[[1,1],[2,2]];f.screen.set2d(w,k),f.addCustomFlag(!0)}for(let f of[...m]){let g=f.data.exits.find(E=>E.type==="cave"||E.type==="gate"),w=Math.min(...g.exits)-16,k=[[26,26],[8,9]];f.screen.set2d(w,k),f.addCustomFlag(!0)}c.outsideWindmill.screen.set2d(67,[[202,130]]),c.townExitW_cave.screen.set2d(42,[[202,130]])}function fu(i){function t(c){c.splice(0,c.length,...new Set(et.concat(...c.map(d=>[d,d+1,d-1]))))}let{fortressArena_through:e,fortressTrap:s,hallNS:r,hallNS_arena:n,hallNS_arenaWall:o,hallNS_entrance:a}=i.metascreens;n.screen.set2d(4,[[151,118,34,35,35,35,75,149],[66,72,34,33,35,35,69,66],[67,73,46,35,35,33,70,67],[68,74,46,35,33,33,71,68]]),n.setGridTile(" c | a | c "),t(n.findExitByType("edge:top").exits),o.screen.set2d(4,[[148,76,34,33,33,33,75,147],[151,79,0,1,1,2,80,149]]),o.setGridTile(" c | a | c "),t(o.findExitByType("edge:top").exits);let l=i.locations.ZebuCave.spawns.find(c=>c.isTrigger()&&c.id===140);l&&(l.yt+=4),e.screen.set2d(5,[[95,34,33,33,33,95],[183,34,33,33,33,181],[191,34,33,33,33,168]]),e.setGridTile(" c | a | w "),t(e.findExitByType("edge:top").exits),s.screen.set2d(196,[[60,61,33,33,33,33,59,60],[146,76,34,33,33,33,75,144],[148,76,34,33,33,33,75,147]]),s.setGridTile("   | x | c "),t(s.findExitByType("edge:bottom").exits);for(let c of i.locations){let d=c.meta;for(let h of d.allPos())if(d.get(h)===a&&d.get(h+16)?.hasFeature("arena")){d.set(h,r);let f=c.screens[h>>>4];f&&(f[h&15]=r.sid)}}}var To=z(()=>{Xe()});var ze,Lo,Mo,Ao,Ac,Sn,ns,ko,Es,Rc,Ro,Cc,Co=z(()=>{$();({$14:ze,$15:Lo,$16_a:Mo,$17:Ao}=me),Ac=new Map([[6,"{}"],[7,"[]"]]),Sn=class{constructor(t,e,s,r,n){this.messages=t;this.part=e;this.id=s;this.bytes=[];this.hex="";let o=t.rom.prg,a=[];if(r<163840||r>196608)debugger;for(let l=r;r&&o[l];l++){let c=o[l];if(this.bytes.push(c),c===1){if(l!==r&&o[l-1]!==3)throw new Error(`Unexpected start message signal at ${l.toString(16)}`)}else if(c===2)a.push(`
 `);else if(c===3)a.push(`${Es.CONTINUED}
`);else if(c===4)a.push("{:HERO:}");else if(c===8)a.push("[:ITEM:]");else if(c>=5&&c<=9){let d=o[++l];if(this.bytes.push(d),c===9){a.push(" ".repeat(d));continue}let h=Ac.get(c);h&&(a.push(h[0]),a.push(d.toString(16).padStart(2,"0")),a.push(":")),a.push(n(d,c)),h&&a.push(h[1]),ns[String.fromCharCode(o[l+1])]||a.push(" ")}else if(c>=128)a.push(n(c,0)),ns[String.fromCharCode(o[l+1])]||a.push(" ");else if(c>=32)a.push(String.fromCharCode(c));else throw new Error(`Non-exhaustive switch: $${c.toString(16)} at $${l.toString(16)}`)}this.text=a.join("")}get mid(){return`${C(this.part)}:${C(this.id)}`}fixText(){if(this.checkText())return;let t=[],e=0,s=0,r=!1,n=[],o=new Map;function a(m,f=m.length){s+f>28&&d(),m===" "?(t.push(...n," "),n=[]):/^[[{]:/.test(m)?n.push({toString:()=>m,length:f}):n.push(m),s+=f,r=m.endsWith(" ")}function l(){r||a(" "),r=!0}function c(m){let f=m.split(/\s+/);for(let g=0;g<f.length;g++)g&&l(),a(f[g])}function d(){s=1+n.reduce((m,f)=>m+f.length,0),++e>2?(t.push(`#
 `),e=0):t.push(`
 `),r=!0}for(let m=0;m<this.text.length;m++){let f=this.text[m],g=this.text[m+1];if(/[\s\n#]/.test(f))l();else if(f==="{"){if(g===":")a("{:HERO:}",6);else{let w=this.text.indexOf(":",m),k=Number.parseInt(this.text.substring(m+1,w),16),E=this.messages.extraWords[6][k];o.set(E,`{${k.toString(16)}:${E}}`),c(E)}m=this.text.indexOf("}",m)}else if(f==="["){if(g===":"){let w=this.messages.rom.items;a("[:ITEM:]",Math.max(...w.map(k=>k.messageName.length)))}else{let w=this.text.indexOf(":",m),k=Number.parseInt(this.text.substring(m+1,w),16),E=this.messages.rom.items[k].messageName;o.set(E,`[${k.toString(16)}:${E}]`),c(E)}m=this.text.indexOf("]",m)}else a(f)}t.push(...n);let h=t.join("");for(let[m,f]of o)h.includes(m)&&(h=h.split(m).join(f));this.text=h}checkText(){let t=0,e=0,s=this.text.replace(/\s+$/mg,"");for(let r=0;r<s.length;r++){let n=s[r],o=s[r+1];if(n===`
`){if(t++,e=0,t>3)return!1}else if(n==="#")o===`
`&&r++,t=e=0;else if(n==="{"||n==="["){if(o===":"){if(n==="{")e+=6;else{let a=this.messages.rom.items;e+=Math.max(...a.map(l=>l.messageName.length))}if(e>28)return!1}else{let a=s.indexOf(":",r),l=Number.parseInt(s.substring(r+1,a),16);e+=(n==="{"?this.messages.personNames[l]:this.messages.itemNames[l]).length}r=s.indexOf(Ro[n],r)}else e++;if(e>28||e>14&&t>2&&s.includes("#",r))return!1}return!0}},ns={"\0":!0," ":!0,"!":!0,"'":!0,",":!0,".":!0,":":!0,";":!0,"?":!0,_:!0,"\n":!0,"#":!0},ko={21:Lo,22:Mo,23:Ao},Es=class i{constructor(t){this.rom=t;this.partCount=34;this.commonWords=[];this.uncommonWords=[];this.personNames=[];this.itemNames=[];this.parts=[];let e=Ie("CommonWords",t.prg,ze),s=Ie("UncommonWords",t.prg,ze),r=Ie("PersonNames",t.prg,ze),n=Ie("ItemNames",t.prg,ze),o=Ie("MessageTableBanks",t.prg,ze),a=Ie("MessageTableParts",t.prg,ze),l={5:s,6:r,7:n};this.extraWords={5:this.uncommonWords,6:this.personNames,7:this.itemNames};let c=(f,g)=>{let w=g?g.offset-g.org:0;return le(t.prg,f)+w},d=(f,g,w)=>{let k=f[w];return k??(k=js(t.prg,c(g+2*w,ze)),f[w]=k)},h=(f,g)=>g?d(this.extraWords[g],l[g],f):d(this.commonWords,e,f-128);for(let f=0;f<73;f++)h(f,7);let m=o;this.banks=X(t.prg,m,this.partCount);for(let f=this.partCount-1;f>=0;f--){let g=c(a+2*f,ze),w=m-g>>>1;m=g;let k=ko[this.banks[f]],E=this.parts[f]=[];for(let L=0;L<w;L++){let M=c(g+2*L,k);E[L]=new Sn(this,f,L,M,h)}}}static{this.CONTINUED="#"}get(t){return this.parts[t.part]?.[t.index]}*messages(t){for(let e of this.parts)if(t)for(let s of e)t.has(s.mid)&&(yield s);else yield*e}alloc(){let t=this.uses();for(let e of this.parts)for(let s of e)if(!t.has(s.mid))return s;throw new Error("could not find an unused message id")}uses(){let t=new Map;function e(s,r){let n=typeof s=="string"?s:s.mid,o=t.get(n)||new Set;o.add(r),t.set(n,o)}for(let s of this.rom.triggers)s.message.nonzero()&&e(s.message,`Trigger $${C(s.id)}`);for(let s of this.rom.items)for(let r of s.itemUseMessages())r.nonzero()&&e(r,`Item $${C(s.id)}`);for(let s of this.rom.npcs){for(let r of s.globalDialogs)e(r.message,`NPC $${C(s.id)}`);for(let[r,n]of s.localDialogs){let o=r>=0?` @ $${C(r)}`:"";for(let a of n)e(a.message,`NPC $${C(s.id)}${o}`)}}for(let s of this.rom.telepathy.sages){for(let r of s.defaultMessages)e(r,`Telepathy ${s.sage}`);for(let r of s.messageGroups)for(let[,...n]of r.messages)for(let o of n)e(o,`Telepathy ${s.sage}`)}for(let s of Cc)e(s,"Hardcoded");return t}buildAbbreviationTable(t=this.uses()){let e=[],s=new Map,r=new Map;for(let h of this.messages(t)){h.fixText();let m=h.mid,f=s.get(h.text),g=f!=null&&r.get(f);if(g){g.push(m);continue}s.set(h.text,m),r.set(m,[]);let w=h.text,k=[];for(let E=0,L=w.length;E<=L;E++){let M=w[E],y=Ro[M];if(ns[M]||y||E===L){let S=w[E+1];if(y&&(E=Math.max(E,w.indexOf(y,E))),!k.length)continue;let v=(M===" "||M==="'")&&S&&!ns[S]?M:"",D=k.join(""),H=e.length,ne=D.length+(M===" "?1:0);k=[],e.push({str:D,id:H,chain:v,bytes:ne,used:0,suffixes:new Set,mid:m})}else k.push(M)}}let n=new Map;for(let h=e.length-1;h>=0;h--){let m=e[h];for(let f=m.bytes-2;f>=0;f--){let w=m.str.substring(f),k=0,E=m,L=m.bytes-f-1;for(;;){let M=n.get(w);M||n.set(w,M={chains:k,missing:f,saving:-w.length,str:w,words:new Set}),M.words.add(h),M.saving+=L;for(let y=k;y>=0;y--)e[h+y].suffixes.add(M);if(!E.chain)break;w+=E.chain,E=e[h+ ++k],w+=E.str,L+=E.bytes}}}let o=new Set,a=[],l=({saving:h},{saving:m})=>m-h,c=[...n.values()].sort(l),d=0;for(;c.length&&d<Rc;){o.has(c[0].str)&&(c.sort(l),o.clear());let{str:h,saving:m,missing:f,words:g,chains:w}=c.shift();if(m<=0)break;d+=h.length+3;let k=a.length,E=new Set;for(let L of g){let M=e[L];for(let y of[M.mid,...r.get(M.mid)||[]])E.add(y)}a.push({bytes:k<128?[k+128]:[5,k-128],mids:E,str:h});for(let L of g)for(let M=0;M<=w;M++){let y=e[L+M],S=y.bytes-(M?0:f);for(let v of y.suffixes)v.saving-=S-y.used,o.add(v.str);y.used=S}if(a.length===128){for(let L of n.values())L.saving-=L.words.size;c.sort(l),o.clear()}}return a}compress(){let t=this.uses(),e=this.buildAbbreviationTable(t),s=new Map;this.commonWords.splice(0,this.commonWords.length),this.uncommonWords.splice(0,this.uncommonWords.length);for(let r of e){r.bytes.length===1?this.commonWords[r.bytes[0]&127]=r.str:this.extraWords[r.bytes[0]][r.bytes[1]]=r.str;for(let n of r.mids){let o=s.get(n);o||s.set(n,o=[]),o.push(r)}}for(let r of s.values())r.sort(({str:{length:n}},{str:{length:o}})=>o-n);for(let r of this.messages(t)){let n=r.text;n=n.replace(/([\[{])([^\]}]*)[\]}](.|$)/g,(l,c,d,h)=>{if(h&&!ns[h])return l;if(h===" "&&(h=""),c==="["&&d===":ITEM:")return`[8]${h}`;if(c==="{"&&d===":HERO:")return`[4]${h}`;let m=/^([0-9a-f]+):/.exec(d);if(!m)throw new Error(`Bad message text: ${l}`);let f=Number.parseInt(m[1],16);return`[${c==="{"?6:7}][${f}]${h}`});for(let{str:l,bytes:c}of s.get(r.mid)||[])n=n.replace(new RegExp(l+"( [ &0-9]|.|$)","g"),(d,h)=>h&&!ns[h]?d:(h===" "&&(h=""),c.map(m=>`[${m}]`).join("")+h));let o=["[01]"],a=[];a.push(1);for(let l=0,c=n.length;l<c;l++){let d=n[l];if(d===i.CONTINUED)a.push(3,1),o.push("[03][01]"),n[l+1]===`
`&&l++;else if(d===`
`)a.push(2),n[l+1]===" "&&l++,o.push("[02]");else if(d==="["){let h=n.indexOf("]",l);if(h<=0)throw new Error(`bad text: ${n}`);let m=Number(n.substring(l+1,h));if(isNaN(m))throw new Error(`bad text: ${n}`);a.push(m),o.push(`[${C(m)}]`),l=h}else if(d===" "&&n[l+1]===" "){let h=l+2;for(;n[h]===" ";)h++;a.push(9,h-l),o.push(`[09][${C(h-l)}]`),l=h-1}else a.push(d.charCodeAt(0)),o.push(d)}a.push(0),o.push("[0]"),r.bytes=a,r.hex=o.join("")}}write(){let t=this.rom.assembler();de(t,ze,32768,34048),de(t,ze,34080,34088),de(t,ze,34182,34195),de(t,ze,35072,37888),de(t,ze,38533,38662),de(t,ze,40576,40960),de(t,Lo,40960,49152),de(t,Mo,40960,49152),de(t,Ao,40960,48128);let e=j(this.partCount,()=>[]);for(let a=0;a<this.partCount;a++){let l=e[a],c=this.parts[a],d=this.banks[a],h=ko[d];t.segment(h.name);for(let m of c)t.reloc(`Message_${m.mid}`),l.push(t.pc()),t.byte(...m.bytes,0)}let s=[];t.segment(ze.name),t.reloc("MessagesTable");for(let a=0;a<this.partCount;a++)s.push(t.pc()),t.word(...e[a]);let r=t.pc();t.byte(...this.banks),t.reloc("MessageParts");let n=t.pc();t.word(...s),Fe(t,"MessageTableBanks",r),Fe(t,"MessageTableParts",n);let o=[["CommonWords",this.commonWords],["UncommonWords",this.uncommonWords],["PersonNames",this.personNames],["ItemNames",this.itemNames]];for(let[a,l]of o){let c=[],d=0;for(let m of l){if(!m){c.push(0);continue}t.reloc(`${a}_${C(d++)}`),c.push(t.pc()),t.byte(m,0)}t.reloc(a);let h=t.pc();t.word(...c),Fe(t,a,h)}return[t.module()]}},Rc=1250,Ro={"{":"}","[":"]"},Cc=new Set(["20:1d","1b:0f","1b:10","1b:11","1b:12","1b:05","1b:06","1b:07","1f:00","13:00","0b:01","20:0c","20:0f","1c:11","0e:05","16:00","16:02","16:04","16:06","20:11","21:00","21:02","21:01","06:00","18:00","18:02","18:04","18:08","1b:03","1b:00","1b:00","1b:04","06:01","10:13","19:05","20:14","20:15","20:17","20:02","20:0d","20:19","20:1a","20:1b","03:01","03:02","10:10","10:11","10:12","0c:04","0c:05","03:03","20:0e","20:13"])});var En,Dt,Ys=z(()=>{En=class{constructor(t){this.table=t;let e=[];for(let[s,r]of Object.entries(t))for(let[n,o]of Object.entries(r))e[o]=[s,n];this.reverse=e}op(t){let e=this.table[t];if(!e)throw new Error(`Bad mnemonic: ${t}`);return e}disasm(t){let e=this.reverse[t];return e&&[...e]}argLen(t){switch(t){case"acc":case"imp":return 0;case"imm":case"rel":case"zpg":case"zpx":case"zpy":case"iny":return 1;case"abs":case"abx":case"aby":case"ind":case"inx":return 2}}format(t,e){if(t==="acc"||t==="imp")return"";if(typeof e=="number")if(t==="rel"){let s=(e>127?e-256:e)+2;s<0?e=`*-${-s}`:s>0?e=`*+${s}`:e="*"}else t.startsWith("zp")||t==="iny"||t==="imm"?e=`$${(e&255).toString(16).padStart(2,"0")}`:e=`$${(e&65535).toString(16).padStart(4,"0")}`;switch(t){case"imm":return`#${e}`;case"rel":return e;case"zpg":return e;case"abs":return e;case"zpx":return`${e},x`;case"abx":return`${e},x`;case"zpy":return`${e},y`;case"aby":return`${e},y`;case"iny":return`(${e}),y`;case"ind":return`(${e})`;case"inx":return`(${e},x)`}}};(t=>t.P02=new En({adc:{abs:109,abx:125,aby:121,imm:105,iny:113,inx:97,zpg:101,zpx:117},and:{abs:45,abx:61,aby:57,imm:41,iny:49,inx:33,zpg:37,zpx:53},asl:{abs:14,abx:30,acc:10,imp:10,zpg:6,zpx:22},bcc:{rel:144},bcs:{rel:176},beq:{rel:240},bit:{abs:44,zpg:36},bmi:{rel:48},bne:{rel:208},bpl:{rel:16},brk:{imp:0},bvc:{rel:80},bvs:{rel:112},clc:{imp:24},cld:{imp:216},cli:{imp:88},clv:{imp:184},cmp:{abs:205,abx:221,aby:217,imm:201,iny:209,inx:193,zpg:197,zpx:213},cpx:{abs:236,imm:224,zpg:228},cpy:{abs:204,imm:192,zpg:196},dec:{abs:206,abx:222,zpg:198,zpx:214},dex:{imp:202},dey:{imp:136},eor:{abs:77,abx:93,aby:89,imm:73,iny:81,inx:65,zpg:69,zpx:85},inc:{abs:238,abx:254,zpg:230,zpx:246},inx:{imp:232},iny:{imp:200},jmp:{abs:76,ind:108},jsr:{abs:32},lda:{abs:173,abx:189,aby:185,imm:169,iny:177,inx:161,zpg:165,zpx:181},ldx:{abs:174,aby:190,imm:162,zpg:166,zpy:182},ldy:{abs:172,abx:188,imm:160,zpg:164,zpx:180},lsr:{abs:78,abx:94,acc:74,imp:74,zpg:70,zpx:86},nop:{imp:234},ora:{abs:13,abx:29,aby:25,imm:9,iny:17,inx:1,zpg:5,zpx:21},pha:{imp:72},php:{imp:8},pla:{imp:104},plp:{imp:40},rol:{abs:46,abx:62,acc:42,imp:42,zpg:38,zpx:54},ror:{abs:110,abx:126,acc:106,imp:106,zpg:102,zpx:118},rti:{imp:64},rts:{imp:96},sbc:{abs:237,abx:253,aby:249,imm:233,iny:241,inx:225,zpg:229,zpx:245},sec:{imp:56},sed:{imp:248},sei:{imp:120},sta:{abs:141,abx:157,aby:153,iny:145,inx:129,zpg:133,zpx:149},stx:{abs:142,zpg:134,zpy:150},sty:{abs:140,zpg:132,zpx:148},tax:{imp:170},tay:{imp:168},tsx:{imp:186},txa:{imp:138},txs:{imp:154},tya:{imp:152},slo:{abs:15,abx:31,aby:27,zpg:7,zpx:23,inx:3,iny:19},rla:{abs:47,abx:63,aby:59,zpg:39,zpx:55,inx:35,iny:51},sre:{abs:79,abx:95,aby:91,zpg:71,zpx:87,inx:67,iny:83},rra:{abs:111,abx:127,aby:123,zpg:103,zpx:119,inx:99,iny:115},sax:{abs:143,zpg:135,zpy:151,inx:131},lax:{abs:175,aby:191,zpg:167,zpy:183,inx:163,iny:179},dcp:{abs:207,abx:223,aby:219,zpg:199,zpx:215,inx:195,iny:211},isc:{abs:239,abx:255,aby:251,zpg:231,zpx:247,inx:227,iny:243},alr:{imm:75},arr:{imm:107},axs:{imm:203},tas:{aby:155},shy:{abx:156},shx:{aby:158},ahx:{aby:159,iny:147},anc:{imm:43},las:{aby:187}}))(Dt||={})});var is,Tn=z(()=>{(e=>{function i(s,r){let n={...s,...r},o=[...s.free||[],...r.free||[]];return o.length&&(n.free=o),n}e.merge=i;function t(s,r){return s.memory==null||s.size==null?!1:r>=s.memory&&r<s.memory+s.size}e.includesOrg=t})(is||={})});var kn,Zs,No=z(()=>{kn=class{constructor(t,e,s,r,n){this.line=t;this.column=e;this.prefix=s;this.remainder=r;this.match=n}},Zs=class{constructor(t,e=1,s=0){this.content=t;this.line=e;this.column=s;this.prefix="";this.remainder=t}advance(t){let e=this.remainder.substring(0,t.length);if(t!==e)throw new Error(`Non-rooted token: '${t}' vs '${e}'`);this.prefix+=t,this.remainder=this.remainder.substring(t.length),t=t.replace(`
`,t.includes("\r")?"":"\r");let s=t.split(/\r/g);s.length>1&&(this.line+=s.length-1,this.column=0),this.column+=s[s.length-1].length}saveState(){return new kn(this.line,this.column,this.prefix,this.remainder,this.lastMatch)}restoreState(t){this.line=t.line,this.column=t.column,this.prefix=t.prefix,this.remainder=t.remainder,this.lastMatch=t.match}skip(t){let e=t.exec(this.remainder);return e?(this.advance(e[0]),!0):!1}space(){return this.skip(/^[ \t]+/)}newline(){return this.skip(/^(\r\n|\n|\r)/)}lookingAt(t){return typeof t=="string"?this.remainder.startsWith(t):t.test(this.remainder)}token(t){let e;if(typeof t=="string"){if(!this.remainder.startsWith(t))return!1;e=[t]}else e=t.exec(this.remainder);return e?(e.line=this.line,e.column=this.column,this.lastMatch=e,this.advance(e[0]),!0):!1}lookBehind(t){if(typeof t=="string")return this.prefix.endsWith(t);let e=t.exec(this.prefix);return e?(e.line=this.line,e.column=this.line,this.lastMatch=e,!0):!1}match(){return this.lastMatch}group(t=0){return this.lastMatch?.[t]}eof(){return!this.remainder}}});function Ic(i){if(!/^[0-9a-f]+$/i.test(i))throw new Error(`Bad hex number: $${i}`);return{token:"num",num:Number.parseInt(i,16),width:Math.ceil(i.length/2)}}function Bc(i){if(!/^[0-9]+$/.test(i))throw new Error(`Bad decimal number: ${i}`);return{token:"num",num:Number.parseInt(i,10)}}function Dc(i){if(!/^[0-7]+$/.test(i))throw new Error(`Bad octal number: ${i}`);return{token:"num",num:Number.parseInt(i,8)}}function Pc(i){if(!/^[01]+$/.test(i))throw new Error(`Bad binary number: %${i}`);return{token:"num",num:Number.parseInt(i,2),width:Math.ceil(i.length/8)}}var os,Ln=z(()=>{No();gt();os=class{constructor(t,e="input.s",s={}){this.file=e;this.opts=s;this.buffer=new Zs(t)}next(){let t=this.token();for(;p.eq(t,p.EOL);)t=this.token();let e=[[]],s=0;for(;!p.eq(t,p.EOL)&&!p.eq(t,p.EOF);){if(p.eq(t,p.LC))e[s++].push(t),e.push([]);else if(p.eq(t,p.RC)){if(!s)throw new Error(`Missing open curly: ${p.nameAt(t)}`);let r=e.pop(),n=e[--s].pop().source,o={token:"grp",inner:r};n&&(o.source=n),e[s].push(o)}else e[s].push(t);t=this.token()}if(s){let r=e[s-1].pop();throw new Error(`Missing close curly: ${p.nameAt(r)}`)}return e[0].length?e[0]:void 0}token(){for(;this.buffer.space()||this.buffer.token(/^;.*/)||this.opts.lineContinuations&&this.buffer.token(/^\\(\r\n|\n|\r)/););if(this.buffer.eof())return p.EOF;let t={file:this.file,line:this.buffer.line,column:this.buffer.column};try{let e=this.tokenInternal();return this.opts.skipSourceAnnotations||(e.source=t),e}catch(e){let{file:s,line:r,column:n}=t,o=this.buffer.group();throw o=o?` near '${o}'`:"",e.message+=`
  at ${s}:${r}:${n}${o}`,e}}tokenInternal(){if(this.buffer.newline())return{token:"eol"};if(this.buffer.token(/^@+[a-z0-9_]*/i)||this.buffer.token(/^((::)?[a-z_][a-z0-9_]*)+/i))return this.strTok("ident");if(this.buffer.token(/^\.[a-z]+/i))return this.strTok("cs");if(this.buffer.token(/^:([+-]\d+|[-+]+|<+rts|>*rts)/))return this.strTok("ident");if(this.buffer.token(/^(:|\++|-+|&&?|\|\|?|[#*/,=~!^]|<[<>=]?|>[>=]?)/))return this.strTok("op");if(this.buffer.token("["))return{token:"lb"};if(this.buffer.token("{"))return{token:"lc"};if(this.buffer.token("("))return{token:"lp"};if(this.buffer.token("]"))return{token:"rb"};if(this.buffer.token("}"))return{token:"rc"};if(this.buffer.token(")"))return{token:"rp"};if(this.buffer.token(/^["']/))return this.tokenizeStr();if(this.buffer.token(/^[$%]?[0-9a-z_]+/i))return this.tokenizeNum();throw new Error("Syntax error")}tokenizeStr(){let t=this.buffer,s=t.match()[0],r="";for(;!t.lookingAt(s);){if(t.eof())throw new Error(`EOF while looking for ${s}`);t.token(/^\\u([0-9a-f]{4})/i)?r+=String.fromCodePoint(parseInt(t.group(1),16)):t.token(/^\\x([0-9a-f]{2})/i)?r+=String.fromCharCode(parseInt(t.group(1),16)):t.token(/^\\(.)/)?r+=t.group(1):(t.token(/^./),r+=t.group(0))}return t.token(s),{token:"str",str:r}}strTok(t){return{token:t,str:this.buffer.group()}}tokenizeNum(t=this.buffer.group()){return this.opts.numberSeparators&&(t=t.replace(/_/g,"")),t[0]==="$"?Ic(t.substring(1)):t[0]==="%"?Pc(t.substring(1)):t[0]==="0"?Dc(t):Bc(t)}}});function An(i,t){if(!i)return-1;let e=t(0),s=t(i-1);if(e<0)return-1;if(e===0)return 0;if(s>0)return~i;if(s===0)return i-1;let r=0,n=i-1;for(;n-r>1;){let o=r+n>>1,a=t(o);if(a>0)r=o;else if(a<0)n=o;else return o}return~n}function Rn(i,t,e){let s=t(e),r=An(i.length,n=>s<t(i[n])?-1:1);i.splice(~r,0,e)}function Wc(i,t,e){let s=i.length;return e.length<s||!Array.isArray(e)?(i.splice(t,s-t,...e),i):(e.unshift(...Io(i,t)),e)}function Oc(i,t,e){let s=e.length;return i.length<s||!Array.isArray(i)?(e.splice(0,t,...i),e):(i.push(...Bo(e,t)),i)}function Io(i,t){let e=i.length;return t<<1<e?i.slice(0,t):(i.splice(t,e-t),i)}function Bo(i,t){let e=i.length;return t<<1<e?(i.splice(0,t),i):i.slice(t)}var Mn,Pt,Wt,Cn=z(()=>{Mn=class{constructor(){this._chunks=[];this._length=0}get length(){return this._length}_find(t){return An(this._chunks.length,e=>{let[s,r]=this._chunks[e];return t<s?-1:t>=s+r.length?1:0})}apply(t){if(t.length<this._length)throw new Error("Target too small.");for(let[e,s]of this._chunks)for(let r=0;r<s.length;r++)t[e+r]=s[r]}chunks(){return this._chunks}get(t){let e=this._find(t);if(e<0)return;let[s,r]=this._chunks[e];return r[t-s]}set(t,...e){this.setInternal(t,e)}setInternal(t,e){if(!e.length)return;let s=t+e.length;this._length=Math.max(this._length,s);let r=this._find(t),n=this._find(s);if(r>=0&&r===n){let[c,d]=this._chunks[r];for(let h=0;h<e.length;h++)d[t+h-c]=e[h];return}let o=this._chunks[~r-1];if(o&&o[0]+o[1].length===t&&(r=~r-1),this._chunks[~n]?.[0]===s&&(n=~n),r>=0){let[c,d]=this._chunks[r];n!==r||!Array.isArray(e)?e=Wc(d,t-c,e):e.unshift(...d.slice(0,t-c)),t=c}if(n>=0){let[c,d]=this._chunks[n];e=Oc(e,s-c,d)}let a=r<0?~r:r,l=n<0?~n:n;n>=0&&l++,Array.isArray(e)||(e=Array.from(e)),this._chunks.splice(a,l-a,[t,e])}splice(t,e=1){let s=t+e,r=this._find(t),n=this._find(s),o=r>=0?this._chunks[r]:void 0,a=n>=0?this._chunks[n]:void 0;if(o){let h=t-o[0];h?o=[o[0],o===a?o[1].slice(0,h):Io(o[1],h)]:(o=void 0,r=~r)}a&&(a=[s,Bo(a[1],s-a[0])],a[1].length||(a=void 0,n=~n));let l=[];o&&l.push(o),a&&l.push(a);let c=r<0?~r:r,d=n<0?~n:n;n>=0&&d++,this._chunks.splice(c,d-c,...l)}slice(t,e){if(e<=t)return[];let s=this._find(t);if(s<0)throw new Error(`Absent: ${t}`);let[r,n]=this._chunks[s];if(r+n.length<e)throw new Error(`Absent: ${r+n.length}`);return n.slice(t-r,e-r)}},Pt=class i extends Mn{set(t,...e){this.setInternal(t,e[0]instanceof Uint8Array?e[0]:Uint8Array.from(e))}search(t,e,s){return this.pattern(t).search(e,s)}pattern(t){if(!t.length)return{search:(l=0)=>l};let e=t.length,s=new Array(256).fill(e);for(let l=0;l<t.length;l++)s[t[l]]=e-1-l;let r=[],n=e;for(let l=e;l>0;--l){o(l)&&(n=l),r[e-l]=n-l+e;for(let c=0;c<e-1;++c){let d=a(c);r[d]=e-1-c+d}}return{search:(l=0,c=this._length)=>{if(!this._chunks.length||c<l)return-1;let d=this._find(l),h=0;for(d>=0?h=l-this._chunks[d][0]:d=~d;d<this._chunks.length;){let[m,f]=this._chunks[d++],g=Math.min(c-m,f.length);if(g<0)break;for(let w=e-1+h,k;w<g;){for(k=e-1;t[k]===f[w];--w,--k)if(k===0)return w+m;w+=Math.max(r[e-1-k],s[f[w]])}h=0}return-1}};function o(l){for(let c=l,d=0;c<e;++c,++d)if(t[c]!==t[d])return!1;return!0}function a(l){let c=0;for(let d=l,h=e-1;d>=0&&t[d]===t[h];--d,--h)++c;return c}}addOffset(t){let e=new i;for(let[s,r]of this._chunks)e._chunks.push([s+t,r]);return e}toIpsPatch(){let t=8;for(let[,r]of this._chunks)t+=5+r.length;let e=new Uint8Array(t),s=5;e[0]=80,e[1]=65,e[2]=84,e[3]=67,e[4]=72;for(let[r,n]of this._chunks){if(n.length>65535)throw new Error("Oops!");e[s++]=r>>>16,e[s++]=r>>>8&255,e[s++]=r&255,e[s++]=n.length>>>8,e[s++]=n.length&255,e.subarray(s,s+n.length).set(n),s+=n.length}return e[s]=69,e[s+1]=79,e[s+2]=70,e}toIpsHexString(){let t=[...this.toIpsPatch()],e=[];for(let s=0;s<t.length;s+=16)e.push([s.toString(16).padStart(8,"0")+":",...t.slice(s,s+16).map(r=>r.toString(16).padStart(2,"0"))].join(" "));return e.join(`
`)}};Wt=class{constructor(){this.data=[]}[Symbol.iterator](){return this.data[Symbol.iterator]()}_find(t){return An(this.data.length,e=>{let s=this.data[e];return t<s[0]?-1:t>=s[1]?1:0})}has(t){return this._find(t)>=0}add(t,e){let s=this._find(t),r=this._find(e);this.data[~s-1]?.[1]===t&&(s=~s-1),this.data[~r]?.[0]===e&&(r=~r);let n=[t,e];s>=0&&(n[0]=this.data[s][0]),r>=0&&(n[1]=this.data[r][1]);let o=s<0?~s:s,a=r<0?~r:r;r>=0&&a++,this.data.splice(o,a-o,n)}delete(t,e){let s=this._find(t),r=this._find(e),n=s>=0?this.data[s]:void 0,o=r>=0?this.data[r]:void 0;n&&(n=[n[0],Math.min(n[1],t)],n[0]===n[1]&&(n=void 0,s=~s)),o&&(o=[Math.max(o[0],e),o[1]],o[0]===o[1]&&(o=void 0,r=~r));let a=[];n&&a.push(n),o&&a.push(o);let l=s<0?~s:s,c=r<0?~r:r;r>=0&&c++,this.data.splice(l,c-l,...a)}tail(t){let e=this._find(t);e<0&&(e=~e);let s=this.data;return{[Symbol.iterator](){return this},next(){if(e>=s.length)return{value:void 0,done:!0};let r=s[e++];return{value:[Math.max(t,r[0]),r[1]],done:!1}}}}}});function Fc(i,t){for(let e=0;e<t.length;e++)i.push(t.charCodeAt(e))}function Uc(i){return i==="*"?{type:"pc"}:/^:\++$/.test(i)?{type:"anon",num:i.length-1}:/^:\+\d+$/.test(i)?{type:"anon",num:parseInt(i.substring(2))}:/^:-+$/.test(i)?{type:"anon",num:1-i.length}:/^:-\d+$/.test(i)?{type:"anon",num:-parseInt(i.substring(2))}:/^:>*rts$/.test(i)?{type:"rts",num:Math.max(i.length-4,1)}:/^:<+rts$/.test(i)?{type:"rts",num:4-i.length}:/^\++$/.test(i)?{type:"rel",num:i.length}:/^-+$/.test(i)?{type:"rel",num:-i.length}:{type:"none"}}var Xs,Js,Nn,as,In=z(()=>{Xe();Ys();Lt();Tn();gt();Ln();Cn();Xs=class{constructor(){this.symbols=new Map}pickScope(t){return[t,this]}resolve(t,e={}){let{allowForwardRef:s=!1,ref:r}=e,[n,o]=this.pickScope(t),a=o.symbols.get(n);if(a)return n!==t&&(a.scoped=!0),a;if(!s)return;let l={ref:r};return o.symbols.set(n,l),n!==t&&(l.scoped=!0),l}},Js=class extends Xs{constructor(e,s){super();this.parent=e;this.kind=s;this.children=new Map;this.anonymousChildren=[];this.global=e?e.global:this}pickScope(e){let s=this,r=e.split(/::/g),n=r.pop();for(let o=0;o<r.length;o++){if(!o&&!r[o]){s=s.global;continue}let a=s.children.get(r[o]);for(;!o&&s.parent&&!a;)a=(s=s.parent).children.get(r[o]);if(!a){let l=r.slice(0,o+1).join("::");throw new Error(`Could not resolve scope ${l}`)}s=a}return[n,s]}},Nn=class extends Xs{clear(){for(let[t,e]of this.symbols)if(!e.expr){let s=e.ref?p.at(e.ref):"";throw new Error(`Cheap local label never defined: ${t}${s}`)}this.symbols.clear()}},as=class{constructor(t=Dt.P02,e={}){this.cpu=t;this.opts=e;this.segments=["code"];this.segmentData=new Map;this.segmentStack=[];this.symbols=[];this.globals=new Map;this.currentScope=new Js;this.cheapLocals=new Nn;this.anonymousForward=[];this.anonymousReverse=[];this.relativeForward=[];this.relativeReverse=[];this.rtsRefsForward=[];this.rtsRefsReverse=[];this.chunks=[];this.written=new Wt;this._chunk=void 0;this._name=void 0;this._org=void 0;this._segmentPrefix="";this._exprMap=void 0}get chunk(){return this.ensureChunk(),this._chunk}get exprMap(){return this._exprMap||(this._exprMap=new WeakMap)}get overwriteMode(){return this.opts.overwriteMode||"allow"}ensureChunk(){if(!this._chunk){if(this._chunk={segments:this.segments,data:[]},this._org!=null&&(this._chunk.org=this._org),this._name)this._chunk.name=this._name;else if(this._source){let t=this._source;this._chunk.name=`${t.file}:${t.line}:${t.column}`}this.chunks.push(this._chunk),this._chunk.overwrite=this.overwriteMode}}definedSymbol(t){if(this.globals.get(t)==="import")return!0;let e=this.currentScope,s=!t.includes("::");do{let r=e.resolve(t,{allowForwardRef:!1});if(r)return!!r.expr}while(s&&(e=e.parent));return!1}constantSymbol(t){let e=this.currentScope.resolve(t,{allowForwardRef:!1});return!!(e&&e.expr&&!(e.id<0))}referencedSymbol(t){return this.currentScope.resolve(t,{allowForwardRef:!1})!=null}evaluate(t){if(t=this.resolve(t),t.op==="num"&&!t.meta?.rel)return t.num}pc(){let t=this.chunk.data.length,e={rel:!0,chunk:this.chunks.length-1};return this._chunk?.org!=null&&(e.org=this._chunk.org),ae.evaluate({op:"num",num:t,meta:e})}symbol(t){return ae.evaluate(ae.parseOnly([{token:"ident",str:t}]))}where(){return!this._chunk||this.chunk.org==null?"":`${this.chunk.segments.join(",")}:$${(this.chunk.org+this.chunk.data.length).toString(16)}`}resolve(t){let e=ae.traverse(t,(s,r)=>{for(;s.op==="sym"&&s.sym;)s=this.resolveSymbol(s);return ae.evaluate(r(s))});if(this.opts.refExtractor?.ref&&e!==t){let s=this.exprMap.get(t)||t;this.exprMap.set(e,s)}return t.source&&!e.source&&(e.source=t.source),e}resolveSymbol(t){let e=t.sym,s=Uc(e);if(s.type==="pc")return this.pc();if(s.type==="anon"&&s.num>0){let o=s.num-1,a=this.anonymousForward[o];return a!=null?{op:"sym",num:a}:(this.anonymousForward[o]=a=this.symbols.length,this.symbols.push({id:a}),{op:"sym",num:a})}else if(s.type==="rts"&&s.num>0){let o=s.num-1,a=this.rtsRefsForward[o];return a!=null?{op:"sym",num:a}:(this.rtsRefsForward[o]=a=this.symbols.length,this.symbols.push({id:a}),{op:"sym",num:a})}else if(s.type==="rel"&&s.num>0){let o=this.relativeForward[s.num-1];return o!=null?{op:"sym",num:o}:(this.relativeForward[e.length-1]=o=this.symbols.length,this.symbols.push({id:o}),{op:"sym",num:o})}else if(s.type==="anon"&&s.num<0){let o=this.anonymousReverse.length+s.num;return o<0&&this.fail(`Bad anonymous backref: ${e}`),this.anonymousReverse[o]}else if(s.type==="rts"&&s.num<0){let o=this.rtsRefsReverse.length+s.num;return o<0&&this.fail(`Bad rts backref: ${e}`),this.rtsRefsReverse[o]}else if(s.type==="rel"&&s.num<0){let o=this.relativeReverse[e.length-1];return o==null&&this.fail(`Bad relative backref: ${e}`),o}let n=(e.startsWith("@")?this.cheapLocals:this.currentScope).resolve(e,{allowForwardRef:!0,ref:t});return n.expr?n.expr:(n.id==null&&(n.id=this.symbols.length,this.symbols.push(n)),{op:"sym",num:n.id})}chunkData(t){return{org:this.chunks[t].org}}closeScopes(){this.cheapLocals.clear();function t(e){for(let s of e.children.values())t(s);for(let s of e.anonymousChildren)t(s);for(let[s,r]of e.symbols)if(!(r.expr||r.id==null)&&e.parent){if(r.scoped)throw new Error(`Symbol '${s}' undefined: ${p.nameAt(r.ref)}`);let n=e.parent.symbols.get(s);if(!n)e.parent.symbols.set(s,r);else if(n.id!=null)r.expr={op:"sym",num:n.id};else if(n.expr)r.expr=n.expr;else throw new Error(`Impossible: ${s}`)}}if(this.currentScope.parent)throw new Error("Scope never closed");t(this.currentScope);for(let[e,s]of this.globals){let r=this.currentScope.symbols.get(e);if(s==="export"){if(!r?.expr)throw new Error(`Symbol '${e}' undefined`);r.id==null&&(r.id=this.symbols.length,this.symbols.push(r)),r.export=e}else if(s==="import"){if(!r)continue;if(r.expr)throw new Error(`Already defined: ${e}`);r.expr={op:"im",sym:e}}else ft(s)}for(let[e,s]of this.currentScope.symbols)if(!s.expr)throw new Error(`Symbol '${e}' undefined: ${p.nameAt(s.ref)}`)}module(){this.closeScopes();let t=[];for(let r of this.chunks)t.push({...r,data:Uint8Array.from(r.data)});let e=[];for(let r of this.symbols){if(r.expr==null)throw new Error("Symbol undefined");let n={expr:r.expr};r.export!=null&&(n.export=r.export),e.push(n)}let s=[...this.segmentData.values()];return{chunks:t,symbols:e,segments:s}}line(t){this._source=t[0].source,t.length<3&&p.eq(t[t.length-1],p.COLON)?this.label(t[0]):p.eq(t[1],p.ASSIGN)?this.assign(p.str(t[0]),this.parseExpr(t,2)):p.eq(t[1],p.SET)?this.set(p.str(t[0]),this.parseExpr(t,2)):t[0].token==="cs"?this.directive(t):this.instruction(t)}tokens(t){let e;for(;e=t.next();)this.line(e)}async tokensAsync(t){let e;for(;e=await t.nextAsync();)this.line(e)}directive(t){this.errorToken=t[0];try{switch(p.str(t[0])){case".org":return this.org(this.parseConst(t,1));case".reloc":return this.parseNoArgs(t,1),this.reloc();case".assert":return this.assert(this.parseExpr(t,1));case".segment":return this.segment(...this.parseSegmentList(t,1));case".byte":return this.byte(...this.parseDataList(t,!0));case".res":return this.res(...this.parseResArgs(t));case".word":return this.word(...this.parseDataList(t));case".free":return this.free(this.parseConst(t,1));case".segmentprefix":return this.segmentPrefix(this.parseStr(t,1));case".import":return this.import(...this.parseIdentifierList(t));case".export":return this.export(...this.parseIdentifierList(t));case".scope":return this.scope(this.parseOptionalIdentifier(t));case".endscope":return this.parseNoArgs(t,1),this.endScope();case".proc":return this.proc(this.parseRequiredIdentifier(t));case".endproc":return this.parseNoArgs(t,1),this.endProc();case".pushseg":return this.pushSeg(...this.parseSegmentList(t,1));case".popseg":return this.parseNoArgs(t,1),this.popSeg();case".move":return this.move(...this.parseMoveArgs(t))}this.fail(`Unknown directive: ${p.nameAt(t[0])}`)}finally{this.errorToken=void 0}}label(t){let e,s,r=this.pc();if(typeof t=="string"?e=t:(e=p.str(s=t),t.source&&(r.source=t.source)),e===":"){this.anonymousReverse.push(r);let n=this.anonymousForward.shift();n!=null&&(this.symbols[n].expr=r);return}else if(/^\++$/.test(e)){let n=this.relativeForward[e.length-1];delete this.relativeForward[e.length-1],n!=null&&(this.symbols[n].expr=r);return}else if(/^-+$/.test(e)){this.relativeReverse[e.length-1]=r;return}e.startsWith("@")||(this._name=e,this.cheapLocals.clear(),this.chunk.data.length||(this.chunk.name=e),(this.chunk.labelIndex||(this.chunk.labelIndex=new Map)).set(e,this.chunk.data.length),this.opts.refExtractor?.label&&this.chunk.org!=null&&this.opts.refExtractor.label(e,this.chunk.org+this.chunk.data.length,this.chunk.segments)),this.assignSymbol(e,!1,r,s)}assign(t,e){t.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${t}`),typeof e!="number"&&(e=this.resolve(e)),this.assignSymbol(t,!1,e),this.opts.refExtractor?.assign&&typeof e=="number"&&this.opts.refExtractor.assign(t,e)}set(t,e){t.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${t}`),typeof e!="number"&&(e=this.resolve(e)),this.assignSymbol(t,!0,e)}assignSymbol(t,e,s,r){typeof s=="number"&&(s={op:"num",num:s});let n=t.startsWith("@")?this.cheapLocals:this.currentScope,o=n.resolve(t,{allowForwardRef:!e,ref:r});if(o&&e!==o.id<0)this.fail(`Cannot change mutability of ${t}`,r);else if(e&&s.op!="num")this.fail("Mutable set requires constant",r);else if(o){if(!e&&o.expr){let a=o.expr.source?`
Originally defined${p.at(o.expr)}`:"",l=r?p.nameAt(r):t+(this._source?p.at({source:this._source}):"");throw new Error(`Redefining symbol ${l}${a}`)}}else{if(!e)throw new Error("impossible");n.symbols.set(t,o={id:-1})}o.expr=s}instruction(...t){let e,s,r;if(t.length===1&&Array.isArray(t[0])){let a=t[0];e=p.expectIdentifier(a[0]).toLowerCase(),r=a[0].source,s=this.parseArg(a,1)}else if(typeof t[1]=="string"){e=t[0];let a=new os(t[1]);s=this.parseArg(a.next(),0)}else[e,s]=t,s||(s=["imp"]),e=e.toLowerCase();if(e==="rts"){let a=this.pc();this.rtsRefsReverse.push(a);let l=this.rtsRefsForward.shift();l!=null&&(this.symbols[l].expr=a)}let n=this.cpu.op(e),o=s[0];if(o==="add"||o==="a,x"||o==="a,y"){let a=s[1],l=a.meta?.size||2;if(o==="add"&&l===1&&"zpg"in n)return this.opcode(n.zpg,1,a,r);if(o==="add"&&"abs"in n)return this.opcode(n.abs,2,a,r);if(o==="add"&&"rel"in n)return this.relative(n.rel,1,a,r);if(o==="a,x"&&l===1&&"zpx"in n)return this.opcode(n.zpx,1,a,r);if(o==="a,x"&&"abx"in n)return this.opcode(n.abx,2,a,r);if(o==="a,y"&&l===1&&"zpy"in n)return this.opcode(n.zpy,1,a,r);if(o==="a,y"&&"aby"in n)return this.opcode(n.aby,2,a,r);this.fail(`Bad address mode ${o} for ${e}`)}if(o in n){let a=this.cpu.argLen(o);return o==="rel"?this.relative(n[o],a,s[1]):this.opcode(n[o],a,s[1],r)}this.fail(`Bad address mode ${o} for ${e}`)}parseArg(t,e){if(t.length===e)return["imp"];let s=t[e],r=t[e+1];if(t.length===e+1){if(p.isRegister(s,"a"))return["acc"]}else if(p.eq(s,p.IMMEDIATE))return["imm",this.parseExpr(t,e+1)];if(p.eq(s,p.COLON)&&t.length===e+2&&r.token==="op"&&/^[-+]+$/.test(r.str))return["add",{op:"sym",sym:":"+r.str}];if(t.length===e+1&&s.token==="op"&&/^[-+]+$/.test(s.str))return["add",{op:"sym",sym:s.str}];if(p.eq(s,p.LP)||this.opts.allowBrackets&&p.eq(s,p.LB)){let a=p.findBalanced(t,e);a<0&&this.fail(`Unbalanced ${p.name(s)}`,s);let l=p.parseArgList(t,e+1,a);l.length||this.fail("Bad argument",s);let c=this.parseExpr(l[0],0);if(l.length===1)return p.eq(t[a+1],p.COMMA)&&p.isRegister(t[a+2],"y")?(p.expectEol(t[a+3]),["iny",c]):(p.expectEol(t[a+1]),["ind",c]);if(l.length===2&&l[1].length===1&&p.isRegister(l[1][0],"x"))return["inx",c];this.fail("Bad argument",s)}let n=p.parseArgList(t,e);n.length||this.fail("Bad arg",s);let o=this.parseExpr(n[0],0);if(n.length===1)return["add",o];if(n.length===2&&n[1].length===1){if(p.isRegister(n[1][0],"x"))return["a,x",o];if(p.isRegister(n[1][0],"y"))return["a,y",o]}this.fail("Bad arg",s)}relative(t,e,s,r){let n=this.chunk.data.length+e+1,o={rel:!0,chunk:this.chunks.length-1};this._chunk?.org&&(o.org=this._chunk.org);let l={op:"-",args:[s,{op:"num",num:n,meta:o}]};s.source&&(l.source=s.source),this.opcode(t,e,l,r)}opcode(t,e,s,r){e&&(s=this.resolve(s));let{chunk:n}=this;this.markWritten(1+e),r&&(n.sourceMap||(n.sourceMap=new Map)).set(n.data.length,r),n.data.push(t),e&&this.append(s,e),n.name||(n.name="Code"),this._name=void 0}markWritten(t){if(this._chunk&&this._chunk.org==null)return;let e=this._chunk?this._chunk.org:this._org,s=this._chunk?this._chunk.data.length:0,r=this.orgToOffset(e);r!=null&&this.written.add(r+s,r+s+t)}append(t,e){let{chunk:s}=this;if(this.opts.refExtractor?.ref&&s.org!=null){let n=this._exprMap?.get(t)||t;ae.symbols(n).length>0&&this.opts.refExtractor.ref(n,e,s.org+s.data.length,s.segments)}t=this.resolve(t);let r=t.num;if(t.op!=="num"||t.meta?.rel){let n=s.data.length;(s.subs||(s.subs=[])).push({offset:n,size:e,expr:t}),this.writeNumber(s.data,e)}else this.writeNumber(s.data,e,r)}org(t,e){this._org!=null&&this._chunk!=null&&this._org+this._chunk.data.length===t||(this._org=t,this._chunk=void 0,this._name=e)}reloc(t){this._org=void 0,this._chunk=void 0,this._name=t}segment(...t){this.segments=t.map(e=>typeof e=="string"?e:e.name);for(let e of t)if(typeof e=="object"){let s=this.segmentData.get(e.name)||{name:e.name};this.segmentData.set(e.name,is.merge(s,e))}this._chunk=void 0,this._name=void 0}assert(t){t=this.resolve(t);let e=this.evaluate(t);if(e!=null){if(!e){let s="",r=this.chunk;r.org!=null&&(s=` (PC=$${(r.org+r.data.length).toString(16)})`),this.fail(`Assertion failed${s}`,t)}}else{let{chunk:s}=this;(s.asserts||(s.asserts=[])).push(t)}}byte(...t){let{chunk:e}=this;this.markWritten(t.length);for(let s of t)typeof s=="number"?this.writeNumber(e.data,1,s):typeof s=="string"?Fc(e.data,s):this.append(s,1)}res(t,e){t&&this.byte(...new Array(t).fill(e??0))}word(...t){let{chunk:e}=this;this.markWritten(2*t.length);for(let s of t)typeof s=="number"?this.writeNumber(e.data,2,s):this.append(s,2)}free(t){this._org==null&&this.fail(".free in .reloc mode"),this.markWritten(t);let e=this.segments.length>1?this.segments.filter(n=>{let o=this.segmentData.get(n);return!(!o||o.memory==null||o.size==null||o.memory>this._org||o.memory+o.size<=this._org)}):this.segments;e.length!==1?this.fail(`.free with non-unique segment: ${this.segments}`):t<0&&this.fail(`.free with negative size: ${t}`),this._chunk&&(this._org+=this._chunk.data.length),this._chunk=void 0;let s=e[0],r=this.segmentData.get(s);r||this.segmentData.set(s,r={name:s}),(r.free||(r.free=[])).push([this._org,this._org+t]),this._org+=t}segmentPrefix(t){this._segmentPrefix=t}import(...t){for(let e of t)this.globals.set(e,"import")}export(...t){for(let e of t)this.globals.set(e,"export")}scope(t){this.enterScope(t,"scope")}proc(t){this.label(t),this.enterScope(t,"proc")}enterScope(t,e){let s=t?this.currentScope.children.get(t):void 0;if(s){if(this.opts.reentrantScopes){this.currentScope=s;return}this.fail(`Cannot re-enter scope ${t}`)}let r=new Js(this.currentScope,e);t?this.currentScope.children.set(t,r):this.currentScope.anonymousChildren.push(r),this.currentScope=r}endScope(){this.exitScope("scope")}endProc(){this.exitScope("proc")}exitScope(t){(this.currentScope.kind!==t||!this.currentScope.parent)&&this.fail(`.end${t} without .${t}`),this.currentScope=this.currentScope.parent}pushSeg(...t){this.segmentStack.push([this.segments,this._chunk]),this.segment(...t)}popSeg(){this.segmentStack.length||this.fail(".popseg without .pushseg"),[this.segments,this._chunk]=this.segmentStack.pop(),this._org=this._chunk?.org}move(t,e){this.append({op:".move",args:[e],meta:{size:t}},t)}parseConst(t,e){let s=this.evaluate(this.parseExpr(t,e));if(s!=null)return s;this.fail("Expression is not constant",t[1])}parseNoArgs(t,e){p.expectEol(t[1])}parseExpr(t,e){return ae.parseOnly(t,e)}parseStr(t,e){let s=p.expectString(t[e]);return p.expectEol(t[e+1],"a single string"),s}parseSegmentList(t,e){return t.length<e+1&&this.fail("Expected a segment list",t[e-1]),p.parseArgList(t,1).map(s=>{let r=this._segmentPrefix+p.expectString(s[0]);if(s.length===1)return r;p.eq(s[1],p.COLON)||this.fail(`Expected comma or colon: ${p.name(s[1])}`,s[1]);let n={name:r},o=p.parseAttrList(s,1);for(let[a,l]of o)switch(a){case"bank":n.bank=this.parseConst(l,0);break;case"size":n.size=this.parseConst(l,0);break;case"off":n.offset=this.parseConst(l,0);break;case"mem":n.memory=this.parseConst(l,0);break;default:this.fail(`Unknown segment attr: ${a}`)}return n})}parseResArgs(t){let e=this.parseDataList(t);e.length>2&&this.fail("Expected at most 2 args",e[2]),e.length||this.fail("Expected at least 1 arg");let s=this.evaluate(e[0]);s==null&&this.fail("Expected constant count");let r=e[1]&&this.evaluate(e[1]);return e[1]&&r==null&&this.fail("Expected constant value"),[s,r]}parseDataList(t,e=!1){t.length<2&&this.fail("Expected a data list",t[0]);let s=[];for(let r of p.parseArgList(t,1))e&&r.length===1&&r[0].token==="str"?s.push(r[0].str):r.length<1?this.fail("Missing term"):s.push(this.resolve(this.parseExpr(r,0)));return s}parseIdentifierList(t){t.length<2&&this.fail("Expected identifier(s)",t[0]);let e=[];for(let s of p.parseArgList(t,1))(s.length!==1||s[0].token!=="ident")&&this.fail(`Expected identifier: ${p.name(s[0])}`,s[0]),e.push(p.str(s[0]));return e}parseOptionalIdentifier(t){let e=t[1];if(!e)return;let s=p.expectIdentifier(e);return p.expectEol(t[2]),s}parseRequiredIdentifier(t){let e=p.expectIdentifier(t[1]);return p.expectEol(t[2]),e}parseMoveArgs(t){let e=p.parseArgList(t,1);e.length!==2&&this.fail("Expected constant number, then identifier");let s=this.evaluate(this.parseExpr(e[0],0));s==null&&this.fail("Expected a constant number");let r=this.resolve(this.parseExpr(e[1],0));if(r.op==="num"&&r.meta?.chunk!=null)return[s,r];this.fail("Expected a constant offset",e[1][0])}fail(t,e){throw!e&&this.errorToken&&(e=this.errorToken),e?.source?new Error(t+p.at(e)):!this._source&&this._chunk?.name?new Error(t+`
  in ${this._chunk.name}`):new Error(t+p.at({source:this._source}))}writeNumber(t,e,s){let r=e<<3;if(s!=null&&(s<-1<<r||s>=1<<r)){let n=["byte","word","farword","dword"][e-1];this.fail(`Not a ${n}: $${s.toString(16)}`)}for(let n=0;n<e;n++)t.push(s!=null?s&255:255),s!=null&&(s>>=8)}orgToOffset(t){let e=this.segmentData.get(this.segments.find(s=>{let r=this.segmentData.get(s);return r&&is.includesOrg(r,t)}));return e?.offset!=null?e.offset+(t-e.memory):void 0}isWritten(t){return this.written.has(t)}}});function Do(i,t,e,s,r){let n=[],o=[],a=n;for(let l of r){if(l.token==="ident"){let d=s.get(l.str);if(d){a.push(...d);continue}}else if(p.eq(l,p.DOT_EOL)){o.push(a=[]);continue}let c=l.source&&i[0].source?{...l.source,parent:i[0].source}:l.source||i[0].source;a.push(c?{...l,source:c}:l)}return o=o.filter(l=>l.length),o.length&&e<i.length?"cannot expand .eol without consuming to end of line":(i.splice(t,e-t,...n),o)}var zc,ls,Bn,Ts,Po=z(()=>{gt();zc=!1,ls=class i{constructor(t){this.overloads=t}canOverload(){return this.overloads[this.overloads.length-1].canOverload()}append(t){if(!this.canOverload()){let e=this.overloads[this.overloads.length-1].definition,r=(e?p.at(e):"").replace(/at/,"previously defined at"),n=t.overloads[0].definition,o=n?p.nameAt(n):"";throw new Error(`Non-overloadable: ${o}${r}`)}this.overloads.push(...t.overloads)}expand(t,e){let s=[];for(let r of this.overloads){let n=r.expand(t,e);if(Array.isArray(n))return n;s.push(n)}zc&&console.error(s.join(`
`))}static from(t){if(!p.eq(t[0],p.DEFINE))throw new Error("invalid");if(t[1]?.token!=="ident")throw new Error("invalid");let e=t[2],s;if(!e)s=new Ts([],[],t[1]);else if(e.token==="grp")s=new Ts(e.inner,t.slice(3),t[1]);else if(e.token==="lp"){let r=p.findBalanced(t,2);if(r<0)throw new Error(`Expected close paren ${p.nameAt(t[2])}`);s=new Bn(p.identsFromCList(t.slice(3,r)),t.slice(r+1),t[1])}else s=new Ts([],t.slice(2),t[1]);return new i([s])}};Bn=class{constructor(t,e,s){this.params=t;this.production=e;this.definition=s}expand(t,e){let s=e+1,r=this.params.length?t.length:e,n=r,o=new Map;if(e<t.length&&p.eq(p.LP,t[s])){if(n=p.findBalanced(t,s),n<0)return"missing close paren for enclosed C-style expansion";r=n+1,s++}let a=p.parseArgList(t,s,n);if(a.length>this.params.length)return"too many args";for(s=0;s<this.params.length;s++){let l=a[s]||[],c=l[0];l.length===1&&c.token==="grp"&&(l=c.inner),o.set(this.params[s],l)}return Do(t,e,r,o,this.production)}canOverload(){return!!this.params.length}},Ts=class{constructor(t,e,s){this.pattern=t;this.production=e;this.definition=s}expand(t,e){let s=e+1,r=new Map;for(let n=0;n<this.pattern.length;n++){let o=this.pattern[n];if(o.token==="ident"){let a=this.pattern[n+1];if(!a||a?.token==="ident"){let l=t[s++];if(!l)return`missing undelimited argument ${p.name(o)}`;r.set(o.str,l.token==="grp"?l.inner:[l])}else{let l=p.eq(a,p.DOT_EOL)?t.length:p.find(t,a,s);if(l<0)return`could not find delimiter ${p.name(a)}`;r.set(o.str,t.slice(s,l)),s=l}}else if(p.eq(o,p.DOT_EOL)){if(s<t.length)return"could not match .eol"}else if(!p.eq(t[s++],o))return`could not match: ${p.name(o)}`}return Do(t,e,s,r,this.production)}canOverload(){return!!this.pattern.length}}});var ks,Wo=z(()=>{gt();ks=class i{constructor(t,e){this.params=t;this.production=e}static from(t,e){if(!p.eq(t[0],p.MACRO))throw new Error("invalid");if(t[1]?.token!=="ident")throw new Error("invalid");let s=p.identsFromCList(t.slice(2)),r=[],n;for(;n=e.next();){if(p.eq(n[0],p.ENDMACRO))return new i(s,r);if(p.eq(n[0],p.ENDMAC))return new i(s,r);r.push(n)}throw new Error(`EOF looking for .endmacro: ${p.nameAt(t[1])}`)}expand(t,e){let s=1,r=new Map,n=[];for(let a of this.params){let l=p.findComma(t,s),c=t.slice(s,l);s=l+1,c.length===1&&c[0].token==="grp"&&(c=c[0].inner),r.set(a,c)}if(s<t.length)throw new Error(`Too many macro parameters: ${p.nameAt(t[s])}`);let o=new Map;for(let a of this.production){let l=function(c){let d=[];for(let h of c){if(h.token==="ident"){let f=r.get(h.str);if(f){d.push(...f);continue}let g=o.get(h.str);if(g){d.push({token:"ident",str:g});continue}}else if(h.token==="grp"){d.push({token:"grp",inner:l(h.inner)});continue}let m=h.source&&t[0].source?{...h.source,parent:t[0].source}:h.source||t[0].source;d.push(m?{...h,source:m}:h)}return d};if(p.eq(a[0],p.LOCAL))for(let c of p.identsFromCList(a.slice(1)))o.set(c,`${c}@${e.next()}`);n.push(l(a))}return n}}});function qc(i){let t=Oo.get(i);return t||Oo.set(i,t=(e=>({next:()=>e++}))(0)),t}function St(i,t){let e=Dn(i,t);return ae.identifier(e)}function Dn(i,t){if(!i.length)throw t?new Error(`Expected expression: ${p.nameAt(t)}`):new Error("Expected expression");return ae.parseOnly(i)}function Vc(i){if(i)throw new Error(`garbage at end of line: ${p.nameAt(i)}`)}function Ls(i,t){throw new Error(`${p.name(t)} with no ${i}${p.at(t)}`)}function Hc(i){throw new Error(i)}var Gc,Oo,_s,Fo=z(()=>{Po();Lt();Wo();gt();Gc=100,Oo=new WeakMap;_s=class extends Zr.Abstract{constructor(e,s,r){super();this.stream=e;this.env=s;this.repeats=[];this.runDirectives={".define":e=>this.parseDefine(e),".undefine":e=>this.parseUndefine(e),".else":([e])=>Ls(".if",e),".elseif":([e])=>Ls(".if",e),".endif":([e])=>Ls(".if",e),".endmac":([e])=>Ls(".macro",e),".endmacro":([e])=>Ls(".macro",e),".endrep":e=>this.parseEndRepeat(e),".endrepeat":e=>this.parseEndRepeat(e),".exitmacro":([,e])=>{Vc(e),this.stream.exit()},".if":([e,...s])=>this.parseIf(!!this.evaluateConst(Dn(s,e))),".ifdef":([e,...s])=>this.parseIf(this.macros.has(St(s,e))),".ifndef":([e,...s])=>this.parseIf(!this.macros.has(St(s,e))),".ifblank":([,...e])=>this.parseIf(!e.length),".ifnblank":([,...e])=>this.parseIf(!!e.length),".ifref":([e,...s])=>this.parseIf(this.env.referencedSymbol(St(s,e))),".ifnref":([e,...s])=>this.parseIf(!this.env.referencedSymbol(St(s,e))),".ifsym":([e,...s])=>this.parseIf(this.env.definedSymbol(St(s,e))),".ifnsym":([e,...s])=>this.parseIf(!this.env.definedSymbol(St(s,e))),".ifconst":([e,...s])=>this.parseIf(this.env.constantSymbol(St(s,e))),".ifnconst":([e,...s])=>this.parseIf(!this.env.constantSymbol(St(s,e))),".macro":e=>this.parseMacro(e),".repeat":e=>this.parseRepeat(e)};this.macros=r?r.macros:new Map}*pump(){let e=this.readLine();if(e==null)return void(yield e);for(;e.length;){let s=e[0];switch(s.token){case"ident":if(p.eq(e[1],p.COLON)){yield e.splice(0,2);break}this.tryExpandMacro(e)||(yield e);return;case"cs":this.tryRunDirective(e)||(yield e);return;case"op":if(/^[-+]+$/.test(s.str)){let r=[s],n=e[1];n&&p.eq(n,p.COLON)?(r.push(n),e.splice(0,2)):(r.push({token:"op",str:":"}),e.splice(0,1)),yield r;break}else if(s.str===":"){yield e.splice(0,1);break}default:throw new Error(`Unexpected: ${p.nameAt(e[0])}`)}}}readLine(){let e=this.stream.next();return e==null?e:this.expandLine(e)}expandLine(e,s=0){let r=e[0],n=0,o=0;for(;s<e.length;){if(s>o)o=s,n=0;else if(n++>Gc)throw new Error(`Maximum expansion depth reached: ${e.map(p.name).join(" ")}${p.at(r)}`);s=this.expandToken(e,s)}return e}expandToken(e,s){let r=e[s];if(r.token==="ident"){let n=this.macros.get(r.str);if(n instanceof ls){let o=n.expand(e,s);if(o)return o.length&&this.stream.unshift(...o),s}}else if(r.token==="cs")return this.expandDirective(r.str,e,s);return s+1}tryExpandMacro(e){let[s]=e;if(s.token!=="ident")throw new Error("impossible");let r=this.macros.get(s.str);if(!(r instanceof ks))return!1;let n=r.expand(e,qc(this.env));return this.stream.enter(),this.stream.unshift(...n),!0}expandDirective(e,s,r){switch(e){case".define":case".ifdef":case".ifndef":case".undefine":return this.skipIdentifier(s,r);case".skip":return this.skip(s,r);case".noexpand":return this.noexpand(s,r);case".tcount":return this.parseArgs(s,r,1,this.tcount);case".ident":return this.parseArgs(s,r,1,this.ident);case".string":return this.parseArgs(s,r,1,this.string);case".concat":return this.parseArgs(s,r,0,this.concat);case".sprintf":return this.parseArgs(s,r,0,this.sprintf);case".cond":return this.parseArgs(s,r,0,this.cond);case".def":case".defined":return this.parseArgs(s,r,1,this.defined);case".definedsymbol":return this.parseArgs(s,r,1,this.definedSymbol);case".constantsymbol":return this.parseArgs(s,r,1,this.constantSymbol);case".referencedsymbol":return this.parseArgs(s,r,1,this.referencedSymbol)}return r+1}skip(e,s){e.splice(s,1);let r=e[s];return r?.token==="grp"?this.expandToken(r.inner,0):this.expandToken(e,s+1),s}noexpand(e,s){let r=e[s+1];return r.token==="grp"?(e.splice(s,2,...r.inner),s+=r.inner.length-1):e.splice(s,1),s+1}parseArgs(e,s,r,n){let o=e[s];p.expect(p.LP,e[s+1],o);let a=p.findBalanced(e,s+1),l=p.parseArgList(e,s+2,a).map(d=>(d.length===1&&d[0].token==="grp"&&(d=d[0].inner),this.expandLine(d)));if(r&&l.length!==r)throw new Error(`Expected ${r} parameters: ${p.nameAt(o)}`);let c=n.call(this,o,...l);return e.splice(s,a+1-s,...c),s}tcount(e,s){return[{token:"num",num:p.count(s),source:e.source}]}ident(e,s){let r=p.expectString(s[0],e);return p.expectEol(s[1],"a single token"),[{token:"ident",str:r,source:s[0].source}]}string(e,s){let r=p.expectIdentifier(s[0],e);return p.expectEol(s[1],"a single token"),[{token:"str",str:r,source:s[0].source}]}concat(e,...s){return[{token:"str",str:s.map(n=>{let o=p.expectString(n[0]);return p.expectEol(n[1],"a single string"),o}).join(""),source:e.source}]}sprintf(e,s,...r){let n=p.expectString(s[0],e);p.expectEol(s[1],"a single format string");let[]=[n];throw new Error("unimplemented")}cond(e,...s){throw new Error("unimplemented")}defined(e,s){let r=p.expectIdentifier(s[0],e);return p.expectEol(s[1],"a single identifier"),[{token:"num",num:this.macros.has(r)?1:0}]}isDefined(e){return this.macros.has(e)}definedSymbol(e,s){let r=p.expectIdentifier(s[0],e);return p.expectEol(s[1],"a single identifier"),[{token:"num",num:this.env.definedSymbol(r)?1:0}]}constantSymbol(e,s){let r=p.expectIdentifier(s[0],e);return p.expectEol(s[1],"a single identifier"),[{token:"num",num:this.env.constantSymbol(r)?1:0}]}referencedSymbol(e,s){let r=p.expectIdentifier(s[0],e);return p.expectEol(s[1],"a single identifier"),[{token:"num",num:this.env.referencedSymbol(r)?1:0}]}skipIdentifier(e,s){return e[s+1]?.token==="ident"?s+2:s+1}tryRunDirective(e){let s=e[0];if(s.token!=="cs")throw new Error("impossible");let r=this.runDirectives[s.str];return r?(r(e),!0):!1}evaluateConst(e){if(e=ae.traversePost(e,ae.evaluate),e.op==="num"&&!e.meta?.rel)return e.num;let s=p.at(e);throw new Error(`Expected a constant${s}`)}parseDefine(e){let s=p.expectIdentifier(e[1],e[0]),r=ls.from(e),n=this.macros.get(s);if(n instanceof ls)n.append(r);else{if(n)throw new Error(`Already defined: ${s}`);this.macros.set(s,r)}}parseUndefine(e){let[s,r,n]=e,o=p.expectIdentifier(r,s);if(p.expectEol(n),!this.macros.has(o))throw new Error(`Not defined: ${p.nameAt(r)}`);this.macros.delete(o)}parseMacro(e){let s=p.expectIdentifier(e[1],e[0]),r=ks.from(e,this.stream);if(this.macros.get(s))throw new Error(`Already defined: ${s}`);this.macros.set(s,r)}parseRepeat(e){let[s,r]=ae.parse(e,1),n=e[1]||e[0];if(!s)throw new Error(`Expected expression: ${p.nameAt(n)}`);let o=this.evaluateConst(s);if(o==null)throw new Error(`Expected a constant${p.at(s)}`);let a;if(r<e.length){if(!p.eq(e[r],p.COMMA))throw new Error(`Expected comma: ${p.nameAt(e[r])}`);a=p.expectIdentifier(e[r+1]),p.expectEol(e[r+2])}let l=[],c=1;for(;c>0;)e=this.stream.next()??Hc(".repeat with no .endrep"),p.eq(e[0],p.REPEAT)&&c++,p.eq(e[0],p.ENDREPEAT)&&c--,p.eq(e[0],p.ENDREP)&&c--,l.push(e);this.repeats.push([l,o,-1,a]),this.parseEndRepeat(e)}parseEndRepeat(e){p.expectEol(e[1]);let s=this.repeats.pop();if(!s)throw new Error(`.endrep with no .repeat${p.at(e[0])}`);++s[2]>=s[1]||(this.repeats.push(s),this.stream.unshift(...s[0].map(r=>r.map(n=>{if(n.token!=="ident"||n.str!==s[3])return n;let o={token:"num",num:s[2]};return n.source&&(o.source=n.source),o}))))}parseIf(e){let s=1,r=!1,n=[];for(;s>0;){let o=this.stream.next();if(!o)throw new Error("EOF looking for .endif");let a=o[0];if(p.eq(a,p.ENDIF)){if(s--,!s)break}else if(a.token==="cs"&&a.str.startsWith(".if"))s++;else if(s===1&&!r){if(e&&(p.eq(a,p.ELSE)||p.eq(a,p.ELSEIF))){e=!1,r=!0;continue}else if(p.eq(a,p.ELSEIF)){e=!!this.evaluateConst(Dn(o.slice(1),a));continue}else if(p.eq(a,p.ELSE)){e=!0;continue}}e&&n.push(o)}this.stream.unshift(...n)}}});var Kc,Qs,Uo=z(()=>{Kc=100,Qs=class{constructor(){this.stack=[]}next(){for(;this.stack.length;){let[t,e]=this.stack[this.stack.length-1];if(e.length)return e.pop();let s=t?.next();if(s)return s;this.stack.pop()}}unshift(...t){if(!this.stack.length)throw new Error("Cannot unshift after EOF");let e=this.stack[this.stack.length-1][1];for(let s=t.length-1;s>=0;s--)e.push(t[s])}enter(t){let e=[void 0,[]];if(t&&(e[0]=t),this.stack.push(e),this.stack.length>Kc)throw new Error("Stack overflow")}exit(){this.stack.pop()}}});function Ms(i){throw new Error(i)}function jc(i,t,e){return i={...i},i.expr=er(i.expr,t,e),i}function er(i,t,e){return i={...i},i.meta&&(i.meta={...i.meta}),i.args&&(i.args=i.args.map(s=>er(s,t,e))),i.meta?.chunk!=null&&(i.meta.chunk+=t),i.op==="sym"&&i.num!=null&&(i.num+=e),i}function Yc(i,t,e){return i={...i},i.expr&&(i.expr=er(i.expr,t,e)),i}var $s,Wn,On,Fn,zo,Pn,Zc,Xc,Go=z(()=>{In();Ys();Lt();Tn();Fo();gt();Ln();Uo();Cn();$s=class i{constructor(){this._link=new Fn}static assemble(t){let e=new os(t,"contents.s",{lineContinuations:!0}),s=new as(Dt.P02),r=new Qs;r.enter(e);let n=new _s(r,s);s.tokens(n);let o=new i;o.read(s.module());let a=o.link(),l=new Uint8Array(a.length);return a.apply(l),l}static link(...t){let e=new i;for(let s of t)e.read(s);return e.link()}read(t){return this._link.readFile(t),this}base(t,e=0){return this._link.base(t,e),this}link(){return this._link.link()}report(t=!1){console.log(this._link.report(t))}getChunks(){return this._link.chunks}exports(){return this._exports?this._exports:this._exports=this._link.buildExports()}watch(...t){this._link.watches.push(...t)}};Wn=class{constructor(t){let e=this.name=t.name;this.bank=t.bank??0,this.addressing=t.addressing??2,this.size=t.size??Ms(`Size must be specified: ${e}`),this.offset=t.offset??Ms(`Offset must be specified: ${e}`),this.memory=t.memory??Ms(`Offset must be specified: ${e}`)}get delta(){return this.offset-this.memory}},On=class{constructor(t,e,s,r,n){this.linker=t;this.index=e;this.subs=new Set;this.selfSubs=new Set;this.deps=new Set;this.imports=new Set;this.follow=new Map;this.overlaps=!1;this.name=s.name,this.size=s.data.length,this.segments=s.segments,this.labelIndex=s.labelIndex&&new Map(s.labelIndex),this.sourceMap=s.sourceMap&&new Map(s.sourceMap),this._data=s.data;for(let o of s.subs||[])this.subs.add(jc(o,r,n));this.asserts=(s.asserts||[]).map(o=>er(o,r,n)),s.org&&(this._org=s.org),this._overwrite=s.overwrite||"allow"}get org(){return this._org}get offset(){return this._offset}get segment(){return this._segment}get data(){return this._data??Ms("no data")}initialPlacement(){if(this._org==null)return;let t=[];for(let s of this.segments){let r=this.linker.segments.get(s);if(!r)throw new Error(`Unknown segment: ${s}`);this._org>=r.memory&&this._org<r.memory+r.size&&t.push(r)}if(t.length!==1)throw new Error(`Non-unique segment for ${this.name}:
Segments: ${this.segments.join(",")}, org: $${this.org?.toString(16)}, offset: $${this.offset?.toString(16)}
Eligible: [${t}]`);let e=t[0];if(this._org>=e.memory+e.size)throw new Error(`Chunk does not fit in segment ${e.name}`);this.place(this._org,e,this._overwrite)}place(t,e,s){this._org=t,this._segment=e;let r=this._offset=t+e.delta;for(let a of this.linker.watches)if(a>=r&&a<r+this.size)debugger;Rn(this.linker.placed,a=>a[0],[r,this]);let n=this.linker.data,o=this._data??Ms("No data");if(this._data=void 0,this.subs.size){n.splice(r,o.length);let a=new Pt;a.set(0,o);for(let l of this.subs)a.splice(l.offset,l.size);for(let[l,c]of a.chunks())n.set(r+l,...c)}else n.set(r,o);if(s&&o.length){let a=!1,[l]=this.linker.written.tail(r);l?.[0]<=r&&l[1]>=r+o.length?a=!0:l?.[0]<r+o.length&&(a=null);let c="";if(s==="require"&&a!==!0?c=`required to overwrite ${o.length} bytes but did not.`:s==="forbid"&&a!==!1&&(c=`forbidden to overwrite ${o.length} but did anyway.`),c){if(c=`Chunk at ${e.name}:$${t.toString(16).padStart(4,"0")} (offset $${r.toString(16).padStart(5,"0")} was ${c}`,!Zc)throw new Error(c);Xc||console.error(c)}this.linker.written.add(r,r+o.length)}for(let[a,l]of this.follow)l.resolveSub(a,!1);this.linker.free.delete(this.offset,this.offset+this.size)}resolveSubs(t=!1){for(let e of this.selfSubs)this.resolveSub(e,t);for(let e of this.subs)this.resolveSub(e,t)}addDep(t,e){e===this.index&&this.subs.delete(t)&&this.selfSubs.add(t),this.linker.chunks[e].follow.set(t,this),this.deps.add(e)}resolveSub(t,e){if(!this.subs.has(t)&&!this.selfSubs.has(t))return;t.expr=ae.traverse(t.expr,(r,n,o)=>e&&o?.op==="^"&&o.args.length===1&&r.meta?(r.meta.bank==null&&this.addDep(t,r.meta.chunk),r):(r=this.linker.resolveLink(ae.evaluate(n(r))),e&&r.meta?.rel&&this.addDep(t,r.meta.chunk),r));let s=!1;if(t.expr.op==="num"&&!t.expr.meta?.rel){try{this.writeValue(t.offset,t.expr.num,t.size)}catch(r){throw t.expr.source?new Error(r.message+p.at(t.expr)):r}s=!0}else if(t.expr.op===".move"){if(t.expr.args.length!==1)throw new Error("bad .move");let r=t.expr.args[0];if(r.op==="num"&&r.meta?.offset!=null){let n=r.meta.offset-(r.meta.rel?0:r.meta.org),o=r.num+n,a=this.linker.orig.slice(o,o+t.size);this.writeBytes(t.offset,Uint8Array.from(a)),s=!0}}s&&(this.subs.delete(t)||this.selfSubs.delete(t),this.subs.size||this.linker.unresolvedChunks.delete(this)&&this.linker.insertResolved(this))}writeBytes(t,e){if(this._data)this._data.subarray(t,t+e.length).set(e);else if(this._offset!=null)this.linker.data.set(this._offset+t,e);else throw new Error("Impossible")}writeValue(t,e,s){let r=s<<3;if(e!=null&&(e<-1<<r||e>=1<<r)){let o=["byte","word","farword","dword"][s-1];throw new Error(`Not a ${o}: $${e.toString(16)} at $${(this.org+t).toString(16)} (in ${this.name})`)}let n=new Uint8Array(s);for(let o=0;o<s;o++)n[o]=e&255,e>>=8;this.writeBytes(t,n)}};Fn=class{constructor(){this.data=new Pt;this.orig=new Pt;this.exports=new Map;this.chunks=[];this.symbols=[];this.written=new Wt;this.free=new Wt;this.rawSegments=new Map;this.segments=new Map;this.resolvedChunks=[];this.unresolvedChunks=new Set;this.watches=[];this.placed=[];this.initialReport=""}insertResolved(t){Rn(this.resolvedChunks,e=>e.size,t)}base(t,e=0){this.data.set(e,t),this.orig.set(e,t)}readFile(t){let e=this.chunks.length,s=this.symbols.length;for(let r of t.segments||[])this.addRawSegment(r);for(let r of t.chunks||[]){let n=new On(this,this.chunks.length,r,e,s);this.chunks.push(n)}for(let r of t.symbols||[])this.symbols.push(Yc(r,e,s))}resolveLink(t){if(t.op===".orig"&&t.args?.length===1){let e=t.args[0],s=e.meta?.offset;if(s!=null){let r=this.orig.get(s+e.num);if(r!=null)return{op:"num",num:r}}}else if(t.op==="num"&&t.meta?.chunk!=null){let e=t.meta,s=this.chunks[e.chunk];if(s.org!==e.org||s.segment?.bank!==e.bank||s.offset!==e.offset){let r={org:s.org,offset:s.offset,bank:s.segment?.bank};t=ae.evaluate({...t,meta:{...e,...r}})}}return t}resolveExpr(t){if(t=ae.traverse(t,(s,r)=>this.resolveLink(ae.evaluate(r(s)))),t.op==="num"&&!t.meta?.rel)return t.num;let e=p.at(t);throw new Error(`Unable to fully resolve expr${e}`)}link(){for(let[r,n]of this.rawSegments){let o=n[0];for(let a=1;a<n.length;a++)o=is.merge(o,n[a]);this.segments.set(r,new Wn(o))}for(let[r,n]of this.rawSegments){let o=this.segments.get(r);for(let a of n){let l=a.free;for(let[c,d]of l||[])zo.has(r)&&console.log(`Free(${r}): ${(c+o.delta).toString(16)}..${(d+o.delta).toString(16)} (${d-c} bytes)`),this.free.add(c+o.delta,d+o.delta),this.data.splice(c+o.delta,d-c)}}for(let r of this.chunks)r.initialPlacement();Pn&&(this.initialReport=`Initial:
${this.report(!0)}`);for(let r=0;r<this.symbols.length;r++){let n=this.symbols[r];if(!n.expr)throw new Error(`Symbol ${r} never resolved`);n.export!=null&&this.exports.set(n.export,r)}for(let r of this.symbols)r.expr=this.resolveSymbols(r.expr);for(let r of this.chunks){for(let n of[...r.subs,...r.selfSubs])n.expr=this.resolveSymbols(n.expr);for(let n=0;n<r.asserts.length;n++)r.asserts[n]=this.resolveSymbols(r.asserts[n])}for(let r of this.chunks)r.resolveSubs(!0);let t=[...this.chunks];t.sort((r,n)=>r.segments.length-n.segments.length||n.size-r.size);for(let r of t)r.resolveSubs(),r.subs.size?this.unresolvedChunks.add(r):this.insertResolved(r);let e=this.resolvedChunks.length+2*this.unresolvedChunks.size;for(;e;){let r=this.resolvedChunks.pop();if(r)this.placeChunk(r);else{let[o]=this.unresolvedChunks;for(let a of o.deps){let l=this.chunks[a];l.org==null&&this.placeChunk(l)}}let n=this.resolvedChunks.length+2*this.unresolvedChunks.size;if(n===e)throw console.error(this.resolvedChunks,this.unresolvedChunks),new Error("Not making progress");e=n}let s=new Pt;for(let r of this.chunks){for(let n of r.asserts){if(this.resolveExpr(n))continue;let a=p.at(n);throw new Error(`Assertion failed${a}`)}r.overlaps||s.set(r.offset,...this.data.slice(r.offset,r.offset+r.size))}return Pn&&console.log(this.report(!0)),s}placeChunk(t){if(t.org!=null)return;let e=t.size;if(!t.subs.size&&!t.selfSubs.size){let r=this.data.pattern(t.data);for(let n of t.segments){let o=this.segments.get(n),a=o.offset,l=a+o.size,c=r.search(a,l);if(!(c<0)){t.place(c-o.delta,o),t.overlaps=!0;return}}}for(let r of t.segments){let n=this.segments.get(r),o=n.offset,a=o+n.size,l,c=1/0;for(let[d,h]of this.free.tail(o)){if(d>=a)break;let m=Math.min(h,a)-d;m<e||m<c&&(l=d,c=m)}if(l!=null){zo.has(n.name)&&console.log(`Placement(${t.segments.map(d=>d).join(",")} => ${n.name}): ${t.name||"unnamed"} (${t.data.length} bytes) at ${(l-n.delta).toString(16)}`),t.place(l-n.delta,n);return}}Pn&&console.log(`Initial:
${this.initialReport}`),console.log(`After filling:
${this.report(!0)}`);let s=t.name?`${t.name} `:"";throw console.log(this.segments.get(t.segments[0])),new Error(`Could not find space for ${e}-byte chunk ${s}in ${t.segments.join(", ")}`)}resolveSymbols(t){return ae.traverse(t,(e,s)=>{for(;e.op==="im"||e.op==="sym";)if(e.op==="im"){let r=e.sym,n=this.exports.get(r);if(n==null){let o=p.at(t);throw new Error(`Symbol never exported ${r}${o}`)}e=this.symbols[n].expr}else{if(e.num==null)throw new Error("Symbol not global");e=this.symbols[e.num].expr}return ae.evaluate(s(e))})}addRawSegment(t){let e=this.rawSegments.get(t.name);e||this.rawSegments.set(t.name,e=[]),e.push(t)}buildExports(){let t=new Map;for(let e of this.symbols){if(!e.export)continue;let s=ae.traverse(e.expr,(o,a)=>this.resolveLink(ae.evaluate(a(o))));if(s.op!=="num")throw new Error(`never resolved: ${e.export}`);let r=s.num,n={value:r};s.meta?.offset!=null&&s.meta.org!=null&&(n.offset=s.meta.offset+r-s.meta.org),s.meta?.bank!=null&&(n.bank=s.meta.bank),t.set(e.export,n)}return t}report(t=!1){let e="";for(let[s,r]of this.free)e+=`Free: ${s.toString(16)}..${r.toString(16)}: ${r-s} bytes
`;if(t)for(let[s,r]of this.placed){let n=r.name??`Chunk ${r.index}`,o=r.offset+r.size;e+=`${s.toString(16).padStart(5,"0")} .. ${o.toString(16).padStart(5,"0")}: ${n} (${o-s} bytes)
`}return e}},zo=new Set(["1a","1b","fe","ff"]),Pn=!1,Zc=!1,Xc=!1});var Ot,ee,Ue,ve=z(()=>{$();Ot=class{constructor(t){this.rom=t}},ee=class extends Ot{constructor(e,s){super(e);this.id=s}write(){return[]}toString(){return`${this.constructor.name} $${C(this.id)}`}},Ue=class extends Array{static get[Symbol.species](){return Array}}});var tr,qo=z(()=>{ve();$();tr=class extends ee{constructor(t,e){super(t,e),this.data=X(t.prg,this.base,4)}get base(){return(this.id<<2)+171008}get slotRangeLower(){return this.data[0]}set slotRangeLower(t){this.data[0]=t}get slotRangeUpper(){return this.data[1]}set slotRangeUpper(t){this.data[1]=t}get objectId(){return this.data[2]}set objectId(t){this.data[2]=t}get count(){return this.data[3]}set count(t){this.data[3]=t}write(){let t=this.rom.assembler();return t.segment("14"),t.org(39936+(this.id<<2)),t.byte(...this.data),[t.module()]}}});var Jc,sr,Un,Vo=z(()=>{ve();$();({$0f:Jc}=me),sr=class{constructor(t){this.rom=t;this.bossKills=[];for(let e=0;e<14;e++)this.bossKills.push(new Un(t,e))}get kensuLighthouse(){return this.bossKills[3]}[Symbol.iterator](){return this.bossKills[Symbol.iterator]()}write(){let t=this.rom.assembler();de(t,Jc,47495,47768);for(let e of this)e.fixFromLocation(),e.assemble(t);return[t.module()]}},Un=class extends ee{constructor(t,e){super(t,e),this.base=le(t.prg,this.pointer),this.data=t.prg.slice(this.base+81920,this.base+81941),this.base2=47041+5*this.id,this.data2=t.prg.slice(this.base2+81920,this.base2+81925),this.location=t.prg[129373+this.id],this.palettes=this.data.subarray(5,13),this.patterns=this.data.subarray(13,19)}get pointer(){return 129387+2*this.id}get routine(){let t=le(this.data,0);return t&&t+81920}set routine(t){vo(this.data,0,t?t-81920:0)}get restoreMusic(){return this.data[3]}set restoreMusic(t){this.data[3]=t}get itemDrop(){return this.data[4]}set itemDrop(t){this.data[4]=t}get restoreAnimation(){return this.data[19]}set restoreAnimation(t){this.data[19]=t}get explode(){return!!this.data[20]}set explode(t){this.data[20]=t?1:0}fixFromLocation(){let t=this.rom.locations[this.location];!t||t.id===95||(this.restoreMusic=t.id===166?0:t.bgm,this.palettes.subarray(0,3).set(t.tilePalettes),this.palettes[6]=t.spritePalettes[0],this.restoreAnimation=t.animation,this.data2[0]=t.spritePalettes[1],this.data2[2]=0)}assemble(t){if(t.segment("0f"),this.base){let e=`BossKill_${this.id}`;t.reloc(e);let s=t.pc();t.byte(...this.data),t.org(this.pointer-81920,`${e}_Ptr`),t.word(s)}t.org(this.base2,`BossChest_${this.id}`),t.byte(...this.data2),t.org(47453+this.id,`BossKillLocation_${this.id}`),t.byte(this.location)}}});function ph(){if(_c)throw new Error("impossible")}function Ho(i){throw new Error(i)}var _c,Ko=z(()=>{_c=!0});var rr,st,Ce,jo=z(()=>{Ko();$();rr=class{constructor(t){this.rom=t;this.Vampire1=new Ce(this,{flag:this.rom.flags.Vampire1,kill:0,npc:this.rom.npcs.Vampire1,shuffled:!0,sword:1});this.Insect=new Ce(this,{flag:this.rom.flags.GiantInsect,kill:1,npc:this.rom.npcs.Insect,sword:1});this.Kelbesque1=new Ce(this,{flag:this.rom.flags.Kelbesque1,kill:2,npc:this.rom.npcs.Kelbesque1,shuffled:!0});this.Rage=new Ce(this,{flag:this.rom.flags.Rage,kill:3,npc:this.rom.npcs.Rage});this.Sabera1=new Ce(this,{address:222574,flag:this.rom.flags.Sabera1,kill:4,npc:this.rom.npcs.SaberaDisguisedAsMesia,shuffled:!0});this.Vampire2=new Ce(this,{flag:this.rom.flags.Vampire2,kill:12,npc:this.rom.npcs.Vampire2,shuffled:!0,sword:1});this.Mado1=new Ce(this,{address:514080,flag:this.rom.flags.Mado1,kill:5,shuffled:!0});this.Kelbesque2=new Ce(this,{flag:this.rom.flags.Kelbesque2,kill:6,npc:this.rom.npcs.Kelbesque2,shuffled:!0});this.Sabera2=new Ce(this,{flag:this.rom.flags.Sabera2,kill:7,npc:this.rom.npcs.Sabera2,shuffled:!0});this.Mado2=new Ce(this,{flag:this.rom.flags.Mado2,kill:8,npc:this.rom.npcs.Mado2,shuffled:!0});this.Karmine=new Ce(this,{flag:this.rom.flags.Karmine,kill:9,npc:this.rom.npcs.Karmine,shuffled:!0,sword:2});this.Draygon1=new Ce(this,{flag:this.rom.flags.Draygon1,kill:10,npc:this.rom.npcs.Draygon,shuffled:!0,sword:2});this.StatueOfMoon=new Ce(this,{flag:this.rom.flags.UsedBowOfMoon,npc:this.rom.npcs.StatueOfMoon});this.StatueOfSun=new Ce(this,{flag:this.rom.flags.UsedBowOfSun,npc:this.rom.npcs.StatueOfSun});this.Draygon2=new Ce(this,{flag:this.rom.flags.Draygon2,kill:11,npc:this.rom.npcs.Draygon});this.Dyna=new Ce(this,{kill:13,object:164});this.musics=[new st("bossMusic_vampire",[this.Vampire1,this.Vampire2]),new st("bossMusic_insect",[this.Insect]),new st("bossMusic_kelbesque",[this.Kelbesque1,this.Kelbesque2]),new st("bossMusic_sabera",[this.Sabera1,this.Sabera2]),new st("bossMusic_mado",[this.Mado1,this.Mado2]),new st("bossMusic_karmine",[this.Karmine]),new st("bossMusic_draygon1",[this.Draygon1]),new st("bossMusic_draygon2",[this.Draygon2]),new st("bossMusic_dyna",[this.Dyna])];this.all=[];for(let e in this){if(!this.hasOwnProperty(e))continue;let s=this[e];s instanceof Ce&&(s.name=mt(e),this.all.push(s))}}isBossFlag(t){return(this.flags||(this.flags=(()=>{let s=new Set;for(let r of this.all)r.flag!=null&&s.add(r.flag.id);return s})())).has(t)}fromLocation(t){return this.all.find(e=>e.location===t)}fromBossKill(t){return this.all.find(e=>e.kill===t)}fromObject(t){return this.all.find(e=>e.object===t)}[Symbol.iterator](){return this.all[Symbol.iterator]()}write(){let t=this.rom.assembler();for(let e of this.musics)Fe(t,e.symbol,e.bgm);return[t.module()]}},st=class{constructor(t,e){this.symbol=t;this.bosses=e;let s=e[0].bosses.rom;this.bgm=Ie(t,s.prg)}},Ce=class{constructor(t,{flag:e,npc:s,kill:r,shuffled:n,address:o,sword:a=3,object:l}){this.bosses=t;let{prg:c}=t.rom;if(this.flag=e,this.npc=s,this.object=o?c[o]:s?s.data[1]:l??Ho("address, npc, or object is required"),this.swordLevel=a,this.shuffled=!!n,this.kill=r,r!=null){let d=81920+le(c,129387+2*r),h=c[d+4];h!==255&&(this.drop=h),this.location=c[129373+r]}}}});var Qc,nr,$c,Yo=z(()=>{$();({$1a:Qc}=me),nr=class{constructor(t){this.rom=t;let e=Ie("CoinAmounts",t.prg,Qc);this.values=Array.from({length:$c},(s,r)=>le(t.prg,e+2*r))}write(){let t=this.rom.assembler();return Ee(t,"CoinAmounts",["3c","fe","ff"]),t.word(...this.values),t.export("CoinAmounts"),[t.module()]}},$c=16});function R(i){return typeof i=="number"&&(i=(t=>()=>t)(i)),{obsolete:i,[Ut]:!0}}function be(i,t=or){return{id:i,fixed:!0,[Ut]:!0,logic:t}}function b(i){return be(i,pe)}function ue(i,t=or){return{id:i,[Ut]:!0,logic:t}}function re(i,t=or){return{name:i,[Ut]:!0,logic:t}}function qe(i,t=or){return{name:i,[Ut]:!0,logic:t}}function Me(i){let t=Xo.get(i)||1024;return Xo.set(i,t+1),{id:t,[Ut]:!0,logic:pe}}function t0(i){return"Flag "+pn(i)}function Jo(i,t){return new Ft(i,"Wall "+C(t&255),t,{fixed:!0})}var e0,Ut,zn,Zo,pe,or,Ft,Xo,ir,_o=z(()=>{$();e0=!1,Ut=Symbol(),zn={assumeFalse:!0},Zo={assumeTrue:!0},pe={track:!0},or={},Ft=class{constructor(t,e,s,r){this.flags=t;this.name=e;this.id=s;this.fixed=r.fixed||!1,this.obsolete=r.obsolete,this.logic=r.logic??pe}unsafeRename(t){this.name=t}get c(){return this.id}get r(){return[[this.id]]}get debug(){return this.id.toString(16).padStart(3,"0")+" "+this.name}get item(){if(this.id<256||this.id>383)throw new Error(`not a slot: ${this.id}`);let t=this.flags.rom.slots[this.id&255],e=this.flags.rom.itemGets[t].itemId,s=this.flags.rom.items[e];if(!s)throw new Error("no item");return s}};Xo=new WeakMap,ir=class{constructor(t){this.rom=t;this[0]=be(0,zn);this[1]=be(1);this[2]=be(2);this[3]=be(3);this[4]=be(4);this[5]=be(5);this[6]=be(6);this[7]=be(7);this[8]=be(8);this[9]=be(9);this.UsedWindmillKey=be(10,pe);this[11]=R(256);this[12]=qe("Leaf villager");this.LeafVillagersRescued=ue(13);this[14]=R(t=>t.trigger?.id===133?323:579);this.WokeWindmillGuard=ue(15,pe);this.TurnedInKirisaPlant=ue(16);this[17]=re("Welcomed to Amazones");this[18]=re("Treasure hunter dead");this[19]=R(312);this[22]=re("Portoa queen Rage hint");this[23]=R(258);this.EnteredUndergroundChannel=ue(24,pe);this[25]=qe("Portoa queen tired of talking");this[26]=re("Initial talk with Portoa queen");this.MesiaRecording=ue(27,pe);this[28]=R(272);this.TalkedToFortuneTeller=ue(29,pe);this.QueenRevealed=ue(30,pe);this[31]=R(265);this.QueenNotInThroneRoom=ue(32,pe);this.ReturnedFogLamp=ue(33,pe);this[34]=re("Sahara elder");this[35]=re("Sahara elder daughter");this[36]=R(317);this[37]=R(310);this[38]=R(765);this.ShyronMassacre=be(39,pe);this.ChangeWoman=be(40);this.ChangeAkahana=be(41);this.ChangeSoldier=be(42);this.ChangeStom=be(43);this[45]=re("Shyron sages");this[46]=R(301);this.UsedBowOfTruth=be(47);this[49]=re("Zombie town");this[50]=R(311);this[52]=re("Akahana in waterfall cave");this.CuredAkahana=ue(53,pe);this[54]=re("Akahana Shyron");this[55]=R(322);this.LeafAbduction=ue(56,pe);this[57]=R(321);this.TalkedToZebuInCave=ue(58,pe);this.TalkedToZebuInShyron=ue(59,pe);this[60]=R(315);this[61]=re("Asina in Shyron temple");this.FoundKensuInDanceHall=ue(62,pe);this[63]=R(t=>t.trigger?.id===186?580:324);this[64]=re("Tornel in Shyron temple");this[65]=R(263);this[68]=R(263);this.RescuedChild=be(69,pe);this.UsedInsectFlute=be(70);this.RescuedLeafElder=ue(71);this[72]=re("Treasure hunter embarked");this[73]=R(257);this[74]=re("Boat owner");this[75]=qe("Shyron sick men");this[76]=qe("Shyron training men 1");this[77]=qe("Shyron training men 2");this[78]=R(262);this[79]=R(299);this.GivenStatueToAkahana=ue(80);this[81]=R(326);this.TalkedToDwarfMother=ue(82,pe);this.LeadingChild=be(83,pe);this[85]=re("Zebu rescued");this[86]=re("Tornel rescued");this[87]=re("Asina rescued");this.MtSabreGuardsDespawned=ue(91,Zo);this[94]=R(653);this[95]=R(515);this.TalkedToStomInSwan=ue(97,pe);this[98]=R(337);this[99]=R(327);this.CuredKensu=ue(101,pe);this[103]=R(267);this[104]=R(260);this.StonedPeopleCured=ue(106,pe);this[108]=R(284);this.CurrentlyRidingDolphin=be(-111,pe);this.ParalyzedKensuInTavern=be(112);this.ParalyzedKensuInDanceHall=be(113);this.FoundKensuInTavern=ue(114,pe);this[115]=re("Startled man in Leaf");this[117]=R(313);this[118]=re("Kensu in Goa");this[119]=R(264);this[120]=R(268);this[121]=R(320);this[122]=R(266);this[123]=R(265);this[125]=R(319);this[126]=re("Mt Sabre guards 1");this[127]=re("Mt Sabre guards 2");this.AlarmFluteUsedOnce=be(118);this.FluteOfLimeUsedOnce=be(119);this[130]=R(320);this[131]=re("Rescued Leaf elder");this.LeafVillagersCurrentlyAbducted=ue(132);this.LeafElderCurrentlyAbducted=ue(133);this[135]=R(261);this[136]=R(306);this[137]=re("Dead Stom's girlfriend");this[138]=re("Dead Stom");this[139]=R(566);this[141]=R(311);this[143]=R(643);this[144]=re("Stoned people gone");this[146]=R(296);this[150]=qe("Leaf elder daughter");this[151]=qe("Leaf villager");this[152]=re("Nadare villager");this.AbleToRideDolphin=ue(155,pe);this.PortoaQueenGoingAway=ue(156);this[160]=R(295);this[163]=qe("Portoa queen/fortune teller");this.WokeKensuInLighthouse=ue(164,pe);this[165]=R(305);this[166]=re("Oak elder 1",zn);this[167]=qe("Swan dancer");this[168]=re("Oak elder 2",zn);this.TalkedToLeafRabbit=ue(169,pe);this[170]=R(285);this[171]=R(336);this[173]=R(338);this[174]=R(339);this[175]=R(340);this[176]=R(341);this[177]=R(342);this[178]=R(343);this[179]=R(344);this[180]=R(345);this[181]=R(346);this[182]=R(287);this[183]=R(348);this[184]=R(349);this[185]=R(286);this[186]=R(350);this[187]=R(351);this[188]=R(352);this[189]=R(288);this[190]=R(289);this[191]=R(354);this[192]=R(355);this[193]=R(356);this[194]=R(290);this[195]=R(357);this[196]=R(358);this[197]=R(363);this[198]=R(364);this[199]=R(291);this[200]=R(292);this[201]=R(362);this[202]=R(317);this[203]=R(298);this[204]=R(284);this[205]=R(276);this[206]=R(293);this[207]=R(307);this[208]=R(296);this[209]=R(309);this[210]=R(361);this[211]=R(294);this[212]=R(347);this[213]=qe("Portoa queen 1");this[214]=qe("Portoa queen 2");this[215]=qe("Portoa queen 3");this[216]=re("Kensu rescued");this[217]=qe("Stoned pair");this[218]=re("Kensu gone from tavern");this[219]=qe("In Sabera's trap");this[220]=R(367);this[221]=R(368);this[222]=R(300);this[223]=R(283);this[224]=re("Dead Akahana");this[228]=R(316);this[229]=R(366);this[230]=R(365);this[231]=R(303);this[232]=re("Dead Shyron villager");this[233]=re("Dead Shyron guard");this[234]=re("Tower message 1");this[235]=re("Tower message 2");this[236]=re("Tower message 3");this[237]=re("Mesia");this.TalkedToZebuStudent=ue(238,pe);this[256]=R(302);this[257]=R(263);this[258]=R(264);this[259]=R(265);this[261]=R(294);this[262]=R(291);this[263]=R(274);this[264]=R(317);this.UsedBowOfMoon=ue(265);this.UsedBowOfSun=ue(266);this[267]=R(284);this[268]=R(353);this.LeafElder=b(-257);this.OakElder=b(-258);this.WaterfallCaveSwordOfWaterChest=b(-259);this.StxyLeftUpperSwordOfThunderChest=b(-260);this.MesiaInTower=b(260);this.SealedCaveBallOfWindChest=b(-262);this.MtSabreWestTornadoBraceletChest=b(-263);this.GiantInsect=b(-264);this.Kelbesque1=b(-265);this.Rage=b(-266);this.AryllisBasementChest=b(-267);this.Mado1=b(-268);this.StormBraceletChest=b(-269);this.WaterfallCaveRiverLeftChest=b(272);this.Mado2=b(274);this.StxyRightMiddleChest=b(276);this.BattleArmorChest=b(283);this.Draygon1=b(284);this.SealedCaveSmallRoomBackChest=b(285);this.SealedCaveBigRoomNortheastChest=b(286);this.FogLampCaveFrontChest=b(287);this.MtHydraRightChest=b(288);this.SaberaUpstairsLeftChest=b(289);this.EvilSpiritIslandLowerChest=b(290);this.Sabera2=b(291);this.SealedCaveSmallRoomFrontChest=b(292);this.CordelGrass=b(293);this.Kelbesque2=b(294);this.OakMother=b(295);this.PortoaQueen=b(296);this.AkahanaStatueOfOnyxTradein=b(297);this.OasisCaveFortressBasementChest=b(298);this.Brokahana=b(299);this.EvilSpiritIslandRiverLeftChest=b(300);this.Deo=b(301);this.Vampire1=b(302);this.OasisCaveNorthwestChest=b(303);this.AkahanaFluteOfLimeTradein=b(304);this.ZebuStudent=b(305);this.WindmillGuardAlarmFluteTradein=b(306);this.MtSabreNorthBackOfPrisonChest=b(307);this.ZebuInShyron=b(308);this.FogLampCaveBackChest=b(309);this.InjuredDolphin=b(310);this.Clark=b(311);this.Sabera1=b(312);this.KensuInLighthouse=b(313);this.RepairedStatue=b(314);this.UndergroundChannelUnderwaterChest=b(315);this.KirisaMeadow=b(316);this.Karmine=b(317);this.Aryllis=b(318);this.MtHydraSummitChest=b(319);this.AztecaInPyramid=b(320);this.ZebuAtWindmill=b(321);this.MtSabreNorthSummit=b(322);this.StomFightReward=b(323);this.MtSabreWestTornel=b(324);this.AsinaInBackRoom=b(325);this.BehindWhirlpool=b(326);this.KensuInSwan=b(327);this.SlimedKensu=b(328);this.MezameShrineLeftChest=b(329);this.SealedCaveBigRoomSouthwestChest=b(336);this.MtSabreWestRightChest=b(338);this.MtSabreNorthMiddleChest=b(339);this.FortressMadoHellwayChest=b(340);this.SaberaUpstairsRightChest=b(341);this.MtHydraFarLeftChest=b(342);this.StxyLeftLowerChest=b(343);this.KarmineBasementLowerMiddleChest=b(344);this.EastCaveNortheastChest=b(345);this.OasisCaveEntranceAcrossRiverChest=b(346);this.EvilSpiritIslandExitChest=b(348);this.FortressSaberaMiddleChest=b(349);this.MtSabreNorthUnderBridgeChest=b(350);this.KirisaPlantCaveChest=b(351);this.FortressMadoUpperNorthChest=b(352);this.Vampire2=b(353);this.FortressSaberaNorthwestChest=b(354);this.FortressMadoLowerCenterNorthChest=b(355);this.OasisCaveNearEntranceChest=b(356);this.MtHydraLeftRightChest=b(357);this.FortressSaberaSoutheastChest=b(358);this.KensuInCabin=b(359);this.MtSabreWestNearTornelChest=b(361);this.MtSabreWestLeftChest=b(362);this.FortressMadoUpperBehindWallChest=b(363);this.PyramidChest=b(364);this.CryptRightChest=b(365);this.KarmineBasementLowerLeftChest=b(366);this.FortressMadoLowerSoutheastChest=b(367);this.FogLampCaveMiddleNorthMimic=b(368);this.FogLampCaveMiddleSouthwestMimic=b(369);this.WaterfallCaveFrontMimic=b(370);this.EvilSpiritIslandRiverRightMimic=b(371);this.MtHydraFinalCaveMimic=b(372);this.StxyLeftNorthMimic=b(373);this.StxyRightNorthMimic=b(374);this.StxyRightSouthMimic=b(375);this.CryptLeftPitMimic=b(376);this.KarmineBasementUpperMiddleMimic=b(377);this.KarmineBasementUpperRightMimic=b(378);this.KarmineBasementLowerRightMimic=b(379);this.EastCaveNorthwestMimic=b(380);this.SwordOfWind=b(512);this.SwordOfFire=b(513);this.SwordOfWater=b(514);this.SwordOfThunder=b(515);this.Crystalis=b(516);this.BallOfWind=b(517);this.TornadoBracelet=b(518);this.BallOfFire=b(519);this.FlameBracelet=b(520);this.BallOfWater=b(521);this.BlizzardBracelet=b(522);this.BallOfThunder=b(523);this.StormBracelet=b(524);this.CarapaceShield=b(525);this.BronzeShield=b(526);this.PlatinumShield=b(527);this.MirroredShield=b(528);this.CeramicShield=b(529);this.SacredShield=b(530);this.BattleShield=b(531);this.PsychoShield=b(532);this.TannedHide=b(533);this.LeatherArmor=b(534);this.BronzeArmor=b(535);this.PlatinumArmor=b(536);this.SoldierSuit=b(537);this.CeramicSuit=b(538);this.BattleArmor=b(539);this.PsychoArmor=b(540);this.MedicalHerb=b(541);this.Antidote=b(542);this.LysisPlant=b(543);this.FruitOfLime=b(544);this.FruitOfPower=b(545);this.MagicRing=b(546);this.FruitOfRepun=b(547);this.WarpBoots=b(548);this.StatueOfOnyx=b(549);this.OpelStatue=b(550);this.InsectFlute=b(551);this.FluteOfLime=b(552);this.GasMask=b(553);this.PowerRing=b(554);this.WarriorRing=b(555);this.IronNecklace=b(556);this.DeosPendant=b(557);this.RabbitBoots=b(558);this.LeatherBoots=b(559);this.ShieldRing=b(560);this.AlarmFlute=b(561);this.WindmillKey=b(562);this.KeyToPrison=b(563);this.KeyToStxy=b(564);this.FogLamp=b(565);this.ShellFlute=b(566);this.EyeGlasses=b(567);this.BrokenStatue=b(568);this.GlowingLamp=b(569);this.StatueOfGold=b(570);this.LovePendant=b(571);this.KirisaPlant=b(572);this.IvoryStatue=b(573);this.BowOfMoon=b(574);this.BowOfSun=b(575);this.BowOfTruth=b(576);this.Refresh=b(577);this.Paralysis=b(578);this.Telepathy=b(579);this.Teleport=b(580);this.Recover=b(581);this.Barrier=b(582);this.Change=b(583);this.Flight=b(584);this.CalmedAngrySea=b(643);this.OpenedJoelShed=b(647);this.Draygon2=b(653);this.OpenedCrypt=b(654);this.OpenedStxy=b(688);this.OpenedSwanGate=b(691);this.OpenedPrison=b(728);this.OpenedSealedCave=b(750);this.AlwaysTrue=be(752,Zo);this.WarpLeaf=b(757);this.WarpBrynmaer=b(758);this.WarpOak=b(759);this.WarpNadare=b(760);this.WarpPortoa=b(761);this.WarpAmazones=b(762);this.WarpJoel=b(763);this.WarpZombie=b(-764);this.WarpSwan=b(764);this.WarpShyron=b(765);this.WarpGoa=b(766);this.WarpSahara=b(767);this.Sword=Me(this);this.Money=Me(this);this.BreakStone=Me(this);this.BreakIce=Me(this);this.FormBridge=Me(this);this.BreakIron=Me(this);this.TravelSwamp=Me(this);this.CrossPain=Me(this);this.ClimbWaterfall=Me(this);this.BuyHealing=Me(this);this.BuyWarp=Me(this);this.ShootingStatue=Me(this);this.ClimbSlope8=Me(this);this.ClimbSlope9=Me(this);this.ClimbSlope10=Me(this);this.WildWarp=Me(this);this.TriggerSkip=Me(this);this.RageSkip=Me(this);this.ShootingStatueSouth=Me(this);this.StomSkip=Me(this);this.unallocated=new Map;for(let e in this){if(!this.hasOwnProperty(e))continue;let s=this[e];if(!s[Ut])continue;let r=Number(e),n=typeof s.id=="number"?s.id:r;if(isNaN(n))throw new Error(`Bad flag: ${e}`);let o=s.name||(isNaN(r)?mt(e):t0(n)),a=new Ft(this,o,n,s);this[e]=a,a.id<0?this.unallocated.set(~a.id,a):this[a.id]||(this[a.id]=a)}for(let e=256;e<384;e++){let s=`Check ${C(e&255)}`;this[e]?!this[e].fixed&&!this.unallocated.has(e)&&this.unallocated.set(e,new Ft(this,s,~e,{fixed:!0})):this[e]=new Ft(this,s,e,{fixed:!0})}for(let e=384;e<640;e++)if(!this[e]){let s=e<512?"Buffer ":"Item ";this[e]=new Ft(this,s+C(e),e,{fixed:!0})}for(let e of t.locations)for(let s of e.flags)this[s.flag]||(this[s.flag]=Jo(this,s.flag))}defrag(){let t=new Map,e=new Set;for(let a=0;a<768;a++){let l=this[a],c=l?.obsolete;c?(t.set(a,d=>d.set?-1:c.call(l,d)),delete this[a]):l||e.add(a)}let s=0,r=767;function n(a){return()=>a}for(;s<r;){if(this[s]||this.unallocated.has(s)){s++;continue}let a=this[r];if(!a||a.fixed){r--;continue}t.set(r,n(s)),a.id=s,this[s]=a,delete this[r],s++,r--}this.remapFlags(t,e);for(let[a,l]of this.unallocated)this[a]||(this.unallocated.delete(a),(this[a]=l).id=a);let o=[];for(let a=0;a<768;a++)this[a]||o.push(pn(a));e0&&console.log(`Free flags: ${o.join(" ")}`)}insertZombieWarpFlag(){let t=new Map;if(this[756])throw new Error("No space to insert warp flag");let e=~this.WarpZombie.id;if(e<0)throw new Error("Bad WarpZombie id");for(let s=756;s<e;s++)this[s]=this[s+1],this[s].id=s,t.set(s+1,()=>s);this.WarpZombie.id=e,this[e]=this.WarpZombie,this.remapFlags(t)}remap(t,e){this.remapFlags(new Map([[t,()=>e]]))}remapFlags(t,e){function s(n,o){for(let a=n.length-1;a>=0;a--){let l=n[a];if(l<0&&(l=~l),e&&e.has(l))throw new Error(`SHOULD BE UNUSED: ${C(l)}`);let c=t.get(l);if(c==null)continue;let d=c({...o,index:a});d>=0?n[a]=n[a]<0?~d:d:n.splice(a,1)}}function r(n,o){let a=n<0?~n:n;if(e&&e.has(a))throw new Error(`SHOULD BE UNUSED: ${C(a)}`);let l=t.get(a);if(l==null)return n;let c=l(o);if(c<0)throw new Error("Bad flag delete");return n<0?~c:c}for(let n of this.rom.locations)if(n.used)for(let o of n.flags)o.flag=r(o.flag,{location:n});for(let n of this.rom.npcs)if(n.used){for(let[o,a]of n.spawnConditions)s(a,{npc:n,spawn:o});for(let o of n.globalDialogs)o.condition=r(o.condition,{npc:n,dialog:!0});for(let[,o]of n.localDialogs)for(let a of o)a.condition=r(a.condition,{npc:n,dialog:!0}),s(a.flags,{npc:n,dialog:!0,set:!0})}for(let n of this.rom.triggers)n.used&&(s(n.conditions,{trigger:n}),s(n.flags,{trigger:n,set:!0}));for(let n of this.rom.itemGets)s(n.flags,{set:!0});for(let n of this.rom.items)for(let o of n.itemUseData)o.kind==="flag"&&(o.want=r(o.want,{})),s(o.flags,{set:!0})}alloc(t=0){if(t!==512)throw new Error("Cannot allocate outside 2xx");for(let e=640;e<768;e++)if(!this[e])return this[e]=Jo(this,e),e;throw new Error("No free flags.")}free(t){delete this[t]}}});var Gn,ar,Qo=z(()=>{ve();$();Gn=class extends ee{constructor(t,e,s){super(t,e),this.coordinates=X(t.prg,s,4)}get w(){return this.coordinates[1]}set w(t){this.coordinates[1]=t}get x0(){return mn(this.coordinates[0])}set x0(t){this.coordinates[0]=xn(t)}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}set h(t){this.coordinates[3]=t}get y0(){return mn(this.coordinates[2])}set y0(t){this.coordinates[2]=xn(t)}get y1(){return this.y0+this.h}assemble(t){t.byte(...this.coordinates)}},ar=class extends Ue{constructor(e){super();this.rom=e;let s=Ie("Hitboxes",e.prg,me.$1a);for(let r=0;r<24;r++)this[r]=new Gn(e,r,s+4*r)}write(){let e=this.rom.assembler();Ee(e,"Hitboxes",["3c"]);for(let s of this)s.assemble(e);return[e.module()]}}});var Be,cs=z(()=>{$();Be=class extends tt{constructor(){super(...arguments);this.action=this.prop([0,248,3]);this.part=this.prop([0,7,-3],[1,224,5]);this.index=this.prop([1,31])}static{this.size=2}toString(){let e=this.action?` (action ${C(this.action)})`:"";return`MessageId ${this.hex()}: (${C(this.part)}:${C(this.index)}${e}`}get mid(){return`${C(this.part)}:${C(this.index)}`}set mid(e){let s=e.split(":");if(s.length!==2)throw new Error(`oops: ${e}`);if(this.part=Number.parseInt(s[0],16),this.index=Number.parseInt(s[1],16),isNaN(this.part)||isNaN(this.index))throw new Error(`oops: ${e}`)}nonzero(){return!!(this.part||this.index)}}});var Et,As,Rs,sa,s0,r0,n0,i0,o0,a0,l0,$o,ea,ta,q,qn,lt,ct,lr,c0,ra=z(()=>{ve();cs();$();$();Xe();({$0e:Et,$0f:As,$10:Rs,$1a:sa,$fe:s0,$ff:r0}=me),n0=ge.of(Et,33689),i0=ge.of(Et,39906),o0=ge.of(Rs,36848),a0=ge.of(Rs,36923),l0=ge.of(Rs,36998),$o=ge.of(sa,35776),ea=ge.of(sa,35785),ta=[["Sword",`
\v\f`],[" of ","\\]"],["Bracelet","<=>["],["Shield","\r"],["Armor","{"],["Magic","#%("],["Power",""],["Item","^"]],q=class extends ee{constructor(e,s,r={}){super(e.rom,s);this.items=e;let n=this.rom;if(e[s]=this,this.itemUseData=[],this.trades=r.trades||[],this.use=r.use||!1,this.weight=r.weight||1,this.valueName=r.valueName,r.valueAddr!=null&&(this.value=ge.of(Et,r.valueAddr).read(n.prg)),this.use){this.itemUseJump=this.itemUseJumpPointer.readAddress(n.prg,Et,As);let a=e.itemUseJumps[this.itemUseJump.org];if(!a)throw new Error(`Bad ItemUseJump: ${this.itemUseJump}`);let l=this.itemUseDataPointer.readAddress(n.prg,Et,As);for(let c of a){let d=qn.from(c,n.prg,l);this.itemUseData.push(d),l=l.plus(d.length)}}this.itemDataValue=this.itemDataPointer.read(n.prg),this.selectedItemValue=this.selectedItemPointer.read(n.prg);let o=this.menuNamePointer.readAddress(n.prg);this.menuName=ta.reduce((a,[l,c])=>a.replace(c,l),js(n.prg,o.offset,255))}get messageName(){return this.rom.messages.itemNames[this.id]}set messageName(e){this.rom.messages.itemNames[this.id]=e}get basePrice(){return this.rom.shops.basePrices[this.id]}set basePrice(e){this.rom.shops.basePrices[this.id]=e}get itemUseJumpPointer(){return n0.plus(this.id<<1)}get itemUseDataPointer(){return i0.plus(this.id<<1)}get itemDataPointer(){return o0.plus(this.id)}get selectedItemPointer(){return a0.plus(this.id)}get menuNamePointer(){return l0.plus(this.id<<1)}itemUseMessages(){let e=new Map;for(let{message:s}of this.itemUseData)e.set(s.mid,s);return[...e.values()]}setName(e){this.messageName=this.menuName=e}get palette(){return this.itemDataValue&3}set palette(e){this.itemDataValue=this.itemDataValue&-4|e&3}get unique(){return!!(this.itemDataValue&64)}set unique(e){this.itemDataValue=this.itemDataValue&-65|(e?64:0)}get worn(){return!!(this.itemDataValue&32)}set worn(e){this.itemDataValue=this.itemDataValue&-33|(e?32:0)}get solid(){return!!(this.itemDataValue&128)}set solid(e){this.itemDataValue=this.itemDataValue&-129|(e?128:0)}assemble(e){let s=C(this.id);this.itemDataPointer.loc(e,`ItemData_${s}`),e.byte(this.itemDataValue),this.selectedItemPointer.loc(e,`ItemSelectedValue_${s}`),e.byte(this.selectedItemValue);let r=ta.reduce((o,[a,l])=>o.replace(a,l),this.menuName);e.segment(Rs,s0,r0),e.reloc(`ItemMenuName_${C(this.id)}`);let n=e.pc();if(e.byte(r,255),this.menuNamePointer.loc(e,`ItemMenuName_${s}`),e.word(n),this.itemUseJump){this.itemUseJumpPointer.loc(e,`ItemUseJump_${s}_Ptr`),e.word(this.itemUseJump.org);let o=[];for(let l of this.itemUseData)o.push(...l.bytes());e.segment(Et.name,As.name),e.reloc(`ItemUseData_${s}`);let a=e.pc();e.byte(...o),this.itemUseDataPointer.loc(e,`ItemUseData_${s}_Ptr`),e.word(a)}this.valueName&&Fe(e,this.valueName,this.value||0),this.itemUseData.some(o=>o.tradeNpc()===this.rom.npcs.Aryllis.id)&&Fe(e,"aryllisWant",this.id-28)}isMagic(){return this.id>=65&&this.id<=72}},qn=class i{constructor(t,e,s,r){this.kind=t;this.want=e;this.message=s;this.flags=r}static from(t,e,s){let{offset:r}=s,n=0;if(t==="expect"||t==="screen")n=e[r+1]<<8|e[r],r+=2;else if(t==="flag"){let l=wn.read(e,r);if(l.length||l.push(-1),l.length>1)throw new Error(`Flag list too long: ${l}`);n=l[0],r+=2}else t==="location"?n=e[r++]:t!=="empty"&&ft(t);let o=Be.from(e,r),a=yn.read(e,r+2);return new i(t,n,o,a)}bytes(){let t=[];if(this.kind==="expect"||this.kind==="screen")t.push(this.want&255,this.want>>>8&255);else if(this.kind==="flag"){let e=wn.bytes([this.want]);if(e.length!==2)throw new Error(`bad data: ${e}`);t.push(...e)}else this.kind==="location"?t.push(this.want):this.kind!=="empty"&&ft(this.kind);return t.push(...this.message.data),t.push(...yn.bytes(this.flags)),t}tradeNpc(){return this.kind!=="expect"||this.want>>>8!==1?null:this.want&255}get length(){let t=this.kind==="empty"?0:this.kind==="location"?1:2;return 2*(1+Math.max(1,this.flags.length))+t}},lt=class extends q{get defense(){return this.items.shieldDefense[this.id-12]}set defense(t){this.items.shieldDefense[this.id-12]=t}},ct=class extends q{get defense(){return this.items.armorDefense[this.id-20]}set defense(t){this.items.armorDefense[this.id-20]=t}},lr=class extends Ue{constructor(e){super(73);this.rom=e;this.itemUseJumps=c0;this.SwordOfWind=new q(this,0);this.SwordOfFire=new q(this,1);this.SwordOfWater=new q(this,2);this.SwordOfThunder=new q(this,3);this.Crystalis=new q(this,4);this.BallOfWind=new q(this,5);this.TornadoBracelet=new q(this,6);this.BallOfFire=new q(this,7);this.FlameBracelet=new q(this,8);this.BallOfWater=new q(this,9);this.BlizzardBracelet=new q(this,10);this.BallOfThunder=new q(this,11);this.StormBracelet=new q(this,12);this.CarapaceShield=new lt(this,13);this.BronzeShield=new lt(this,14);this.PlatinumShield=new lt(this,15);this.MirroredShield=new lt(this,16);this.CeramicShield=new lt(this,17);this.SacredShield=new lt(this,18);this.BattleShield=new lt(this,19);this.PsychoShield=new lt(this,20);this.TannedHide=new ct(this,21);this.LeatherArmor=new ct(this,22);this.BronzeArmor=new ct(this,23);this.PlatinumArmor=new ct(this,24);this.SoldierSuit=new ct(this,25);this.CeramicSuit=new ct(this,26);this.BattleArmor=new ct(this,27);this.PsychoArmor=new ct(this,28);this.MedicalHerb=new q(this,29,{use:!0,trades:[0],valueAddr:34026,valueName:"itemValueMedicalHerb"});this.Antidote=new q(this,30,{use:!0});this.LysisPlant=new q(this,31,{use:!0});this.FruitOfLime=new q(this,32,{use:!0});this.FruitOfPower=new q(this,33,{use:!0,valueAddr:34060,valueName:"itemValueFruitOfPower"});this.MagicRing=new q(this,34,{use:!0});this.FruitOfRepun=new q(this,35,{use:!0});this.WarpBoots=new q(this,36,{use:!0});this.StatueOfOnyx=new q(this,37,{use:!0,trades:[0]});this.OpelStatue=new q(this,38,{use:!0});this.InsectFlute=new q(this,39,{use:!0});this.FluteOfLime=new q(this,40,{use:!0,trades:[0,1,2,3]});this.GasMask=new q(this,41);this.PowerRing=new q(this,42);this.WarriorRing=new q(this,43);this.IronNecklace=new q(this,44);this.DeosPendant=new q(this,45);this.RabbitBoots=new q(this,46);this.LeatherBoots=new q(this,47);this.ShieldRing=new q(this,48);this.AlarmFlute=new q(this,49,{use:!0,trades:[0,1]});this.WindmillKey=new q(this,50,{use:!0});this.KeyToPrison=new q(this,51,{use:!0});this.KeyToStyx=new q(this,52,{use:!0});this.FogLamp=new q(this,53,{use:!0,trades:[0]});this.ShellFlute=new q(this,54,{use:!0});this.EyeGlasses=new q(this,55,{use:!0});this.BrokenStatue=new q(this,56,{use:!0});this.GlowingLamp=new q(this,57,{use:!0});this.StatueOfGold=new q(this,58,{use:!0});this.LovePendant=new q(this,59,{use:!0,trades:[0]});this.KirisaPlant=new q(this,60,{use:!0,trades:[0]});this.IvoryStatue=new q(this,61,{use:!0,trades:[0]});this.BowOfMoon=new q(this,62,{use:!0});this.BowOfSun=new q(this,63,{use:!0});this.BowOfTruth=new q(this,64,{use:!0});this.Refresh=new q(this,65);this.Paralysis=new q(this,66);this.Telepathy=new q(this,67);this.Teleport=new q(this,68);this.Recover=new q(this,69);this.Barrier=new q(this,70);this.Change=new q(this,71);this.Flight=new q(this,72);this.armorDefense=X(e.prg,$o.offset,9),this.shieldDefense=X(e.prg,ea.offset,9)}write(){let e=this.rom.assembler();de(e,Et,40422,40960),de(e,As,40960,41222),de(e,Rs,37146,37992),$o.loc(e),e.byte(...this.armorDefense),ea.loc(e),e.byte(...this.shieldDefense);let s=new Array(10).fill(0);for(let r of this)r.assemble(e),r.unique&&(s[r.id>>>3]|=1<<(r.id&7));return Ee(e,"KeyItemData",[Et,As]),e.byte(...s),[e.module()]}},c0={33849:["expect"],33858:["screen"],33872:["empty"],33873:["screen"],33887:["location"],33937:["expect"],33961:["expect","expect"],33971:["location"],34e3:["expect"],34011:[],34016:["expect","empty"],34055:["empty"],34077:["empty"],34084:["empty"],34095:["empty"],34106:["empty"],34122:["empty"],34148:["empty"],34149:["expect"],34155:["flag"],34181:["empty"],34206:["expect","expect","expect","expect"]}});var cr,na,d0,u0,h0,f0,m0,Vn,dr,Hn,x0,ia=z(()=>{ve();cs();$();({$0e:cr,$0f:na,$14:d0,$fe:u0,$ff:h0}=me),f0=ge.of(cr,39680),m0=ge.of(cr,40294),Vn=73,dr=class extends Ue{constructor(e){super(113);this.rom=e;this.actionGrants=new Map;for(let s=0;s<113;s++)this[s]=new Hn(e,s);this.actionGrants.set(37,41),this.actionGrants.set(57,58),this.actionGrants.set(59,71),this.actionGrants.set(60,62),this.actionGrants.set(132,70),this.actionGrants.set(178,66),this.actionGrants.set(180,65)}write(){let e=this.rom.assembler();Fe(e,"itemGet_getToItemThreshold",Vn);for(let s of this)s.assemble(e);Ee(e,"GrantItemTable",[d0,u0,h0]);for(let[s,r]of this.actionGrants)e.byte(s,r);return[e.module()]}},Hn=class extends ee{constructor(t,e){super(t,e),this._itemId=this.itemPointer.read(t.prg);let s=this.tablePointer.readAddress(t.prg,cr,na),r=s.offset;this.inventoryRowStart=t.prg[r++],this.inventoryRowLength=t.prg[r++],this.acquisitionAction=Be.from(t.prg,r),this.flags=gn.read(t.prg,r+2),this.key=t.prg[r+2+2*this.flags.length+1]===254,e!==0&&s.org===le(t.prg,122214)&&(this.key=!1,this.flags=[])}get itemPointer(){return m0.plus(this.id)}get tablePointer(){return f0.plus(this.id<<1)}get itemId(){return this._itemId}set itemId(t){if(this.id<Vn)throw new Error(`${this.id}`);this._itemId=t}isLosable(){return x0.has(this.inventoryRowStart)}copyFrom(t){this.inventoryRowStart=t.inventoryRowStart,this.inventoryRowLength=t.inventoryRowLength,this.acquisitionAction=t.acquisitionAction,this.flags=[...t.flags],this.key=t.key}assemble(t){this.id>=Vn&&(this.itemPointer.loc(t),t.byte(this.itemId));let e=[this.inventoryRowStart,this.inventoryRowLength,...this.acquisitionAction.data,...gn.bytes(this.flags),this.key?254:255];t.segment(cr.name,na.name),t.reloc(`ItemGetData_${C(this.id)}`);let s=t.pc();t.byte(...e),this.tablePointer.loc(t),t.word(s)}},x0=new Set([4,8,16])});function b0(i){return i.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace("Of","of")}var p0,ds,xt,Ve,ye,De,B,oa=z(()=>{p0=0,ds=class{constructor(){this.name=`Area ${++p0}`}},xt=class extends ds{constructor(){super(...arguments);this.type="overworld"}},Ve=class extends ds{constructor(){super(...arguments);this.type="town"}},ye=class extends ds{constructor(){super(...arguments);this.type="connector";this.exits=[2,2]}},De=class extends ds{constructor(){super(...arguments);this.type="terminal";this.exits=[1,1]}};(I=>(I.Unused=new De,I.ValleyOfWind=new class extends xt{constructor(){super(...arguments);this.exits=[3,6]}},I.CordelPlain=new class extends xt{constructor(){super(...arguments);this.exits=[5,8]}},I.WaterfallValley=new class extends xt{constructor(){super(...arguments);this.exits=[6,6]}},I.AngrySea=new class extends xt{constructor(){super(...arguments);this.exits=[0,0]}},I.GoaValley=new class extends xt{constructor(){super(...arguments);this.exits=[0,0]}},I.Desert1=new class extends xt{constructor(){super(...arguments);this.exits=[0,0]}},I.Desert2=new class extends xt{constructor(){super(...arguments);this.exits=[0,0]}},I.Leaf=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Brynmaer=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Oak=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Amazones=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Nadare=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Portoa=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Joel=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.ZombieTown=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Swan=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Shyron=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Goa=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.Sahara=new class extends Ve{constructor(){super(...arguments);this.exits=[0,0]}},I.WindmillCave=new class extends ye{},I.SealedCave=new class extends ye{},I.ZebuCave=new class extends ye{},I.MtSabreWest=new class extends ye{},I.MtSabreNorth=new class extends ye{},I.LimeTreeValley=new class extends ye{},I.PortoaPalace=new class extends ye{},I.FishermanHouse=new class extends ye{},I.UndergroundChannel=new class extends ye{},I.JoelPassage=new class extends ye{},I.EvilSpiritIslandEntrance=new class extends ye{},I.EvilSpiritIsland=new class extends ye{},I.KirisaPlantCave=new class extends ye{},I.SwanGate=new class extends ye{},I.MtHydra=new class extends ye{},I.GoaFortress=new class extends ye{},I.OasisEntrance=new class extends ye{},I.OasisCave=new class extends ye{},I.DesertCave1=new class extends ye{},I.SaharaMeadow=new class extends ye{},I.DesertCave2=new class extends ye{},I.EastCave=new class extends ye{},I.Swamp=new class extends ye{},I.Mezame=new class extends De{},I.Windmill=new class extends De{},I.StomHouse=new class extends De{},I.WaterfallCave=new class extends De{},I.KirisaMeadow=new class extends De{},I.FogLampCave=new class extends De{},I.LimeTreeLake=new class extends De{},I.Lighthouse=new class extends De{},I.SaberaFortress=new class extends De{},I.ShyronTemple=new class extends De{},I.Styx=new class extends De{},I.FortressBasement=new class extends De{},I.Pyramid=new class extends De{},I.Crypt=new De,I.Tower=new De))(B||={});for(let[i,t]of Object.entries(B))t.name=b0(i)});function Kn(i,t){let e=i-t;return e-=(i>>>4)-(t>>>4),e}function aa(i,...t){for(let e of t){let s=e%15,r=(e-s)/15,n=(i>>4)+r,o=(i&15)+s;o<0?(n--,o=15+o):o>=15&&(n++,o=o-15),i=n<<4|o}return i}var rt,Tt,zt,us,ur,hr=z(()=>{$();rt=class extends tt{constructor(){super(...arguments);this.x=this.prop([0],[1,255,-8]);this.y=this.prop([2],[3,255,-8]);this.screen=this.prop([3,15,-4],[1,15]);this.tile=this.prop([2,240],[0,240,4]);this.coord=this.prop([2,255,-8],[0,255])}static{this.size=4}get used(){return this.data[1]<8}toString(){return`Entrance ${this.hex()}: (${C(this.y)}, ${C(this.x)})`}},Tt=class extends tt{constructor(){super(...arguments);this.x=this.prop([0,255,-4]);this.xt=this.prop([0]);this.y=this.prop([1,255,-4]);this.yt=this.prop([1]);this.screen=this.prop([1,240],[0,240,4]);this.tile=this.prop([1,15,-4],[0,15]);this.coord=this.prop([1,15,-12],[0,15,-4]);this.dest=this.prop([2]);this.entrance=this.prop([3])}static{this.size=4}isSeamless(){return!!(this.entrance&32)}toString(){return`Exit ${this.hex()}: (${C(this.y)}, ${C(this.x)}) => ${this.dest}:${this.entrance}`}},zt=class extends tt{constructor(){super(...arguments);this.x=this.prop([1,7,-8]);this.xs=this.prop([1,7]);this.y=this.prop([1,240,-4]);this.ys=this.prop([1,240,4]);this.screen=this.prop([1])}static{this.size=2}get flag(){return this.data[0]|512}set flag(e){if((e&-256)!==512)throw new Error(`bad flag: ${C(e)}`);this.data[0]=e&255}toString(){return`Flag ${this.hex()}: ${C(this.screen)} @ ${C(this.flag)}`}},us=class extends tt{constructor(){super(...arguments);this.fromXs=this.prop([1,112,4]);this.toXs=this.prop([1,7]);this.fromYs=this.prop([3,240,4]);this.toYs=this.prop([3,15]);this.fromScreen=this.prop([3,240],[1,112,4]);this.toScreen=this.prop([3,15,-4],[1,7]);this.dest=this.prop([0])}static{this.size=4}toString(){return`Pit ${this.hex()}: (${C(this.fromXs)}, ${C(this.fromYs)}) => ${C(this.dest)}:(${C(this.toXs)}, ${C(this.toYs)})`}},ur=class extends tt{constructor(){super(...arguments);this.y=this.prop([0,255,-4]);this.yt=this.prop([0]);this.x=this.prop([1,127,-4],[2,64,3]);this.xt=this.prop([1,127]);this.timed=this.booleanProp(1,7);this.screen=this.prop([0,240],[1,112,4]);this.tile=this.prop([0,15,-4],[1,15]);this.coord=this.prop([0,15,-12],[1,15,-4],[2,64,3]);this.type=this.prop([2,7]);this.id=this.prop([3]);this.patternBank=this.prop([2,128,7])}static{this.size=4}get used(){return this.data[0]!==254}set used(e){this.data[0]=e?0:254}[Symbol.iterator](){return this.used?super[Symbol.iterator]():[254,0,0,0][Symbol.iterator]()}get monsterId(){return this.id+80&255}set monsterId(e){this.id=e-80&255}isChest(){return this.type===2&&this.id<128}isInvisible(){return this.isChest()&&!!(this.data[2]&32)}isTrigger(){return this.type===2&&this.id>=128}isNpc(){return this.type===1&&this.id<192}isBoss(){return this.type===1&&this.id>=192}isMonster(){return this.type===0}isGeneric(){return this.type===4}isWall(){return!!(this.type===3&&(this.id<4||this.data[2]&32))}isShootingWall(e){return this.isWall()&&!!(this.data[2]&32?this.data[2]&16:e.id===143||e.id===168)}wallType(){if(this.type!==3)return"";let e=this.data[2]&32?this.id>>>4:this.id;return e>=4?"":e===2?"bridge":"wall"}wallElement(){return this.isWall()?this.id&3:-1}toString(){return`Spawn ${this.hex()}: (${C(this.x)}, ${C(this.y)}) ${this.timed?"timed":"fixed"} ${this.type}:${C(this.id)}`}}});var pt,fr=z(()=>{Xe();pt=class{constructor(){this.data=new Map;this.sizes=new Map}find(t){if(t!==t)throw"nan";this.data.has(t)||(this.data.set(t,t),this.sizes.set(t,1));let e;for(;!Object.is(e=this.data.get(t),t);)this.data.set(t,t=this.data.get(e));return t}union(t){this.find(t[0]);for(let e=1;e<t.length;e++){if(t[e]!==t[e])throw"nan";this.unionInternal(t[0],t[e])}}unionInternal(t,e){if(t=this.find(t),e=this.find(e),t===e)return;let s=this.sizes.get(t),r=this.sizes.get(e);s<r?(this.sizes.set(e,s+r),this.data.set(t,e)):(this.sizes.set(t,s+r),this.data.set(e,t))}sets(){let t=new Map;for(let e of this.data.keys()){let s=this.find(e),r=t.get(s);r||t.set(s,r=new Set),r.add(e)}return[...t.values()]}map(){let t=new we(()=>new Set);for(let e of this.data.keys()){let s=t.get(this.find(e));t.set(e,s),s.add(e)}return t}roots(){let t=new Set;for(let e of this.data.keys())t.add(this.find(e));return[...t]}}});function bt(i){return new jn(i)}var g0,Cs,_,jn,dt,mr,y0,la=z(()=>{Xe();$();g0={next(){return{done:!0}}},Cs={get size(){return 0},has(){return!1},[Symbol.iterator](){return g0}},_={get size(){return 1/0},has(){return!0},[Symbol.iterator](){throw new Error("cannot iterate")}},jn=class{constructor(t){this.bit=t}get size(){return 1}has(t){return t===this.bit}[Symbol.iterator](){return[this.bit][Symbol.iterator]()}};(r=>{function i(n,o){if(n===_||!o.size)return o;if(o===_||!n.size)return n;let a=new Set;for(let l of n)o.has(l)&&a.add(l);return a.size?a:Cs}r.intersect=i;function t(n,o){if(n===_||!o.size)return n;if(o===_||!n.size)return o;let a=new Set(n);for(let l of o)a.add(l);return a}r.union=t;function e(n,o){if(o===_||!n.size)return!0;if(n.size>o.size)return!1;for(let a of n)if(!o.has(a))return!1;return!0}r.isSubset=e;function s(n){return n===_?"all":[...n].sort().join(" ")}r.label=s})(dt||={});mr=class i{constructor(t,e,s){this.fixed=t;this.float=e;this.shift=s}get pat0(){return this.fixed[0]}get pat1(){return this.fixed[1]}get pal2(){return this.fixed[2]}get pal3(){return this.fixed[3]}static get ALL(){return new i([_,_,_,_],[],0)}static get NONE(){return new i([Cs,Cs,Cs,Cs],[],0)}static get COIN(){return new i([y0,_,_,_],[],0)}static get STOM_FIGHT(){return new i([_,new Set([77]),_,_],[],0)}static get GUARDIAN_STATUE(){return new i([new Set([116]),new Set([98]),_,_],[],0)}static get SHOOTING_WALL(){return new i([new Set([97]),_,_,_],[],0)}static get KENSU_CHEST(){return new i([new Set([81]),_,_,_],[],0)}static forLocation(t){switch(t){case 3:return new i([_,bt(96),_,bt(32)],[],0);case 96:case 100:case 104:return new i([_,bt(82),_,bt(8)],[],0)}return i.ALL}static fromSpawn(t,e,s,r,n){let[o,...a]=e;n=n&&o===2&&!a.length,n&&r.patternBank&&(e=new Set([3]));let l=n||!e.has(2)?_:bt(s.spritePatterns[0]),c=n||!e.has(3)?_:bt(s.spritePatterns[1]),d=n?[bt(s.spritePatterns[r.patternBank])]:[],h=t.has(2)?bt(s.spritePalettes[0]):_,m=t.has(3)?bt(s.spritePalettes[1]):_;return new i([l,c,h,m],d,0)}ignorePalette(){return new i([this.fixed[0],this.fixed[1],_,_],this.float,this.shift)}shufflePalette(t,e){let s=[...this.fixed];for(let r=2;r<4;r++){if(s[r]===_)continue;let n=Math.floor(5-Math.log2(t.nextInt(15)+2)),o=s[r]=new Set;for(let a=0;a<n;a++)o.add(t.pick(e))}return new i(s,this.float,this.shift)}shifted(){return new i(this.fixed,this.float,this.shift|2)}join(t){let e=j(4,r=>dt.union(this.fixed[r],t.fixed[r]));if(this.float.length!==t.float.length)throw console.dir(this),console.dir(t),new Error(`incompatible float: ${this.float} ${t.float}`);let s=j(this.float.length,r=>dt.union(this.float[r],t.float[r]));return new i(e,s,this.shift|t.shift)}fix(t,e){let s=e?o=>e.nextInt(o):()=>0,r=e?o=>e.pick([...o]):o=>o[Symbol.iterator]().next().value,n=[...this.fixed];if(this.float.length){let o=s(2),a=1-o;o<this.float.length&&(n[0]=dt.intersect(n[0],this.float[o])),a<this.float.length&&(n[1]=dt.intersect(n[1],this.float[a]))}n[0]!==_&&(t.spritePatterns[0]=r([...n[0]])),n[1]!==_&&(t.spritePatterns[1]=r([...n[1]])),n[2]!==_&&(t.spritePalettes[0]=r([...n[2]])),n[3]!==_&&(t.spritePalettes[1]=r([...n[3]]))}meet(t,e=!1){let s=this.tryMeet(t,e);if(!s)throw new Error("Could not reconcile patterns");return s}tryMeet(t,e=!1){let s=[],r=this.shift|t.shift;for(let a=0;a<4;a++){let l=dt.intersect(this.fixed[a],t.fixed[a]);if(!l.size){if(!e||a<2)return;l=dt.union(this.fixed[a],t.fixed[a])}s.push(l)}let n=new Map,o=[];for(let a of et.concat(this.float,t.float)){if(a===_)throw new Error("Unexpected unconstrained float");let l=!1;for(let c of a){let d=n.get(c);if(d!=null){for(let h of o[d])n.delete(h);o[d]=dt.intersect(o[d],a);for(let h of o[d])n.set(h,d);l=!0;break}}if(l)break;for(let c of a)n.set(c,o.length);if(o.push(a),o.length>2)return}for(let a=0;a<o.length;a++)for(let l=0;l<2;l++){let c=dt.intersect(o[a],s[l]);if(c.size)c.size,o[a].size;else{let d=s[1-l]=dt.intersect(o[a],s[1-l]);if(r|=1<<1-l,!d.size)return;o.splice(a,1),a=-1;break}}return new i(s,o,r)}},y0=new Set([94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119])});function Ne(...i){return new Yn(...i)}var We,Yn,ca,da,ua,ha,fa,ma,xa,pa,ba,ga,ya,wa,va,Sa,Ea,Ta,ka,La,Ma,Zn=z(()=>{ve();$();la();Lt();We=class extends ee{constructor(e,s,r=""){super(e.rom,s);this.constraint=mr.ALL;if(e[s]=this,this.used=!0,this.name="",e.rom.writeMonsterNames){let a=this.rom.prg[499712|s]|this.rom.prg[499968|s]<<8|458752;this.displayName=wo(this.rom.prg,a)}else this.displayName=r;this.base=le(this.rom.prg,this.pointer)+65536,this.sfx=this.rom.prg[this.base],this.data=[];let n=this.base+1,o=0;for(let a=0;a<32;a++)a&7||(o=this.rom.prg[n++]),this.data.push(o&128?this.rom.prg[n++]:0),o<<=1}get pointer(){return 109568+(this.id<<1)}serialize(){let e=[this.sfx];for(let s=0;s<4;s++){let r=e.length;e.push(0);for(let n=0;n<8;n++)this.data[8*s+n]&&(e[r]|=128>>>n,e.push(this.data[8*s+n]))}return e}write(){let e=`Object_${this.id.toString(16).padStart(2,"0")}`,s=this.rom.assembler();s.segment("0d"),s.reloc(e);let r=s.pc();if(s.byte(...this.serialize()),s.org(44032+(this.id<<1),`${e}_Ptr`),s.word(r),this===this.rom.objects.blueSlime){let n=this.elements,o=0;for(;n;)n>>=1,o++;s.assign("slimeMutationElement",o),s.export("slimeMutationElement")}if(this.rom.writeMonsterNames){s.segment("3d");let n;if(this.displayName){let o=`${this.name}_Str`;s.reloc(o),n=s.pc(),s.byte(this.displayName.length),s.byte(...this.displayName)}s.org(40960|this.id,`EnemyNameTableLo_${this.id}`),s.byte(n!=null?ae.loByte(n):0),s.org(41216|this.id,`EnemyNameTableHi_${this.id}`),s.byte(n!=null?ae.hiByte(n):0)}return[s.module()]}get(e){return this.data[e-768>>>5]}parents(){return[]}spawnedChild(){if(!this.rom.objectActions[this.action]?.data.hasChild)return;let s=this.rom.adHocSpawns[this.child],r=s&&s.objectId;if(r!=null)return this.rom.objects[r]}spawnedReplacement(){if(this.replacement)return this.rom.objects[this.replacement]}locations(){return this.rom.locations.filter(e=>e.used&&e.spawns.some(s=>s.isMonster()&&s.monsterId===this.id))}palettes(e=!1){if(this.action===34)return[3];let s=this.data[0];this.action===42&&(s=this.data[31]|1),this.action===41&&(s=107),this.action===38&&(s=156);let r=this.rom.metasprites[s],n=e&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].objectId].data[0]]:null;return[...new Set([...r?.palettes()??[],...n?.palettes()??[]])]}isVulnerable(e){return!(this.elements&1<<e)}isShadow(){return this.id===123||this.id===140}get metasprite(){return ca.get(this.data)}set metasprite(e){ca.set(this.data,e)}get speed(){return da.get(this.data)}set speed(e){da.set(this.data,e)}get collisionPlane(){return ua.get(this.data)}set collisionPlane(e){ua.set(this.data,e)}get hitbox(){return ha.get(this.data)}set hitbox(e){ha.set(this.data,e)}get hp(){return fa.get(this.data)}set hp(e){fa.set(this.data,e)}get atk(){return ma.get(this.data)}set atk(e){ma.set(this.data,e)}get def(){return xa.get(this.data)}set def(e){xa.set(this.data,e)}get level(){return pa.get(this.data)}set level(e){pa.set(this.data,e)}get poison(){return!!ba.get(this.data)}set poison(e){ba.set(this.data,e?1:0)}get child(){return ga.get(this.data)}set child(e){ga.set(this.data,e)}get terrainSusceptibility(){return ya.get(this.data)}set terrainSusceptibility(e){ya.set(this.data,e)}get immobile(){return!!wa.get(this.data)}set immobile(e){wa.set(this.data,e?1:0)}get action(){return va.get(this.data)}set action(e){va.set(this.data,e)}get replacement(){return Sa.get(this.data)}set replacement(e){Sa.set(this.data,e)}get goldDrop(){return Ea.get(this.data)}set goldDrop(e){Ea.set(this.data,e)}get elements(){return Ta.get(this.data)}set elements(e){Ta.set(this.data,e)}get expReward(){return ka.get(this.data)}set expReward(e){ka.set(this.data,e)}get attackType(){return La.get(this.data)}set attackType(e){La.set(this.data,e)}get statusEffect(){return Ma.get(this.data)}set statusEffect(e){Ma.set(this.data,e)}toString(){return super.toString()+(this.name?" "+this.name:"")}};Yn=class{constructor(...t){this.spec=t}get(t){let e=0;for(let[s,r=255,n=0]of this.spec){let o=s-768>>>5,a=n<0?-n:0,l=n<0?0:n;e|=(t[o]&r)>>>l<<a}return e}set(t,e){for(let[s,r=255,n=0]of this.spec){let o=s-768>>>5,a=n<0?-n:0,l=n<0?0:n,c=e>>>a<<l&r;t[o]=t[o]&~r|c}}},ca=Ne([768]),da=Ne([832,15]),ua=Ne([928,240,4]),ha=Ne([1056,64,2],[928,15]),fa=Ne([960]),ma=Ne([992]),xa=Ne([1024]),pa=Ne([1056,31]),ba=Ne([1056,128,7]),ga=Ne([1088]),ya=Ne([1120]),wa=Ne([1184,128,7]),va=Ne([1184,127]),Sa=Ne([1216]),Ea=Ne([1280,240,4]),Ta=Ne([1280,15]),ka=Ne([1312]),La=Ne([1344]),Ma=Ne([1376,15])});function w0(i){return i<128?i:(i&127)<<4}function v0(i){return 2**(i/5-1)}function T0(i){return 2**(i/7-1)}function Aa(i){return i<24?1+i/3:(i+12)/4}function k0(i,t=0){let e=i<10?1:i<18?2:i<38?4:8;for(let s=e;s;s>>>=1)if(!(s&t))return s<<1;return e<<1}function L0(i,t){return Aa(i)+M0(i,t)}function M0(i,t){return t?xr(i,2,[6,6],[18,8],[25,12],[30,18],[37,24],[42,32]):xr(i,2,[6,6],[18,10],[25,14],[30,18],[40,24],[46,32])}function xr(i,t,...e){for(let s=e.length-1;s>=0;s--){let[r,n]=e[s];if(i>=r)return n}return t}var T,S0,E0,pr=z(()=>{Zn();$();T=class i extends We{constructor(t,e){super(t,e.id,e.displayName);let s=e.scaling,r=(Aa(s)+this.level)/2,n=r+k0(s,this.elements);this.hits=(this.hp+1)/(n-this.def),this.sdef=this.def/n;let o=Math.min(255,Math.max(16,32+r*16));this.satk=(this.atk-L0(s,this.attackType))/o,this.extraDifficulty=e.difficulty||0,this.monsterClass=e.class;let a=w0(this.expReward)/v0(s),l=E0[this.goldDrop]/T0(s);this.type=e.type||"monster",this.wealth=l&&l/(a+l)}isBoss(){return this.type==="boss"}isProjectile(){return this.type==="projectile"}isBird(){return this.rom.objectActions[this.action]?.data.bird||!1}isFlyer(){let t=this.rom.objectActions[this.action];return t?.data.bird||t?.data.moth||!1}placement(){return this.rom.objectActions[this.action]?.data.placement??"normal"}clearance(){return this.rom.objectActions[this.action]?.data.large?6:3}totalDifficulty(){return this.toughness()+this.attack()+this.statusDifficulty()+this.immunities()+this.movement()}collectDifficulty(t,e){let s=t(this),r=this.spawnedChild();r instanceof i&&(s=e(s,r.collectDifficulty(t,e)));let n=this.spawnedReplacement();return n instanceof i&&(s=e(s,n.collectDifficulty(t,e))),s}toughness(){return this.collectDifficulty(t=>xr(t.hits,0,[2,1],[3,2],[5,3],[7,4],[10,5],[13,6]),Math.max)}attack(){return this.collectDifficulty(t=>t.attackType&&t.statusEffect?0:xr(t.satk,0,[.04,1],[.08,2],[.13,3],[.18,4],[.25,5],[.33,6]),Math.max)}addStatusEffects(t){this.attackType&&this.statusEffect?t.add(this.statusEffect):!this.attackType&&this.poison&&t.add(0);let e=this.spawnedReplacement();e instanceof i&&e.addStatusEffects(t);let s=this.spawnedChild();s instanceof i&&s.addStatusEffects(t)}statusDifficulty(){let t=new Set;this.addStatusEffects(t);let e=0;for(let s of t)e+=S0[s];return e}immunities(){let t=0,e=this.elements;for(;e;)e&1&&t++,e>>>=1;return t&&1<<t-1}movement(){return this.collectDifficulty(t=>{let e=this.rom.objectActions[t.action],s=t.spawnedChild(),r=t.extraDifficulty;return e&&(r+=e.data.movement||0,e.data.large&&r++,s&&!s.statusEffect&&(r+=e.data.projectile||0)),this.metasprite===167&&(r+=2),r},(t,e)=>t+e)}totalReward(){return this.totalDifficulty()/4}normalizedGold(){if(!this.wealth)return 0;let t=this.totalDifficulty()*this.wealth*.6;return Math.max(1,Math.min(15,Math.round(t)))}normalizedExp(){if(this.wealth===1)return 0;let t=.488+this.totalDifficulty()*(1-this.wealth)*.256;return Math.max(1,Math.min(255,Math.round(t*32)))}toString(){return`Monster $${C(this.id)} ${this.name}`}};S0=[2,1,3,2,4],E0=[0,1,2,4,8,16,30,50,100,200,400,50,100,200,400,500]});function Ra(i,t){return((i>>>4)-(t>>>4))**2+((i&15)-(t&15))**2}function Ca(i,t,e,s){let r=t&15,n=t>>>4,o=e&15,a=e>>>4,l=i&15,c=i>>>4,d=Math.max(0,Math.min(s.width-1,l+r-o));return Math.max(0,Math.min(s.height-1,c+n-a))<<4|d}var br,A0,R0,Na,Ia=z(()=>{hr();$();Xe();fr();pr();br=class i{constructor(t,e,s,r){this.id=t;this.tileset=e;this.customFlags=new Map;this.freeFlags=new Set;this._pos=void 0;this._exits=new ws;this._pits=new Map;this.rom=e.rom,this._height=s,this._width=r,this._screens=new Array(s<<4).fill(e.empty)}static of(t,e){let{rom:s,width:r,height:n}=t;if(!e){let{fortress:g,labyrinth:w}=s.metatilesets,k=new Set;for(let E of s.metatilesets)t.tileset===E.tileset.id&&k.add(E);k.delete(t.id===169?g:w);for(let E of new Set(et.concat(...t.screens)))for(let L of k)if(L.getMetascreens(E).length||k.delete(L),!k.size)throw new Error(`No tileset for ${C(E)} in ${t}`);if(k.size!==1)throw new Error(`Non-unique tileset for ${t}: [${Array.from(k,E=>E.name).join(", ")}]`);e=[...k][0]}let o=t.reachableTiles(!0),a=new Set;for(let g of o.keys())a.add(g>>>8);for(let g of t.entrances)g.used&&a.add(g.screen);for(let g of t.exits)if(a.add(g.screen),g.isSeamless()){let w=g.tile>>>4;w===0?o.set(g.screen-16<<8|136,1):w===14&&o.set(g.screen<<8|136,1)}let l=new Array(n<<4).fill(e.empty);for(let g=0;g<n;g++)for(let w=0;w<r;w++){let k=g<<4|w,E=e.getMetascreens(t.screens[g][w]),L;if(E.length===1)L=E[0];else if(E.length){let M=t.flags.find(v=>v.screen===(g<<4|w)),y=[],S=[];for(let v of E)v.data.match?y.push(v):v.flag==="always"&&M?.flag===766||!v.flag&&!v.data.wall&&!M?S.unshift(v):S.push(v);if(y.length){let v=function(D,H){let ne=(w<<8)+H,K=(g<<8)+D,U=K<<4&61440|ne&3840|K&240|ne>>4&15;return o.has(U)};for(let D of y)if(D.data.match(v,M!=null)){L=D;break}}L||(L=S[0])}else throw new Error("impossible");if(!L)throw new Error("impossible");l[k]=L}let c=new ws,d;for(let g of t.exits){if(g.dest===255)continue;let w=g.screen,k=g.tile;if(g.isSeamless()&&!(g.yt&15)&&(t.id&88)!==88&&(w-=16,k|=240),!a.has(w))throw new Error("impossible?");let E=l[w],L=E.findExitType(k,n===1,!!(g.entrance&32)),M=L?.type;if(!M){let K=t.id<<16|w<<8|g.tile;if(A0.has(K))continue;let U=E.data.exits?.map(Q=>Q.type+": "+Q.exits.map(C).join(", ")).join(`
  `);console.warn(`Unknown exit ${C(g.tile)}: ${E.name} in ${t} @ ${C(w)}:
  ${U}`);continue}if(c.has(w,M))continue;let y=s.locations[g.dest];if(M.startsWith("seamless")){let K=M==="seamless:down",U=L.exits[0]+(K?-16:16),Q=w+(U<0?-16:0),xe=K?"seamless:up":"seamless:down";c.set(w,M,[y.id<<8|Q,xe]);continue}let S=y.entrances[g.entrance&31],v=S.screen,D=S.coord;M==="door"&&!(S.y&240)&&(v-=16,D+=65536);let H=y.screens[v>>4][v&15],ne=f(y,H,D);if(!ne){let K=[];for(let U of s.metascreens.getById(H,y.tileset))for(let Q of U.data.exits??[])Q.type.startsWith("seamless")||K.push(`  ${U.name} ${Q.type}: ${C(Q.entrance)}`);console.warn(`Bad entrance ${C(D)}: raw ${C(H)} in ${y} @ ${C(v)}
${K.join(`
`)}`);continue}if(c.set(w,M,[y.id<<8|v,ne]),t.entrances[0].screen===w){let K=t.entrances[0].coord,U=E.findExitByType(M);((U.entrance&255)-(K&255))**2+((U.entrance>>>8)-(K>>>8))**2<=1024&&(d=M)}}let h=new Map;for(let g of t.pits)h.set(g.fromScreen,g.dest<<8|g.toScreen);let m=new i(t.id,e,n,r);m._screens=l,m._exits=c,m._entrance0=d,m._pits=h;for(let g of t.flags){let w=m._screens[g.screen];w.flag?.startsWith("custom")?m.customFlags.set(g.screen,s.flags[g.flag]):w.flag||m.freeFlags.add(s.flags[g.flag])}return m;function f(g,w,k){for(let E of s.metascreens.getById(w,g.tileset)){let L=E.findEntranceType(k,g.height===1);if(L!=null)return L}}}getUid(t){return this._screens[t].uid}get(t){return this._screens[t]}get width(){return this._width}set width(t){this._width=t,this._pos=void 0}get height(){return this._height}set height(t){this._height>t?this._screens.splice(t+2<<4,this._height-t<<4):this._height<t&&(this._screens.length=t+2<<4,this._screens.fill(this.tileset.empty,this.height+2<<4,this._screens.length)),this._height=t,this._pos=void 0}allPos(){if(this._pos)return this._pos;let t=this._pos=[];for(let e=0;e<this._height;e++)for(let s=0;s<this._width;s++)t.push(e<<4|s);return t}set(t,e){this._screens[t]=e??this.tileset.empty}inBounds(t){return(t&15)<this.width&&t>=0&&t>>>4<this.height}set2d(t,e){for(let s of e){let r=0;for(let n of s)n&&this.set(t+r,n),r++;t+=16}}validate(){for(let t of[0,1])for(let e=t?0:1;e<this.height;e++)for(let s=t;s<this.width;s++){let r=e<<4|s,n=this._screens[r],o=r-(t?1:16),a=this._screens[o];if(!n.isEmpty()&&!a.isEmpty()&&!n.checkNeighbor(a,t))throw new Error(ki("bad neighbor %s (%02x) %s %s (%02x)",a.name,o,R0[t],n.name,r))}return!0}spliceColumns(t,e,s,r){for(let c=0;c<this._screens.length;c+=16)this._screens.copyWithin(c+t+s,c+t+e,c+10),this._screens.splice(c+t,s,...r[c>>4]);let n=s-e;this.width+=n,this._pos=void 0;let o=[];for(let[c,d]of this._exits){let h=c&15;if(h<t+e){h>=t&&this._exits.delete(c,d);continue}o.push([c,d,c+n,d])}this.moveExits(...o);let a=this.rom.locations[this.id],l=t+e<<4;for(let c of a.spawns)c.xt<l||(c.xt-=n<<4);for(let c of a.flags){if(c.xs<t+e){c.xs>=t&&(c.screen=255);continue}c.xs-=n}a.flags=a.flags.filter(c=>c.screen!==255)}setExit(t,e,s){let r=this.rom.locations[s[0]>>>8].meta;if(!r)throw new Error("Cannot set two-way exit without meta");this.setExitOneWay(t,e,s),r.setExitOneWay(s[0]&255,s[1],[this.id<<8|t,e])}setExitOneWay(t,e,s){this._exits.set(t,e,s)}deleteExit(t,e){this._exits.delete(t,e)}getExit(t,e){return this._exits.get(t,e)}exits(){return this._exits}exitCandidates(t){let e=[];for(let s of this.tileset)s.data.exits?.some(r=>r.type===t)&&e.push(s);return e}show(){let t=[],e=[];for(let s=0;s<this.width;s++)e.push(s.toString(16));t.push("   "+e.join("  "));for(let s=0;s<this.height;s++)for(let r=0;r<3;r++){e=[r===1?s.toString(16):" "," "];for(let n=0;n<this.width;n++){let o=this._screens[s<<4|n];e.push(o?.data.icon?.full[r]??(r===1?" ? ":"   "))}t.push(e.join(""))}return t.join(`
`)}screenNames(){let t=[];for(let e=0;e<this.height;e++){let s=[];for(let r=0;r<this.width;r++){let n=this._screens[e<<4|r];s.push(n?.name)}t.push(s.join(" "))}return t.join(`
`)}traverse(t={}){let e=new pt,s=(t.flight?2:0)|(t.noFlagged?1:0);for(let o of this.allPos()){let a=t.with?.get(o)??this._screens[o];for(let l of a.connections[s])l.length&&e.union(l.map(c=>(o<<8)+c))}let r=new Map,n=e.sets();for(let o=0;o<n.length;o++){let a=n[o];for(let l of a)r.set(l,a)}return r}exitType(t){if((t&240)!==224)return;let e=t>>>8,r=this.get(e).data.exits?.[t&15].type;if(!r?.startsWith("edge:"))return r;if(!(r==="edge:top"&&e>>>4)&&!(r==="edge:bottom"&&e>>>4===this.height-1)&&!(r==="edge:left"&&e&15)&&!(r==="edge:bottom"&&(e&15)===this.width-1))return r}poiTile(t){throw new Error("not implemented")}static connect(t,e,s){let r=t.locations[e[0]>>>8].meta,n=t.locations[s[0]>>>8].meta;r.attach(e[0]&255,n,s[0]&255,e[1],s[1])}static findExitTiles(t,e){return t.locations[e[0]>>>8].meta._screens[e[0]&255].findExitByType(e[1]).exits.map(o=>o|(e[0]&255)<<8)}attach(t,e,s,r,n){r||(r=this.pickTypeFromExits(t)),n||(n=e.pickTypeFromExits(s));let o=e.id<<8|s,a=this.id<<8|t,l=this._exits.get(t,r),c=e._exits.get(s,n);if(l&&c){let[d,h]=l,[m,f]=c;if(d===o&&h===n&&m===a&&f===r)return}if(this._exits.set(t,r,[o,n]),e._exits.set(s,n,[a,r]),c&&l){let[d,h]=l,[m,f]=c,g=this.rom.locations[m>>8].meta,w=this.rom.locations[d>>8].meta;g._exits.set(m&255,f,l),w._exits.set(d&255,h,c)}else if(c||l){let[d,h]=c||l;(d!==a||h!==r)&&(d!==o||h!==n)&&this.rom.locations[d>>8].meta._exits.delete(d&255,h)}}pickTypeFromExits(t){let e=[...this._exits.row(t).keys()];if(!e.length)return this.pickTypeFromScreens(t);if(e.length>1)throw new Error(`No single type for ${C(t)}: [${e.join(", ")}]`);return e[0]}moveExits(...t){let e=[];for(let[s,r,n,o]of t){let a=this._exits.get(s,r),[l,c]=a;this.rom.locations[l>>8].meta._exits.set(l&255,c,[this.id<<8|n,o]),e.push([n,o,a]),this._exits.delete(s,r)}for(let[s,r,n]of e)this._exits.set(s,r,n)}moveExit(t,e,s,r){s||(s=this.pickTypeFromExits(t)),r||(r=this.pickTypeFromScreens(e));let n=this._exits.get(t,s),[o,a]=n;this.rom.locations[o>>8].meta._exits.set(o&255,a,[this.id<<8|e,r]),this._exits.set(e,r,n),this._exits.delete(t,s)}moveExitsAndPitsTo(t){let e=new Set;for(let s of t.allPos())t.get(s).data.delete||e.add(s);for(let[s,r,[n,o]]of this._exits){if(!e.has(s))continue;this.rom.locations[n>>>8].meta._exits.set(n&255,o,[t.id<<8|s,r]),t._exits.set(s,r,[n,o]),this._exits.delete(s,r)}for(let[s,r]of this._pits)e.has(s)&&(t._pits.set(s,r),this._pits.delete(s))}pickTypeFromScreens(t){let s=(this._screens[t].data.exits??[]).map(r=>r.type);if(s.length!==1)throw new Error(`No single type for ${C(t)}: [${s.join(", ")}]`);return s[0]}transferFlags(t,e){this.freeFlags=new Set(t.freeFlags);let s=new we(()=>[]);for(let[r,n]of t.customFlags)s.get(t._screens[r]).push(n);for(let r of s.values())e.shuffle(r);for(let r of this.allPos()){let n=this._screens[r];if(n.flag?.startsWith("custom")){let o=s.get(n).pop();if(!o)throw new Error(`No flag for ${n.name} at ${this.rom.locations[this.id]} @${C(r)}`);this.customFlags.set(r,o)}}}transferPits(t){this._pits=t._pits}shufflePits(t){if(!this._pits.size)return;let e=new Set;for(let[,r]of this._pits)e.add(this.rom.locations[r>>>8].id);this._pits.clear();let s=new we(()=>[]);for(let r of this.allPos()){if(!this.get(r).hasFeature("pit"))continue;let o=[-1,this,1/0];for(let[a,,[l]]of this._exits){let c=Ra(r,a);if(e.has(l>>>8)&&c<o[2]){let d=this.rom.locations[l>>>8].meta,h=l&255;o=[Ca(r,h,a,d),d,c]}}o[0]>=0&&s.get(o[1]).push([r,o[0]])}for(let r of e){let n=s.get(this.rom.locations[r].meta);n.length||n.push([0,240])}for(let[r,n]of s){let o=[[],[]],a=new Map;for(let c of r.allPos()){let d=r.get(c);if(d.hasFeature("river")||d.hasFeature("empty"))continue;let h=(d.data.edges||"").split("").map(m=>m===" "?"":m);h[0]&&h[2]&&o[0].push(c),(h[1]&&h[3]||d.hasFeature("spikes"))&&o[1].push(c),d.hasFeature("spikes")&&a.set(c,[...h].filter(m=>m==="s").length)}let l=[0,0];for(let[c,d]of n){let m=this.get(c).data.edges||"",f=m[1]==="c"&&m[3]==="c"?1:0,g=[-1,1/0,0],w=Ca(d,l[0],l[1],r);for(let E of o[f]){let L=a.get(E)??0;if(L<g[2])continue;let M=Ra(w,E);M<g[1]&&(g=[E,M,L])}let k=g[0];if(k<0)throw new Error("no eligible dest");l=[k,w],this._pits.set(c,r.id<<8|k)}}}transferExits(t,e){let s=new we(()=>[]),r=new we(()=>new Set);for(let n of this.allPos()){let o=this._screens[n];for(let{type:a}of o.data.exits??[])a==="edge:top"&&n>>>4||a==="edge:left"&&n&15||a==="edge:bottom"&&n>>>4<this.height-1||a==="edge:right"&&(n&15)<this.width-1||s.get(a).push(n)}for(let n of s.values())e.shuffle(n);for(let[n,o,a]of t._exits){if(r.get(o).has(n))continue;let l=s.get(o).pop();if(l==null)throw new Error(`Could not transfer exit ${o} in ${this.rom.locations[this.id]}: no eligible screen
${this.show()}`);let c=this.rom.locations[a[0]>>>8].meta,d=a[0]&255,h=a[1];if(c===t){let f=s.get(h).pop();if(f==null)throw new Error("Impossible");this._exits.set(l,o,[this.id<<8|f,h]),this._exits.set(f,h,[this.id<<8|l,o]),r.get(h).add(d);continue}let m=c._exits.get(d,h);if(!m){let f=this.rom.locations[a[0]>>>8];throw console.log(c),new Error(`No exit for ${f} at ${C(d)} ${h}
${c.show()}
${this.rom.locations[this.id]} at ${C(n)} ${o}
${this.show()}`)}m[0]>>>8===this.id&&(m[0]&255)===n&&m[1]===o&&c._exits.set(d,h,[this.id<<8|l,o]),this._exits.set(l,o,a)}}transferSpawns(t,e){let s=new Map,r=new Map,n=[],o=[],a=[],l=[],c=[];for(let f of[this,t]){for(let g of f.allPos()){let w=f._screens[g],k=g&240,E=(g&15)<<4;if(w.hasFeature("pit")&&f===this)r.set(g,w.edgeIndex("c")===5?0:1);else if(w.data.statues?.length&&f===this)for(let L=0;L<w.data.statues.length;L++){let M=w.data.statues[L]<<12,S=(g&15^g>>>4^L)&1?80:160;n.push([g,M|S])}if(f===this&&w.hasFeature("wall")){if(w.data.wall==null)throw new Error("Missing wall prop");let L=[k|w.data.wall>>4,E|w.data.wall&15];a.push(L),w.data.tilesets.lime&&a.push([L[0]-1,L[1]])}else if(f===this&&w.hasFeature("bridge")){if(w.data.wall==null)throw new Error("Missing wall prop");l.push([k|w.data.wall>>4,E|w.data.wall&15])}if(w.hasFeature("arena"))if(f===this)c.push([k|8,E|8]);else{let[L,M]=c.pop();o.push([k|8,E|8,L,M,144,"arena"])}}f===this&&(e.shuffle(c),e.shuffle(n))}for(let f of[this,t])for(let[g,w,k]of f._exits){let E=f._screens[g],L=E.data.exits?.find(D=>D.type===w);if(!L)throw new Error(`Invalid exit: ${E.name} ${w}`);let M=g&15,y=g>>>4,S=L.exits[0]&15,v=L.exits[0]>>>4;if(f===this)s.set(k,[y<<4|v,M<<4|S]);else if(k[0]>>>8!==this.id){let[D,H]=s.get(k);o.push([y<<4|v,M<<4|S,D,H,25,"exit"])}}let d=[[],[],[],[],[],[]];for(let f of this.allPos()){let g=this._screens[f];for(let[w,k=112,E=120]of g.data.poi??[]){let L=((f&240)<<4)+k,M=((f&15)<<8)+E;d[w].push([L,M])}}for(let f of d)e.shuffle(f);let h=[...et.concat(...d)],m=this.rom.locations[this.id];for(let f of e.ishuffle(m.spawns)){if(f.isMonster()){let E=Na.indexOf(f.monsterId);if(E>=0&&r.size){let[[L,M]]=r;r.delete(L),f.monsterId=Na[E&2|M],f.screen=L,f.tile=M?115:71}else if(f.monsterId===143&&n.length){let[L,M]=n.pop();f.screen=L,f.coord=M}continue}else if(f.isWall()){let E=(f.wallType()==="bridge"?l:a).pop();if(!E)throw new Error(`Not enough ${f.wallType()} screens in new metalocation: ${m}
${this.show()}`);let[L,M]=E;f.yt=L,f.xt=M;continue}else if(f.isNpc()||f.isBoss()||f.isTrigger()||f.isGeneric()){let E=[-1,-1,1/0];for(let[L,M,y,S,v,D]of o){if(D!=="arena"&&f.isBoss())continue;let H=Kn(f.yt,L)**2+(f.xt-M)**2;H<=v&&H<E[2]&&(E=[aa(f.yt,Kn(y,L)),f.xt+S-M,H])}if(Number.isFinite(E[2])){[f.yt,f.xt]=E;continue}}if(f.isTrigger()||f.isBoss())throw new Error(`Could not place ${m} ${f.isBoss()?"Boss":"Trigger"} ${f.hex()}
${this.show()}`);let g=h.shift();if(!g)throw new Error(`Ran out of POI for ${m}`);let[w,k]=g;o.push([f.y>>>4,f.x>>>4,w>>>4,k>>>4,4,"???"]),f.y=w,f.x=k}}reconcileExits(t){let e=[],s=[];for(let r of[this,t])for(let[n,o,[a,l]]of r._exits){if(l.startsWith("seamless"))continue;let d=this.rom.locations[a>>>8].meta._exits.get(a&255,l);if(d){let[h,m]=d;if(h>>>8===r.id&&(h&255)===n&&m===o){e.push([r===this?t:this,n,o,[a,l]]);continue}}s.push([r,n,o])}for(let[r,n,o]of s)r._exits.delete(n,o);for(let[r,n,o,a]of e)r._exits.set(n,o,a)}writeEntrance0(){if(this._entrance0)for(let[t,e]of this._exits){if(e!==this._entrance0)continue;let s=this._screens[t].findExitByType(e);this.rom.locations[this.id].entrances[0]=rt.of({screen:t,coord:s.entrance});return}}write(){let t=this.rom.locations[this.id],e=new Set;for(let[a,l,[c,d]]of this._exits){let h=this._screens[a],m=c>>8,f=c&255,g=this.rom.locations[m],k=g.meta._screens[c&255],E=h.data.exits?.find(y=>y.type===l),L=k.data.exits?.find(y=>y.type===d);if(!E||!L)throw new Error(`Missing ${E?"dest":"source"} exit:
  From: ${t} @ ${C(a)}:${l} ${h.name}
  To:   ${g} @ ${C(f)}:${d} ${k.name}`);let M=32;if(L.type.startsWith("seamless"))e.add(a);else{let y=L.entrance;y>61439&&(f+=16,y-=65536),M=g.findOrAddEntrance(f,y)}for(let y of E.exits){let S=a;(y&240)===240&&(S+=16,y&=15),t.exits.push(Tt.of({screen:S,tile:y,dest:m,entrance:M}))}}t.width=this._width,t.height=this._height,t.screens=[];for(let a=0;a<this._height;a++){let l=[];t.screens.push(l);for(let c=0;c<this._width;c++)l.push(this._screens[a<<4|c].sid)}t.tileset=this.tileset.tilesetId,t.tileEffects=this.tileset.effects().id;let s=new pt;for(let a of this.allPos()){if(e.has(a))continue;let l=this._screens[a],c=a+16,d=a+1;!e.has(c)&&(l.data.edges?.[2]??" ")!==" "&&s.union([a,c]),!e.has(d)&&(l.data.edges?.[3]??" ")!==" "&&s.union([a,d]),s.union([a])}let r=s.map(),n=new Set;for(let[a]of this._exits)for(let l of r.get(a)??[])n.add(l);t.flags=[];let o=[...this.freeFlags];for(let a of this.allPos()){let l=this._screens[a],c;l.data.wall!=null&&n.has(a)?c=o.pop()?.id??this.rom.flags.alloc(512):l.flag==="always"?c=this.rom.flags.AlwaysTrue.id:l.flag==="calm"?c=this.rom.flags.CalmedAngrySea.id:l.flag==="custom:false"?c=this.customFlags.get(a)?.id:l.flag==="custom:true"&&(c=this.customFlags.get(a)?.id??this.rom.flags.AlwaysTrue.id),c!=null&&t.flags.push(zt.of({screen:a,flag:c}))}t.pits=[];for(let[a,l]of this._pits){let c=l&255,d=l>>>8;t.pits.push(us.of({fromScreen:a,toScreen:c,dest:d}))}}replaceMonsters(t){if(this.id===104)return;let e=this.rom.locations[this.id],s=e.monsterPlacer(t);for(let r of e.spawns){if(!r.used||!r.isMonster())continue;let n=e.rom.objects[r.monsterId];if(!(n instanceof T))continue;let o=s(n);o==null?(console.error(`no valid location for ${C(n.id)} ${n.name} in ${e}`),r.used=!1):n.isBird()?(r.y=4048,r.x=2032,r.timed=!0):(r.screen=o>>>8,r.tile=o&255)}}},A0=new Set([65594,65595,1392800,1716320,4202496,4202544,4292816,6326207,10552102,10552105,11077158,11077161]),R0=["above","left of","below","right of"];Na=[126,127,159,141]});function P0(i,t,e){let s=[],r=i&61680,n=i&3855;return r<(e-1<<12|224)&&s.push((i&240)===224?i+3872:i+16),r&&s.push(i&240?i-16:i-3872),n<(t-1<<8|15)&&s.push((i&15)===15?i+241:i+1),n&&s.push(i&15?i-1:i-241),s}var C0,N0,I0,Ba,he,V,B0,Da,D0,Pa,Wa,Ua,Xn,Gt,Oa,x,gr,yr,Fa,za=z(()=>{oa();ve();Ia();$();fr();Xe();hr();({$0a:C0,$0b:N0,$0c:I0,$0d:Ba}=me),he={subArea:"cave",music:i=>`${i.name}-Cave`,palette:i=>`${i.name}-Cave`},V={subArea:"house",palette:()=>Symbol()},B0={subArea:"house",palette:()=>Symbol(),music:i=>`${i.name}-FortuneTeller`},Da={name:"mesia",music:i=>`${i.name}-Mesia`,palette:i=>i.name==="Tower"?i.name:`${i.name}-Mesia`},D0={name:"dyna",music:i=>`${i.name}-Dyna`,palette:i=>`${i.name}-Dyna`},Pa={name:"goa 1",music:"goa 1",palette:"goa 1"},Wa={name:"goa 2",music:"goa 2",palette:"goa 2"},Ua={name:"goa 3",music:"goa 3",palette:"goa 3"},Xn={...Ua,palette:"goa 3 upper"},Gt={name:"goa 4",music:"goa 4",palette:"goa 4"},Oa={...Gt,palette:"goa 4 lower"},x=(()=>{let i=So(),t;function e(s,r={}){return r={...r},t=r.area=r.area||t,i(s,r)}return e.commit=s=>{i.commit(s,(r,n,o)=>{let a=mt(r),l=o.area,c=typeof o.music=="function"?o.music(l):o.music!=null?o.music:l.name,d=typeof o.palette=="function"?o.palette(l):o.palette||l.name,h={area:l,name:a,music:c,palette:d};o.houseType!=null&&(h.houseType=o.houseType),o.subArea!=null&&(h.subArea=o.subArea),o.bossScreen!=null&&(h.bossScreen=o.bossScreen);let m=new yr(s.rom,n,h);return n>=0&&(s[n]=m),m})},e})(),gr=class extends Array{constructor(e){super(256);this.rom=e;this.MezameShrine=x(0,{area:B.Mezame});this.Leaf_OutsideStart=x(1,{music:1});this.Leaf=x(2,{area:B.Leaf});this.ValleyOfWind=x(3,{area:B.ValleyOfWind});this.SealedCave1=x(4,{area:B.SealedCave});this.SealedCave2=x(5);this.SealedCave6=x(6);this.SealedCave4=x(7);this.SealedCave5=x(8);this.SealedCave3=x(9);this.SealedCave7=x(10,{bossScreen:145});this.SealedCave8=x(12);this.WindmillCave=x(14,{area:B.WindmillCave});this.Windmill=x(15,{area:B.Windmill,music:0,houseType:"outside"});this.ZebuCave=x(16,{area:B.ZebuCave});this.MtSabreWest_Cave1=x(17,{area:B.MtSabreWest,...he});this.CordelPlainWest=x(20,{area:B.CordelPlain});this.CordelPlainEast=x(21);this.Brynmaer=x(24,{area:B.Brynmaer});this.OutsideStomHouse=x(25,{area:B.StomHouse,music:0});this.Swamp=x(26,{area:B.Swamp,bossScreen:124});this.Amazones=x(27,{area:B.Amazones,fixed:[13,14]});this.Oak=x(28,{area:B.Oak});this.StomHouse=x(30,{area:B.StomHouse,houseType:"outside"});this.MtSabreWest_Lower=x(32,{area:B.MtSabreWest});this.MtSabreWest_Upper=x(33);this.MtSabreWest_Cave2=x(34,he);this.MtSabreWest_Cave3=x(35,he);this.MtSabreWest_Cave4=x(36,he);this.MtSabreWest_Cave5=x(37,he);this.MtSabreWest_Cave6=x(38,he);this.MtSabreWest_Cave7=x(39,he);this.MtSabreNorth_Main=x(40,{area:B.MtSabreNorth,bossScreen:181});this.MtSabreNorth_Middle=x(41);this.MtSabreNorth_Cave2=x(42,he);this.MtSabreNorth_Cave3=x(43,he);this.MtSabreNorth_Cave4=x(44,he);this.MtSabreNorth_Cave5=x(45,he);this.MtSabreNorth_Cave6=x(46,he);this.MtSabreNorth_PrisonHall=x(47,he);this.MtSabreNorth_LeftCell=x(48,he);this.MtSabreNorth_LeftCell2=x(49,he);this.MtSabreNorth_RightCell=x(50,he);this.MtSabreNorth_Cave8=x(51,he);this.MtSabreNorth_Cave9=x(52,he);this.MtSabreNorth_SummitCave=x(53,he);this.MtSabreNorth_Cave1=x(56,he);this.MtSabreNorth_Cave7=x(57,he);this.Nadare_Inn=x(60,{area:B.Nadare,...V});this.Nadare_ToolShop=x(61,{...V,houseType:"tool"});this.Nadare_BackRoom=x(62,{...V,houseType:"house"});this.WaterfallValleyNorth=x(64,{area:B.WaterfallValley});this.WaterfallValleySouth=x(65);this.LimeTreeValley=x(66,{area:B.LimeTreeValley,music:0});this.LimeTreeLake=x(67,{area:B.LimeTreeLake,music:0});this.KirisaPlantCave1=x(68,{area:B.KirisaPlantCave});this.KirisaPlantCave2=x(69);this.KirisaPlantCave3=x(70);this.KirisaMeadow=x(71,{area:B.KirisaMeadow});this.FogLampCave1=x(72,{area:B.FogLampCave});this.FogLampCave2=x(73);this.FogLampCave3=x(74);this.FogLampCaveDeadEnd=x(75);this.FogLampCave4=x(76);this.FogLampCave5=x(77);this.FogLampCave6=x(78);this.FogLampCave7=x(79);this.Portoa=x(80,{area:B.Portoa});this.Portoa_FishermanIsland=x(81,{area:B.FishermanHouse,music:0});this.MesiaShrine=x(82,{area:B.LimeTreeLake,...Da});this.WaterfallCave1=x(84,{area:B.WaterfallCave});this.WaterfallCave2=x(85);this.WaterfallCave3=x(86);this.WaterfallCave4=x(87);this.TowerEntrance=x(88,{area:B.Tower});this.Tower1=x(89);this.Tower2=x(90);this.Tower3=x(91);this.TowerOutsideMesia=x(92);this.TowerOutsideDyna=x(93);this.TowerMesia=x(94,Da);this.TowerDyna=x(95,D0);this.AngrySea=x(96,{area:B.AngrySea});this.BoatHouse=x(97,{houseType:"outside"});this.JoelLighthouse=x(98,{area:B.Lighthouse,music:0,houseType:"outside"});this.UndergroundChannel=x(100,{area:B.UndergroundChannel});this.ZombieTown=x(101,{area:B.ZombieTown});this.EvilSpiritIsland1=x(104,{area:B.EvilSpiritIslandEntrance,music:1});this.EvilSpiritIsland2=x(105,{area:B.EvilSpiritIsland});this.EvilSpiritIsland3=x(106);this.EvilSpiritIsland4=x(107);this.SaberaPalace1=x(108,{area:B.SaberaFortress,bossScreen:253,houseType:"palace"});this.SaberaPalace2=x(109);this.SaberaPalace2_West=x(-1);this.SaberaPalace3=x(110,{bossScreen:253});this.JoelSecretPassage=x(112,{area:B.JoelPassage});this.Joel=x(113,{area:B.Joel});this.Swan=x(114,{area:B.Swan,music:1});this.SwanGate=x(115,{area:B.SwanGate,music:1});this.GoaValley=x(120,{area:B.GoaValley});this.MtHydra=x(124,{area:B.MtHydra});this.MtHydra_Cave1=x(125,he);this.MtHydra_OutsideShyron=x(126,{fixed:[13,14]});this.MtHydra_Cave2=x(127,he);this.MtHydra_Cave3=x(128,he);this.MtHydra_Cave4=x(129,he);this.MtHydra_Cave5=x(130,he);this.MtHydra_Cave6=x(131,he);this.MtHydra_Cave7=x(132,he);this.MtHydra_Cave8=x(133,he);this.MtHydra_Cave9=x(134,he);this.MtHydra_Cave10=x(135,he);this.Styx1=x(136,{area:B.Styx,houseType:"palace"});this.Styx2=x(137);this.Styx2_East=x(-1);this.Styx3=x(138);this.Shyron=x(140,{area:B.Shyron});this.Goa=x(142,{area:B.Goa});this.GoaFortressBasement=x(143,{area:B.FortressBasement,music:0});this.Desert1=x(144,{area:B.Desert1});this.OasisCaveMain=x(145,{area:B.OasisCave});this.DesertCave1=x(146,{area:B.DesertCave1,music:0});this.Sahara=x(147,{area:B.Sahara});this.SaharaOutsideCave=x(148,{music:0});this.DesertCave2=x(149,{area:B.DesertCave2,music:1});this.SaharaMeadow=x(150,{area:B.SaharaMeadow,music:0});this.Desert2=x(152,{area:B.Desert2});this.Pyramid_Entrance=x(156,{area:B.Pyramid,houseType:"palace"});this.Pyramid_Branch=x(157);this.Pyramid_Main=x(158);this.Pyramid_Draygon=x(159);this.Crypt_Entrance=x(160,{area:B.Crypt});this.Crypt_Hall1=x(161);this.Crypt_Branch=x(162);this.Crypt_DeadEndLeft=x(163);this.Crypt_DeadEndRight=x(164);this.Crypt_Hall2=x(165);this.Crypt_Draygon2=x(166);this.Crypt_Teleporter=x(167,{music:"Crypt-Teleporter"});this.GoaFortress_Entrance=x(168,{area:B.GoaFortress,music:1,houseType:"palace"});this.GoaFortress_Kelbesque=x(169,{bossScreen:115,...Pa});this.GoaFortress_Zebu=x(170,{...Pa,palette:1});this.GoaFortress_Sabera=x(171,Wa);this.GoaFortress_Tornel=x(172,{bossScreen:145,...Wa,palette:1});this.GoaFortress_Mado1=x(173,Ua);this.GoaFortress_Mado2=x(174,Xn);this.GoaFortress_Mado3=x(175,Xn);this.GoaFortress_Karmine1=x(176,Gt);this.GoaFortress_Karmine2=x(177,Gt);this.GoaFortress_Karmine3=x(178,Gt);this.GoaFortress_Karmine4=x(179,Gt);this.GoaFortress_Karmine5=x(180,Gt);this.GoaFortress_Karmine6=x(181,Oa);this.GoaFortress_Karmine7=x(182,{bossScreen:253,...Oa});this.GoaFortress_Exit=x(183,{music:0});this.OasisCave_Entrance=x(184,{area:B.OasisEntrance,music:2});this.GoaFortress_Asina=x(185,{area:B.GoaFortress,...Xn,bossScreen:145});this.GoaFortress_Kensu=x(186,Gt);this.Goa_House=x(187,{area:B.Goa,...V,houseType:"house"});this.Goa_Inn=x(188,{...V,houseType:"inn"});this.Goa_ToolShop=x(190,{...V,houseType:"tool"});this.Goa_Tavern=x(191,{...V,houseType:"tavern"});this.Leaf_ElderHouse=x(192,{area:B.Leaf,...V,houseType:"house"});this.Leaf_RabbitHut=x(193,{...V,houseType:"shed"});this.Leaf_Inn=x(194,{...V,houseType:"inn"});this.Leaf_ToolShop=x(195,{...V,houseType:"tool"});this.Leaf_ArmorShop=x(196,{...V,houseType:"armor"});this.Leaf_StudentHouse=x(197,{...V,houseType:"house"});this.Brynmaer_Tavern=x(198,{area:B.Brynmaer,...V,houseType:"tavern"});this.Brynmaer_PawnShop=x(199,{...V,houseType:"pawn"});this.Brynmaer_Inn=x(200,{...V,houseType:"inn"});this.Brynmaer_ArmorShop=x(201,{...V,houseType:"armor"});this.Brynmaer_ItemShop=x(203,{...V,houseType:"tool"});this.Oak_ElderHouse=x(205,{area:B.Oak,...V,houseType:"house"});this.Oak_MotherHouse=x(206,{...V,houseType:"house"});this.Oak_ToolShop=x(207,{...V,houseType:"tool"});this.Oak_Inn=x(208,{...V,houseType:"inn"});this.Amazones_Inn=x(209,{area:B.Amazones,...V,houseType:"inn"});this.Amazones_ItemShop=x(210,{...V,houseType:"tool"});this.Amazones_ArmorShop=x(211,{...V,houseType:"armor"});this.Amazones_Elder=x(212,{...V,houseType:"house",fixed:[13,14]});this.Nadare=x(213,{area:B.Nadare});this.Portoa_FishermanHouse=x(214,{area:B.FishermanHouse,...V,music:0,houseType:"outside"});this.Portoa_PalaceEntrance=x(215,{area:B.PortoaPalace,houseType:"palace"});this.Portoa_FortuneTeller=x(216,{area:B.Portoa,fixed:[13,14],...B0,houseType:"house"});this.Portoa_PawnShop=x(217,{...V,houseType:"pawn"});this.Portoa_ArmorShop=x(218,{...V,houseType:"armor"});this.Portoa_Inn=x(220,{...V,houseType:"inn"});this.Portoa_ToolShop=x(221,{...V,houseType:"tool"});this.PortoaPalace_Left=x(222,{area:B.PortoaPalace,...V,houseType:"house"});this.PortoaPalace_ThroneRoom=x(223,V);this.PortoaPalace_Right=x(224,{...V,houseType:"house"});this.Portoa_AsinaRoom=x(225,{area:B.UndergroundChannel,...V,music:"asina"});this.Amazones_ElderDownstairs=x(226,{area:B.Amazones,...V});this.Joel_ElderHouse=x(227,{area:B.Joel,...V,houseType:"house"});this.Joel_Shed=x(228,{...V,houseType:"shed"});this.Joel_ToolShop=x(229,{...V,houseType:"tool"});this.Joel_Inn=x(231,{...V,houseType:"inn"});this.ZombieTown_House=x(232,{area:B.ZombieTown,...V,houseType:"house"});this.ZombieTown_HouseBasement=x(233,V);this.Swan_ToolShop=x(235,{area:B.Swan,...V,houseType:"tool"});this.Swan_StomHut=x(236,{...V,houseType:"shed"});this.Swan_Inn=x(237,{...V,houseType:"inn"});this.Swan_ArmorShop=x(238,{...V,houseType:"armor"});this.Swan_Tavern=x(239,{...V,houseType:"tavern"});this.Swan_PawnShop=x(240,{...V,houseType:"pawn"});this.Swan_DanceHall=x(241,{...V,houseType:"house"});this.Shyron_Temple=x(242,{area:B.ShyronTemple,bossScreen:112,houseType:"palace"});this.Shyron_TrainingHall=x(243,{area:B.Shyron,...V,houseType:"house"});this.Shyron_Hospital=x(244,{...V,houseType:"house"});this.Shyron_ArmorShop=x(245,{...V,houseType:"armor"});this.Shyron_ToolShop=x(246,{...V,houseType:"tool"});this.Shyron_Inn=x(247,{...V,houseType:"inn"});this.Sahara_Inn=x(248,{area:B.Sahara,...V,houseType:"inn"});this.Sahara_ToolShop=x(249,{...V,houseType:"tool"});this.Sahara_ElderHouse=x(250,{...V,houseType:"house"});this.Sahara_PawnShop=x(251,{...V,houseType:"pawn"});this.EastCave1=x(-1,{area:B.EastCave});this.EastCave2=x(-1);this.EastCave3=x(-1);this.FishermanBeach=x(-1,{area:B.FishermanHouse,...V});this.locsByScreen=new we(()=>[]);x.commit(this);for(let s=0;s<256;s++){if(this[s]){this.indexScreens(this[s]);continue}this[s]=new yr(e,s,{area:B.Unused,name:"",music:"",palette:""})}}indexScreens(e){for(let s of e.screens)for(let r of s)this.locsByScreen.get(r).push(e)}renumberScreen(e,s){let r=this.locsByScreen.get(e);this.locsByScreen.set(s,r),this.locsByScreen.delete(e);for(let n of r)for(let o of n.screens)for(let a=0;a<o.length;a++)o[a]===e&&(o[a]=s)}allocate(e,s){for(let r of this)if(!(r.used||s&&r.id<s.id))return e.id=r.id,e.used=!0,this.indexScreens(e),this[r.id]=e;throw new Error("No unused location")}write(){let e=this.rom.assembler();de(e,C0,34040,40960),de(e,N0,40960,48640),de(e,I0,37881,40960),de(e,Ba,40960,44032),de(e,Ba,44544,49152);for(let s of this)s.assemble(e);return[e.module()]}location(){}},yr=class extends ee{constructor(e,s,r){super(e,s);this.data=r;this.monstersMoved=!1;this._isShop=void 0;this._meta=void 0;let n=s>=0?le(e.prg,this.mapDataPointer)+49152:0;if(this.used=n>49152&&!!this.name,!this.used){this.bgm=this.originalBgm=0,this.layoutWidth=0,this.layoutHeight=0,this.animation=0,this.screens=[[0]],this.tilePalettes=[36,1,38],this.originalTilePalettes=[36,1,38],this.tileset=128,this.tileEffects=179,this.tilePatterns=[2,4],this.exits=[],this.entrances=[],this.flags=[],this.pits=[],this.spawns=[],this.spritePalettes=[0,0],this.spritePatterns=[0,0],this.checkpoint=this.saveable=!1;return}let o=le(e.prg,n)+49152,a=le(e.prg,n+2)+49152,l=le(e.prg,n+4)+49152,c=le(e.prg,n+6)+49152,d=le(e.prg,n+8)+49152,h=this.used&&o!==n+10,m=c-l;this.exits=(()=>{let E=[],L=c;for(;!(e.prg[L]&128);)e.prg[L+2]!=255&&E.push(Tt.from(e.prg,L)),L+=4;return e.prg[L]!==255&&(h=!!(e.prg[L]&64),m=(e.prg[L]&31)<<2),E})();let f=h?le(e.prg,n+10)+49152:0;this.bgm=this.originalBgm=e.prg[o],this.layoutWidth=e.prg[o+1],this.layoutHeight=e.prg[o+2],this.animation=e.prg[o+3];let g=e.prg[o+4]?256:0;this.screens=j(this.height,E=>X(e.prg,o+5+E*this.width,this.width).map(L=>g|L)),this.tilePalettes=X(e.prg,a,3),this.originalTilePalettes=X(this.tilePalettes,0,3),this.tileset=e.prg[a+3],this.tileEffects=e.prg[a+4],this.tilePatterns=X(e.prg,a+5,2),this.entrances=go(4,e.prg.slice(l,l+m),E=>rt.from(E)),this.flags=Ks(e.prg,d,2,255,1/0,E=>zt.from(E)),this.pits=f?Ks(e.prg,f,4,255,1/0,E=>us.from(E)):[];let w=le(e.prg,this.npcDataPointer)+65536,k=w!==65536;this.spritePalettes=k?X(e.prg,w+1,2):[0,0],this.spritePatterns=k?X(e.prg,w+3,2):[0,0],this.spawns=k?Ks(e.prg,w+5,4,255,1/0,E=>ur.from(E)):[],this.checkpoint=!!(e.prg[196352|s]&128),this.saveable=!!(e.prg[196352|s]&1)}set meta(e){this._meta=e}get meta(){return this.ensureMeta(),this._meta}ensureMeta(){this._meta||(this._meta=br.of(this))}set musicGroup(e){this._musicGroup=e}get musicGroup(){return this.ensureMusicGroup(),this._musicGroup}ensureMusicGroup(){if(this._musicGroup==null){let e=this.data.music;this._musicGroup=typeof e!="number"?e:this.rom.locations[this.exits[e].dest].musicGroup}}set colorGroup(e){this._colorGroup=e}get colorGroup(){return this.ensureColorGroup(),this._colorGroup}ensureColorGroup(){if(this._colorGroup==null){let e=this.data.music;this._colorGroup=typeof e!="number"?e:this.rom.locations[this.exits[e].dest].colorGroup}}lazyInitialization(){this.ensureMeta(),this.ensureMusicGroup(),this.ensureColorGroup()}get name(){return this.data.name}get mapDataPointer(){if(this.id<0)throw new Error(`no mapdata pointer for ${this.name}`);return 82688+(this.id<<1)}get npcDataPointer(){if(this.id<0)throw new Error(`no npcdata pointer for ${this.name}`);return 102913+(this.id<<1)}get hasSpawns(){return this.spawns.length>0}mapPlane(){let e=new we(()=>new Set);for(let r of this.screens)for(let n of r)e.get(n>>>8).add(n);if(e.size!==1)throw new Error(`Non-unique screen page for ${this}: ${[...e.values()].map(r=>[...r].map(n=>{let[o]=this.rom.metascreens.getById(n);return`${C(n)} ${o?.name??"??"}`}).join(", ")).join(", ")}`);let[s]=e.keys();return s}isShop(){return this._isShop==null&&(this._isShop=this.rom.shops.findIndex(e=>e.location===this.id)>=0,this.id===251&&(this._isShop=!0)),this._isShop}spawn(e){let s=this.spawns[e-13];if(!s)throw new Error(`Expected spawn $${C(e)}`);return s}get width(){return this.layoutWidth+1}set width(e){this.layoutWidth=e-1}get height(){return this.layoutHeight+1}set height(e){this.layoutHeight=e-1}findOrAddEntrance(e,s){for(let r=0;r<this.entrances.length;r++){let n=this.entrances[r];if(n.screen===e&&n.coord===s)return r}return this.entrances.push(rt.of({screen:e,coord:s})),this.entrances.length-1}assemble(e){if(!this.used)return;let s=this.id.toString(16).padStart(2,"0"),r=this.spawns.length?this.spritePalettes:[255,255],n=this.spawns.length?this.spritePatterns:[255,255],o=[],a=[0,...r,...n,...Bt(this.spawns),255];e.segment("0c","0d"),e.reloc(`NpcData_${s}`);let l=e.pc();e.byte(...a),e.org(37377+(this.id<<1),`NpcData_${s}_Ptr`),e.word(l),e.segment("17"),e.org(48896|this.id),e.byte(+this.checkpoint<<7|+this.saveable),e.segment("0a","0b");let c=[];for(let L of Bt(this.screens))c.push(L&255);let d=this.rom.compressedMapData?[this.bgm,this.layoutHeight<<4|this.layoutWidth,this.mapPlane()<<2|this.animation,...c]:[this.bgm,this.layoutWidth,this.layoutHeight,this.animation,this.mapPlane()?128:0,...c];e.reloc(`MapData_${s}_Layout`);let h=e.pc();e.byte(...d),o.push(h),e.reloc(`MapData_${s}_Graphics`);let m=e.pc();if(e.byte(...this.tilePalettes,this.tileset,this.tileEffects,...this.tilePatterns),o.push(m),this.height===1){for(let L of this.entrances)L.used&&L.y>191&&(L.y=191);for(let L of this.exits)L.yt>12&&(L.yt=12)}e.reloc(`MapData_${s}_Entrances`);let f=e.pc();e.byte(...Bt(this.entrances)),o.push(f),e.reloc(`MapData_${s}_Exits`);let g=e.pc();e.byte(...Bt(this.exits),128|(this.pits.length?64:0)|this.entrances.length),o.push(g),e.reloc(`MapData_${s}_Flags`);let w=e.pc();e.byte(...Bt(this.flags),255),o.push(w);let k=Bt(this.pits);if(k.length){e.reloc(`MapData_${s}_Pits`);let L=e.pc();e.byte(...k),o.push(L)}e.reloc(`MapData_${s}`);let E=e.pc();e.word(...o),e.org(33536+(this.id<<1),`MapData_${s}_Ptr`),e.word(E)}allScreens(){let e=new Set;for(let s of this.screens)for(let r of s)e.add(this.rom.screens[r]);return e}bossId(){for(let e=0;e<14;e++)if(this.rom.prg[129373+e]===this.id)return e}hasDolphin(){return this.id===96||this.id===100||this.id===104}isTower(){return(this.id&248)===88}reachableTiles(e=!1){this.hasDolphin()&&(e=!0);let s=new Set(this.exits.map(h=>h.screen<<8|h.tile)),r=new pt,n=this.rom.tilesets[this.tileset],o=this.rom.tileEffects[this.tileEffects-179],a=new Set;for(let h=0;h<this.height;h++){let m=this.screens[h];for(let f=0;f<this.width;f++){let g=this.rom.screens[m[f]],w=h<<4|f,k=this.flags.find(E=>E.screen===w);for(let E=0;E<240;E++){let L=w<<8|E;if(s.has(L))continue;let M=g.tiles[E],y=o.effects[M],S=e?y&4:y&6;k&&S&&M<32&&n.alternates[M]!=M&&(M=n.alternates[M],y=o.effects[M],S=e?y&4:y&6),S||a.add(L)}}}for(let h of a){let m=(h&15)===15?h+241:h+1;a.has(m)&&r.union([h,m]);let f=(h&240)===224?h+3872:h+16;a.has(f)&&r.union([h,f])}let l=r.map(),c=new Set;for(let h of this.entrances){if(!h.used)continue;let m=h.screen<<8|h.tile;c.add(l.get(m)||new Set)}let d=new Map;for(let h of c)for(let m of h){let f=this.screens[m>>>12][m>>>8&15],g=this.rom.screens[f];d.set(m,o.effects[g.tiles[m&255]])}return d}screenMover(){let e=new we(()=>[]),s=et.concat(this.spawns,this.exits,this.entrances);for(let r of s)e.get(r.screen).push(r);return(r,n)=>{for(let o of e.get(r))o.screen=n}}moveScreen(e,s){let r=et.concat(this.spawns,this.exits,this.entrances);for(let n of r)n.screen===e&&(n.screen=s)}monsterPlacer(e){this.monstersMoved=!0;let s=this.data.bossScreen,r=this.reachableTiles(!1),n=new Map([...r.keys()].map(m=>[m,0])),o=[],a=[],l=[],c=[],d=[],h=this.hasDolphin()?37:39;for(let[m,f]of n){let g=this.screens[m>>>12][m>>>8&15];if(g!==s){for(let w of P0(m,this.width,this.height))n.has(w)||n.set(w,f+1);!f&&!(r.get(m)&h)&&o.push(m),this.id===26?this.rom.screens[g].tiles[m&255]===240&&c.push(m):f>=2&&f<=4&&c.push(m),f>=3&&f<=7&&a.push(m),f>=12&&l.push(m)}}return m=>{let f=m.clearance(),g=m.placement(),w=[...g==="normal"?o:g==="moth"?a:g==="bird"?l:g==="plant"?c:ft(g)],k;e:for(;w.length;){let E=e.nextInt(w.length),[L]=w.splice(E,1),M=(L&3840)>>>4|L&15,y=(L&61440)>>>8|(L&240)>>>4;for(let{x:S,y:v,used:D}of this.entrances){if(!D)continue;if((y-(v>>4))**2+(M-(S>>4))**2<(f+1)**2)continue e}for(let S of this.exits){if(!S.isSeamless())continue;let{x:v,y:D}=S;if((y-(D>>4))**2+(M-(v>>4))**2<(f+8)**2)continue e}for(let[,S,v,D]of d){let H=(y-v)**2+(M-S)**2;if(!H)continue e;if(H<(f+D)**2){(!k||k[2]<H)&&(k=[M,y,H]);continue e}}k=[M,y,1/0];break}if(k){let[E,L]=k;d.push([m,E,L,f]);let M=L&240|(E&240)>>>4,y=(L&15)<<4|E&15;return M<<8|y}}}resizeScreens(e,s,r,n,o=0){let a=this.width+s+n,l=this.height+e+r,c=Array.from({length:l},(d,h)=>(h-=e,Array.from({length:a},(m,f)=>(f-=s,h<0||f<0||h>=this.height||f>=this.width?o:this.screens[h][f]))));this.width=a,this.height=l,this.screens=c;for(let d of this.flags)d.xs+=s,d.ys+=e;for(let d of this.pits)d.fromXs+=s,d.fromYs+=e;for(let d of[...this.spawns,...this.exits])d.xt+=16*s,d.yt+=16*e;for(let d of this.entrances)d.used&&(d.x+=256*s,d.y+=256*e)}writeScreens2d(e,s){let r=e&15,n=e>>>4;for(let o=0;o<s.length;o++){let a=s[o];for(let l=0;l<a.length;l++){let c=a[l];c!=null&&(c<0&&(c=~c,this.flags.push(zt.of({screen:n+o<<4|r+l,flag:this.rom.flags.AlwaysTrue.id}))),this.screens[n+o][r+l]=c)}}}connect(e,s,r){let n=e<0?256:0,o=r<0?256:0;e=e<0?~e:e,r=r<0?~r:r;let a=e>>>4,l=e&15,c=r>>>4,d=r&15,h=this.screens[a][l],m=s.screens[c][d],[f,g]=Fa[n|h],[w,k]=Fa[o|m],E=this.entrances.length,L=s.entrances.length;this.entrances.push(rt.of({y:a<<8|f>>>8,x:l<<8|f&255})),s.entrances.push(rt.of({y:c<<8|w>>>8,x:d<<8|w&255}));for(let M of g)this.exits.push(Tt.of({screen:e,tile:M,dest:s.id,entrance:L}));for(let M of k)s.exits.push(Tt.of({screen:r,tile:M,dest:this.id,entrance:E}))}neighborForEntrance(e){let s=this.entrances[e];if(!s)throw new Error(`no entrance ${C(this.id)}:${e}`);for(let r of this.exits){if(r.screen!==s.screen)continue;let n=Math.abs(r.x-s.x),o=Math.abs(r.y-s.y);if(n<24&&o<24)return this.rom.locations[r.dest]}throw new Error(`no exit found near ${C(this.id)}:${e}`)}toString(){return`${super.toString()} ${this.name}`}};Fa={21:[37024,[137,138]],25:[24720,[88,89]],150:[16432,[50,51]],151:[44848,[178,179]],152:[16592,[60,61]],153:[45008,[188,189]],154:[8064,[39,40]],158:[57216,[231,232]],193:[20640,[73,74]],194:[24752,[90,91]],410:[53376,[199,200]]}});function u(i){if(i.length!=1)throw new Error("Bad icon input");let e=i[0].split(`
`),s=e.slice(1).map(n=>n.replace(/^\s*\||\|\s*$/g,""));return{short:/\S/.test(e[0])?e[0][0]:s[1][1],full:[s[0],s[1],s[2]]}}function it(i,...t){let e=i.split(/\s+/g);if(e[0]||e.shift(),e[e.length-1]||e.pop(),e.length!==240)throw new Error(`Bad screen definition: ${e.length}`);let s=new Map(t);return Uint8Array.from(e,(r,n)=>{let o=s.get(r);return typeof o=="number"?o:o?o.screen.tiles[n]:parseInt(r,16)})}function Ge(i,t=2){let e=i>>>4,s=i&15;if(t===1){let n=e===14?10240:6144;return{type:"stair:up",dir:2,entrance:(e<<12)+n|(s<<4)+8,exits:[i]}}return{type:"stair:up",dir:0,entrance:e<<12|(s<<4)+(t<<3),exits:j(t,n=>i-16+n)}}function ut(i,t=2){let e=i>>>4,s=i&15;return t===1?{type:"stair:down",dir:2,entrance:(e<<12)-2048|(s<<4)+8,exits:[i],allowedExits:[i+16,i-16]}:{type:"stair:down",dir:2,entrance:e<<12|3840|(s<<4)+(t<<3),exits:j(t,n=>i+16+n),allowedExits:[...j(t,n=>i+32+n),...j(t,n=>i+n)]}}function ie(i,t="cave"){return{...Ge(i+16),type:t}}function F(i,t="door"){return{...Ge(i,1),type:t}}function Ga(i){let t=i>>>4,e=i&15;return{type:"cave",dir:0,entrance:t<<12|e<<4|15,exits:[i-15,i+1]}}function te({left:i=7,width:t=2,top:e=2,manual:s=!1}={}){return{type:"edge:top",manual:s,dir:0,entrance:e+1<<12|(i<<4)+(t<<3),exits:j(t,r=>e<<4|r+i)}}function oe({left:i=7,width:t=2,shift:e=0,type:s="edge:bottom",manual:r=!1}={}){return{type:s,manual:r,dir:2,entrance:57088|(i<<4)+(t<<3)+16*e,exits:j(t,n=>224|n+i)}}function Pe({left:i=7,width:t=2,shift:e=0}={}){return{type:"edge:bottom",dir:2,entrance:44800|(i<<4)+(t<<3)+16*e,exits:j(t,s=>176|s+i)}}function Te({top:i=7,height:t=2,shift:e=0}={}){return{type:"edge:left",dir:1,entrance:(i<<12)+(16*e<<8)+(t<<11)|16,exits:j(t,s=>s+i<<4)}}function Ae({top:i=7,height:t=2,shift:e=0}={}){return{type:"edge:right",dir:3,entrance:(i<<12)+(16*e<<8)+(t<<11)|239,exits:j(t,s=>s+i<<4|15)}}function hs(i,t=2){return{type:"seamless:up",dir:0,get entrance(){throw new Error("does not make sense")},exits:j(t,e=>i+e)}}function qt(i,t=2){return{type:"seamless:down",dir:2,get entrance(){throw new Error("does not make sense")},exits:j(t,e=>i+e)}}var nt,wr=z(()=>{$();nt={empty:1,pit:2,arena:4,spikes:8,wide:16,river:32,bridge:64,wall:128,ramp:256,overpass:512,underpass:1024,whirlpool:2048,deadend:4096,"stair:up":65536,"stair:down":131072,portoa1:117440512,portoa2:184549376,portoa3:218103808,lake:234881024,lighthouse:318767104,cabin:352321536,windmill:369098752,altar:419430400,pyramid:436207616,crypt:469762048,manual:1073741824,consolidate:2147483648}});var Ns,W0,O0,F0,U0,z0,G0,q0,qa=z(()=>{wr();Xe();Ns=class{constructor(t,e,s){this.rom=t;this.uid=e;this.data=s;this._tilesets=new Set;this.used=!1;this.neighbors=[new we(t=>this._checkNeighbor(t,0)),new we(t=>this._checkNeighbor(t,1))];for(let o of Object.values(s.tilesets))o.requires||(this.used=!0);let r=0;for(let o of s.feature??[]){let a=nt[o];a!=null&&(r|=a)}for(let o of s.exits??[])(o.type==="stair:down"||o.type==="stair:up")&&(r|=nt[o.type]);this._features=r,this._isEmpty=!!(r&nt.empty),this.flag=s.flag;let n=[[[]],[[]],[[]],[[]]];this.connections=n;for(let o=0;o<4;o++){let a=0,l=0,c=n[o][0];for(let d of this.data.connect??""){if(O0[o].includes(d)){n[o].push(c=[]);continue}let h;if(!F0.has(d)){if(d==="p")h=240|a++;else if(d==="x")h=224|l++;else{let m=parseInt(d,16);if(!m)throw new Error(`bad term: '${d}'`);let f=(m&3)<<(m&4),g=m&8?m&4?256:4096:0;h=f|g}c.push(h)}}for(;a<this.data.poi?.length;)c.push(240|a++);for(;l<this.data.exits?.length;)c.push(224|l++)}}get features(){return this._features}get manual(){return!!(this._features&G0)}get counted(){return!!(this._features&q0)}hasFeature(t){return!!(this._features&nt[t])}hasFeatures(t){return(this._features&t)===t}withFeature(t){throw new Error}isEmpty(){return this._isEmpty}hasStair(){return!!(this._features&(nt["stair:up"]|nt["stair:down"]))}withObstruction(){throw new Error}isCompatibleWithTileset(t){for(let e of this._tilesets)if(e.tilesetId===t)return!0;return!1}replace(t,e){let{tiles:s}=this.screen;for(let r=0;r<s.length;r++)s[r]===t&&(s[r]=e);return this}remove(){for(let t of this.tilesets())t.deleteScreen(this)}tilesets(){let t=[];for(let e in this.data.tilesets)t.push(this.rom.metatilesets[e]);return t}setGridTile(...t){this.data.tile=t;for(let e of this.tilesets())e.invalidate()}gridTiles(){let t=this.data.tile??[];return Array.isArray(t)||(t=[t]),t.map(e=>e.replace(/\|/g,""))}get sid(){return this.data.id}set sid(t){this.sid!==t&&this.rom.metascreens.renumber(this.sid,t,new Set(this.tilesets()))}get screen(){let{sid:t,rom:{screens:e}}=this;return t<0?e.unallocated[~t]:e[t]}unsafeSetId(t){this.data.id=t;for(let e of this._tilesets)e.invalidate()}unsafeAddTileset(t){this._tilesets.add(t)}unsafeRemoveTileset(t){this._tilesets.delete(t)}edgeExits(){let t=0;for(let e of this.data.exits??[]){let s=W0[e.type];s!=null&&(t|=1<<s)}return t}edgeIndex(t){let e=0,s=this.data.edges??"";for(let r=0;r<4;r++)if(s[r]!==" "){if(s[r]!==t)return;e|=1<<r}return e}findExitType(t,e,s){for(let r of this.data.exits??[]){if(r.type.startsWith("seamless")!==s)continue;let n=e&&r.type==="edge:bottom"&&t>=192?t+32:t;if(r.exits.includes(n)||(r.allowedExits??[]).includes(n))return r}}findExitByType(t){let e=this.data.exits.find(s=>s.type===t);if(!e)throw new Error(`no exit ${t}`);return e}findEntranceType(t,e){for(let s of this.data.exits??[]){if(s.type.startsWith("seamless"))continue;let r=e&&s.type==="edge:bottom"&&t>=48896?t+8192:t,n=(r&240)>>4|(r&61440)>>8;if(s.entrance===r||s.exits.includes(n)||(s.allowedExits??[]).includes(n))return s.type}}addCustomFlag(t){this.flag=t?"custom:true":"custom:false"}checkNeighbor(t,e){let s=e&2?this:t,r=e&2?t:this;return s.neighbors[e&1].get(r)}_checkNeighbor(t,e){let s=this.data.edges,r=t.data.edges;if(s&&r){let n=e^2;if(s[n]!=="*"&&s[n]===r[e])return!0}return!1}toString(){return`${Xt(this.sid)} ${this.name}`}},W0={"edge:top":0,"edge:left":1,"edge:bottom":2,"edge:right":3},O0=["|:","|:=-","|","|="],F0=new Set(["|",":","-","="]),U0=new Set(["arena","portoa1","portoa2","portoa3","lake","overpass","underpass","lighthouse","cabin","windmill","altar","pyramid","crypt"]),z0=new Set(["pit","spikes","bridge","wall","ramp","whirlpool"]),G0=[...U0].map(i=>nt[i]).reduce((i,t)=>i|t),q0=[...z0].map(i=>nt[i]).reduce((i,t)=>i|t)});function Vt(i){return()=>i}var V0,vr,Va=z(()=>{Xe();qa();wr();To();ve();V0=!1,vr=class extends Ot{constructor(e){super(e);this.length=0;this.screensByFix=new we(()=>[]);this.screensById=new we(()=>[]);this.registeredFixes=new Set;this.overworldEmpty=this.metascreen({id:0,icon:u`
      |███|
      |███|
      |███|`,tile:"   |   |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},feature:["empty"],edges:"    ",delete:!0});this.boundaryW_trees=this.metascreen({id:1,icon:u`
      |█▌ |
      |█▌^|
      |█▌ |`,tile:" oo| oo| oo",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[7]}},edges:"> >o"});this.boundaryW=this.metascreen({id:2,icon:u`
      |█▌ |
      |█▌ |
      |█▌ |`,tile:" oo| oo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"> >o"});this.boundaryE_rocks=this.metascreen({id:3,icon:u`
      |.▐█|
      | ▐█|
      |.▐█|`,tile:"oo |oo |oo ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:"<o< "});this.boundaryE=this.metascreen({id:4,icon:u`
      | ▐█|
      | ▐█|
      | ▐█|`,tile:"oo |oo |oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<o< "});this.longGrassS=this.metascreen({id:5,icon:u`
      |vv |
      | vv|
      |   |`,tile:"olo|ooo|   ",tilesets:{river:{},grass:{requires:[1]}},edges:"looo"});this.longGrassN=this.metascreen({id:6,icon:u`
      |   |
      | vv|
      |vv |`,tile:"   |ooo|olo",tilesets:{river:{},grass:{requires:[1]}},edges:"oolo"});this.boundaryS_rocks=this.metascreen({id:7,icon:u`
      | . |
      |▄▄▄|
      |███|`,tile:"ooo|ooo|   ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:"o^ ^"});this.fortressTownEntrance=this.metascreen({id:8,icon:u`
      |███|
      |█∩█|
      |   |`,placement:"manual",tile:["   |oFo|ooo","oo |oFo|ooo"],tilesets:{grass:{}},edges:" vov",exits:[{...Ge(166,3),type:"fortress"}]});this.bendSE_longGrass=this.metascreen({id:9,icon:u`▗
      | v |
      |vv▄|
      | ▐█|`,tile:"ooo|ooo|oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"oo<^"});this.exitW_cave=this.metascreen({id:10,icon:u`∩
      |█∩█|
      |  █|
      |███|`,tile:["   |o< |   ","   |x< |   "],tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:" n  ",exits:[ie(72),Te({top:6})]});this.bendNE_grassRocks=this.metascreen({id:11,icon:u`▝
      |.▐█|
      |  ▀|
      |;;;|`,tile:"oo |ooo|ogo",tilesets:{grass:{},river:{requires:[3]},desert:{requires:[8,11]}},edges:"<osv"});this.cornerNW=this.metascreen({id:12,icon:u`▛
      |███|
      |█ ▀|
      |█▌ |`,tile:"   | oo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"  >v"});this.overworldEmpty_alt=this.metascreen({id:12,icon:u`
      |███|
      |███|
      |███|`,placement:"manual",tilesets:{grass:{},river:{},sea:{},desert:{}},feature:["empty","manual"],edges:"    ",match:()=>!1,delete:!0});this.cornerNE=this.metascreen({id:13,icon:u`▜
      |███|
      |▀██|
      | ▐█|`,tile:"   |oo |oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:" v< "});this.cornerSW=this.metascreen({id:14,icon:u`▙
      |█▌ |
      |██▄|
      |███|`,tile:" oo| oo|   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:">  ^"});this.cornerSE=this.metascreen({id:15,icon:u`▟
      | ▐█|
      |▄██|
      |███|`,tile:"oo |oo |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<^  "});this.exitE=this.metascreen({id:16,icon:u`╶
      | ▐█|
      |   |
      | ▐█|`,tile:["oo |ooo|oo ","oo |oox|oo "],tilesets:{grass:{},river:{},desert:{requires:[11]}},edges:"<o<n",exits:[Ae({top:6})]});this.boundaryN_trees=this.metascreen({id:17,icon:u`
      |███|
      |▀▀▀|
      | ^ |`,tile:"   |ooo|ooo",tilesets:{grass:{},river:{},desert:{},sea:{requires:[7]}},edges:" vov"});this.bridgeToPortoa=this.metascreen({id:18,icon:u`╴
      |═  |
      |╞══|
      |│  |`,placement:"manual",tile:"roo|1rr| oo",tilesets:{river:{}},feature:["portoa3"],edges:"2*>r",exits:[Te({top:1})]});this.slopeAbovePortoa=this.metascreen({id:19,icon:u`
      |█↓█|
      |█↓▀|
      |│  |`,placement:"manual",tile:" \u2193 | oo|roo",tilesets:{river:{}},feature:["portoa2"],edges:"1*2v"});this.riverBendSE=this.metascreen({id:20,icon:u`
      |w  |
      | ╔═|
      | ║ |`,tile:"ooo|orr|oro",tilesets:{river:{}},edges:"oorr"});this.boundaryW_cave=this.metascreen({id:21,icon:u`
      |█▌ |
      |█∩ |
      |█▌ |`,tile:" oo| <o| oo",tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:"> >o",exits:[ie(137)]});this.exitN=this.metascreen({id:22,icon:u`╵
      |█ █|
      |▀ ▀|
      | ^ |`,tile:[" o |ooo|ooo"," x |ooo|ooo"],tilesets:{grass:{},river:{},desert:{}},edges:"nvov",exits:[te()]});this.riverWE_woodenBridge=this.metascreen({id:23,icon:u`═
      |   |
      |═║═|
      |   |`,tile:"ooo|ror|ooo",tilesets:{river:{}},edges:"oror",exits:[hs(119),qt(135)]});this.riverBoundaryE_waterfall=this.metascreen({id:24,icon:u`╡
      | ▐█|
      |══/|
      | ▐█|`,tile:"oo |rr |oo ",tilesets:{river:{}},edges:"<r< "});this.boundaryE_cave=this.metascreen({id:25,icon:u`
      | ▐█|
      |v∩█|
      |v▐█|`,tile:"oo |o< |oo ",tilesets:{river:{},grass:{requires:[1]},desert:{requires:[9]}},edges:"<o< ",exits:[ie(88)]});this.exitW_southwest=this.metascreen({id:26,icon:u`╴
      |█▌ |
      |▀ ▄|
      |▄██|`,tile:" oo|Boo|   ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:">* ^",exits:[Te({top:11})]});this.nadare=this.metascreen({id:27,tilesets:{house:{}},exits:[Pe(),F(35),F(37,"door2"),F(42,"door3")]});this.townExitW=this.metascreen({id:28,icon:u`╴
      |█▌ |
      |▀ ^|
      |█▌ |`,tile:" oo|8oo| oo",tilesets:{grass:{},river:{}},edges:">n>o",exits:[Te({top:8,height:3,shift:-.5})]});this.shortGrassS=this.metascreen({id:29,icon:u` |
      |;;;|
      | v |
      |   |`,tile:"ogo|ooo|ooo",tilesets:{grass:{},river:{requires:[3,2]}},edges:"sooo"});this.townExitS=this.metascreen({id:30,icon:u`╷
      | ^ |
      |▄ ▄|
      |█ █|`,tile:["ooo|ooo| o ","ooo|ooo| x "],tilesets:{grass:{},river:{},desert:{requires:[11,13]}},edges:"o^n^",exits:[oe()]});this.swanGate=this.metascreen({id:31,tilesets:{town:{}},exits:[Te({top:3}),Ae({top:9})],flag:"custom:false"});this.riverBranchNSE=this.metascreen({id:32,icon:u`
      | ║ |
      | ╠═|
      | ║ |`,tile:"oro|orr|oro",tilesets:{river:{}},edges:"rorr"});this.riverWE=this.metascreen({id:33,icon:u`
      |   |
      |═══|
      |   |`,tile:"ooo|rrr|ooo",tilesets:{river:{}},edges:"oror"});this.riverBoundaryS_waterfall=this.metascreen({id:34,icon:u`╨
      | ║ |
      |▄║▄|
      |█/█|`,tile:"oro|oro|   ",tilesets:{river:{}},edges:"r^ ^"});this.shortGrassSE=this.metascreen({id:35,icon:u`
      |;;;|
      |;  |
      |; ^|`,tile:"ogo|goo|ooo",tilesets:{grass:{}},edges:"ssoo"});this.shortGrassNE=this.metascreen({id:36,icon:u` |
      |;  |
      |;v |
      |;;;|`,tile:"ooo|goo|ogo",tilesets:{grass:{}},edges:"osso"});this.stomHouseOutside=this.metascreen({id:37,icon:u`∩
      |███|
      |▌∩▐|
      |█ █|`,placement:"manual",tile:["   | H | o ","   | H | x "],tilesets:{grass:{}},exits:[F(104),oe({shift:.5})]});this.bendNW_trees=this.metascreen({id:38,icon:u`▘
      |█▌ |
      |▀ ^|
      | ^^|`,tile:" oo|ooo|ooo",tilesets:{grass:{},river:{},desert:{requires:[11,12]},sea:{requires:[5,7]}},edges:">voo"});this.shortGrassSW=this.metascreen({id:39,icon:u`
      |;;;|
      |  ;|
      |^ ;|`,tile:"ogo|oog|ooo",tilesets:{grass:{},river:{requires:[3]}},edges:"soos"});this.riverBranchNWS=this.metascreen({id:40,icon:u`
      | ║ |
      |═╣ |
      | ║ |`,tile:"oro|rro|oro",tilesets:{river:{}},edges:"rrro"});this.shortGrassNW=this.metascreen({id:41,icon:u`
      |  ;|
      | v;|
      |;;;|`,tile:"ooo|oog|ogo",tilesets:{grass:{},river:{requires:[3,2]}},edges:"ooss"});this.valleyBridge=this.metascreen({id:42,icon:u` |
      |▛║▜|
      | ║ |
      |▙║▟|`,tile:[" o | o | o "," x | o | o "," o | o | x "],tilesets:{grass:{},river:{}},edges:"n n ",exits:[hs(119),qt(135),te(),oe()]});this.exitS_cave=this.metascreen({id:43,icon:u`∩
      |█∩█|
      |▌ ▐|
      |█ █|`,tile:["   | < | o ","   | < | x "],tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:"  n ",exits:[ie(103),oe()]});this.outsideWindmill=this.metascreen({id:44,icon:u`╳
      |██╳|
      |█∩█|
      |█ █|`,placement:"manual",tile:["   | W | o ","   | W | x "],tilesets:{grass:{}},flag:"custom:false",feature:["windmill"],edges:"  n ",exits:[ie(99),oe(),F(137,"windmill"),F(140)]});this.townExitW_cave=this.metascreen({id:45,icon:u`∩
      |█∩█|
      |▄▄█|
      |███|`,tile:"   |x< |   ",tilesets:{grass:{}},edges:" n  ",exits:[ie(74),Te({top:5,height:3,shift:-.5})],flag:"custom:true"});this.riverNS=this.metascreen({id:46,icon:u`
      | ║ |
      | ║ |
      | ║ |`,tile:"oro|ooo|oro",tilesets:{river:{}},edges:"roro",mod:"bridge"});this.riverNS_bridge=this.metascreen({id:47,icon:u`
      | ║ |
      |w╏w|
      | ║ |`,placement:"mod",tile:"oro|oro|oro",tilesets:{river:{}},feature:["bridge"],edges:"roro",wall:119});this.riverBendWS=this.metascreen({id:48,icon:u`
      | w▜|
      |═╗w|
      | ║ |`,tile:"oo |rro|oro",tilesets:{river:{}},edges:"<rrv"});this.boundaryN_waterfallCave=this.metascreen({id:49,icon:u`
      |▛/█|
      |▘║▀|
      | ║ |`,tile:"   |oro|oro",tilesets:{river:{}},edges:" vrv",exits:[Ga(117)]});this.open_trees=this.metascreen({id:50,icon:u`
      | ^ |
      |^ ^|
      | ^ |`,tile:"ooo|ooo|ooo",tilesets:{grass:{},river:{},desert:{requires:[12,11]}},edges:"oooo"});this.exitS=this.metascreen({id:51,icon:u`╷
      | w |
      |▄ ▄|
      |█ █|`,tile:["ooo|ooo| o ","ooo|ooo| x |"],tilesets:{grass:{},river:{},desert:{requires:[10]},sea:{requires:[6]}},edges:"o^n^",exits:[oe()]});this.bendNW=this.metascreen({id:52,icon:u`▘
      |█▌ |
      |▀▀ |
      |   |`,tile:" oo|ooo|ooo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:">voo"});this.bendNE=this.metascreen({id:53,icon:u`▝
      | ▐█|
      |  ▀|
      |   |`,tile:"oo |ooo|ooo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<oov"});this.bendSE=this.metascreen({id:54,icon:u`▗
      |   |
      | ▄▄|
      | ▐█|`,tile:"ooo|ooo|oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"oo<^"});this.bendWS=this.metascreen({id:55,icon:u`▖
      |   |
      |▄▄ |
      |█▌ |`,tile:"ooo|ooo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"o^>o"});this.towerPlain_upStair=this.metascreen({id:56,icon:u`┴
      | ┊ |
      |─┴─|
      |   |`,tile:" t |ttt|   ",tilesets:{tower:{}},edges:"st t",exits:[te({left:8}),qt(8,2)]});this.towerRobotDoor_downStair=this.metascreen({id:57,icon:u`┬
      | ∩ |
      |─┬─|
      | ┊ |`,tile:"   |ttt| t ",tilesets:{tower:{}},edges:" tst",exits:[hs(232,2),qt(248,2)]});this.towerDynaDoor=this.metascreen({id:58,icon:u`∩
      | ∩ |
      |└┬┘|
      | ┊ |`,tile:"   | < | t ",tilesets:{tower:{}},edges:"  s ",exits:[ie(103,"door")]});this.towerLongStairs=this.metascreen({id:59,icon:u`
      | ┊ |
      | ┊ |
      | ┊ |`,tile:" t | t | t ",tilesets:{tower:{}},edges:"s s ",exits:[oe()]});this.towerMesiaRoom=this.metascreen({id:60,tilesets:{tower:{}},exits:[Pe()]});this.towerTeleporter=this.metascreen({id:61,tilesets:{tower:{}},exits:[Pe(),ie(87,"teleporter")]});this.caveAbovePortoa=this.metascreen({id:62,icon:u`
      |███|
      |█∩█|
      |█↓█|`,placement:"manual",tile:"   | < | \u2193 ",tilesets:{river:{}},edges:"  1 ",feature:["portoa1"],exits:[ie(102)]});this.cornerNE_flowers=this.metascreen({id:63,icon:u`▜
      |███|
      |▀*█|
      | ▐█|`,tile:"   |oo |oo ",tilesets:{grass:{}},edges:" v< "});this.towerEdge=this.metascreen({id:64,icon:u` |
      |   |
      |┤ ├|
      |   |`,tile:"   |t t|   ",tilesets:{tower:{}},edges:" t t"});this.towerEdgeW=this.metascreen({id:64,icon:u` |
      |   |
      |┤  |
      |   |`,tile:"   |t  |   ",tilesets:{tower:{}},edges:" t  "});this.towerEdgeE=this.metascreen({id:64,icon:u` |
      |   |
      |  ├|
      |   |`,tile:"   |  t|   ",tilesets:{tower:{}},edges:"   t"});this.towerRobotDoor=this.metascreen({id:65,icon:u`─
      | O |
      |───|
      |   |`,tile:"   |ttt|   ",tilesets:{tower:{}},edges:" t t"});this.towerDoor=this.metascreen({id:66,icon:u`∩
      | ∩ |
      |─┴─|
      |   |`,tile:"   |t<t|   ",tilesets:{tower:{}},edges:" t t",exits:[ie(88)]});this.house_bedroom=this.metascreen({id:67,tilesets:{house:{}},exits:[Pe()]});this.shed=this.metascreen({id:68,tilesets:{house:{}},exits:[Pe(),ie(73)],flag:"custom:false"});this.tavern=this.metascreen({id:69,tilesets:{house:{}},exits:[Pe()]});this.house_twoBeds=this.metascreen({id:70,tilesets:{house:{}},exits:[Pe()]});this.throneRoom_amazones=this.metascreen({id:71,tilesets:{house:{}},exits:[Pe({width:3}),ut(76,1)]});this.house_ruinedUpstairs=this.metascreen({id:72,tilesets:{house:{}},exits:[Pe(),ut(156,1)]});this.house_ruinedDownstairs=this.metascreen({id:73,tilesets:{house:{}},exits:[Ge(86,1)]});this.foyer=this.metascreen({id:74,tilesets:{house:{}},exits:[Pe({shift:.5}),F(40),F(83,"door2"),F(92,"door3")]});this.throneRoom_portoa=this.metascreen({id:75,tilesets:{house:{}},exits:[Pe(),F(43)]});this.fortuneTeller=this.metascreen({id:76,tilesets:{house:{}},exits:[Pe(),F(86),F(89,"door2")]});this.backRoom=this.metascreen({id:77,tilesets:{house:{}},exits:[Pe()]});this.dojo=this.metascreen({id:78,tilesets:{house:{}},exits:[Pe({shift:-.5})]});this.windmillInside=this.metascreen({id:79,tilesets:{house:{}},exits:[Pe({left:9,width:1})]});this.horizontalTownMiddle=this.metascreen({id:80,tilesets:{town:{}},exits:[F(76),F(85,"door2")],tallHouses:[53]});this.brynmaerRight_exitE=this.metascreen({id:81,tilesets:{town:{type:"horizontal"}},exits:[Ae({top:8}),F(65)]});this.brynmaerLeft_deadEnd=this.metascreen({id:82,tilesets:{town:{type:"horizontal"}},exits:[F(73),F(76,"door2")]});this.swanLeft_exitW=this.metascreen({id:83,tilesets:{town:{type:"horizontal"}},exits:[Te({top:9}),F(73),F(94,"door2")]});this.swanRight_exitS=this.metascreen({id:84,tilesets:{town:{type:"horizontal"}},exits:[oe({left:3}),F(65),F(67,"door2"),F(87,"door3")]});this.horizontalTownLeft_exitN=this.metascreen({id:85,tilesets:{town:{type:"horizontal"}},exits:[te({left:13}),F(70),F(75,"door2")]});this.amazonesRight_deadEnd=this.metascreen({id:86,tilesets:{town:{type:"horizontal"}},exits:[F(64),F(88,"door2")]});this.saharaRight_exitE=this.metascreen({id:87,tilesets:{town:{type:"horizontal"}},exits:[Ae({top:7}),F(64),F(102,"door2")]});this.portoaNW=this.metascreen({id:88,tilesets:{town:{type:"square"}},exits:[ie(71,"fortress"),oe()]});this.portoaNE=this.metascreen({id:89,tilesets:{town:{type:"square"}},exits:[F(99),F(138,"door2"),oe({left:3,width:4})]});this.portoaSW_exitW=this.metascreen({id:90,tilesets:{town:{type:"square"}},exits:[Te({top:9}),F(134),te()]});this.portoaSE_exitE=this.metascreen({id:91,tilesets:{town:{type:"square"}},exits:[Ae({top:9}),F(122),F(135,"door2")],tallHouses:[90]});this.dyna=this.metascreen({id:92,tilesets:{tower:{}},exits:[{type:"stair:down",manual:!0,dir:2,entrance:49024,exits:[]}]});this.portoaFisherman=this.metascreen({id:93,tilesets:{town:{type:"square"}},exits:[Ae({top:6}),Te({top:4,height:6,shift:.5}),F(104)]});this.verticalTownTop_fortress=this.metascreen({id:94,tilesets:{town:{type:"vertical"}},exits:[ie(71,"fortress"),oe()]});this.shyronMiddle=this.metascreen({id:95,tilesets:{town:{type:"vertical"}},exits:[F(84),F(91,"door2"),te()]});this.shyronBottom_exitS=this.metascreen({id:96,tilesets:{town:{type:"vertical"}},exits:[oe({left:3}),F(4),F(6,"door2"),F(153,"door3")]});this.zombieTownMiddle=this.metascreen({id:97,tilesets:{town:{type:"vertical"}},exits:[F(153),te()]});this.zombieTownBottom_caveExit=this.metascreen({id:98,tilesets:{town:{type:"vertical"}},exits:[ie(146),F(35),F(77,"door2")]});this.leafNW_houseShed=this.metascreen({id:99,tilesets:{town:{type:"square"}},exits:[F(140),F(149,"door2")]});this.squareTownNE_house=this.metascreen({id:100,tilesets:{town:{type:"square"}},exits:[te({left:1}),F(183)]});this.leafSW_shops=this.metascreen({id:101,tilesets:{town:{type:"square"}},exits:[F(119),F(138,"door2")],tallHouses:[106]});this.leafSE_exitE=this.metascreen({id:102,tilesets:{town:{type:"square"}},exits:[Ae({top:3,height:3,shift:-.5}),F(132)]});this.goaNW_tavern=this.metascreen({id:103,tilesets:{town:{type:"square"}},exits:[F(186)]});this.squareTownSW_exitS=this.metascreen({id:104,tilesets:{town:{type:"square"}},exits:[oe({left:8}),F(132)]});this.goaSE_shop=this.metascreen({id:105,tilesets:{town:{type:"square"}},exits:[F(130)]});this.joelNE_shop=this.metascreen({id:106,tilesets:{town:{type:"square"}},exits:[F(167)]});this.joelSE_lake=this.metascreen({id:107,tilesets:{town:{type:"square"}}});this.oakNW=this.metascreen({id:108,tilesets:{town:{type:"square"}},exits:[F(231)]});this.oakNE=this.metascreen({id:109,tilesets:{town:{type:"square"}},exits:[F(96)]});this.oakSW=this.metascreen({id:110,tilesets:{town:{type:"square"}},exits:[F(124)]});this.oakSE=this.metascreen({id:111,tilesets:{town:{type:"square"}},exits:[oe({left:0,shift:.5}),F(151)]});this.temple=this.metascreen({id:112,tilesets:{house:{}},exits:[Pe()]});this.wideDeadEndN=this.metascreen({id:113,icon:u`
      | ┃ |
      | > |
      |   |`,tile:" w | > |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w   ",connect:"2",exits:[ut(199)],statues:[4]});this.goaWideDeadEndN=this.metascreen({id:113,icon:u`
      |╵┃╵|
      | > |
      |   |`,tile:" w | > |   ",tilesets:{labyrinth:{}},edges:"w   ",connect:"1|2x|3",exits:[ut(199)],statues:[4]});this.wideHallNS=this.metascreen({id:114,icon:u`
      | ┃ |
      | ┃ |
      | ┃ |`,tile:" w | w | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w w ",connect:"2a",statues:[1,7,13]});this.goaWideHallNS=this.metascreen({id:114,icon:u`
      |│┃│|
      |│┃│|
      |│┃│|`,tile:" w | w | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"19|2a|3b",statues:[1,7,13]});this.goaWideHallNS_blockedRight=this.metascreen({id:114,icon:u`
      |│┃│|
      |│┃ |
      |│┃│|`,placement:"mod",tile:" w | w | w ",tilesets:{labyrinth:{requires:[14],addWall:[157]}},edges:"w w ",connect:"19|2a|3|b"});this.goaWideHallNS_blockedLeft=this.metascreen({id:114,icon:u`
      |│┃│|
      | ┃│|
      |│┃│|`,placement:"mod",tile:" w | w | w ",tilesets:{labyrinth:{requires:[14],addWall:[81]}},edges:"w w ",connect:"1|9|2a|3b"});this.goaWideArena=this.metascreen({id:115,icon:u`<
      |╻<╻|
      |┡━┩|
      |│╻│|`,placement:"manual",tile:"   | < | w ",tilesets:{labyrinth:{}},feature:["arena"],edges:"w w ",connect:"9b|a",exits:[Ge(55)]});this.limeTreeLake=this.metascreen({id:116,tilesets:{lime:{}},exits:[Pe(),ie(71)],feature:["bridge"],wall:103});this.swampNW=this.metascreen({id:117,icon:u`
      | │ |
      |─┘ |
      |   |`,tile:" c |cc |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ss  ",connect:"26",exits:[te({left:6,width:4}),Te({top:7,height:4,shift:-.5})],poi:[[2]]});this.swampE=this.metascreen({id:118,icon:u`
      |   |
      | ╶─|
      |   |`,tile:"   | cc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"   s",connect:"e",exits:[],poi:[[0]]});this.swampE_door=this.metascreen({id:118,icon:u`∩
      | ∩ |
      | ╶─|
      |   |`,tile:"   | <c|   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:"   s",connect:"e",exits:[ie(92,"swamp")]});this.swampNWSE=this.metascreen({id:119,icon:u`
      | │ |
      |─┼─|
      | │ |`,tile:" c |ccc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ssss",connect:"26ae",exits:[te({left:6,width:4}),Te({top:7,height:4,shift:-.5}),oe({left:6,width:4}),Ae({top:7,height:4,shift:-.5})]});this.swampNWS=this.metascreen({id:120,icon:u`
      | │ |
      |─┤ |
      | │ |`,tile:" c |cc | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"sss ",connect:"26a",exits:[te({left:6,width:4}),Te({top:7,height:4,shift:-.5}),oe({left:6,width:4})]});this.swampNE=this.metascreen({id:121,icon:u`
      | │ |
      | └─|
      |   |`,tile:" c | cc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s  s",connect:"2e",exits:[te({left:6,width:4}),Ae({top:7,height:4,shift:-.5})],poi:[[2]]});this.swampWSE=this.metascreen({id:122,icon:u`
      |   |
      |─┬─|
      | │ |`,tile:"   |ccc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:" sss",connect:"6ae",exits:[Te({top:7,height:4,shift:-.5}),oe({left:6,width:4}),Ae({top:7,height:4,shift:-.5})]});this.swampWSE_door=this.metascreen({id:122,icon:u`∩
      | ∩ |
      |─┬─|
      | │ |`,tile:"   |c<c| c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" sss",connect:"6ae",exits:[ie(86,"swamp")]});this.swampW=this.metascreen({id:123,icon:u`
      |   |
      |─╴ |
      |   |`,tile:"   |cc |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:" s  ",connect:"6",poi:[[0]]});this.swampW_door=this.metascreen({id:123,icon:u`∩
      | ∩ |
      |─╴ |
      |   |`,tile:"   |c< |   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" s  ",connect:"6",exits:[ie(84,"swamp")]});this.swampArena=this.metascreen({id:124,icon:u`
      |   |
      |┗┯┛|
      | │ |`,tile:"   | a | c ",tilesets:{swamp:{}},feature:["arena"],edges:"  s ",connect:"a"});this.swampNWE=this.metascreen({id:125,icon:u`
      | │ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ss s",connect:"26e",exits:[te({left:6,width:4}),Te({top:7,height:4}),Ae({top:7,height:4})]});this.swampWS=this.metascreen({id:126,icon:u`
      |   |
      |─┐ |
      | │ |`,tile:"   |cc | c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],update:[[15,(e,s,r)=>(r.metascreens.swampWS_door.flag="always",!0)]],edges:" ss ",connect:"6a",exits:[Te({top:7,height:4}),oe({left:6,width:4})],poi:[[2]]});this.swampWS_door=this.metascreen({id:126,icon:u`∩
      | ∩ |
      |─┐ |
      | │ |`,tile:"   |c< | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:" ss ",connect:"6a",exits:[ie(87,"swamp")]});this.swampEmpty=this.metascreen({id:127,icon:u`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{swamp:{}},feature:["empty"],edges:"    ",connect:"",delete:!0});this.swampN=this.metascreen({id:-113,icon:u`
      | │ |
      | ╵ |
      |   |`,tile:" c | c |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s   ",connect:"2",poi:[[0]],definition:Vt(it(`.  .  .  .  cf f6 c7 ad c4 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b8 b9 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b8 ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 c2 c3 b7 b8 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 c2 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad b9 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 b9 b8 ad ad d2 e2 .  .  .  .
         .  .  .  .  e3 f6 c3 c3 b8 b6 d2 .  .  .  .  .
         .  .  .  .  .  e3 fd ad ad fc e2 .  .  .  .  .
         .  .  .  .  .  .  ff fb fb fa .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .`,[".",200]))});this.swampS=this.metascreen({id:-114,icon:u`
      |   |
      | ╷ |
      | │ |`,tile:"   | c | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"  s ",connect:"a",poi:[[0]],definition:Vt(it(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  cd c9 c9 ca .  .  .  .  .  .
         .  .  .  .  .  cd eb a0 a0 cb ca .  .  .  .  .
         .  .  .  .  cf a0 f9 f5 f7 f8 cb cc .  .  .  .
         .  .  .  .  cf a0 ed 08 09 a0 a0 cc .  .  .  .
         .  .  .  .  cf db ee 0c 0b ef a0 cc .  .  .  .
         .  .  .  .  cf d0 d1 03 03 d8 db cc .  .  .  .
         .  .  .  .  cf f6 c7 ad ad ae d2 cc .  .  .  .
         .  .  .  .  cf d3 ad b9 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 c2 c3 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 c5 c3 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 b6 c2 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf f6 b8 b6 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b8 b6 d2 cc .  .  .  .`,[".",200]))});this.swampNS=this.metascreen({id:-115,icon:u`
      | │ |
      | │ |
      | │ |`,tile:" c | c | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s s ",connect:"2a",exits:[te({left:6,width:4}),oe({left:6,width:4})],definition:Vt(it(`.  .  .  .  cf d3 b6 b6 c6 b6 f6 cc .  .  .  .
         .  .  .  .  cf d3 b6 c3 c7 b6 f6 cc .  .  .  .
         .  .  .  .  cf f5 c3 c7 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 b6 c6 c5 f6 cc .  .  .  .
         .  .  .  .  cf d9 b6 c6 c3 c7 d2 cc .  .  .  .
         .  .  .  .  cf f5 c3 c3 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf d9 ad c2 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf d9 c4 c5 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf f5 b7 b7 b8 b6 d2 cc .  .  .  .
         .  .  .  .  cf d9 c2 b8 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf d9 b6 c2 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d9 b6 b6 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b8 b6 d2 cc .  .  .  .
         .  .  .  .  cf d3 b9 b7 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 c7 b6 d2 cc .  .  .  .`,[".",200]))});this.swampWE=this.metascreen({id:-116,icon:u`
      |   |
      |───|
      |   |`,tile:"   |ccc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:" s s",connect:"6e",exits:[Te({top:7,height:4,shift:-.5}),Ae({top:7,height:4,shift:-.5})],definition:Vt(it(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9
         a0 e4 e8 eb e4 a0 a0 a0 eb eb e8 f0 f1 a0 e4 a0
         a0 e5 e9 f9 f5 f6 f6 f7 ec f9 f7 f8 f2 a0 e5 a0
         a0 e6 f0 f1 e6 e0 08 09 ed de ea de f2 a0 e6 a0
         db e7 db f3 e7 e1 0c 0b dd df e0 df f3 db e7 e0
         d0 d1 da da d0 d1 03 03 d0 d1 d0 d1 da da da da
         ad c4 ad ad ad ad ad ad ad ad ad ad ad ad ad ad
         c2 c5 b8 c6 c4 c4 b9 c7 c4 c5 c5 c7 ad ad ad ad
         ad ad ad ad c2 c3 c3 c3 c3 c3 c7 ad ad ad ad ad
         fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .`,[".",200]))});this.swampWE_door=this.metascreen({id:-116,icon:u`∩
      | ∩ |
      |───|
      |   |`,tile:"   |c<c|   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" s s",connect:"6e",exits:[ie(86,"swamp")]});this.swampSE=this.metascreen({id:-117,icon:u`
      |   |
      | ┌─|
      | │ |`,tile:"   | cc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"  ss",connect:"ae",exits:[Ae({top:7,height:4,shift:-.5}),oe({left:6,width:4})],poi:[[2]],definition:Vt(it(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  cd c9 c9 c9 c9 c9 c9 c9 c9 c9
         .  .  .  .  .  cd a0 a0 a0 e8 04 a0 e8 a0 a0 e4
         .  .  .  .  cf f8 a0 f0 f1 f5 f5 f7 e9 f4 f7 e5
         .  .  .  .  cf f6 f7 f8 f2 ea 06 aa e9 f0 f1 e6
         .  .  .  .  cf a0 dd e0 f3 e0 07 0c ea db f3 e7
         .  .  .  .  cf db d5 d0 d1 d1 03 03 d0 d1 da da
         .  .  .  .  cf d5 af c4 c4 ad ad ad ad ad c4 ad
         .  .  .  .  cf d3 b9 c3 c3 b8 ad ad ad c2 b7 b8
         .  .  .  .  cf f6 c3 c3 c3 c3 b8 ad ad ad ad ad
         .  .  .  .  cf f6 c7 ad c2 c3 c7 fc fb fb fb fb
         .  .  .  .  cf d3 ad ad ad ad d6 cc .  .  .  .
         .  .  .  .  cf d3 b9 b8 ad b9 f6 cc .  .  .  .
         .  .  .  .  cf f6 c7 ad b9 c7 d2 cc .  .  .  . 
         .  .  .  .  cf d3 b6 b9 c3 b8 d2 cc .  .  .  .`,[".",200]))});this.swampSE_door=this.metascreen({id:-117,icon:u`∩
      | ∩ |
      | ┌─|
      | │ |`,tile:"   | <c| c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:"  ss",connect:"ae",exits:[ie(90,"swamp")]});this.swampNSE=this.metascreen({id:-118,icon:u`
      | │ |
      | ├─|
      | │ |`,tile:" c | cc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s ss",connect:"2ae",exits:[te({left:6,width:4}),oe({left:6,width:4}),Ae({top:7,height:4,shift:-.5})],definition:Vt(it(`.  .  .  .  cf d3 c4 c3 c3 c3 f7 f8 ca .  .  .
         .  .  .  .  cf f5 c3 c3 c3 c3 f7 f7 a0 ca c9 c9
         .  .  .  .  cf f6 c3 c3 b8 b6 d2 f7 f8 e8 e4 a0
         .  .  .  .  cf f5 b7 c3 b7 b8 d2 f0 f1 e9 e5 de
         .  .  .  .  cf d3 c2 b8 c2 b8 d8 db f2 ea e6 df
         .  .  .  .  cf d3 ad ad ad ad ae d4 f3 dd e7 df
         .  .  .  .  cf d3 ad ad ad ad ad ae d0 d1 d0 d1
         .  .  .  .  cf d3 c2 c3 c3 b7 b8 ad ad ad ad ad
         .  .  .  .  cf d3 ad ad c2 b7 b7 b7 b8 c4 ad ad
         .  .  .  .  cf d3 ad ad b6 b9 b7 b7 b7 b7 b8 ad
         .  .  .  .  cf d3 ad c4 c3 b7 b8 fc fb fb fb fb
         .  .  .  .  cf d3 b6 ad ad ad d6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 c4 c3 b7 b8 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 b9 b7 b7 f6 cc .  .  .  .`,[".",200]))});this.caveEmpty=this.metascreen({id:128,icon:u`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{cave:{},fortress:{},labyrinth:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"    ",delete:!0});this.dolphinCave_empty=this.metascreen({id:128,icon:u`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{dolphinCave:{}},feature:["empty"],edges:"    ",delete:!0});this.open=this.metascreen({id:128,icon:u`
      |   |
      |   |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{desert:{},sea:{}},edges:"oooo"});this.hallNS=this.metascreen({id:129,icon:u`
      | │ |
      | │ |
      | │ |`,tile:" c | c | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c c ",connect:"2a",poi:[[4]],exits:[oe({left:6,width:4,manual:!0}),te({left:6,width:4,manual:!0})]});this.hallNS_unreachable=this.metascreen({id:129,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWE=this.metascreen({id:130,icon:u`
      |   |
      |───|
      |   |`,tile:"   |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c c",connect:"6e",poi:[[4]]});this.hallWE_unreachable=this.metascreen({id:130,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallSE=this.metascreen({id:131,icon:u`
      |   |
      | ┌─|
      | │ |`,tile:"   | cc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"  cc",connect:"ae",poi:[[2]]});this.hallSE_unreachable=this.metascreen({id:131,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWS=this.metascreen({id:132,icon:u`
      |   |
      |─┐ |
      | │ |`,tile:"   |cc | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" cc ",connect:"6a",poi:[[2]]});this.hallWS_unreachable=this.metascreen({id:132,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNE=this.metascreen({id:133,icon:u`
      | │ |
      | └─|
      |   |`,tile:" c | cc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c  c",connect:"2e",poi:[[2]],exits:[te({left:6,width:4,manual:!0})]});this.hallNE_unreachable=this.metascreen({id:133,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNW=this.metascreen({id:134,icon:u`
      | │ |
      |─┘ |
      |   |`,tile:" c |cc |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cc  ",connect:"26",poi:[[2]],exits:[te({left:6,width:4,manual:!0})]});this.hallNW_unreachable=this.metascreen({id:134,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNSE=this.metascreen({id:135,icon:u`
      | │ |
      | ├─|
      | │ |`,tile:" c | cc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c cc",connect:"2ae",poi:[[3]],exits:[te({left:6,width:4,manual:!0})]});this.branchNSE_unreachable=this.metascreen({id:135,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWSE=this.metascreen({id:136,icon:u`
      | │ |
      |─┼─|
      | │ |`,tile:" c |ccc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cccc",connect:"26ae",poi:[[3]],exits:[te({left:6,width:4,manual:!0})]});this.branchNWSE_unreachable=this.metascreen({id:136,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWS=this.metascreen({id:137,icon:u`
      | │ |
      |─┤ |
      | │ |`,tile:" c |cc | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"ccc ",connect:"26a",poi:[[3]],exits:[te({left:6,width:4,manual:!0})]});this.branchNWS_unreachable=this.metascreen({id:137,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchWSE=this.metascreen({id:138,icon:u`
      |   |
      |─┬─|
      | │ |`,tile:"   |ccc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" ccc",connect:"6ae",poi:[[3]]});this.branchWSE_unreachable=this.metascreen({id:138,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWE=this.metascreen({id:139,icon:u`
      | │ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cc c",connect:"26e",poi:[[3]],exits:[te({left:6,width:4,manual:!0})]});this.branchNWE_unreachable=this.metascreen({id:139,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_ramp=this.metascreen({id:140,icon:u`
      | ┋ |
      | ┋ |
      | ┋ |`,tile:" c | / | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["ramp"],edges:"c c ",connect:"2a",exits:[te({left:6,width:4,manual:!0})]});this.hallNS_ramp_unreachable=this.metascreen({id:140,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_overBridge=this.metascreen({id:141,icon:u`
      | ╽ |
      |─┃─|
      | ╿ |`,tile:" c | b | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["overpass"],edges:"cbcb",connect:"2a",exits:[te({left:6,width:4,manual:!0})]});this.hallWE_underBridge=this.metascreen({id:142,icon:u`
      | ╽ |
      |───|
      | ╿ |`,tile:"   |cbc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["underpass"],edges:"bcbc",connect:"6e"});this.hallNS_wall=this.metascreen({id:143,icon:u`
      | │ |
      | ┆ |
      | │ |`,tile:" c | c | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c c ",feature:["wall"],connect:"2=a",wall:135,mod:"wall",exits:[te({left:6,width:4,manual:!0})]});this.hallNS_wall_unreachable=this.metascreen({id:143,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWE_wall=this.metascreen({id:144,icon:u`
      |   |
      |─┄─|
      |   |`,tile:"   |ccc|   ",tilesets:{cave:{},iceCave:{}},feature:["wall"],edges:" c c",connect:"6=e",wall:103,mod:"wall"});this.hallWE_wall_unreachable=this.metascreen({id:144,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_arena=this.metascreen({id:145,icon:u`
      |┌┸┐|
      |│&│|
      |└┬┘|`,tile:[" n | a | c "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["arena"],edges:"c c ",connect:"2a",poi:[[1,96,120]],exits:[te(),oe({left:6,width:4,manual:!0}),hs(230,4),qt(246,4)],arena:1});this.hallNS_arena_unreachable=this.metascreen({id:145,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_arenaWall=this.metascreen({id:146,icon:u`
      |┌┄┐|
      |│&│|
      |└┬┘|`,placement:"manual",tile:[" n | a | c "],tilesets:{cave:{},iceCave:{}},feature:["arena","wall"],edges:"n c ",connect:"2x=apx",wall:39,mod:"wall",poi:[[1,96,120]],exits:[te({top:1}),oe({left:6,width:4,manual:!0})],arena:1});this.branchNWE_wall=this.metascreen({id:148,icon:u`
      | ┆ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wall"],edges:"cc c",connect:"2x=6e",exits:[te({left:6,width:4})],mod:"wall",wall:55});this.branchNWE_wall_unreachable=this.metascreen({id:148,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWE_upStair=this.metascreen({id:149,icon:u`<
      | < |
      |─┴─|
      |   |`,tile:"   |c<c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c c",connect:"6e",exits:[Ge(71)]});this.branchNWE_upStair_unreachable=this.metascreen({id:149,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.deadEndW_upStair=this.metascreen({id:150,icon:u`<
      | < |
      |─┘ |
      |   |`,tile:"   |c< |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c  ",connect:"6",exits:[Ge(66)]});this.deadEndW_upStair_unreachable=this.metascreen({id:150,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,32),delete:!0});this.deadEndW_downStair=this.metascreen({id:151,icon:u`>
      |   |
      |─┐ |
      | > |`,tile:"   |c> |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c  ",connect:"6",exits:[ut(162)]});this.deadEndW_downStair_unreachable=this.metascreen({id:151,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,32),delete:!0});this.deadEndE_upStair=this.metascreen({id:152,icon:u`<
      | < |
      | └─|
      |   |`,tile:"   | <c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"   c",connect:"e",exits:[Ge(76)]});this.deadEndE_upStair_unreachable=this.metascreen({id:152,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,208),delete:!0});this.deadEndE_downStair=this.metascreen({id:153,icon:u`>
      |   |
      | ┌─|
      | > |`,tile:"   | >c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"   c",connect:"e",exits:[ut(172)]});this.deadEndE_downStair_unreachable=this.metascreen({id:153,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,208),delete:!0});this.deadEndNS_stairs=this.metascreen({id:154,icon:u`
      | > |
      |   |
      | < |`,placement:"manual",tile:" > |   | < ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"c c ",connect:"2x|ax",exits:[ut(23),Ge(215)],match:e=>e(264,120)&&e(-48,120)});this.deadEndNS_stairs_unreachable=this.metascreen({id:154,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(264,120)&&!e(-48,120),delete:!0});this.deadEndN_stairs=this.metascreen({id:154,icon:u`
      | > |
      |   |
      |   |`,tile:[" c | > |   "," > |   |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"c   ",connect:"2",exits:[ut(23)],match:e=>!e(264,120)&&e(-48,120)});this.deadEndS_stairs=this.metascreen({id:154,icon:u`
      |   |
      |   |
      | < |`,tile:["   | < | c ","   |   | < "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"  c ",connect:"a",exits:[Ge(215)],match:e=>!e(-48,120)&&e(264,120)});this.deadEndNS=this.metascreen({id:155,icon:u`
      | ╵ |
      |   |
      | ╷ |`,placement:"manual",tile:" c |   | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"c c ",connect:"2p|ap",poi:[[0,-48,120],[0,272,120]],match:e=>e(-48,120)&&e(272,120)});this.deadEndNS_unreachable=this.metascreen({id:155,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(-48,120)&&!e(272,120),delete:!0});this.deadEndN=this.metascreen({id:155,icon:u`
      | ╵ |
      |   |
      |   |`,tile:[" c | c |   "," c |   |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"c   ",connect:"2",poi:[[0,-48,120]],match:e=>!e(272,120)&&e(-48,120)});this.deadEndS=this.metascreen({id:155,icon:u`
      |   |
      |   |
      | ╷ |`,tile:["   | c | c ","   |   | c "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"  c ",connect:"a",poi:[[0,272,120]],match:e=>!e(-48,120)&&e(272,120)});this.deadEndWE=this.metascreen({id:156,icon:u`
      |   |
      |╴ ╶|
      |   |`,placement:"manual",tile:"   |c c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:" c c",connect:"6p|ep",poi:[[0,112,-40],[0,112,264]],match:e=>e(112,-40)&&e(112,264)});this.deadEndWE_unreachable=this.metascreen({id:156,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(112,-40)&&!e(112,264),delete:!0});this.deadEndW=this.metascreen({id:156,icon:u`
      |   |
      |╴  |
      |   |`,tile:["   |cc |   ","   |c  |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:" c  ",connect:"6",poi:[[0,112,-40]],match:e=>!e(112,264)&&e(112,-40)});this.deadEndE=this.metascreen({id:156,icon:u`
      |   |
      |  ╶|
      |   |`,tile:["   | cc|   ","   |  c|   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"   c",connect:"e",poi:[[0,112,264]],match:e=>!e(112,-40)&&e(112,264)});this.hallNS_entrance=this.metascreen({id:158,icon:u`╽
      | │ |
      | │ |
      | ╽ |`,tile:" c | c | n ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c n ",connect:"2a",exits:[oe()]});this.hallNS_entrance_unreachable=this.metascreen({id:158,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.channelExitSE=this.metascreen({id:159,icon:u`
      |   |
      | ╔═|
      | ║ |`,tilesets:{dolphinCave:{}},feature:["river"],edges:"  rr",exits:[oe({left:5})]});this.channelBendWS=this.metascreen({id:160,icon:u`
      |█  |
      |═╗ |
      |█║ |`,tilesets:{dolphinCave:{}},feature:["river"],edges:" rr "});this.channelHallNS=this.metascreen({id:161,icon:u`
      | ║ |
      | ╠┈|
      | ║ |`,tilesets:{dolphinCave:{}},feature:["river","bridge"],wall:139,edges:"r r "});this.channelEntranceSE=this.metascreen({id:162,icon:u`
      |   |
      | ╔┈|
      |╷║ |`,tilesets:{dolphinCave:{}},feature:["river","bridge"],exits:[oe({left:2})],wall:124,edges:"  rr"});this.channelCross=this.metascreen({id:163,icon:u`
      | ║ |
      |═╬═|
      |╷║╷|`,tilesets:{dolphinCave:{}},feature:["river"],exits:[oe({left:3}),oe({left:11,type:"door"})],edges:"  rr"});this.channelDoor=this.metascreen({id:164,icon:u`∩
      | ∩█|
      |┈══|
      |  █|`,tilesets:{dolphinCave:{}},feature:["river","bridge"],exits:[F(56)],wall:115,edges:" r  "});this.mountainFloatingIsland=this.metascreen({id:165,icon:u`*
      |═╗█|
      |*║ |
      |═╣█|`,placement:"manual",tile:"   | ap|   ",tilesets:{mountainRiver:{}},edges:"  wp",connect:"e"});this.mountainPathNE_stair=this.metascreen({id:166,icon:u`└
      |█┋█|
      |█  |
      |███|`,tile:" / | pp|  ",tilesets:{mountain:{},mountainRiver:{}},edges:"l  p",connect:"2e",exits:[te()]});this.mountainBranchNWE=this.metascreen({id:167,icon:u`┴
      |█ █|
      |   |
      |███|`,tile:" p |ppp|  ",tilesets:{mountain:{},mountainRiver:{}},edges:"pp p",connect:"26e"});this.mountainPathWE_iceBridge=this.metascreen({id:168,icon:u`╫
      |█║█|
      | ┆ |
      |█║█|`,tile:[" r |ppp| r "," r |ppp|   "],tilesets:{mountainRiver:{}},feature:["bridge"],edges:"wpwp",connect:"6-e:2a",wall:135});this.mountainPathSE=this.metascreen({id:169,icon:u`┌
      |███|
      |█  |
      |█ █|`,tile:"   | pp| p ",tilesets:{mountain:{},mountainRiver:{}},edges:"  pp",connect:"ae",exits:[Ae({top:6,height:4}),oe({left:6,width:4})]});this.mountainDeadEndW_caveEmpty=this.metascreen({id:170,icon:u`∩
      |█∩█|
      |▐ ▐|
      |███|`,tile:"   |p< |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6",exits:[ie(56)]});this.mountainPathNE=this.metascreen({id:171,icon:u`└
      |█ █|
      |█  |
      |███|`,tile:" p | pp|   ",tilesets:{mountain:{},mountainRiver:{}},edges:"p  p",connect:"2e",exits:[Ae({top:6,height:4}),te({left:6,width:4})]});this.mountainBranchWSE=this.metascreen({id:172,icon:u`┬
      |███|
      |   |
      |█ █|`,tile:"   |ppp| p ",tilesets:{mountain:{},mountainRiver:{}},edges:" ppp",connect:"6ae"});this.mountainPathW_cave=this.metascreen({id:173,icon:u`∩
      |█∩█|
      |  ▐|
      |███|`,tile:"   |p< |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6",exits:[ie(85)]});this.mountainPathE_slopeS=this.metascreen({id:174,icon:u`╓
      |███|
      |█  |
      |█↓█|`,tile:"   | pp| \u2193 ",tilesets:{mountain:{}},edges:"  sp",connect:"ae"});this.mountainPathNW=this.metascreen({id:175,icon:u`┘
      |█ █|
      |  █|
      |███|`,tile:" p |pp |   ",tilesets:{mountain:{},mountainRiver:{}},edges:"pp  ",connect:"26",exits:[Te({top:6,height:4}),te({left:6,width:4})]});this.mountainCave_empty=this.metascreen({id:176,icon:u`∩
      |█∩█|
      |▌ ▐|
      |███|`,tile:"   | < |   ",tilesets:{mountain:{},mountainRiver:{}},edges:"    ",connect:"",exits:[ie(88)]});this.mountainPathE_cave=this.metascreen({id:177,icon:u`∩
      |█∩█|
      |█  |
      |███|`,tile:"   | <p|   ",tilesets:{mountain:{},mountainRiver:{}},edges:"   p",connect:"e",exits:[ie(87)]});this.mountainPathWE_slopeN=this.metascreen({id:178,icon:u`╨
      |█↓█|
      |   |
      |███|`,tile:" \u2193 |ppp|   ",tilesets:{mountain:{}},edges:"sp p",connect:"26e"});this.mountainDeadEndW=this.metascreen({id:179,icon:u`╴
      |███|
      |  █|
      |███|`,tile:"   |pp |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6"});this.mountainPathWE=this.metascreen({id:180,icon:u`─
      |███|
      |   |
      |███|`,tile:"   |ppp|   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p p",connect:"6e",exits:[Te({top:6,height:4}),Ae({top:6,height:4})]});this.mountainArena_gate=this.metascreen({id:181,icon:u`#
      |█#█|
      |▌ ▐|
      |█┋█|`,tile:"   | < | / ",tilesets:{mountain:{},mountainRiver:{}},feature:["arena"],edges:"  l ",connect:"a",exits:[{...Ge(71,3),type:"gate"}],flag:"custom:false"});this.mountainPathN_slopeS_cave=this.metascreen({id:182,icon:u`∩
      |█┋∩|
      |▌ ▐|
      |█↓█|`,tile:" / | < | \u2193 ",tilesets:{mountain:{}},edges:"l s ",connect:"2a",exits:[ie(90),te()]});this.mountainPathWE_slopeNS=this.metascreen({id:183,icon:u`╫
      |█↓█|
      |   |
      |█↓█|`,tile:" \u2193 |ppp| \u2193 ",tilesets:{mountain:{}},edges:"spsp",connect:"26ae"});this.mountainPathWE_slopeN_cave=this.metascreen({id:184,icon:u`∩
      |█↓∩|
      |   |
      |███|`,tile:" \u2193 |p<p|   ",tilesets:{mountain:{}},edges:"sp p",connect:"26e",exits:[ie(92)]});this.mountainPathWS=this.metascreen({id:185,icon:u`┐
      |███|
      |  █|
      |█ █|`,tile:"   |pp | p ",tilesets:{mountain:{},mountainRiver:{}},edges:" pp ",connect:"6a",exits:[Te({top:6,height:4}),oe({left:6,width:4})]});this.mountainSlope=this.metascreen({id:186,icon:u`↓
      |█↓█|
      |█↓█|
      |█↓█|`,tile:" \u2193 | \u2193 | \u2193 ",tilesets:{mountain:{}},edges:"s s ",connect:"2a"});this.mountainRiver=this.metascreen({id:186,icon:u`║
      |█║█|
      |█║█|
      |█║█|`,tile:[" r | r | r "," r | r |   "],tilesets:{mountainRiver:{}},edges:"w w ",connect:"2:e"});this.mountainPathE_gate=this.metascreen({id:187,icon:u`∩
      |█∩█|
      |█  |
      |███|`,tile:"   | <p|   ",tilesets:{mountain:{}},edges:"   p",connect:"e",exits:[ie(87,"gate")]});this.mountainPathWE_inn=this.metascreen({id:188,icon:u`∩
      |█∩█|
      |   |
      |███|`,tile:"   |p<p|   ",placement:"manual",tilesets:{mountain:{}},edges:" p p",connect:"6e",exits:[F(118)]});this.mountainPathWE_bridgeOverSlope=this.metascreen({id:189,icon:u`═
      |█↓█|
      | ═ |
      |█↓█|`,tile:" \u2193 |ppp| \u2193 ",tilesets:{mountain:{}},edges:"spsp",connect:"6e",exits:[hs(182,4)]});this.mountainPathWE_bridgeOverRiver=this.metascreen({id:189,icon:u`═
      |█║█|
      | ═ |
      |█║█|`,tile:[" r |ppp| r "," r |ppp|   "],tilesets:{mountainRiver:{}},edges:"wpwp",connect:"6e|2|a"});this.mountainSlope_underBridge=this.metascreen({id:190,icon:u`↓
      |█↓█|
      | ═ |
      |█↓█|`,tile:" \u2193 |p\u2193p| \u2193 ",placement:"manual",tilesets:{mountain:{}},edges:"spsp",connect:"2a",exits:[qt(198,4)]});this.mountainEmpty=this.metascreen({id:191,icon:u`
      |███|
      |███|
      |███|`,tile:"   |   |   ",tilesets:{mountain:{},mountainRiver:{}},feature:["empty"],edges:"    ",delete:!0});this.boundaryS=this.metascreen({id:192,icon:u`
      |   |
      |▄▄▄|
      |███|`,tile:"ooo|ooo|   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"o^ ^"});this.boundaryN_cave=this.metascreen({id:193,icon:u`
      |███|
      |▀∩▀|
      |   |`,tile:"   |o<o|ooo",tilesets:{grass:{},sea:{},desert:{},river:{requires:[4]}},edges:" vov",exits:[ie(73)]});this.cornerSE_cave=this.metascreen({id:194,icon:u`
      | ▐█|
      |▄∩█|
      |███|`,tile:"oo |o< |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<^  ",exits:[ie(90)]});this.waterfall=this.metascreen({id:195,icon:u`
      |   |
      |↓↓↓|
      |   |`,tile:"ooo|\u2193\u2193\u2193|ooo",tilesets:{sea:{}},edges:"oooo"});this.whirlpoolBlocker=this.metascreen({id:196,icon:u`
      |   |
      |█╳█|
      |   |`,tile:"ooo|\u2193#\u2193|ooo",tilesets:{sea:{}},feature:["whirlpool"],flag:"calm",edges:"oooo"});this.beachExitN=this.metascreen({id:197,icon:u`
      |█ █|
      |█╱▀|
      |█▌ |`,placement:"manual",tile:" x | bo| oo",tilesets:{sea:{}},edges:"n >v",exits:[te({left:9})]});this.whirlpoolOpen=this.metascreen({id:198,icon:u`
      |   |
      | ╳ |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{sea:{}},feature:["whirlpool"],edges:"oooo",flag:"calm"});this.quicksandOpen=this.metascreen({id:198,icon:u`
      |   |
      | ╳ |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{desert:{}},feature:["whirlpool"],edges:"oooo"});this.lighthouseEntrance=this.metascreen({id:199,icon:u`
      |▗▟█|
      |▐∩▛|
      |▝▀▘|`,placement:"manual",tile:"oo |oLo|ooo",tilesets:{sea:{}},feature:["lighthouse"],edges:"<oov",exits:[ie(42),F(117)]});this.beachCave=this.metascreen({id:200,icon:u`
      |█∩█|
      |▀╲█|
      |   |`,placement:"manual",tile:"   |o<o|ooo",tilesets:{sea:{}},edges:" vov",exits:[ie(40)]});this.beachCabinEntrance=this.metascreen({id:201,icon:u`
      | ∩█|
      | ╲▀|
      |█▄▄|`,placement:"manual",tile:"oo |oC8|   ",tilesets:{sea:{}},feature:["cabin"],edges:"<^ b",exits:[F(85),Ae({top:8,height:3})]});this.oceanShrine=this.metascreen({id:202,icon:u`
      |▗▄▖|
      |▐*▌|
      |▝ ▘|`,placement:"manual",tile:"ooo|oAo|ooo",tilesets:{sea:{}},feature:["altar"],edges:"oooo"});this.pyramidEntrance=this.metascreen({id:203,icon:u`
      | ▄ |
      |▟∩▙|
      | ╳ |`,placement:"manual",tile:"ooo|oPo|ooo",tilesets:{desert:{}},feature:["pyramid"],edges:"oooo",exits:[ie(167,"fortress")]});this.cryptEntrance=this.metascreen({id:204,icon:u`
      | ╳ |
      |▐>▌|
      |▝▀▘|`,placement:"manual",tile:"ooo|oYo|ooo",tilesets:{desert:{}},feature:["crypt"],edges:"oooo",exits:[ut(103)]});this.oasisLake=this.metascreen({id:205,icon:u`
      | ^ |
      |vOv|
      | vv|`,tile:"ooo|ooo|oro",placement:"manual",tilesets:{desert:{}},feature:["lake"],edges:"oo3o"});this.desertCaveEntrance=this.metascreen({id:206,icon:u`
      |▗▄▖|
      |▜∩▛|
      | ╳ |`,tile:"ooo|o<o|ooo",tilesets:{desert:{},sea:{requires:[4]}},edges:"oooo",exits:[ie(167)]});this.oasisCave=this.metascreen({id:207,icon:u`
      | vv|
      |▄∩v|
      |█▌ |`,placement:"manual",tile:"oro|o<o| oo",tilesets:{desert:{}},edges:"3^>o",exits:[Ge(55)]});this.channelEndW_cave=this.metascreen({id:208,icon:u`
      |██∩|
      |══ |
      |███|`,tile:"   |r< |   ",tilesets:{dolphinCave:{}},feature:["river"],exits:[Ge(87)]});this.boatChannel=this.metascreen({id:209,icon:u`
      |███|
      |▀▀▀|
      |▄▄▄|`,tile:["   |888|   ","   |88x|   "],tilesets:{sea:{}},edges:" b b",exits:[{...Ae({top:8,height:3}),entrance:40168},Te({top:8,height:3})]});this.channelWE=this.metascreen({id:210,icon:u`
      |███|
      |═══|
      |███|`,tile:"   |rrr|   ",tilesets:{dolphinCave:{}},feature:["river"]});this.riverCaveNWSE=this.metascreen({id:211,icon:u`
      |┘║└|
      |═╬═|
      |┬┇┬|`,tile:" r |rrr| r ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"rrrr",connect:"15p:3dp:79-bf",wall:182,poi:[[4,0,72],[4,0,152]]});this.riverCaveNS=this.metascreen({id:212,icon:u`
      |│║│|
      |│║│|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"19:3b",mod:"bridge"});this.riverCaveWE=this.metascreen({id:213,icon:u`
      |───|
      |═══|
      |───|`,tile:"   |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" r r",connect:"5d:7f",mod:"bridge"});this.riverCaveNS_bridge=this.metascreen({id:214,icon:u`
      |│║│|
      |├┇┤|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"r r ",connect:"19-3b",wall:135});this.riverCaveWE_bridge=this.metascreen({id:215,icon:u`
      |─┬─|
      |═┅═|
      |─┴─|`,tile:"   |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:" r r",connect:"5d-7f",wall:134});this.riverCaveSE=this.metascreen({id:216,icon:u`
      |┌──|
      |│╔═|
      |│║┌|`,tile:"   | rr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"  rr",connect:"9d:bf"});this.riverCaveWS=this.metascreen({id:217,icon:u`
      |──┐|
      |═╗│|
      |┐║│|`,tile:"   |rr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rr ",connect:"5b:79"});this.riverCaveNE=this.metascreen({id:218,icon:u`
      |│║└|
      |│╚═|
      |└──|`,tile:" r | rr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r  r",connect:"1f:3d"});this.riverCaveNW=this.metascreen({id:219,icon:u`
      |┘║│|
      |═╝│|
      |──┘|`,tile:" r |rr |   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rr  ",connect:"15:37"});this.riverCaveWE_passageN=this.metascreen({id:220,icon:u`╧
      |─┴─|
      |═══|
      |───|`,tile:" c |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"cr r",connect:"25d:7f"});this.riverCaveWE_passageS=this.metascreen({id:221,icon:u`╤
      |───|
      |═══|
      |─┬─|`,tile:"   |rrr| c ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rcr",connect:"5d:7af"});this.riverCaveNS_passageW=this.metascreen({id:222,icon:u`╢
      |│║│|
      |┤║│|
      |│║│|`,tile:" r |cr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rcr ",connect:"169:3b"});this.riverCaveNS_passageE=this.metascreen({id:223,icon:u`╟
      |│║│|
      |│║├|
      |│║│|`,tile:" r | rc| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r rc",connect:"19:3be"});this.wideHallNE=this.metascreen({id:224,icon:u`
      | ┃ |
      | ┗━|
      |   |`,tile:" w | ww|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w  w",connect:"2e"});this.goaWideHallNE=this.metascreen({id:224,icon:u`
      |│┃└|
      |│┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{}},edges:"w  w",connect:"1f|2e|3d"});this.goaWideHallNE_blockedLeft=this.metascreen({id:224,icon:u`
      |│┃└|
      | ┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{requires:[14],addWall:[97]}},edges:"w  w",connect:"1|f|2e|3d"});this.goaWideHallNE_blockedRight=this.metascreen({id:224,icon:u`
      |│┃ |
      |│┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{requires:[14],addWall:[13]}},edges:"w  w",connect:"1f|2e|3|d"});this.wideHallNW=this.metascreen({id:225,icon:u`
      | ┃ |
      |━┛ |
      |   |`,tile:" w |ww |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"ww  ",connect:"26"});this.goaWideHallNW=this.metascreen({id:225,icon:u`
      |┘┃│|
      |━┛│|
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{requires:[14],removeWall:109}},edges:"ww  ",connect:"15|26|37"});this.goaWideHallNW_blockedRight=this.metascreen({id:225,icon:u`
      |┘┃│|
      |━┛ |
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{}},edges:"ww  ",connect:"15|26|3|7"});this.goaWideHallNW_blockedLeft=this.metascreen({id:225,icon:u`
      | ┃│|
      |━┛│|
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{requires:[14],addWall:[1],removeWall:109}},edges:"ww  ",connect:"1|5|26|37"});this.wideHallSE=this.metascreen({id:226,icon:u`
      |   |
      | ┏━|
      | ┃ |`,tile:"   | ww| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"  ww",connect:"ae"});this.goaWideHallSE=this.metascreen({id:226,icon:u`
      |┌──|
      |│┏━|
      |│┃┌|`,tile:"   | ww| w ",tilesets:{labyrinth:{}},edges:"  ww",connect:"9d|ae|bf"});this.goaWideHallSE_blockedLeft=this.metascreen({id:226,icon:u`
      |┌──|
      | ┏━|
      |│┃┌|`,tile:"   | ww| w ",tilesets:{labyrinth:{requires:[14],addWall:[97]}},edges:"  ww",connect:"9|d|ae|bf"});this.goaWideHallSE_blockedRight=this.metascreen({id:226,icon:u`
      |┌──|
      |│┏━|
      |│┃ |`,tile:"   | ww| w ",tilesets:{labyrinth:{requires:[14],addWall:[221]}},edges:"  ww",connect:"9d|ae|b|f"});this.wideHallWS=this.metascreen({id:227,icon:u`
      |   |
      |━┓ |
      | ┃ |`,tile:"   |ww | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" ww ",connect:"6a"});this.goaWideHallWS=this.metascreen({id:227,icon:u`
      |──┐|
      |━┓│|
      |┐┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{requires:[14],removeWall:157}},edges:" ww ",connect:"5b|6a|79"});this.goaWideHallWS_blockedRight=this.metascreen({id:227,icon:u`
      |──┐|
      |━┓ |
      |┐┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{}},edges:" ww ",connect:"5|b|6a|79"});this.goaWideHallWS_blockedLeft=this.metascreen({id:227,icon:u`
      |──┐|
      |━┓│|
      | ┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{requires:[14],addWall:[209],removeWall:157}},edges:" ww ",connect:"5b|6a|7|9"});this.goaWideHallNS_stairs=this.metascreen({id:228,icon:u`
      |├┨│|
      |│┃│|
      |│┠┤|`,tile:" w | H | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"1239ab"});this.goaWideHallNS_stairsBlocked13=this.metascreen({id:228,icon:u`
      |└┨│|
      |╷┃╵|
      |│┠┐|`,tile:" w | H | w ",tilesets:{labyrinth:{requires:[14],addWall:[65,141]}},edges:"w w ",connect:"12ab|3|9"});this.goaWideHallNS_stairsBlocked24=this.metascreen({id:228,icon:u`
      |┌┨│|
      |│┃│|
      |│┠┘|`,tile:" w | H | w ",tilesets:{labyrinth:{requires:[14],addWall:[1,205]}},edges:"w w ",connect:"1|239a|b"});this.wideHallNS_deadEnds=this.metascreen({id:229,icon:u`
      | ╹ |
      |   |
      | ╻ |`,tile:" w |   | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w w ",connect:"2|a",match:e=>e(272,120)&&e(-48,120)});this.wideHall_deadEndN=this.metascreen({id:229,icon:u`
      | ╹ |
      |   |
      |   |`,tile:[" w |   |   "," w | w |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w   ",connect:"2",match:e=>!e(272,120)&&e(-48,120)});this.wideHall_deadEndS=this.metascreen({id:229,icon:u`
      |   |
      |   |
      | ╻ |`,tile:["   |   | w ","   | w | w "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"  w ",connect:"a",match:e=>e(272,120)&&!e(-48,120)});this.goaWideHallNS_deadEnd=this.metascreen({id:229,icon:u`
      |│╹│|
      |├─┤|
      |│╻│|`,tile:" w | = | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"139b|2|a"});this.goaWideHallNS_deadEndBlocked24=this.metascreen({id:229,icon:u`
      |╵╹│|
      |┌─┘|
      |│╻╷|`,tile:" w | = | w ",tilesets:{labyrinth:{requires:[14],addWall:[97,173]}},edges:"w w ",connect:"1|2|39|a|b"});this.goaWideHallNS_deadEndBlocked13=this.metascreen({id:229,icon:u`
      |│╹╵|
      |└─┐|
      |╷╻│|`,tile:" w | = | w ",tilesets:{labyrinth:{requires:[14],addWall:[109,161]}},edges:"w w ",connect:"1b|2|3|9|a"});this.wideHallNWSE=this.metascreen({id:230,icon:u`
      | ┃ |
      |━╋━|
      | ┃ |`,tile:" w |www| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"wwww",connect:"26ae"});this.goaWideHallNWSE=this.metascreen({id:230,icon:u`
      |┘┃└|
      |━╋━|
      |┐┃┌|`,tile:" w |www| w ",tilesets:{labyrinth:{}},edges:"wwww",connect:"26ae|15|3d|79|bf"});this.goaWideHallNWSE_blocked13=this.metascreen({id:230,icon:u`
      |┘┃ |
      |━╋━|
      | ┃┌|`,tile:" w |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[13,209]}},edges:"wwww",connect:"26ae|15|3|d|7|9|bf"});this.goaWideHallNWSE_blocked24=this.metascreen({id:230,icon:u`
      | ┃└|
      |━╋━|
      |┐┃ |`,tile:" w |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[1,221]}},edges:"wwww",connect:"26ae|1|5|3d|79|b|f"});this.wideHallNWE=this.metascreen({id:231,icon:u`
      | ┃ |
      |━┻━|
      |   |`,tile:" w |www|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"ww w",connect:"26e"});this.goaWideHallNWE=this.metascreen({id:231,icon:u`
      |┘┃└|
      |━┻━|
      |───|`,tile:" w |www|   ",tilesets:{labyrinth:{}},edges:"ww w",connect:"26e|15|3d|7f"});this.goaWideHallNWE_blockedTop=this.metascreen({id:231,icon:u`
      | ┃ |
      |━┻━|
      |───|`,tile:" w |www|   ",tilesets:{labyrinth:{requires:[14],addWall:[1,13]}},edges:"ww w",connect:"26e|1|5|3|d|7f"});this.wideHallWSE=this.metascreen({id:232,icon:u`
      |   |
      |━┳━|
      | ┃ |`,tile:"   |www| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" www",connect:"6ae"});this.goaWideHallWSE=this.metascreen({id:232,icon:u`
      |───|
      |━┳━|
      |┐┃┌|`,tile:"   |www| w ",tilesets:{labyrinth:{}},edges:" www",connect:"6ae|5d|79|bf"});this.goaWideHallWSE_blockedBottom=this.metascreen({id:232,icon:u`
      |───|
      |━┳━|
      | ┃ |`,tile:"   |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[209,221]}},edges:" www",connect:"6ae|5d|7|9|b|f"});this.wideHallNS_wallTop=this.metascreen({id:233,icon:u`
      | ┆ |
      | ┃ |
      | ┃ |`,tile:" n | w | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide","wall"],edges:"c w",connect:"2a",exits:[te({left:6,width:4})],wall:55,statues:[10]});this.goaWideHallNS_wallTop=this.metascreen({id:233,icon:u`
      | ┆ |
      |╷┃╷|
      |│┃│|`,tile:" n | w | w ",tilesets:{labyrinth:{}},feature:["wall"],edges:"c w ",connect:"2ax|9|b",exits:[te({left:6,width:4})],wall:55,statues:[10]});this.wideHallWE=this.metascreen({id:234,icon:u`
      |   |
      |━━━|
      |   |`,tile:"   |www|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" w w",connect:"6e"});this.goaWideHallWE=this.metascreen({id:234,icon:u`
      |───|
      |━━━|
      |───|`,tile:"   |www|   ",tilesets:{labyrinth:{}},edges:" w w",connect:"5d|6e|7f"});this.pitWE=this.metascreen({id:235,tile:"   |cpc|   ",icon:u`
      |   |
      |─╳─|
      |   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["pit"],edges:" c c",connect:"6e",platform:{type:"horizontal",coord:28728}});this.pitNS=this.metascreen({id:236,icon:u`
      | │ |
      | ╳ |
      | │ |`,tile:" c | p | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["pit"],edges:"c c ",connect:"2a",platform:{type:"vertical",coord:16504}});this.pitNS_unreachable=this.metascreen({id:236,icon:u`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.spikesNS_hallS=this.metascreen({id:237,icon:u`
      | ░ |
      | ░ |
      | │ |`,tile:" s | s | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"s c ",connect:"2a"});this.spikesNS_hallN=this.metascreen({id:238,icon:u`
      | │ |
      | ░ |
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" c | s | s ",feature:["spikes"],edges:"c s ",connect:"2a"});this.spikesNS_hallWE=this.metascreen({id:239,icon:u`
      | ░ |
      |─░─|
      | ░ |`,tile:" s |csc| s ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"scsc",connect:"26ae"});this.spikesNS_hallW=this.metascreen({id:-225,icon:u`
      | ░ |
      |─░ |
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" s |cs | s ",feature:["spikes"],edges:"scs ",connect:"26a",definition:e=>it(`L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R`,["L",e.metascreens.spikesNS_hallWE],["R",e.metascreens.spikesNS])});this.spikesNS_hallE=this.metascreen({id:-226,icon:u`
      | ░ |
      | ░─|
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" s | sc| s ",feature:["spikes"],edges:"s sc",connect:"2ae",definition:e=>it(`L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R`,["L",e.metascreens.spikesNS],["R",e.metascreens.spikesNS_hallWE])});this.riverCave_deadEndsNS=this.metascreen({id:240,icon:u`
      | ╨ |
      |   |
      | ╥ |`,tile:" r |   | r ",placement:"manual",tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"r r ",connect:"1p:3p|9p:bp",poi:[[1,-48,72],[1,-48,152],[1,272,72],[1,272,152]]});this.riverCave_deadEndsN=this.metascreen({id:240,icon:u`
      | ╨ |
      |   |
      |   |`,tile:[" r |   |   "," r | r |   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"r   ",connect:"1p:3p",poi:[[1,-48,72],[1,-48,152]],match:e=>!e(264,72)&&!e(264,152),mod:"bridge"});this.riverCave_deadEndsS=this.metascreen({id:240,icon:u`
      |   |
      |   |
      | ╥ |`,tile:["   |   | r ","   | r | r "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"  r ",connect:"9p:bp",poi:[[1,272,72],[1,272,152]],match:e=>!e(-48,72)&&!e(-48,152),mod:"bridge"});this.riverCave_deadEndsWE=this.metascreen({id:241,icon:u`
      |   |
      |╡ ╞|
      |   |`,tile:"   |r r|   ",tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:" r r",connect:"5p:7p|dp:fp",poi:[[1,96,-40],[1,160,-40],[1,96,264],[1,160,264]]});this.riverCave_deadEndsW=this.metascreen({id:241,icon:u`
      |   |
      |╡  |
      |   |`,tile:["   |r  |   ","   |rr |   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:" r  ",connect:"5p:7p",poi:[[1,96,-40],[1,160,-40]],match:e=>!e(96,264)&&!e(160,264)});this.riverCave_deadEndsE=this.metascreen({id:241,icon:u`
      |   |
      |  ╞|
      |   |`,tile:["   |  r|   ","   | rr|   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"   r",connect:"dp:fp",poi:[[1,96,264],[1,160,264]],match:e=>!e(96,-40)&&!e(160,-40)});this.riverCaveN_bridge=this.metascreen({id:242,icon:u`
      | ┇ |
      | ╨ |
      |   |`,tile:[" r | r |   "," r |   |   "],tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"r   ",connect:"1-3",wall:23,match:e=>!e(208,72)&&!e(208,152)});this.riverCaveS_bridge=this.metascreen({id:242,icon:u`
      |   |
      | ╥ |
      | ┇ |`,tile:["   | r | r ","   |   | r "],tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"  r ",connect:"9-b",wall:198,match:e=>!e(16,72)&&!e(16,152)});this.riverCaveWSE=this.metascreen({id:243,icon:u`
      |───|
      |═╦═|
      |┐║┌|`,tile:"   |rrr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rrr",connect:"5d:79:bf"});this.riverCaveNWE=this.metascreen({id:244,icon:u`
      |┘║└|
      |═╩═|
      |───|`,tile:" r |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rr r",connect:"15p:3dp:7f",poi:[[4,0,72],[4,0,152]]});this.riverCaveNWS=this.metascreen({id:-241,icon:u`
      |┘║│|
      |═╣│|
      |┐║│|`,tile:" r |rr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rrr ",connect:"15p:3b:79",poi:[[4,0,72]],definition:e=>it(`A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R`,["A",e.metascreens.riverCaveNWE],["B",e.metascreens.riverCaveWSE],["R",e.metascreens.riverCaveNS])});this.riverCaveNSE=this.metascreen({id:-242,icon:u`
      |│║└|
      |│╠═|
      |│║┌|`,tile:" r | rr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r rr",connect:"19:3dp:bf",poi:[[4,0,152]],definition:e=>it(`L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B`,["A",e.metascreens.riverCaveNWE],["B",e.metascreens.riverCaveWSE],["L",e.metascreens.riverCaveNS])});this.riverCaveNS_blockedRight=this.metascreen({id:245,icon:u`
      |│║│|
      |│║ |
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"19:3p:bp",poi:[[0,64,152],[0,192,152]],mod:"block"});this.riverCaveNS_blockedLeft=this.metascreen({id:246,icon:u`
      |│║│|
      | ║│|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"1p:3b:9p",poi:[[0,48,72],[0,176,72]],mod:"block"});this.spikesNS=this.metascreen({id:247,icon:u`
      | ░ |
      | ░ |
      | ░ |`,tile:" s | s | s ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"s s ",connect:"2a"});this.cryptArena_statues=this.metascreen({id:248,icon:u`<
      |&<&|
      |│ │|
      |└┬┘|`,tile:"   | a | c ",tilesets:{pyramid:{}},feature:["arena"],edges:"  c ",connect:"a",exits:[{...Ge(87),type:"crypt"}],flag:"custom:false",arena:2});this.pyramidArena_draygon=this.metascreen({id:249,icon:u`
      |┌─┐|
      |│╳│|
      |└┬┘|`,tile:"   | a | w ",tilesets:{pyramid:{}},feature:["arena","pit"],edges:"  w ",connect:"a",arena:3});this.cryptArena_draygon2=this.metascreen({id:250,icon:u`
      |┏┷┓|
      |┃&┃|
      |┗┳┛|`,tile:" x | a | w ",tilesets:{pyramid:{}},feature:["arena"],edges:"c w ",connect:"2a",exits:[te({left:6,width:4})],flag:"custom:false",arena:4});this.cryptArena_entrance=this.metascreen({id:251,icon:u`
      | ┃ |
      | ┃ |
      | ╿ |`,tile:" w | w | x ",tilesets:{pyramid:{}},edges:"w n ",connect:"2a",exits:[oe()]});this.cryptTeleporter=this.metascreen({id:252,tilesets:{pyramid:{},tower:{}},exits:[oe({left:6,width:4}),ie(87,"teleporter")]});this.fortressArena_through=this.metascreen({id:253,icon:u`╽
      |┌┴┐|
      |│ │|
      |┕┳┙|`,tile:[" c | a | w "," n | a | w "],tilesets:{fortress:{},pyramid:{}},feature:["arena"],edges:"n w ",connect:"2a",exits:[te()],arena:5});this.fortressTrap=this.metascreen({id:254,icon:u`
      |└─┘|
      | ╳ |
      |╶┬╴|`,tile:"   | x | n ",tilesets:{fortress:{},pyramid:{}},feature:["pit"],edges:"  n ",connect:"a",exits:[oe()]});this.shrine=this.metascreen({id:255,tilesets:{shrine:{}},exits:[oe({left:6,width:5}),F(104)]});this.inn=this.metascreen({id:256,tilesets:{house:{}},exits:[{...F(134),entrance:37992}]});this.toolShop=this.metascreen({id:257,tilesets:{house:{}},exits:[{...F(134),entrance:37992}]});this.armorShop=this.metascreen({id:258,tilesets:{house:{}},exits:[{...F(134),entrance:37992}]});for(let s in this){let r=this[s];r instanceof Ns&&(r.name=s)}}metascreen(e){let s=this,r=new Ns(this.rom,s.length,e);s[s.length++]=r,this.screensById.get(r.sid).push(r);for(let n in e.tilesets){let o=n,a=e.tilesets[o];if(a.requires)for(let l of a.requires)this.screensByFix.get(l).push(r);else this.rom.metatilesets[o].addScreen(r)}return r}getById(e,s){let r=this.screensById.has(e)?[...this.screensById.get(e)]:[];return s!=null&&(r=r.filter(n=>n.isCompatibleWithTileset(s))),r}registerFix(e,s){for(let r of this.screensByFix.get(e)){let n=(r.data.update||[]).find(o=>o[0]===e);if(n){if(s==null)throw new Error("Seed required for update");if(!n[1](r,s,this.rom))continue}for(let o in r.data.tilesets){let a=o,l=r.data.tilesets[a];if(!l.requires)continue;let c=l.requires.indexOf(e);c<0||(l.requires.splice(c,1),l.requires.length||this.rom.metatilesets[a].addScreen(r))}}this.registeredFixes.add(e)}isFixed(e){return this.registeredFixes.has(e)}renumber(e,s,r){if(e===s)return;V0&&console.log(`renumber ${Xt(e)} -> ${Xt(s)}`);let n=this.screensById.get(s);if(n.length)throw new Error(`ID already used: ${Xt(s)}: ${n.join(", ")}`);let o;for(let c of this.getById(e))r&&!c.tilesets().some(d=>r.has(d))||(c.data.definition&&(o=c.data.definition(this.rom),c.data.definition=void 0),c.unsafeSetId(s),n.push(c));this.screensById.delete(e);let a=this.rom.screens.getScreen(e);e>=0&&s<0&&(n[0].data.definition=Vt(Uint8Array.from(a.tiles)));let l=a.clone(s);this.rom.screens.setScreen(s,l),e<0&&(this.rom.screens.deleteScreen(e),o&&s>=0&&(l.tiles=Array.from(o))),this.rom.locations.renumberScreen(e,s);for(let c of this.rom.metatilesets)for(let d of c)if(d.sid===e)return;a.used=!1}checkExitTypes(){for(let e in this){let s=this[e],r=new Set;for(let n of s?.data?.exits||[])r.has(n.type)&&console.log(`duplicate: ${e} ${n.type}`),r.add(n.type)}}}});var Ha,Sr,Jn,Ka=z(()=>{ve();$();Ha=230492,Sr=class extends Array{constructor(e){super(256);this.rom=e;for(let s=0;s<256;s++)this[s]=new Jn(e,s)}write(){let e=this.rom.assembler();e.segment("1c","1d");let s=new Map;for(let r of this)!r.mirrored&&r.used&&s.set(r.id,r.assembleNotMirrored(e));for(let r of this)r.mirrored&&r.used&&r.assembleMirrored(e,s);return[e.module()]}},Jn=class extends ee{constructor(e,s){super(e,s);this.mirrored=null;if(this.pointer=Ha+(this.id<<1),this.base=le(e.prg,this.pointer)+196608,this.used=this.base>=229376,e.prg[this.base]===255){let r=le(e.prg,this.base+1);for(let n=0;n<256;n++)if(le(e.prg,Ha+(n<<1))===r){this.mirrored=n;break}if(this.mirrored==null)throw new Error(`could not find mirrored sprite for ${C(s)}: ${C(r)}`);this.size=0,this.frameMask=0,this.frames=0,this.sprites=[]}else this.mirrored=null,this.size=e.prg[this.base],this.frameMask=e.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=j(this.frames,r=>{let n=this.base+2+r*4*this.size,o=[];for(let a=0;a<this.size;a++){if(e.prg[n+4*a]===128&&r==this.frames-1){o.push([128,128,128,128]);break}o.push(X(e.prg,n+4*a,4))}return o})}patternBanks(e=0){if(!this.used)return[];let s=this;s.mirrored&&(s=this.rom.metasprites[s.mirrored]);let r=new Set;for(let n of s.sprites)for(let[o,,,a]of n){if(o===128)break;r.add(a+e>>>6&255)}return[...r]}palettes(){if(!this.used)return[];let e=this;e.mirrored&&(e=this.rom.metasprites[e.mirrored]);let s=new Set;for(let r of e.sprites)for(let[n,,o]of r){if(n===128)break;s.add(o&3)}return[...s]}get org(){return this.base-196608}assembleNotMirrored(e){e.reloc(`Metasprite_${this.id.toString(16)}_Data`);let s=e.pc();e.byte(this.size),e.byte(this.frameMask);for(let r=0;r<this.frames;++r)for(let n=0;n<this.sprites[r].length;++n)e.byte(...this.sprites[r][n]);return e.org(this.pointer-196608,`Metasprite_${this.id.toString(16)}_Ptr`),e.word(s),s}assembleMirrored(e,s){e.reloc(`Metasprite_${this.id.toString(16)}_Data`);let r=e.pc();e.byte(255),e.word(s.get(this.mirrored)),e.org(this.pointer-196608,`Metasprite_${this.id.toString(16)}_Ptr`),e.word(r)}}});var Er,Tr,H0,_n,ja=z(()=>{Xe();wr();ve();Er=class extends Ot{constructor(e){super(e);this._all=[];this.grass=this.tileset(128,{patterns:[0,12]});this.town=this.tileset(132,{});this.cave=this.tileset(136,{});this.dolphinCave=this.tileset(136,{});this.pyramid=this.tileset(140,{});this.river=this.tileset(144,{animated:[0,1],patterns:[20,0]});this.sea=this.tileset(148,{});this.lime=this.tileset(148,{});this.mountain=this.tileset(148,{});this.shrine=this.tileset(152,{});this.desert=this.tileset(156,{});this.mountainRiver=this.tileset(156,{});this.swamp=this.tileset(160,{consolidated:!0});this.house=this.tileset(160,{});this.fortress=this.tileset(164,{});this.labyrinth=this.tileset(164,{});this.iceCave=this.tileset(168,{});this.tower=this.tileset(172,{});for(let s in this){let r=this[s];r instanceof Tr&&(r.name=s)}}tileset(e,s){let r=new Tr(this.rom,e,s);return this._all.push(r),r}[Symbol.iterator](){return this._all[Symbol.iterator]()}},Tr=class{constructor(t,e,s){this.rom=t;this.tilesetId=e;this.data=s;this._screens=new Set;this._cache=void 0}[Symbol.iterator](){return this._screens[Symbol.iterator]()}get cache(){return this._cache||(this._cache=new _n(this)),this._cache}get tileset(){return this.rom.tilesets[this.tilesetId]}get empty(){let t=this.cache.empty;if(!t)throw new Error(`No empty screen for ${this.name}`);return t}effects(){return this.tileset.effects()}getTile(t){return this.tileset.getTile(t)}addScreen(t){this._screens.add(t),t.unsafeAddTileset(this),this.invalidate()}deleteScreen(t){this._screens.delete(t),t.unsafeRemoveTileset(this),this.invalidate()}getMetascreens(t){return this.cache.fromId.get(t)??[]}getExits(t){return this.cache.exits.get(t)}getMetascreensFromTileString(t){return this.cache.tiles.has(t)?this.cache.tiles.get(t):[]}getScreensWithOnlyFeatures(...t){let e=0;for(let r of t)e|=nt[r];let s=[];for(let r of this)r.features&~e||s.push(r);return s}withMod(t,e){let s=[];for(let r of this.cache.tiles.get(t))r.data.mod===e&&s.push(r);return s}unreachableVariant(t){for(let e of this)if(e.sid===t.sid&&e.isEmpty())return e;return t}isBannedVertical(t,e){return this.cache.bannedNeighbors[0].has(t.uid<<16|e.uid)}isBannedHorizontal(t,e){return this.cache.bannedNeighbors[1].has(t.uid<<16|e.uid)}invalidate(){this._cache=void 0}};(r=>(r.N=0,r.W=1,r.S=2,r.E=3))(H0||={});_n=class{constructor(t){this.tileset=t;this.fromId=new we(()=>[]);this.exits=new we(()=>[]);this.tiles=new we(()=>[]);this.bannedNeighbors=[new Set,new Set];let e;for(let s of t){s.sid>=0&&this.fromId.get(s.sid).push(s),!e&&s.data.edges==="    "&&s.data.placement!=="manual"&&s.hasFeature("empty")&&!s.data.exits?.length&&(e=s);for(let o of s.data.exits??[])this.exits.get(o.type).push(s);let r=typeof s.data.tile=="string"?[s.data.tile]:s.data.tile;for(let o of r??[])this.tiles.get(o.replace(/\|/g,"")).push(s);(s.hasFeature("ramp")||s.hasFeature("overpass")||s.hasFeature("pit")||s.isEmpty())&&this.banDeadEndNeighbor(s);let n=t.rom.metascreens;this.banDeadEndNeighbor(n.branchNWE_wall,1),this.banNeighbor(n.deadEndS_stairs,n.deadEndN_stairs,2),this.banNeighbor(n.deadEndNS_stairs,n.deadEndN_stairs,2),this.banNeighbor(n.deadEndS_stairs,n.deadEndNS_stairs,2),this.banNeighbor(n.deadEndNS_stairs,n.deadEndNS_stairs,2)}this.empty=e??t.rom.metascreens.caveEmpty}banDeadEndNeighbor(t,e=15){for(let s of this.tileset)if(s.hasFeature("deadend"))for(let r=0;r<4;r++){let n=1<<r;e&n&&t.data.edges?.[r]!==" "&&s.data.edges?.[r^2]!==" "&&this.banNeighbor(t,s,r)}}banNeighbor(t,e,s){this.bannedNeighbors[s&1].add((s&2?t:e).uid<<16|(s&2?e:t).uid)}}});function Ya(i){if(i!==Math.floor(i))throw new Error(`Expected integer: ${i}`);return i}var K0,j0,kr,Za,si,Lr,W,Qn,$n,Y0,ei,ti,Z0,X0,J0,_0,Q0,Xa=z(()=>{ve();hr();cs();$();({$04:K0,$05:j0,$0e:kr,$1b:Za,$fe:si}=me),Lr=class extends Ue{constructor(e){super(205);this.rom=e;this.GoaSoldier=new W(this,11);this.LeafElder=new W(this,13);this.LeafElderDaughter=new W(this,17);this.LeafRabbit=new W(this,19);this.WindmillGuard=new W(this,20);this.SleepingWindmillGuard=new W(this,21);this.Akahana=new W(this,22);this.SkiFree=new W(this,27);this.OakElder=new W(this,29);this.OakMother=new W(this,30);this.OakChild=new W(this,31);this.Aryllis=new W(this,35);this.AmazonesGuard=new W(this,37);this.AryllisRightAttendant=new W(this,38);this.AryllisLeftAttendant=new W(this,39);this.Nadare=new W(this,40);this.DeadSkiFree=new W(this,44);this.SoldierGuard=new W(this,45);this.PortoaThroneRoomBackDoorGuard=new W(this,51);this.PortoaPalaceFrontGuard=new W(this,52);this.PortoaQueen=new ei(this,56);this.FortuneTeller=new W(this,57);this.WaterfallCaveAdventurers=new W(this,58);this.JoelElder=new W(this,61);this.Clark=new W(this,68);this.ShyronGuard=new W(this,78);this.Brokahana=new W(this,84);this.SaharaBunny=new W(this,89);this.Deo=new W(this,90);this.SaharaElder=new W(this,91);this.SaharaElderDaughter=new W(this,92);this.Zebu=new W(this,94);this.Tornel=new W(this,95);this.Stom=new W(this,96);this.MesiaRecording=new W(this,97);this.Asina=new W(this,98);this.HurtDolphin=new W(this,99);this.Fisherman=new W(this,100);this.StartledVillagerOutsideCave=new W(this,101);this.KensuInCabin=new W(this,104);this.Dolphin=new ti(this,105);this.SleepingKensu=new W(this,107);this.KensuDisguisedAsDancer=new W(this,108);this.KensuDisguisedAsSoldier=new W(this,109);this.AztecaInShyron=new W(this,110);this.DeadAkahana=new W(this,112);this.DeadStomsGirlfriend=new W(this,113);this.DeadStom=new W(this,114);this.KensuInSwan=new W(this,116);this.SlimedKensu=new W(this,117);this.FishermanDaughter=new W(this,123);this.Kensu=new W(this,126);this.AkahanaInBrynmaer=new W(this,130);this.AztecaInPyramid=new W(this,131);this.SaberaDisguisedAsMesia=new W(this,132);this.StonedWaterfallCaveAdventurers=new W(this,133);this.StonedAkahana=new W(this,136);this.Mesia=new W(this,142);this.Vampire1=new W(this,192);this.Insect=new W(this,193);this.Kelbesque1=new W(this,194);this.Rage=new W(this,195);this.Kelbesque2=new W(this,197);this.Sabera2=new W(this,198);this.Mado2=new W(this,199);this.Karmine=new W(this,200);this.StatueOfMoon=new W(this,201);this.StatueOfSun=new W(this,202);this.Draygon=new W(this,203);this.Vampire2=new W(this,204);for(let r in this){let n=this[r];!this.hasOwnProperty(r)||!(n instanceof W)||(this[n.id]=n,n.name=mt(r))}for(let r=0;r<205;r++)this[r]||(this[r]=new W(this,r));let s=Q0.readAddress(e.prg);this.movementScripts=j(16,r=>{let n=s.plus(2*r).readAddress(e.prg).offset,o=[];for(;e.prg[n]<128;)o.push(e.prg[n++]);let a=e.prg[n];return{steps:o,terminate:a}})}write(){let e=this.rom.assembler();de(e,kr,34682,35165),de(e,kr,35557,39156);for(let n of this)!n||!n.used||n.assemble(e);de(e,Za,44804,44969);let s=[];e.segment("1b","fe","ff");let r=0;for(let n of this.movementScripts){let o=(e.reloc(`MovementScript_${C(r++)}`),e.pc());e.byte(...n.steps,n.terminate),s.push(o)}return Ee(e,"MovementScriptTable"),e.word(...s),[e.module()]}},W=class extends ee{constructor(e,s){super(e.rom,s);this.npcs=e;this.spawnConditions=new Map;this.localDialogs=new Map;let r=e.rom;if(s>204)throw new Error(`Unavailable: ${s}`);this._used=!Y0.has(s)&&(s<143||s>=192);let n=s<196?this.dialogPointer.readAddress(r.prg):null;n&&n.org===35641&&(n=null),this.data=X(r.prg,this.dataBase.offset,4);let a=this.spawnPointer.readAddress(r.prg).offset,l;for(;this.used&&(l=r.prg[a++])!==255;){let c=vn.read(r.prg,a);a+=2*c.length,this.spawnConditions.set(l,c)}if(this.globalDialogs=[],n){let c=n.offset;for(;;){let[m,f]=Qn.parse(r.prg,c);if(c+=4,m.condition&&this.globalDialogs.push(m),f)break}let d=[];for(;;){let m=r.prg[c++];if(m===255)break;d.push([m,r.prg[c++]])}d.length||d.push([-1,0]);let h=c;for(let[m,f]of d){let g=[];for(this.localDialogs.set(m,g),c=h+f;;){let[w,k]=$n.parse(r.prg,c);if(c+=w.byteLength(),g.push(w),k)break}}}}get dataBase(){let e=this.id&128?j0:K0,s=33008|(this.id&252)<<6|(this.id&3)<<2;return ge.of(e,s)}get spawnPointer(){return ge.of(kr,34272+(this.id<<1))}get dialogPointer(){return ge.of(kr,35165+(this.id<<1))}get used(){return this._used}set used(e){if(e&&this.id>136&&this.id<192&&this.id!==142)throw new Error(`invalid: ${this.id}`);this._used=e}spawnConditionsBytes(){let e=[];for(let[s,r]of this.spawnConditions)e.push(s,...vn.bytes(r));return e.push(255),e}dialog(e){let s=e?e.id:-1,r=this.localDialogs.get(s);if(r)return r;throw new Error(`No local dialog for NPC ${C(this.id)} at ${C(s)}`)}spawns(e){let s=e.id,r=this.spawnConditions.get(e.id);if(r)return r;throw new Error(`No spawn condition for NPC ${C(this.id)} at ${C(s)}`)}hasDialog(){let e=!!(this.globalDialogs.length||this.localDialogs.size);if(this.id>142&&this.id!==195&&e)throw new Error(`invalid: ${this.id}`);return e}*allDialogs(){yield*this.globalDialogs;for(let e of this.localDialogs.values())yield*e}dialogBytes(){if(!this.hasDialog())return[];let e=[];function s(o){let a=[];for(let l=0;l<o.length;l++)a.push(...o[l].bytes(l===o.length-1));return a}this.globalDialogs.length?e.push(...s(this.globalDialogs)):e.push(128,0,0,0);let r=[],n=new Map;for(let[o,a]of this.localDialogs){let l=s(a),c=l.join(","),d=n.get(c);if(d!=null){e.push(o,d);continue}n.set(c,r.length),o!==-1&&e.push(o,r.length),r.push(...l)}return r.length&&e.push(255,...r),e}link(e){let s=this.rom.npcs[e];this.spawnConditions=s.spawnConditions,this.linkDialog(e)}linkDialog(e){let s=this.rom.npcs[e];this.globalDialogs=s.globalDialogs,this.localDialogs=s.localDialogs}localDialog(e,s){s==null&&(s=e,e=-1);let r=this.localDialogs.get(e);if(r==null||s>=r.length)throw new Error(`No local dialog ${s} for location ${C(e)}`);return r[s]}isParalyzable(){for(let e=217176;e<217196;e++)if(this.rom.prg[e]===this.id)return!1;return!0}assemble(e){if(!this.used)return;let s=C(this.id);this.dataBase.loc(e,"PersonData_${id}"),e.byte(...this.data),e.segment("0e","fe","ff"),e.reloc(`SpawnCondition_${s}`);let r=e.pc();if(e.byte(...this.spawnConditionsBytes()),this.spawnPointer.loc(e,`SpawnCondition_${s}_Pointer`),e.word(r),this.hasDialog()){e.segment("0e","fe","ff"),e.reloc(`Dialog_${s}`);let n=e.pc();e.byte(...this.dialogBytes()),this.dialogPointer.loc(e,`Dialog_${s}_Pointer`),e.word(n)}}dump(){if(!this.used)return"";let e=`NPC $${C(this.id)}${this.name?": "+this.name:""}
`,s=(n,o="",a="NOT ")=>{if(n===0)return"FALSE";if(n===-1)return"TRUE";let l=n<0?a:o;n<0&&(n=~n);let c=this.rom.flags[n]?.name;return`${l}${n.toString(16).padStart(3,"0")}${c?" "+c:""}`};function r(n){return"      | "+n.replace(/\n/g,`
      | `)}for(let[n,o]of this.spawnConditions){let a=this.rom.locations[n]?.name||"";e+=`  SPAWN $${C(n)} ${a}:
`;let l="";for(let c of o)e+=`    ${l}${s(c)}
`,l="  AND "}(this.globalDialogs.length||this.localDialogs.get(-1)?.length)&&(e+=`  DIALOG:
`);for(let n of this.globalDialogs){let o=this.rom.messages.get(n.message)?.text||"(broken message)";e+=`    IF ${s(n.condition)}:
`,n.message.action&&(e+=`      => ACTION: $${C(n.message.action)}
`),e+=`${r(o)}
`}for(let[n,o]of this.localDialogs){if(n>=0){let a=this.rom.locations[n]?.name||"";e+=`  DIALOG $${C(n)} ${a}:
`}for(let a of o){let l=this.rom.messages.get(a.message)?.text||"(broken message)";e+=`    IF ${s(a.condition)}:
`,a.message.action&&(e+=`      => ACTION: $${C(a.message.action)}
`);for(let c of a.flags)e+=`      => ${s(c,"SET: ","CLEAR: ")}
`;e+=`${r(l)}
`}}return e}},Qn=class i{constructor(t,e){this.condition=t;this.message=e}static of(t,e){let[s,r,n=0]=e;return new i(t,Be.of({part:s,index:r,action:n}))}static parse(t,e=0){let s=vt(t,e),r=Be.from(t,e+2),n=s&1023,o=!!(s&32768);return s&8192&&(n=~n),[new i(n,r),o]}bytes(t){let e=this.condition;return e<0&&(e=~e|8192),t&&(e|=32768),[e>>>8,e&255,...this.message.data]}},$n=class i{constructor(t,e,s,r){this.condition=t;this.message=e;this.update=s;this.flags=r}clone(){return i.parse(this.bytes(!1))[0]}static parse(t,e=0){let s=vt(t,e),r=Be.from(t,e+2),n=t[e+4];e+=5;let o=s&1023,a=!!(s&32768);s&8192&&(o=~o);let c=s&16384?bn.read(t,e):[];return[new i(o,r,n,c),a]}static of(t,e,s=[]){let[r,n,o=0]=e;return new i(t,Be.of({part:r,index:n,action:o}),0,s)}byteLength(){return 5+2*this.flags.length}bytes(t){let e=this.condition;return e<0&&(e=~e|8192),t&&(e|=32768),this.flags.length&&(e|=16384),[e>>>8,e&255,...this.message.data,this.update,...bn.bytes(this.flags)]}},Y0=new Set([49,59,60,102,103,106,115,116,130,134,135,137,138,139,140,141,196]),ei=class extends W{get expectedSword(){return this.localDialog(3).condition&255}set expectedSword(t){this.localDialog(3).condition=512|t}},ti=class extends W{constructor(t,e){super(t,e);let s=t.rom.prg,r=_0.readAddress(s).offset,n=o=>{let a=rt.from(s,r+5*o),l=s[r+5*o+4];return{entrance:a,movement:l}};this.spawnScripts=j(9,n),this.channelSpawn=Ya(X0.read(s)/5),this.evilSpiritIslandSpawn=Ya(J0.read(s)/5)}assemble(t){for(super.assemble(t),t.segment("fe"),t.org(54952),t.free(45),t.segment("fe","ff"),t.reloc("DolphinSpawnTable"),t.label("DolphinSpawnTable"),t.export("DolphinSpawnTable");!this.spawnScripts[this.spawnScripts.length-1].entrance.used;)this.spawnScripts.pop();for(let e=0;e<this.rom.locations.AngrySea.entrances.length;e++){let s=this.spawnScripts[e];s?t.byte(...s.entrance.data,s.movement):t.byte(255,15,255,15,15)}t.assign("dolphinSpawnIndexChannel",this.channelSpawn),t.assign("dolphinSpawnIndexESI",this.evilSpiritIslandSpawn),t.export("dolphinSpawnIndexChannel","dolphinSpawnIndexESI")}};(o=>(o.UP=0,o.RIGHT=2,o.DOWN=4,o.LEFT=6,o.DOLPHIN=255,o.DESPAWN=254))(Z0||={});X0=ge.of(si,54884),J0=ge.of(si,54892),_0=ge.of(si,54906),Q0=ge.of(Za,44627)});var Y,Mr,Ja=z(()=>{ve();Y=class extends ee{constructor(e,s,r,n={}){super(e.rom,s);this.type=r;this.data=n;e[s]=this}},Mr=class extends Ue{constructor(e){super();this.rom=e;this.straightShotOptionalBounce=new Y(this,16,"projectile");this.straightShotNoBounce=new Y(this,17,"projectile");this.madoShuriken=new Y(this,22,"projectile");this.demonWallFire=new Y(this,23,"projectile");this.popcorn=new Y(this,27,"projectile");this.harpoonSource=new Y(this,29,"source");this.lasers=new Y(this,30,"projectile");this.paralysisPowder=new Y(this,31,"projectile");this.randomMovement=new Y(this,32,"monster",{movement:1});this.randomLargeStoner=new Y(this,33,"monster",{hasChild:!0,large:!0,movement:2});this.slowHoming=new Y(this,34,"monster",{hasChild:!0,movement:3});this.smallHoming1=new Y(this,36,"monster",{movement:3});this.smallHoming2=new Y(this,37,"monster",{movement:3});this.homingShooter1=new Y(this,38,"monster",{hasChild:!0,projectile:1,movement:3});this.homingShooter2=new Y(this,39,"monster",{hasChild:!0,projectile:1,movement:3});this.headShooter=new Y(this,40,"monster",{hasChild:!0,projectile:2,movement:3,metasprites:()=>[101,145]});this.puddle=new Y(this,41,"monster",{hasChild:!0,movement:5,metasprites:()=>[107,104]});this.soldier=new Y(this,42,"monster",{hasChild:!0,projectile:1,movement:4,metasprites:e=>[0,1,2,3].map(s=>s+e.data[31])});this.mimic=new Y(this,43,"monster",{movement:4});this.mothResidueSource=new Y(this,44,"source",{hasChild:!0});this.flailGuy=new Y(this,46,"monster",{hasChild:!0,large:!0,projectile:2,movement:3});this.dynaLaser=new Y(this,47,"projectile");this.guardianStatue=new Y(this,52,"source",{hasChild:!0});this.movingPlatform=new Y(this,56,"other");this.crumblingMovingPlatform=new Y(this,60,"other");this.erraticFlyer=new Y(this,64,"monster",{hasChild:!0,moth:!0,movement:4,placement:"moth"});this.skeleton=new Y(this,65,"monster",{hasChild:!0,movement:3});this.swampTomato=new Y(this,68,"monster",{movement:3});this.shootingFlyer=new Y(this,69,"monster",{hasChild:!0,bird:!0,projectile:2,movement:5,placement:"bird"});this.swampPlant=new Y(this,76,"monster",{hasChild:!0,stationary:!0,projectile:3,placement:"plant"});this.kraken=new Y(this,77,"monster",{hasChild:!0,stationary:!0,projectile:3});this.burt=new Y(this,78,"monster",{hasChild:!0,stationary:!0});this.dynaShot=new Y(this,87,"projectile",{});this.popcorn2=new Y(this,88,"projectile");this.towerSentinel=new Y(this,92,"monster",{hasChild:!0,projectile:3,movement:1});this.helicopter=new Y(this,93,"monster",{bird:!0,movement:6,placement:"bird"});this.whiteRobot=new Y(this,94,"monster",{hasChild:!0,projectile:1,movement:4,metasprites:e=>[0,1,2,3].map(s=>s+e.data[31])});this.vampire=new Y(this,96,"boss");this.vampireBat=new Y(this,97,"monster");this.kelbesque=new Y(this,99,"boss");this.kelbesqueRock=new Y(this,100,"projectile");this.sabera=new Y(this,102,"boss");this.mado=new Y(this,103,"boss");this.karmine=new Y(this,104,"boss");this.draygon1=new Y(this,106,"boss");this.draygon2=new Y(this,107,"boss");this.dyna=new Y(this,112,"boss");this.giantBug=new Y(this,127,"boss")}}});var Ar,_a=z(()=>{Zn();pr();$();ve();Ar=class extends Ue{constructor(e){super(256);this.rom=e;this.mesiaSabera=new We(this,42,"Mesia");this.sorcerorShot=new T(this,{id:63,scaling:37,type:"projectile"});this.wraith1=new T(this,{id:75,scaling:24,class:"wraith",displayName:"Wraith"});this.paralysisPowderSource=new T(this,{id:77,scaling:23,type:"projectile"});this.wraith2=new T(this,{id:79,scaling:28,class:"wraith",displayName:"Wraith"});this.blueSlime=new T(this,{id:80,scaling:1,class:"slime",displayName:"Slime"});this.weretiger=new T(this,{id:81,scaling:1,displayName:"Weretiger"});this.greenJelly=new T(this,{id:82,scaling:4,class:"jelly",displayName:"Slug"});this.redSlime=new T(this,{id:83,scaling:4,class:"slime",displayName:"Poison Slime"});this.rockGolem=new T(this,{id:84,scaling:4,class:"golem",displayName:"Mud Golem"});this.blueBat=new T(this,{id:85,scaling:4,displayName:"Bat"});this.greenWyvern=new T(this,{id:86,scaling:4,class:"wyvern",displayName:"Wyvern"});this.vampire1=new T(this,{id:87,scaling:5,type:"boss",displayName:"Vampire"});this.orc=new T(this,{id:88,scaling:6,displayName:"Axe Wereboar"});this.redMosquito=new T(this,{id:89,scaling:10,class:"mosquito",displayName:"Mosquito"});this.blueMushroom=new T(this,{id:90,scaling:10,class:"mushroom",displayName:"Mushroom"});this.swampTomato=new T(this,{id:91,scaling:10,displayName:"Pillbug"});this.blueMosquito=new T(this,{id:92,scaling:23,class:"mosquito",displayName:"Mosquito"});this.swampPlant=new T(this,{id:93,scaling:10,displayName:"Swamp Dandelion"});this.giantInsect=new T(this,{id:94,scaling:11,type:"boss",displayName:"Giant Insect"});this.largeBlueSlime=new T(this,{id:95,scaling:11,class:"slime",displayName:"Large Slime"});this.iceZombie=new T(this,{id:96,scaling:12,class:"zombie",displayName:"Ice Zombie"});this.greenBrain=new T(this,{id:97,scaling:12,class:"brain",displayName:"Brain"});this.greenSpider=new T(this,{id:98,scaling:12,class:"spider",displayName:"Spider"});this.redWyvern=new T(this,{id:99,scaling:12,class:"wyvern",displayName:"Wyvern"});this.soldier=new T(this,{id:100,scaling:14,class:"soldier",displayName:"Draygonia Soldier"});this.iceEntity=new T(this,{id:101,scaling:14,class:"entity",displayName:"Ice Plant"});this.redBrain=new T(this,{id:102,scaling:14,class:"brain",displayName:"Poison Brain"});this.iceGolem=new T(this,{id:103,scaling:14,class:"golem",displayName:"Ice Golem"});this.kelbesque1=new T(this,{id:104,scaling:15,type:"boss",displayName:"General Kelbesque"});this.largeRedSlime=new T(this,{id:105,scaling:18,class:"slime",displayName:"Large Poison Slime"});this.troll=new T(this,{id:106,scaling:18,displayName:"Troll"});this.redJelly=new T(this,{id:107,scaling:18,class:"jelly",displayName:"Poison Jelly"});this.medusa=new T(this,{id:108,scaling:19,displayName:"Medusa"});this.crab=new T(this,{id:109,scaling:19,displayName:"Crab"});this.medusaHead=new T(this,{id:110,scaling:20,displayName:"Flying Plant"});this.bird=new T(this,{id:111,scaling:20,class:"bird",displayName:"Bird"});this.redMushroom=new T(this,{id:113,scaling:21,class:"mushroom",displayName:"Poison Mushroom"});this.earthEntity=new T(this,{id:114,scaling:22,class:"entity",displayName:"Poison Plant"});this.mimic=new T(this,{id:115,scaling:22,displayName:"Mimic"});this.redSpider=new T(this,{id:116,scaling:22,class:"spider",displayName:"Paralyzing Spider"});this.fishman=new T(this,{id:117,scaling:25,displayName:"Mutant Fish"});this.jellyfish=new T(this,{id:118,scaling:25,displayName:"Jellyfish"});this.kraken=new T(this,{id:119,scaling:25,displayName:"Kraken"});this.darkGreenWyvern=new T(this,{id:120,scaling:27,class:"wyvern",displayName:"Wyvern Mage"});this.sandZombie=new T(this,{id:121,scaling:38,class:"zombie",displayName:"Sand Zombie"});this.wraithShadow1=new T(this,{id:123,scaling:28,class:"wraith",displayName:"Shadow"});this.moth=new T(this,{id:124,scaling:28,difficulty:3,displayName:"Butterfly"});this.sabera1=new T(this,{id:125,scaling:29,type:"boss",displayName:"General Sabera"});this.verticalPlatform=new We(this,126);this.horizotalPlatform=new We(this,127);this.archer=new T(this,{id:128,scaling:33,class:"soldier",displayName:"Draygonia Archer"});this.bomberBird=new T(this,{id:129,scaling:33,class:"bird",displayName:"Bomber Bird"});this.lavaBlob=new T(this,{id:130,scaling:37,class:"puddle",displayName:"Lava Blob"});this.flailGuy=new T(this,{id:132,scaling:37,displayName:"Flail Guy"});this.blueEye=new T(this,{id:133,scaling:37,class:"eye",displayName:"Beholder"});this.salamander=new T(this,{id:134,scaling:37,displayName:"Salamander"});this.sorceror=new T(this,{id:135,scaling:37,displayName:"Burt"});this.mado1=new T(this,{id:136,scaling:37,displayName:"General Mado"});this.knight=new T(this,{id:137,scaling:41,difficulty:1,displayName:"Ninja"});this.devil=new T(this,{id:138,scaling:41,displayName:"Devil Bat"});this.kelbesque2=new T(this,{id:139,scaling:41,type:"boss",displayName:"General Kelbesque"});this.wraithShadow2=new T(this,{id:140,scaling:41,class:"wraith",displayName:"Shadow"});this.glitch1=new We(this,141);this.glitch2=new We(this,142);this.guardianStatue=new We(this,143);this.sabera2=new T(this,{id:144,scaling:41,type:"boss",displayName:"General Sabera"});this.tarantula=new T(this,{id:145,scaling:41,displayName:"Tarantula"});this.skeleton=new T(this,{id:146,scaling:41,displayName:"Skeleton"});this.mado2=new T(this,{id:147,scaling:41,type:"boss",displayName:"General Mado"});this.purpleEye=new T(this,{id:148,scaling:41,class:"eye",displayName:"Beholder"});this.flailKnight=new T(this,{id:149,scaling:41,displayName:"Flail Knight"});this.scorpion=new T(this,{id:150,scaling:41,displayName:"Scorpion"});this.karmine=new T(this,{id:151,scaling:41,type:"boss",displayName:"General Karmine"});this.sandBlob=new T(this,{id:152,scaling:44,class:"puddle",displayName:"Sand Blob"});this.mummy=new T(this,{id:153,scaling:44,displayName:"Mummy"});this.warlock=new T(this,{id:154,scaling:46,displayName:"Warlock"});this.draygon1=new T(this,{id:155,scaling:45,type:"boss",displayName:"Emperor Draygon"});this.statueOfSun=new We(this,156);this.statueOfMoon=new We(this,157);this.draygon2=new T(this,{id:158,scaling:47,type:"boss",displayName:"Emperor Draygon"});this.crumblingVerticalPlatform=new We(this,159);this.brownRobot=new T(this,{id:160,scaling:47,difficulty:1,displayName:"Robot Sentry"});this.whiteRobot=new T(this,{id:161,scaling:47,displayName:"Robot Enforcer"});this.towerSentinel=new T(this,{id:162,scaling:47,displayName:"Tower Sentinel"});this.helicopter=new T(this,{id:163,scaling:47,displayName:"Robocopter"});this.dyna=new T(this,{id:164,scaling:47,type:"boss",displayName:"DYNA"});this.vampire2=new T(this,{id:165,scaling:28,type:"boss",displayName:"Vampire"});this.glitch3=new We(this,166);this.dynaPod=new T(this,{id:180,scaling:47,type:"boss",displayName:"DYNA Defense Pod"});this.dynaCounter=new T(this,{id:184,scaling:47,type:"projectile"});this.dynaLaser=new T(this,{id:185,scaling:47,type:"projectile"});this.dynaBubble=new T(this,{id:186,scaling:47,type:"projectile"});this.vampire2Bat=new T(this,{id:188,scaling:28});this.brownRobotLaserSource=new T(this,{id:190,scaling:47,type:"projectile"});this.draygon2Fireball=new T(this,{id:191,scaling:47,type:"projectile"});this.vampire1Bat=new T(this,{id:193,scaling:5});this.giantInsectFireball=new T(this,{id:195,scaling:11,type:"projectile"});this.greenMosquito=new T(this,{id:196,scaling:11,displayName:"Mosquito"});this.kelbesque1Rock=new T(this,{id:197,scaling:15,type:"projectile"});this.sabera1Balls=new T(this,{id:198,scaling:29,type:"projectile"});this.kelbesque2Fire=new T(this,{id:199,scaling:41,type:"projectile"});this.sabera2Fire=new T(this,{id:200,scaling:41,type:"projectile"});this.sabera2Balls=new T(this,{id:201,scaling:41,type:"projectile"});this.karmineBalls=new T(this,{id:202,scaling:41,type:"projectile"});this.statueBalls=new T(this,{id:203,scaling:47,type:"projectile"});this.draygon1Lightning=new T(this,{id:204,scaling:45,type:"projectile"});this.draygon2Laser=new T(this,{id:205,scaling:47,type:"projectile"});this.draygon2Breath=new T(this,{id:206,scaling:47,type:"projectile"});this.birdBomb=new T(this,{id:224,scaling:33,type:"projectile"});this.greenMosquitoShot=new T(this,{id:226,scaling:11,type:"projectile"});this.paralysisBeam=new T(this,{id:227,scaling:25,type:"projectile"});this.stoneGaze=new T(this,{id:228,scaling:19,type:"projectile"});this.rockGolemRock=new T(this,{id:229,scaling:4,type:"projectile"});this.curseBeam=new T(this,{id:230,scaling:41,type:"projectile"});this.mpDrainWeb=new T(this,{id:231,scaling:41,type:"projectile"});this.fishmanTrident=new T(this,{id:232,scaling:25,type:"projectile"});this.orcAxe=new T(this,{id:233,scaling:6,type:"projectile"});this.swampPollen=new T(this,{id:234,scaling:10,type:"projectile"});this.paralysisPowder=new T(this,{id:235,scaling:23,type:"projectile"});this.soldierSword=new T(this,{id:236,scaling:14,type:"projectile"});this.iceGolemRock=new T(this,{id:237,scaling:14,type:"projectile"});this.trollAxe=new T(this,{id:238,scaling:18,type:"projectile"});this.krakenInk=new T(this,{id:239,scaling:25,type:"projectile"});this.archerArrow=new T(this,{id:240,scaling:33,type:"projectile"});this.knightSword=new T(this,{id:242,scaling:41,type:"projectile"});this.mothResidue=new T(this,{id:243,scaling:28,type:"projectile"});this.brownRobotLaser=new T(this,{id:244,scaling:47,type:"projectile"});this.whiteRobotLaser=new T(this,{id:245,scaling:47,type:"projectile"});this.towerSentinelLaser=new T(this,{id:246,scaling:47,type:"projectile"});this.skeletonShot=new T(this,{id:247,scaling:41,type:"projectile"});this.blobShot=new T(this,{id:248,scaling:37,type:"projectile"});this.flailKnightFlail=new T(this,{id:249,scaling:41,type:"projectile"});this.flailGuyFlail=new T(this,{id:250,scaling:37,type:"projectile"});this.madoShuriken=new T(this,{id:252,scaling:37,type:"projectile"});this.guardianStatueMissile=new T(this,{id:253,scaling:36,type:"projectile"});this.demonWallFire=new T(this,{id:254,scaling:37,type:"projectile"});for(let s in this){let r=this[s];r instanceof We&&(r.name=po(s))}for(let s=0;s<this.length;s++)this[s]||(this[s]=new We(this,s))}write(){let e=[];for(let s of this)e.push(...s.write());if(this.rom.writeMonsterNames){let s=this.rom.assembler(),r=Math.max(...this.map(l=>l.displayName.length)),n=27;if(r>n)throw new Error(`Longest displayName length is greater than ${n}. (${r} > ${n})
Crystalis HUD can't comfortably fit that many characters.`);s.assign("ENEMY_NAME_LENGTH",r),s.export("ENEMY_NAME_LENGTH"),s.segment("1a","fe","ff"),Ee(s,"EnemyNameBlocklist",["1a","fe","ff"]);let o=[this.dynaCounter,this.dynaLaser,this.dynaBubble],a=this.filter(l=>l.hp>0&&l.displayName=="").concat(o);s.byte(...a.map(l=>l.id)),s.assign("ENEMY_NAME_BLOCKLIST_LEN",a.length),s.export("ENEMY_NAME_BLOCKLIST_LEN"),e.push(s.module())}return e}}});var ot,ri,ni,ii,Qa=z(()=>{(s=>(s.bit=(r,n)=>new ri(r,n),s.byte=r=>new ni(r),s.address=r=>new ii(r)))(ot||={});ri=class{constructor(t,e){this.address=t;this.bit=e}get(t){return!!(t[this.address]&1<<this.bit)}set(t,e){let s=1<<this.bit;e?t[this.address]|=s:t[this.address]&=~s}},ni=class{constructor(t){this.address=t}get(t){return t[this.address]}set(t,e){t[this.address]=e&255}},ii=class{constructor(t){this.address=t}get(t){return t[this.address]<<16|t[this.address+1]<<8|t[this.address+2]}set(t,e){t[this.address]=e>>>16&255,t[this.address+1]=e>>>8&255,t[this.address+2]=e&255}}});var Rr,$a=z(()=>{ve();$();Rr=class extends ee{constructor(t,e){super(t,e),this.base=(e&3)<<2|(e&252)<<6|16624,this.colors=X(t.prg,this.base,4)}color(t){return this.colors[t]&63}}});function Ke(i,t){let e=i.trim().replace(/^[^|]*\||\|[^|]*$/mg,"").replace(/\n/g,"");if(e.length!==64)throw new Error(`Bad CHR tile: ${e}`);let s=new Array(16).fill(0);for(let r=0,n="";n=e.charAt(r);++r){let o=r>>>3,a=o,l=o|8,c=~r&7,d=t[n]||0;d&1&&(s[a]|=1<<c),d&2&&(s[l]|=1<<c)}return s}var oi,Cr,el=z(()=>{ve();$();oi=class i extends ee{constructor(t,e,s){super(t,e),this.pixels=s||X(t.chr,e<<4,16)}pixelAt(t,e){return(this.pixels[t|8]>>e&1)<<1|this.pixels[t]>>e&1}flipH(){return new i(this.rom,-1,this.pixels.map(yo))}flipV(){return new i(this.rom,-1,j(16,t=>this.pixels[t&8|~t&7]))}flip(t){let e=this;return t&64&&(e=e.flipH()),t&128&&(e=e.flipV()),e}write(){let t=this.id<<4;return this.rom.chr.subarray(t,t+16).set(this.pixels),[]}},Cr=class i{constructor(t){this._all=[];this._all=j(t.chr.length>>4,e=>new oi(t,e))}get(t,e){return e?this._all[t|e]:this._all[t]}set(t,e,s){this._all[t|e].pixels=s}[Symbol.iterator](){return this._all[Symbol.iterator]()}static{this.HUD_LF=Ke(`
    |L     ..|
    |L.    .#|
    |L.  FF.#|
    |L.  F..#|
    |LLL FF.#|
    | ...F..#|
    |    F ..|
    |    .   |
  `,{" ":2,L:1,F:1,"#":1,".":3})}static{this.HUD_PW=Ke(`
    |PPP     |
    |P..P.   |
    |PPP.    |
    |P..     |
    |P.w.w.w |
    | .w.w.w |
    |  .w.w. |
    |   . .  |
  `,{" ":2,P:1,w:1,".":3})}static{this.HUD_EY=Ke(`
    |EEE     |
    |E...    |
    |EEE Y.Y.|
    |E...Y.Y.|
    |EEE  Y. |
    | ... Y. |
    |     Y. |
    |        |
  `,{" ":2,E:1,Y:1,"#":1,".":3})}static{this.HUD_LV=Ke(`
    |        |
    |L       |
    |L.      |
    |L.  v.v.|
    |L.  v.v.|
    |LLL  v. |
    | ... v. |
    |     .  |
  `,{" ":2,L:1,v:1,".":3})}static{this.HUD_DL=Ke(`
    |        |
    |DD      |
    |D.D.L   |
    |D.D.L.  |
    |D.D.L.  |
    |DD. L.  |
    | .  LLL |
    |     ...|
  `,{" ":2,D:1,L:1,".":3})}static{this.HUD_MP=Ke(`
    |M.  M   |
    |MM.MM.  |
    |M.M.M.  |
    |M. .PPP |
    |M. .P..P|
    |    PPP.|
    |    P.. |
    |    P.  |
  `,{" ":2,M:1,P:1,".":3})}static{this.HUD_EX=Ke(`
    |EEE     |
    |E...    |
    |EEE     |
    |E...    |
    |EEE x.x.|
    | ... x. |
    |    x.x.|
    |     . .|
  `,{" ":2,E:1,x:1,".":3})}static{this.HUD_CLOSE_RIGHT=Ke(`
    |________|
    |____oooo|
    |____o...|
    |__ooo...|
    |__o....o|
    |__o....o|
    |__o..oo |
    |__o..o  |
  `,{" ":0,".":1,_:2,o:3})}static{this.HUD_CLOSE_LEFT=Ke(`
    |________|
    |oooo____|
    |...o____|
    |...ooo__|
    |o....o__|
    |o....o__|
    | oo..o__|
    |  o..o__|
  `,{" ":0,".":1,_:2,o:3})}static{this.BLANK_TILE_TEMPLATE=`
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
  `}static{this.BLANK_TILES=[Ke(i.BLANK_TILE_TEMPLATE,{" ":0}),Ke(i.BLANK_TILE_TEMPLATE,{" ":1}),Ke(i.BLANK_TILE_TEMPLATE,{" ":2}),Ke(i.BLANK_TILE_TEMPLATE,{" ":3})]}}});function $0(i){let t=[0,0,0,0,0,0,0,0];t[i[63]]++;let e=i.map(r=>r|(t[r]++&7)<<3),s=[];for(let r=0;r<64;r++)s[e[r]]=e[r+1&63];return s}function ed(i,t){let e=Math.min(...i.slice(48)),s=!1,r=0,n=new Set,o=i[e],a=[];for(;!n.has(o);){let l=o&7;a.push(l),n.add(o),o=i[o],t&&t[r++]!==l&&(s=!0)}if(s)throw new Error(`mismatch:
  ${i.join(", ")}
  ${a.join(", ")}
  ${t.join(", ")}`);if(a.length!==64)throw new Error(`cycle detected: ${a.join(", ")}`);return a}var Nr,td,tl=z(()=>{$();Nr=class{constructor(t){this.rom=t;let e=Ie("RandomNumbers",t.prg,me.$1a);this.values=X(t.prg,e,td)}write(){let t=this.rom.assembler();Ee(t,"RandomNumbers",["1a"]);let e=$0(this.values);return ed(e,this.values),t.byte(...e),t.export("RandomNumbers"),[t.module()]}};td=64});var Ir,sl=z(()=>{$();Ir=class{constructor(t){this.rom=t;this.patk=new Array(48).fill(0);this.pdef=new Array(48).fill(0);this.php=new Array(48).fill(0);this.exp=new Array(48).fill(0);this.setPAtkFormula(e=>5+e*15/32),this.setPDefFormula(e=>e),this.setPhpFormula(e=>48+5.5*e),this.setExpScalingFactor(1)}setExpScalingFactor(t){this.setExpFormula(e=>Math.floor(4*2**((16+9*e)/32)*t))}setPAtkFormula(t){this.patk=this.patk.map((e,s)=>Math.round(8*t(s)))}setPDefFormula(t){this.pdef=this.pdef.map((e,s)=>Math.round(4*t(s)))}setPhpFormula(t){this.php=this.php.map((e,s)=>Math.min(255,Math.max(5,Math.round(t(s)))))}setExpFormula(t){this.exp=this.exp.map((e,s)=>{let r=t(s);return r<128?r:Math.min(255,128+(r>>4))})}write(){let t=this.rom.assembler();return t.segment("0d","fe","ff"),Ee(t,"DiffAtk"),t.byte(...this.patk),Ee(t,"DiffDef"),t.byte(...this.pdef),Ee(t,"DiffHP"),t.byte(...this.php),Ee(t,"DiffExp"),t.byte(...this.exp),[t.module()]}}});var Br,Dr,rl=z(()=>{ve();$();Br=class i extends ee{constructor(t,e){super(t,e),this.used=!0;let s=(e>255?64+e:e)<<8;this.tiles=X(t.prg,s,240)}clone(t){let e=new i(this.rom,t);return e.used=this.used,e.tiles=[...this.tiles],e}allTilesSet(){return new Set(this.tiles)}set2d(t,e){let s=t&15,r=t>>>4;for(let n=0;n<e.length;n++){let o=e[n];for(let a=0;a<o.length;a++){let l=o[a];l!=null&&(this.tiles[r+n<<4|s+a]=l)}}}get2d(t,e){let s=t&15,r=t>>>4,n=(e&15)+1,o=r+(e>>>4),a=[];for(let l=r;l<=o;l++){let c=l<<4|s;a.push(this.tiles.slice(c,c+n))}return a}assemble(t){let e=this.id.toString(16).padStart(2,"0"),s=this.tiles;if(this.rom.compressedMapData||this.id<256){let r=(this.id>>5).toString(16).padStart(2,"0");t.segment(r),r==="0a"&&(s=s.slice(0,192))}else t.segment("0a"),s=s.slice(0,192);t.org(32768|(this.id&63)<<8,`Screen_${e}`),t.byte(...s)}},Dr=class extends Array{constructor(e){super(259);this.rom=e;this.unallocated=[];for(let s=0;s<259;s++)this[s]=new Br(e,s)}getScreen(e){let s=e<0?this.unallocated:this,r=e<0?~e:e;return s[r]||(s[r]=new Br(this.rom,e))}setScreen(e,s){let r=e<0?this.unallocated:this,n=e<0?~e:e;r[n]=s}deleteScreen(e){let s=e<0?this.unallocated:this,r=e<0?~e:e;delete s[r]}write(){let e=this.rom.assembler();for(let s of this)s?.used&&s.assemble(e);return[e.module()]}}});var Pr,sd,rd,nd,id,nl,ai,od,ad,ld,cd,dd,ud,hd,fd,il=z(()=>{ve();$();Pr=class extends Ue{constructor(e){super(44);this.rom=e;this.innBasePrice=20;this.toolShopScaling=new Array(48).fill(0);this.armorShopScaling=new Array(48).fill(0);for(let s=0;s<44;s++)this[s]=new ai(e,s);if(e.shopDataTablesAddress!=null){let s=e.shopDataTablesAddress+21*e.shopCount+2*e.scalingLevels;this.basePrices=j(73,r=>r>=13&&r<39?le(e.prg,s+2*(r-13)):0)}else this.basePrices=j(73,s=>le(e.prg,fd+2*s)*2)}armorShops(){return j(11,e=>this[4*e])}toolShops(){return j(11,e=>this[4*e+1])}inns(){return j(11,e=>this[4*e+2])}pawnShops(){return j(11,e=>this[4*e+3])}write(){let e=this.rom.assembler();if(this.rescale){let s=function(r){e.export(r),e.label(r)};e.segment("10","fe","ff"),e.reloc("ShopData"),s("ShopData"),s("ArmorShopIdTable");for(let r of this.armorShops())for(let n=0;n<4;n++)e.byte(r.contents[n]??255);s("ToolShopIdTable");for(let r of this.toolShops())for(let n=0;n<4;n++)e.byte(r.contents[n]??255);s("ArmorShopPriceTable");for(let r of this.armorShops())for(let n=0;n<4;n++)e.byte(Math.round((r.prices[n]??0)*32));s("ToolShopPriceTable");for(let r of this.toolShops())for(let n=0;n<4;n++)e.byte(Math.round((r.prices[n]??0)*32));s("InnPrices");for(let r of this.inns())e.byte(Math.round((r.prices[0]??0)*32));s("ShopLocations");for(let r of this)e.byte(r.location);s("ToolShopScaling"),e.byte(...this.toolShopScaling),s("ArmorShopScaling"),e.byte(...this.armorShopScaling),s("BasePrices"),e.word(...this.basePrices.slice(13,39).map(r=>r??0)),s("InnBasePrice"),e.word(this.innBasePrice)}else{e.segment("10","fe","ff"),e.org(40356,"ShopData");for(let s of this.armorShops())for(let r=0;r<4;r++)e.byte(s.contents[r]??255);for(let s of this.armorShops())for(let r=0;r<4;r++)e.word(s.prices[r]??0);for(let s of this.toolShops())for(let r=0;r<4;r++)e.byte(s.contents[r]??255);for(let s of this.toolShops())for(let r=0;r<4;r++)e.word(s.prices[r]??0)}return[e.module()]}},sd=[0,1,2,3],rd=[(i,t)=>i||ld,(i,t)=>i?i+4*t:dd,(i,t)=>0,(i,t)=>0],nd=[4,4,0,0],id=[(i,t)=>i?i+8*t:cd,(i,t)=>i?i+12*t:ud,(i,t)=>i?i+16*t:hd,(i,t)=>0],nl=[4,4,1,0],ai=class extends ee{constructor(t,e){if(super(t,e),this.type=sd[e&3],this.index=e>>>2,t.shopDataTablesAddress){let r=t.shopDataTablesAddress,n=t.shopCount,o=r+17*n;this.location=t.prg[o+e]}else{let r=255;for(let n=0;n<33&&r===255;n++){if(t.prg[ad+n]!==this.index)continue;let o=t.prg[od+n];for(let a of t.locations[o].spawns){if(a.type!==4)continue;if(t.objects[a.id].data[25]===32+this.type){r=o;break}}}this.location=r}let s=t.shopDataTablesAddress?r=>t.prg[this.pricesAddress+r]/32:r=>le(t.prg,this.pricesAddress+2*r);this.contents=X(t.prg,this.contentsAddress,nd[this.type]),this.prices=j(nl[this.type],s),this.used=this.location!==255}get contentsAddress(){return rd[this.type](this.rom.shopDataTablesAddress,this.rom.shopCount)+4*this.index}get pricesAddress(){let t=this.rom.shopDataTablesAddress;return id[this.type](t,this.rom.shopCount)+(t?1:2)*nl[this.type]*this.index}updateShopkeeper(){throw new Error("not implemented")}},od=139092,ad=139125,ld=138660,cd=138704,dd=138792,ud=138836,hd=138924,fd=138946});var md,Wr,ol=z(()=>{$();({$0e:md}=me),Wr=class extends Array{constructor(e){super(128);this.rom=e;this.checkCount=112;this.mimicCount=16;for(let s=0;s<128;s++)this[s]=s}setCheckCount(e){this.checkCount=e}setMimicCount(e){this.mimicCount=e}swap(e,s){if(e===s)return;let r=this[e];this[e]=this[s],this[s]=r}exportDigits(e,s,r){let n=r.toString().padStart(3,"0");e.assign(`${s}_HUN`,Number(n[0])),e.export(`${s}_HUN`),e.assign(`${s}_TEN`,Number(n[1])),e.export(`${s}_TEN`),e.assign(`${s}_ONE`,Number(n[2])),e.export(`${s}_ONE`)}write(){let e=this.rom.assembler();return Ee(e,"CheckToItemGetMap",[md]),this.exportDigits(e,"CHECK_COUNT",this.checkCount),this.exportDigits(e,"MIMIC_COUNT",this.mimicCount),e.byte(...this),[e.module()]}}});var li,xd,pd,bd,gd,yd,wd,vd,Or,ci,di,al=z(()=>{cs();$();({$0e:li,$fe:xd,$ff:pd}=me),bd=115247,gd=115219,yd=121076,wd=121332,vd=121388,Or=class{constructor(t){this.rom=t;this.sages=j(4,e=>new ci(this,e)),this.resultTable=X(t.prg,bd,64),t.telepathyTablesAddress?(this.groupsByLocation=[],this.minimumLevels=[]):(this.groupsByLocation=X(t.prg,yd,256),this.minimumLevels=X(t.prg,gd,7))}write(){let t=this.rom.telepathyTablesAddress,e=this.rom.assembler();if(e.segment(li.name,xd.name,pd.name),t){de(e,li,39156,39680);let s=this.sages.map((r,n)=>{e.reloc(`Telepathy_Sage_${n}`);let o=e.pc();return e.byte(...r.messageGroups[0].bytes()),o});e.org(33327,"Telepathy_ResultTable"),e.byte(...this.resultTable.map(r=>r<4?r:r>>>1)),e.reloc("TelepathyTable"),e.export("TelepathyTable"),e.label("TelepathyTable"),e.word(...s);for(let r=1;r<4;r++)for(let n=0;n<4;n++)e.byte(...this.sages[n].defaultMessages[r].data)}else{de(e,li,39500,39680),e.org(33327,"Telepathy_ResultTable"),e.byte(...this.resultTable),e.org(33299,"Telepathy_LevelsTable"),e.byte(...this.minimumLevels),e.org(39156,"Telepathy_LocationTable"),e.byte(...this.groupsByLocation),e.org(39468,"Telepathy_VanillaDefaultsTable");for(let r=0;r<4;r++)for(let n=0;n<4;n++){let o=this.sages[n];e.byte(...o.defaultMessages[r].data)}let s=[];for(let r=0;r<4;r++){let n=this.sages[r];for(let o=0,a=n.messageGroups.length;o<a;o++)e.reloc(`Telepathy_Sage_${r}_Group_${o}`),s[4*o+r]=e.pc(),e.byte(...n.messageGroups[o].bytes())}e.org(39412,"Telepathy_VanillaMainTable"),e.word(...s)}return[e.module()]}},ci=class{constructor(t,e){this.telepathy=t;this.sage=e;let s=t.rom,r,n,o;s.telepathyTablesAddress?(n=r=s.telepathyTablesAddress+2*e,o=1):(r=vd+2*e,n=wd+2*e,o=7),this.defaultMessages=j(4,a=>Be.from(s.prg,r+8*a)),this.messageGroups=j(o,a=>di.from(s.prg,n+8*a))}},di=class i{constructor(t){this.messages=t}bytes(){let t=[];for(let e=0,s=this.messages.length;e<s;e++){let[r,n,o]=this.messages[e],a=r>=0?r:8192|~r;e===s-1&&(a|=32768),o&&(a|=16384),t.push(a>>=8,a&255,...n.data,...o?o.data:[])}return t}static from(t,e){let s=new i([]);e=le(t,e)+81920;let r=0;for(;!(r&32768);){r=vt(t,e),e+=2;let n=r&8191;r&8192&&(n=~n);let o=[n,Be.from(t,e)];e+=2,r&16384&&(o.push(Be.from(t,e)),e+=2),s.messages.push(o)}return s}}});var Fr,ll=z(()=>{ve();$();Fr=class extends ee{constructor(t,e){super(t,e),this.base=255865+(e<<3),this.pages=X(t.prg,this.base,8)}}});var Ur,cl=z(()=>{ve();$();Ur=class extends ee{constructor(t,e){super(t,e),this.effects=X(t.prg,this.base,256)}get base(){return this.id<<8&8191|73728}get org(){return this.id<<8&8191|40960}write(){let t=this.rom.assembler();return t.segment("09","fe","ff"),t.org(this.org,`TileEffects_${this.id.toString(16)}_Tiles`),t.byte(...this.effects),[t.module()]}static{this.PIT=1}static{this.NO_WALK=2}static{this.IMPASSIBLE=4}static{this.ALTERNATIVE=8}static{this.BEHIND=16}static{this.SLOPE=32}static{this.SLOW=64}static{this.PAIN=128}}});var zr,dl=z(()=>{zr=class i{constructor(t,e){this.tileset=t;this.id=e;this.copiedFrom=-1}get tiles(){return[0,1,2,3].map(t=>this.tileset.tiles[t][this.id])}setTiles(t){for(let e=0;e<4;e++){let s=t[e];s!=null&&(this.tileset.tiles[e][this.id]=s)}return this}get alternative(){let t=this.id<32?this.tileset.alternates[this.id]:this.id;return t!==this.id?t:null}setAlternative(t){return this.id>=32?this:(this.tileset.alternates[this.id]=t??this.id,this.tileset.effects().effects[this.id]|=8,this)}get attrs(){return this.tileset.attrs[this.id]}setAttrs(t){return this.tileset.attrs[this.id]=t,this}get effects(){return this.tileset.effects().effects[this.id]}setEffects(t){return this.tileset.effects().effects[this.id]=t,this}copyFrom(t,...e){let s=new i(this.tileset,t);return this.copiedFrom=t,this.setTiles(s.tiles),(this.id|s.id)<32&&this.setAlternative(s.alternative),this.setAttrs(s.attrs),this.setEffects(s.effects),this}replaceIn(...t){if(this.copiedFrom<0)throw new Error("Must copyFrom first.");for(let e of t)e.replace(this.copiedFrom,this.id);return this}}});var Gr,ui,ul=z(()=>{ve();dl();$();Gr=class{constructor(t){this.rom=t;this.tilesets=[];for(let e=128;e<176;e+=4)this.tilesets.push(this[e]=new ui(t,e))}[Symbol.iterator](){return this.tilesets[Symbol.iterator]()}write(){let t=this.rom.assembler();for(let e of this)e.assemble(t);return[t.module()]}},ui=class extends ee{constructor(t,e){super(t,e),this.tiles=j(4,s=>X(t.prg,this.tileBase|s<<8,256)),this.attrs=j(256,s=>t.prg[this.attrBase|s>>2]>>((s&3)<<1)&3),this.alternates=X(t.prg,this.alternatesBase,32)}get map(){return this.id&63}get tileBase(){return 65536|this.map<<8}get attrBase(){return 77824|this.map<<4}get alternatesBase(){return 81408|this.map<<3}getTile(t){return new zr(this,t)}assemble(t){let e=j(64,r=>{let n=r<<2;return this.attrs[n]&3|(this.attrs[n+1]&3)<<2|(this.attrs[n+2]&3)<<4|(this.attrs[n+3]&3)<<6}),s=`Tileset_${this.id.toString(16).padStart(2,"0")}`;t.segment("08","09"),t.org(32768|this.map<<8,`${s}_Tiles`),t.byte(...[].concat(...this.tiles)),t.org(45056|this.map<<4,`${s}_Attrs`),t.byte(...e),t.org(48640|this.map<<3,`${s}_Alternates`),t.byte(...this.alternates)}effects(){let t=this.id>>>2&15;return this.id===168&&(t=2),this.id===172&&t--,this.rom.tileEffects[t]}}});var qr,hl,Sd,fl=z(()=>{$();qr=class{constructor(t){this.rom=t;this.locations=X(t.prg,hl.offset,Sd),this.thunderSwordWarp=[Ie("thunderSwordWarpLocation",t.prg),Ie("thunderSwordWarpEntrance",t.prg)]}write(){let t=this.rom.assembler();return hl.loc(t),Eo(t,"TownWarpTable"),t.byte(...this.locations),Fe(t,"thunderSwordWarpLocation",this.thunderSwordWarp[0]),Fe(t,"thunderSwordWarpEntrance",64|this.thunderSwordWarp[1]),[t.module()]}},hl=ge.of(me.$fe,56408),Sd=12});var Ed,Td,Vr,hi,ml=z(()=>{ve();cs();$();({$0f:Ed}=me),Td=new Set([131,135,136,137,143,147,150,152,155,156,157,158,159,170,179,181,185,190,192]),Vr=class{constructor(t){this.rom=t;this.triggers=[];for(let e=0;e<67;e++)this.triggers.push(this[e]=new hi(this.rom,128|e))}[Symbol.iterator](){return this.triggers[Symbol.iterator]()}write(){let t=this.rom.assembler();de(t,Ed,41472,41920);for(let e of this)e.assemble(t);return[t.module()]}},hi=class extends ee{constructor(t,e){super(t,e),this.used=!Td.has(e),this.pointer=123258+((e&127)<<1),this.base=bo(t.prg,this.pointer,81920),this.conditions=[],this.message=Be.of({}),this.flags=[];let s,r=this.base;do{s=vt(t.prg,r);let n=s&4095;this.conditions.push(s&8192?~n:n),r+=2}while(!(s&32768));this.message=Be.from(t.prg,r);do{r+=2,s=vt(t.prg,r);let n=s&4095;this.flags.push(s&32768?~n:n)}while(!(s&16384))}bytes(){let t=[];this.conditions.length||this.conditions.push(-1);for(let e=0;e<this.conditions.length;e++){let s=this.conditions[e];s<0&&(s=~s|8192),e===this.conditions.length-1&&(s=s|32768),t.push(s>>>8,s&255)}t.push(...this.message.data),this.flags.length||this.flags.push(-1);for(let e=0;e<this.flags.length;e++){let s=this.flags[e];s<0&&(s=~s|32768),e===this.flags.length-1&&(s=s|16384),t.push(s>>>8,s&255)}return t}assemble(t){if(!this.used)return;let e=`Trigger_${C(this.id)}`;t.segment("0f"),t.reloc(e);let s=t.pc();t.byte(...this.bytes()),t.org(41338+2*(this.id&127),e+"_Ptr"),t.word(s)}}});var Hr,xl,kd,pl=z(()=>{$();Hr=class{constructor(t){this.rom=t;this.locations=X(t.prg,xl.offset,kd)}write(){let t=this.rom.assembler();return xl.loc(t),t.byte(...this.locations),Fe(t,"wildWarpCount",this.locations.length),[t.module()]}},xl=ge.of(me.$fe,52204),kd=16});function gl(i){return i||(i=t=>document.body.appendChild(t)),new Promise(t=>{if(window.location.hash!=="#reset"){let s=localStorage.getItem("rom");if(s)return t(Uint8Array.from(new Array(s.length/2).fill(0).map((r,n)=>Number.parseInt(s[2*n]+s[2*n+1],16))))}let e=document.createElement("input");document.body.appendChild(e),e.type="file",e.addEventListener("change",()=>{let s=e.files[0],r=new FileReader;r.addEventListener("loadend",()=>{let n=new Uint8Array(r.result),o=Array.from(n,C).join("");localStorage.setItem("rom",o),e.remove(),t(n)}),r.readAsArrayBuffer(s)})})}var Op,bl,Ld,Md,Fp,Ad,Rd=z(()=>{In();Go();qo();Vo();jo();Yo();_o();Qo();ra();ia();za();Co();Va();Ka();ja();pr();Xa();Ja();_a();Qa();$a();el();tl();sl();rl();il();ol();al();ll();cl();ul();fl();ml();$();pl();fr();Ys();Op=i=>Symbol(i),bl=class i{constructor(t){this.modules=new Map;this.allocatedTriggers=new Map;let e=t[4]*16384,s=16+(t[6]&4?512:0),r=s+e;this.prg=t.subarray(s,r),this.chr=t.subarray(r),this.shopCount=i.SHOP_COUNT.get(t),this.scalingLevels=i.SCALING_LEVELS.get(t),this.uniqueItemTableAddress=i.UNIQUE_ITEM_TABLE.get(t),this.shopDataTablesAddress=i.SHOP_DATA_TABLES.get(t),this.telepathyTablesAddress=i.TELEPATHY_TABLES.get(t),this.omitItemGetDataSuffix=i.OMIT_ITEM_GET_DATA_SUFFIX.get(t),this.omitLocalDialogSuffix=i.OMIT_LOCAL_DIALOG_SUFFIX.get(t),this.compressedMapData=i.COMPRESSED_MAPDATA.get(t),this.writeMonsterNames=i.WRITE_MONSTER_NAMES.get(t);for(let[n,o,a]of Ad)this.prg[n]===o&&(this.prg[n]=a);this.tilesets=new Gr(this),this.tileEffects=j(11,n=>new Ur(this,n+179)),this.screens=new Dr(this),this.metatilesets=new Er(this),this.metascreens=new vr(this),this.triggers=new Vr(this),this.patterns=new Cr(this),this.palettes=j(256,n=>new Rr(this,n)),this.locations=new gr(this),this.tileAnimations=j(4,n=>new Fr(this,n)),this.hitboxes=new ar(this),this.objectActions=new Mr(this),this.objects=new Ar(this),this.adHocSpawns=j(96,n=>new tr(this,n)),this.metasprites=new Sr(this),this.messages=new Es(this),this.telepathy=new Or(this),this.itemGets=new dr(this),this.items=new lr(this),this.shops=new Pr(this),this.slots=new Wr(this),this.npcs=new Lr(this),this.bossKills=new sr(this),this.wildWarp=new Hr(this),this.townWarp=new qr(this),this.coinDrops=new nr(this),this.flags=new ir(this),this.bosses=new rr(this),this.scaling=new Ir(this),this.randomNumbers=new Nr(this);for(let n of this.locations)n.used&&n.lazyInitialization()}static{this.OMIT_ITEM_GET_DATA_SUFFIX=ot.bit(82624,0)}static{this.OMIT_LOCAL_DIALOG_SUFFIX=ot.bit(82624,1)}static{this.COMPRESSED_MAPDATA=ot.bit(82624,2)}static{this.WRITE_MONSTER_NAMES=ot.bit(82624,3)}static{this.SHOP_COUNT=ot.byte(82625)}static{this.SCALING_LEVELS=ot.byte(82626)}static{this.UNIQUE_ITEM_TABLE=ot.address(82640)}static{this.SHOP_DATA_TABLES=ot.address(82643)}static{this.TELEPATHY_TABLES=ot.address(82646)}trigger(t){if(t<128||t>255)throw new Error(`Bad trigger id $${C(t)}`);return this.triggers[t&127]}get projectiles(){let t=new Set;for(let e of this.objects.filter(s=>s instanceof T))e.child&&t.add(this.objects[this.adHocSpawns[e.child].objectId]);return[...t].sort((e,s)=>e.id-s.id)}get monsterGraphics(){let t={};for(let e of this.locations)if(!(!e.used||!e.hasSpawns)){for(let s of e.spawns)if(!(s.data[2]&7)){let r=s.data[2]&128?1:0,n=C(s.data[3]+80),o=t[n]=t[n]||{};o[`${r}:${e.spritePatterns[r].toString(16)}:${e.spritePalettes[r].toString(16)}`]={pal:e.spritePalettes[r],pat:e.spritePatterns[r],slot:r}}}return t}get locationMonsters(){let t={};for(let e of this.locations){if(!e.used||!e.hasSpawns)continue;let s=t["$"+C(e.id)]={};for(let r of e.spawns)if(!(r.data[2]&7)){let n=r.data[2]&128?1:0,o=r.data[3]+80;s[`${n}:${o.toString(16)}`]=(s[`${n}:${o.toString(16)}`]||0)+1}}return t}assembler(){return new as(Dt.P02,{overwriteMode:"require"})}writeData(t=this.prg){let e=[...this.modules.values()],s=a=>{for(let l of a)e.push(...l.write())};e.push(...this.locations.write()),e.push(...this.objects.write()),e.push(...this.hitboxes.write()),e.push(...this.triggers.write()),e.push(...this.npcs.write()),e.push(...this.tilesets.write()),s(this.tileEffects),s(this.adHocSpawns),e.push(...this.itemGets.write()),e.push(...this.slots.write()),e.push(...this.items.write()),e.push(...this.shops.write()),e.push(...this.bossKills.write()),s(this.patterns),e.push(...this.metasprites.write()),e.push(...this.wildWarp.write()),e.push(...this.townWarp.write()),e.push(...this.coinDrops.write()),e.push(...this.scaling.write()),e.push(...this.bosses.write()),e.push(...this.randomNumbers.write()),e.push(...this.telepathy.write()),e.push(...this.messages.write()),e.push(...this.screens.write());let r=new $s;r.base(this.prg,0);for(let a of e)r.read(a);if(r.link().apply(t),t!==this.prg)return;let o=r.exports();globalThis.linkChunks=r.getChunks(),this.uniqueItemTableAddress=o.get("KeyItemData").offset,this.shopCount=11,this.shopDataTablesAddress=o.get("ShopData")?.offset||0,i.SHOP_COUNT.set(this.prg,this.shopCount),i.SCALING_LEVELS.set(this.prg,this.scalingLevels),i.UNIQUE_ITEM_TABLE.set(this.prg,this.uniqueItemTableAddress),i.SHOP_DATA_TABLES.set(this.prg,this.shopDataTablesAddress||0),i.OMIT_ITEM_GET_DATA_SUFFIX.set(this.prg,this.omitItemGetDataSuffix),i.OMIT_LOCAL_DIALOG_SUFFIX.set(this.prg,this.omitLocalDialogSuffix),i.COMPRESSED_MAPDATA.set(this.prg,this.compressedMapData),i.WRITE_MONSTER_NAMES.set(this.prg,this.writeMonsterNames)}analyzeTiles(){}disjointTilesets(){let t=[];for(let s of this.locations){if(!s.used)continue;let r=s.tileset;for(let n of s.screens)for(let o of n)(t[o]||(t[o]=new Set)).add(r)}let e=j(256,()=>new pt);for(let s=0;s<t.length;s++)if(t[s])for(let r of this.screens[s].allTilesSet())e[r].union([...t[s]]);for(let s=0;s<e.length;s++){let r=e[s].sets().map(n=>[...n].map(C).join(" ")).join(" | ");console.log(`Tile ${C(s)}: ${r}`)}}swapMetatiles(t,...e){let s=new Map,r=j(256),n=new Map,o=d=>Array.isArray(d)?d[0]:d<0?~d:d;for(let d of e){for(let h=0;h<d.length-1;h++)if(Array.isArray(d[h])){let m=d[h];n.set(m[0],m[1]),d[h]=m[0]}for(let h=0;h<d.length-1;h++){let m=d[h],f=d[h+1];m<0||f<0||(s.set(f,m),r[f]=m)}}let a=new Set,l=new Set,c=new Set(t);for(let d of this.locations)if(d.used&&c.has(d.tileset)){l.add(d.tileEffects);for(let h of d.allScreens())a.add(h)}for(let d of a)for(let h=0,m=d.tiles.length;h<m;h++)d.tiles[h]=r[d.tiles[h]];for(let d of c){let h=this.tilesets[d];for(let m of e)for(let f=0;f<m.length-1;f++){let g=o(m[f]),w=o(m[f+1]);for(let k=0;k<4;k++)h.tiles[k][g]=h.tiles[k][w];if(h.attrs[g]=h.attrs[w],w<32&&h.alternates[w]!==w){if(g>=32)throw new Error(`Cannot unflag: ${d} ${g} ${w} ${h.alternates[w]}`);h.alternates[g]=h.alternates[w]}}for(let[m,f]of n)h.alternates[m]=f}for(let d of l){let h=this.tileEffects[d-179];for(let m of e)for(let f=0;f<m.length-1;f++){let g=o(m[f]),w=o(m[f+1]);h.effects[g]=h.effects[w]}for(let m of n.keys())h.effects[m]|=8}}moveFlag(t,e){function s(r){for(let n=0;n<r.length;n++)r[n]===t&&(r[n]=e),r[n]===~t&&(r[n]=~e)}for(let r of this.triggers)s(r.conditions),s(r.flags);for(let r of this.npcs){for(let n of r.spawnConditions.values())s(n);for(let n of[r.globalDialogs,...r.localDialogs.values()])for(let o of n)o.condition===t&&(o.condition=e),o.condition===~t&&(o.condition=~e)}if((t&-256)===512&&(e&-256)===512)for(let r of this.locations)for(let n of r.flags)n.flag===t&&(n.flag=e)}nextFreeTrigger(t){for(let e of this.triggers)if(!e.used)return t&&this.allocatedTriggers.set(t,e.id),e;throw new Error("Could not find an unused trigger.")}moveScreens(t,e){if(!this.compressedMapData)throw new Error("Must compress maps first.");let s=new Map,r=e<<8;for(;this.screens[r];)r++;let n=new Set(t);for(let a of n)for(let l of a){if(l.sid>=256){s.set(l.sid,l.sid);continue}let c=l.sid;if(!s.has(c)){let d=r++;s.set(c,d),s.set(d,d),this.metascreens.renumber(c,d,n)}}if(r>>>8!==e)throw new Error(`Out of space on page ${e}`);let o=new Set;for(let a of this.locations){if(!n.has(a.meta.tileset))continue;let l=!1;for(let c of a.screens)for(let d=0;d<c.length;d++){let h=s.get(c[d]);h!=null?(c[d]=h,l=!0):o.add(a.name)}if(l&&o.size)throw new Error(`Inconsistent move [${[...n].map(c=>c.name).join(", ")}] to plane ${e}: missed ${[...o].join(", ")}`)}}static async load(t,e){let s=await gl(e);return t&&await t(s),new i(s)}static async loadBytes(){return await gl()}};Ld=466849842,Md=3003500780,Fp=new Set([Ld,Md]),Ad=[[83272,86,80],[83306,0,255],[83343,56,48],[83480,96,112],[83494,168,160],[83507,21,22],[83511,21,22],[84305,168,160],[84307,152,144],[84505,120,112],[84715,9,255],[84809,128,136],[84871,32,48],[84890,1,2],[84894,1,2],[85433,8,128],[85750,104,96],[87133,255,0],[87145,120,112],[88070,152,160],[88074,152,160],[88078,88,80],[88093,0,255],[88142,219,255],[88181,120,112],[88911,120,128],[89007,240,128],[89014,223,128],[89015,150,128],[89315,223,207],[89326,110,109],[89330,110,109],[89486,223,207],[89489,46,45],[89493,46,45],[89658,216,223],[89913,120,112],[89920,2,255],[89953,141,255],[89957,141,255],[91133,72,64],[91139,85,80],[91227,216,223],[91340,4,32],[91391,11,10],[91661,32,48],[91684,1,2],[91688,1,2],[93616,154,128],[93620,158,128],[93624,145,128],[93628,158,128],[93632,145,128],[93672,0,255],[93677,223,208],[93688,12,92],[93689,176,185],[93690,0,2],[93692,12,92],[93693,176,185],[93694,0,2],[93695,7,255],[93789,2,255],[93802,173,255],[93806,173,255],[94209,2,255],[94254,183,255],[94258,183,255],[94379,3,255],[94383,2,255],[94387,5,255],[94391,6,255],[94395,0,255],[94404,178,255],[94408,178,255],[94412,177,255],[94416,177,255],[94420,179,255],[94424,179,255],[94428,181,255],[94432,181,255],[94436,181,255],[94440,181,255],[95470,128,136],[96193,136,128],[96197,152,160],[96199,88,80],[96298,16,1],[96343,16,1],[96596,128,120],[96674,128,120],[97162,0,64],[97168,0,64],[97230,0,64],[97236,0,64],[97294,0,64],[97300,0,64],[97358,0,64],[97364,0,64],[106242,64,128],[106243,51,50],[106976,64,192],[106977,61,52],[118533,71,72],[119569,32,160],[119570,48,0],[118777,96,224],[182928,2,0],[193907,2,0],[195300,95,0],[196306,9,8]]});export{gi as a,we as b,et as c,Cd as d,yi as e,vi as f,Nd as g,Si as h,Ei as i,Ti as j,Xt as k,Xe as l,Dt as m,Ys as n,Zr as o,gt as p,os as q,Ln as r,Cn as s,as as t,In as u,_s as v,Fo as w,Qs as x,Uo as y,ru as z,nu as A,kc as B,mo as C,j as D,C as E,le as F,Mc as G,lu as H,$ as I,ph as J,Ho as K,Ko as L,il as M,pt as N,fr as O,mr as P,la as Q,T as R,pr as S,rt as T,Tt as U,zt as V,ur as W,hr as X,br as Y,Ia as Z,yr as _,za as $,Be as aa,cs as ba,Qn as ca,$n as da,Xa as ea,Cr as fa,el as ga,q as ha,ra as ia,hu as ja,fu as ka,To as la,Co as ma,Op as na,bl as oa,Fp as pa,Rd as qa};
