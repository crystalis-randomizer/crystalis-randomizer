import{a as w}from"./chunk-EMW2UGPB.js";import{a as l}from"./chunk-2O3NKUHW.js";import"./chunk-PIDEUWOP.js";var b=class{constructor(){this.name,this.data}},v=1,h="Files",m="Blobs",f=class extends w{constructor(e,t,n,d,i=void 0){super(),this.fs=e,this.element.classList.add("file-picker"),this.reject=n,i&&(l(this.element,"div","title").textContent=i);for(let{name:r,size:o}of d){let u=l(this.element,"div","file");u.textContent=`${o.toString(10).padStart(9)} ${r}`,u.dataset.name=r;let g=l(u,"span","delete");g.textContent="x",g.dataset.name=r}let s=l(this.element,"input");s.type="file",s.style.display="none",s.addEventListener("change",()=>{let r=s.files[0],o=new FileReader;o.addEventListener("loadend",()=>{t({name:r.name,size:r.size,data:o.result}),super.remove()}),o.readAsArrayBuffer(r)}),this.addCornerButton("^",()=>{s&&s.click()}),this.addCornerButton("+",()=>{let r=window.prompt("filename");t({name:r,data:new Uint8Array(0),new:!0}),super.remove()}),this.element.addEventListener("click",r=>{r.target.dataset.name&&(r.target.classList.contains("delete")?(r.target.parentElement.remove(),this.fs.delete(r.target.dataset.name)):(t({name:r.target.dataset.name}),super.remove()))})}remove(){super.remove(),this.reject(new Error("closed"))}},y=class{constructor(){this.db=new p(v,e=>this.upgrade(e)),this.elt=null}upgrade(e){e.createObjectStore(h,{keyPath:"name"}),e.createObjectStore(m,{keyPath:"name"})}manage(){}list(){return this.db.transaction([h],"readonly",e=>a(e.getAll()))}async pick(e=void 0){let t=await this.list();return new Promise((n,d)=>{new f(this,n,d,t,e)}).then(n=>n.data?(n.new||this.save(n.name,n.data),n):this.open(n.name))}open(e){return this.db.transaction([h],"readwrite",async t=>{let n=await a(t.get(e));if(n)return n.accessedMs=new Date().getTime(),a(t.put(n))}),this.db.transaction([m],"readonly",t=>a(t.get(e)))}save(e,t){if(!(t instanceof ArrayBuffer)){if(!(t.buffer instanceof ArrayBuffer))throw new Error(`Not an ArrayBuffer: ${t}`);t=t.slice().buffer}let n=t.byteLength;return this.db.transaction([h,m],"readwrite",async(d,i,s)=>{a(d.put({name:e,size:n,modifiedMs:new Date().getTime()})),a(i.put({name:e,data:t}))})}delete(e){return this.db.transaction([h,m],"readwrite",(t,n)=>{a(t.delete(e)),a(n.delete(e))})}},p=class{constructor(e,t){this.version=e,this.upgrade=t,this.db=null,this.getDb=this.getDb}async getDb(){let e=window.indexedDB.open("fs",this.version);e.onupgradeneeded=n=>this.upgrade(n.target.result);let t=await a(e);return this.getDb=()=>Promise.resolve(t),t}async transaction(e,t,n){let i=(await this.getDb()).transaction(e,t);return new Promise((s,r)=>{i.onerror=r,i.oncomplete=()=>{s(o)};let o=n(...e.map(u=>i.objectStore(u)))})}};function a(c){return new Promise((e,t)=>{c.onerror=t,c.onsuccess=n=>e(n.target.result)})}export{b as File,y as FileSystem};
