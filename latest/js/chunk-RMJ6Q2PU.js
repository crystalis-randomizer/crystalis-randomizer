import{A as Ge,B as me,C as ht,D as Tt,E as ur,F as mr,G as J,H as Ae,I as mi,J as ni,K as ds,L as st,M as He,N as pr,O as xr,P as gr,Q as wr,R as br,a as Fe,b as po,c as xo,d as go,e as is,f as or,g as H,h as he,i as ui,j as ri,k as ss,l as ar,m as rs,n as ns,o as os,p as lr,q as as,r as dr,s as cr,t as fr,u as le,v as ee,w as hr,x as zt,y as ls,z as Ye}from"./chunk-3ZKKPXVI.js";var Ss=Fe(ys=>{function Gr(r){this.buffer=r,this.pos=0}Gr.prototype.read=function(r,i,e){this.pos+e>this.buffer.length&&(e=this.buffer.length-this.pos);for(var t=0;t<e;t++)r[i+t]=this.buffer[this.pos+t];return this.pos+=e,e};ys.BrotliInput=Gr;function Ar(r){this.buffer=r,this.pos=0}Ar.prototype.write=function(r,i){if(this.pos+i>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(r.subarray(0,i),this.pos),this.pos+=i,i};ys.BrotliOutput=Ar});var Lr=Fe((xf,Pr)=>{var Ft=4096,Oo=2*Ft+32,Br=2*Ft-1,Do=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function Gt(r){this.buf_=new Uint8Array(Oo),this.input_=r,this.reset()}Gt.READ_SIZE=Ft;Gt.IBUF_MASK=Br;Gt.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var r=0;r<4;r++)this.val_|=this.buf_[this.pos_]<<8*r,++this.pos_;return this.bit_end_pos_>0};Gt.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var r=this.buf_ptr_,i=this.input_.read(this.buf_,r,Ft);if(i<0)throw new Error("Unexpected end of input");if(i<Ft){this.eos_=1;for(var e=0;e<32;e++)this.buf_[r+i+e]=0}if(r===0){for(var e=0;e<32;e++)this.buf_[(Ft<<1)+e]=this.buf_[e];this.buf_ptr_=Ft}else this.buf_ptr_=0;this.bit_end_pos_+=i<<3}};Gt.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[this.pos_&Br]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};Gt.prototype.readBits=function(r){32-this.bit_pos_<r&&this.fillBitWindow();var i=this.val_>>>this.bit_pos_&Do[r];return this.bit_pos_+=r,i};Pr.exports=Gt});var Or=Fe(Bi=>{"use strict";Bi.byteLength=Ho;Bi.toByteArray=zo;Bi.fromByteArray=jo;var Je=[],Be=[],Uo=typeof Uint8Array<"u"?Uint8Array:Array,vs="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(At=0,Nr=vs.length;At<Nr;++At)Je[At]=vs[At],Be[vs.charCodeAt(At)]=At;var At,Nr;Be["-".charCodeAt(0)]=62;Be["_".charCodeAt(0)]=63;function Wr(r){var i=r.length;if(i%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=r.indexOf("=");e===-1&&(e=i);var t=e===i?0:4-e%4;return[e,t]}function Ho(r){var i=Wr(r),e=i[0],t=i[1];return(e+t)*3/4-t}function qo(r,i,e){return(i+e)*3/4-e}function zo(r){var i,e=Wr(r),t=e[0],s=e[1],n=new Uo(qo(r,t,s)),o=0,a=s>0?t-4:t,l;for(l=0;l<a;l+=4)i=Be[r.charCodeAt(l)]<<18|Be[r.charCodeAt(l+1)]<<12|Be[r.charCodeAt(l+2)]<<6|Be[r.charCodeAt(l+3)],n[o++]=i>>16&255,n[o++]=i>>8&255,n[o++]=i&255;return s===2&&(i=Be[r.charCodeAt(l)]<<2|Be[r.charCodeAt(l+1)]>>4,n[o++]=i&255),s===1&&(i=Be[r.charCodeAt(l)]<<10|Be[r.charCodeAt(l+1)]<<4|Be[r.charCodeAt(l+2)]>>2,n[o++]=i>>8&255,n[o++]=i&255),n}function Ko(r){return Je[r>>18&63]+Je[r>>12&63]+Je[r>>6&63]+Je[r&63]}function Vo(r,i,e){for(var t,s=[],n=i;n<e;n+=3)t=(r[n]<<16&16711680)+(r[n+1]<<8&65280)+(r[n+2]&255),s.push(Ko(t));return s.join("")}function jo(r){for(var i,e=r.length,t=e%3,s=[],n=16383,o=0,a=e-t;o<a;o+=n)s.push(Vo(r,o,o+n>a?a:o+n));return t===1?(i=r[e-1],s.push(Je[i>>2]+Je[i<<4&63]+"==")):t===2&&(i=(r[e-2]<<8)+r[e-1],s.push(Je[i>>10]+Je[i>>4&63]+Je[i<<2&63]+"=")),s.join("")}});var Ur=Fe((wf,Dr)=>{Dr.exports=""});var qr=Fe(Hr=>{var Yo=Or();Hr.init=function(){var r=ks().BrotliDecompressBuffer,i=Yo.toByteArray(Ur());return r(i)}});var Cs=Fe(Bt=>{var Zo=qr();Bt.init=function(){Bt.dictionary=Zo.init()};Bt.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);Bt.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);Bt.minDictionaryWordLength=4;Bt.maxDictionaryWordLength=24});var Ts=Fe(Es=>{function Yt(r,i){this.bits=r,this.value=i}Es.HuffmanCode=Yt;var jt=15;function zr(r,i){for(var e=1<<i-1;r&e;)e>>=1;return(r&e-1)+e}function Kr(r,i,e,t,s){do t-=e,r[i+t]=new Yt(s.bits,s.value);while(t>0)}function Jo(r,i,e){for(var t=1<<i-e;i<jt&&(t-=r[i],!(t<=0));)++i,t<<=1;return i-e}Es.BrotliBuildHuffmanTable=function(r,i,e,t,s){var n=i,o,a,l,c,d,f,u,h,p,m,g,y=new Int32Array(jt+1),w=new Int32Array(jt+1);for(g=new Int32Array(s),l=0;l<s;l++)y[t[l]]++;for(w[1]=0,a=1;a<jt;a++)w[a+1]=w[a]+y[a];for(l=0;l<s;l++)t[l]!==0&&(g[w[t[l]]++]=l);if(h=e,p=1<<h,m=p,w[jt]===1){for(c=0;c<m;++c)r[i+c]=new Yt(0,g[0]&65535);return m}for(c=0,l=0,a=1,d=2;a<=e;++a,d<<=1)for(;y[a]>0;--y[a])o=new Yt(a&255,g[l++]&65535),Kr(r,i+c,d,p,o),c=zr(c,a);for(u=m-1,f=-1,a=e+1,d=2;a<=jt;++a,d<<=1)for(;y[a]>0;--y[a])(c&u)!==f&&(i+=p,h=Jo(y,a,e),p=1<<h,m+=p,f=c&u,r[n+f]=new Yt(h+e&255,i-n-f&65535)),o=new Yt(a-e&255,g[l++]&65535),Kr(r,i+(c>>e),d,p,o),c=zr(c,a);return m}});var Vr=Fe(Rs=>{Rs.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Rs.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])});var jr=Fe(Zt=>{function R(r,i){this.offset=r,this.nbits=i}Zt.kBlockLengthPrefixCode=[new R(1,2),new R(5,2),new R(9,2),new R(13,2),new R(17,3),new R(25,3),new R(33,3),new R(41,3),new R(49,4),new R(65,4),new R(81,4),new R(97,4),new R(113,5),new R(145,5),new R(177,5),new R(209,5),new R(241,6),new R(305,6),new R(369,7),new R(497,8),new R(753,9),new R(1265,10),new R(2289,11),new R(4337,12),new R(8433,13),new R(16625,24)];Zt.kInsertLengthPrefixCode=[new R(0,0),new R(1,0),new R(2,0),new R(3,0),new R(4,0),new R(5,0),new R(6,1),new R(8,1),new R(10,2),new R(14,2),new R(18,3),new R(26,3),new R(34,4),new R(50,4),new R(66,5),new R(98,5),new R(130,6),new R(194,7),new R(322,8),new R(578,9),new R(1090,10),new R(2114,12),new R(6210,14),new R(22594,24)];Zt.kCopyLengthPrefixCode=[new R(2,0),new R(3,0),new R(4,0),new R(5,0),new R(6,0),new R(7,0),new R(8,0),new R(9,0),new R(10,1),new R(12,1),new R(14,2),new R(18,2),new R(22,3),new R(30,3),new R(38,4),new R(54,4),new R(70,5),new R(102,5),new R(134,6),new R(198,7),new R(326,8),new R(582,9),new R(1094,10),new R(2118,24)];Zt.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];Zt.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]});var Xr=Fe(Pi=>{var Xo=Cs(),A=0,Yr=1,Qo=2,_o=3,$o=4,ea=5,ta=6,ia=7,sa=8,Jr=9,ae=10,de=11,Ms=12,ra=13,na=14,oa=15,aa=16,la=17,da=18,ca=20;function v(r,i,e){this.prefix=new Uint8Array(r.length),this.transform=i,this.suffix=new Uint8Array(e.length);for(var t=0;t<r.length;t++)this.prefix[t]=r.charCodeAt(t);for(var t=0;t<e.length;t++)this.suffix[t]=e.charCodeAt(t)}var li=[new v("",A,""),new v("",A," "),new v(" ",A," "),new v("",Ms,""),new v("",ae," "),new v("",A," the "),new v(" ",A,""),new v("s ",A," "),new v("",A," of "),new v("",ae,""),new v("",A," and "),new v("",ra,""),new v("",Yr,""),new v(", ",A," "),new v("",A,", "),new v(" ",ae," "),new v("",A," in "),new v("",A," to "),new v("e ",A," "),new v("",A,'"'),new v("",A,"."),new v("",A,'">'),new v("",A,`
`),new v("",_o,""),new v("",A,"]"),new v("",A," for "),new v("",na,""),new v("",Qo,""),new v("",A," a "),new v("",A," that "),new v(" ",ae,""),new v("",A,". "),new v(".",A,""),new v(" ",A,", "),new v("",oa,""),new v("",A," with "),new v("",A,"'"),new v("",A," from "),new v("",A," by "),new v("",aa,""),new v("",la,""),new v(" the ",A,""),new v("",$o,""),new v("",A,". The "),new v("",de,""),new v("",A," on "),new v("",A," as "),new v("",A," is "),new v("",ia,""),new v("",Yr,"ing "),new v("",A,`
	`),new v("",A,":"),new v(" ",A,". "),new v("",A,"ed "),new v("",ca,""),new v("",da,""),new v("",ta,""),new v("",A,"("),new v("",ae,", "),new v("",sa,""),new v("",A," at "),new v("",A,"ly "),new v(" the ",A," of "),new v("",ea,""),new v("",Jr,""),new v(" ",ae,", "),new v("",ae,'"'),new v(".",A,"("),new v("",de," "),new v("",ae,'">'),new v("",A,'="'),new v(" ",A,"."),new v(".com/",A,""),new v(" the ",A," of the "),new v("",ae,"'"),new v("",A,". This "),new v("",A,","),new v(".",A," "),new v("",ae,"("),new v("",ae,"."),new v("",A," not "),new v(" ",A,'="'),new v("",A,"er "),new v(" ",de," "),new v("",A,"al "),new v(" ",de,""),new v("",A,"='"),new v("",de,'"'),new v("",ae,". "),new v(" ",A,"("),new v("",A,"ful "),new v(" ",ae,". "),new v("",A,"ive "),new v("",A,"less "),new v("",de,"'"),new v("",A,"est "),new v(" ",ae,"."),new v("",de,'">'),new v(" ",A,"='"),new v("",ae,","),new v("",A,"ize "),new v("",de,"."),new v("\xC2\xA0",A,""),new v(" ",A,","),new v("",ae,'="'),new v("",de,'="'),new v("",A,"ous "),new v("",de,", "),new v("",ae,"='"),new v(" ",ae,","),new v(" ",de,'="'),new v(" ",de,", "),new v("",de,","),new v("",de,"("),new v("",de,". "),new v(" ",de,"."),new v("",de,"='"),new v(" ",de,". "),new v(" ",ae,'="'),new v(" ",de,"='"),new v(" ",ae,"='")];Pi.kTransforms=li;Pi.kNumTransforms=li.length;function Zr(r,i){return r[i]<192?(r[i]>=97&&r[i]<=122&&(r[i]^=32),1):r[i]<224?(r[i+1]^=32,2):(r[i+2]^=5,3)}Pi.transformDictionaryWord=function(r,i,e,t,s){var n=li[s].prefix,o=li[s].suffix,a=li[s].transform,l=a<Ms?0:a-(Ms-1),c=0,d=i,f;l>t&&(l=t);for(var u=0;u<n.length;)r[i++]=n[u++];for(e+=l,t-=l,a<=Jr&&(t-=a),c=0;c<t;c++)r[i++]=Xo.dictionary[e+c];if(f=i-t,a===ae)Zr(r,f);else if(a===de)for(;t>0;){var h=Zr(r,f);f+=h,t-=h}for(var p=0;p<o.length;)r[i++]=o[p++];return i-d}});var ks=Fe(Wi=>{var sn=Ss().BrotliInput,fa=Ss().BrotliOutput,Qt=Lr(),Xt=Cs(),ce=Ts().HuffmanCode,rn=Ts().BrotliBuildHuffmanTable,Jt=Vr(),mt=jr(),Qr=Xr(),ha=8,_r=16,ua=256,ma=704,pa=26,$r=6,en=2,Fs=8,xa=255,pt=1080,Gs=18,ga=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),As=16,wa=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),ba=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),ya=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function nn(r){var i;return r.readBits(1)===0?16:(i=r.readBits(3),i>0?17+i:(i=r.readBits(3),i>0?8+i:17))}function on(r){if(r.readBits(1)){var i=r.readBits(3);return i===0?1:r.readBits(i)+(1<<i)}return 0}function Sa(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function an(r){var i=new Sa,e,t,s;if(i.input_end=r.readBits(1),i.input_end&&r.readBits(1))return i;if(e=r.readBits(2)+4,e===7){if(i.is_metadata=!0,r.readBits(1)!==0)throw new Error("Invalid reserved bit");if(t=r.readBits(2),t===0)return i;for(s=0;s<t;s++){var n=r.readBits(8);if(s+1===t&&t>1&&n===0)throw new Error("Invalid size byte");i.meta_block_length|=n<<s*8}}else for(s=0;s<e;++s){var o=r.readBits(4);if(s+1===e&&e>4&&o===0)throw new Error("Invalid size nibble");i.meta_block_length|=o<<s*4}return++i.meta_block_length,!i.input_end&&!i.is_metadata&&(i.is_uncompressed=r.readBits(1)),i}function _t(r,i,e){var t=i,s;return e.fillBitWindow(),i+=e.val_>>>e.bit_pos_&xa,s=r[i].bits-Fs,s>0&&(e.bit_pos_+=Fs,i+=r[i].value,i+=e.val_>>>e.bit_pos_&(1<<s)-1),e.bit_pos_+=r[i].bits,r[i].value}function va(r,i,e,t){for(var s=0,n=ha,o=0,a=0,l=32768,c=[],d=0;d<32;d++)c.push(new ce(0,0));for(rn(c,0,5,r,Gs);s<i&&l>0;){var f=0,u;if(t.readMoreInput(),t.fillBitWindow(),f+=t.val_>>>t.bit_pos_&31,t.bit_pos_+=c[f].bits,u=c[f].value&255,u<_r)o=0,e[s++]=u,u!==0&&(n=u,l-=32768>>u);else{var h=u-14,p,m,g=0;if(u===_r&&(g=n),a!==g&&(o=0,a=g),p=o,o>0&&(o-=2,o<<=h),o+=t.readBits(h)+3,m=o-p,s+m>i)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var y=0;y<m;y++)e[s+y]=a;s+=m,a!==0&&(l-=m<<15-a)}}if(l!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+l);for(;s<i;s++)e[s]=0}function Ni(r,i,e,t){var s=0,n,o=new Uint8Array(r);if(t.readMoreInput(),n=t.readBits(2),n===1){for(var a,l=r-1,c=0,d=new Int32Array(4),f=t.readBits(2)+1;l;)l>>=1,++c;for(a=0;a<f;++a)d[a]=t.readBits(c)%r,o[d[a]]=2;switch(o[d[0]]=1,f){case 1:break;case 3:if(d[0]===d[1]||d[0]===d[2]||d[1]===d[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(d[0]===d[1])throw new Error("[ReadHuffmanCode] invalid symbols");o[d[1]]=1;break;case 4:if(d[0]===d[1]||d[0]===d[2]||d[0]===d[3]||d[1]===d[2]||d[1]===d[3]||d[2]===d[3])throw new Error("[ReadHuffmanCode] invalid symbols");t.readBits(1)?(o[d[2]]=3,o[d[3]]=3):o[d[0]]=2;break}}else{var a,u=new Uint8Array(Gs),h=32,p=0,m=[new ce(2,0),new ce(2,4),new ce(2,3),new ce(3,2),new ce(2,0),new ce(2,4),new ce(2,3),new ce(4,1),new ce(2,0),new ce(2,4),new ce(2,3),new ce(3,2),new ce(2,0),new ce(2,4),new ce(2,3),new ce(4,5)];for(a=n;a<Gs&&h>0;++a){var g=ga[a],y=0,w;t.fillBitWindow(),y+=t.val_>>>t.bit_pos_&15,t.bit_pos_+=m[y].bits,w=m[y].value,u[g]=w,w!==0&&(h-=32>>w,++p)}if(!(p===1||h===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");va(u,r,o,t)}if(s=rn(i,e,Fs,o,r),s===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return s}function Li(r,i,e){var t,s;return t=_t(r,i,e),s=mt.kBlockLengthPrefixCode[t].nbits,mt.kBlockLengthPrefixCode[t].offset+e.readBits(s)}function ka(r,i,e){var t;return r<As?(e+=wa[r],e&=3,t=i[e]+ba[r]):t=r-As+1,t}function Ca(r,i){for(var e=r[i],t=i;t;--t)r[t]=r[t-1];r[0]=e}function Ea(r,i){var e=new Uint8Array(256),t;for(t=0;t<256;++t)e[t]=t;for(t=0;t<i;++t){var s=r[t];r[t]=e[s],s&&Ca(e,s)}}function Pt(r,i){this.alphabet_size=r,this.num_htrees=i,this.codes=new Array(i+i*ya[r+31>>>5]),this.htrees=new Uint32Array(i)}Pt.prototype.decode=function(r){var i,e,t=0;for(i=0;i<this.num_htrees;++i)this.htrees[i]=t,e=Ni(this.alphabet_size,this.codes,t,r),t+=e};function tn(r,i){var e={num_htrees:null,context_map:null},t,s=0,n,o;i.readMoreInput();var a=e.num_htrees=on(i)+1,l=e.context_map=new Uint8Array(r);if(a<=1)return e;for(t=i.readBits(1),t&&(s=i.readBits(4)+1),n=[],o=0;o<pt;o++)n[o]=new ce(0,0);for(Ni(a+s,n,0,i),o=0;o<r;){var c;if(i.readMoreInput(),c=_t(n,0,i),c===0)l[o]=0,++o;else if(c<=s)for(var d=1+(1<<c)+i.readBits(c);--d;){if(o>=r)throw new Error("[DecodeContextMap] i >= context_map_size");l[o]=0,++o}else l[o]=c-s,++o}return i.readBits(1)&&Ea(l,r),e}function Is(r,i,e,t,s,n,o){var a=e*2,l=e,c=_t(i,e*pt,o),d;c===0?d=s[a+(n[l]&1)]:c===1?d=s[a+(n[l]-1&1)]+1:d=c-2,d>=r&&(d-=r),t[e]=d,s[a+(n[l]&1)]=d,++n[l]}function Ta(r,i,e,t,s,n){var o=s+1,a=e&s,l=n.pos_&Qt.IBUF_MASK,c;if(i<8||n.bit_pos_+(i<<3)<n.bit_end_pos_){for(;i-- >0;)n.readMoreInput(),t[a++]=n.readBits(8),a===o&&(r.write(t,o),a=0);return}if(n.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;n.bit_pos_<32;)t[a]=n.val_>>>n.bit_pos_,n.bit_pos_+=8,++a,--i;if(c=n.bit_end_pos_-n.bit_pos_>>3,l+c>Qt.IBUF_MASK){for(var d=Qt.IBUF_MASK+1-l,f=0;f<d;f++)t[a+f]=n.buf_[l+f];c-=d,a+=d,i-=d,l=0}for(var f=0;f<c;f++)t[a+f]=n.buf_[l+f];if(a+=c,i-=c,a>=o){r.write(t,o),a-=o;for(var f=0;f<a;f++)t[f]=t[o+f]}for(;a+i>=o;){if(c=o-a,n.input_.read(t,a,c)<c)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");r.write(t,o),i-=c,a=0}if(n.input_.read(t,a,i)<i)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");n.reset()}function Ra(r){var i=r.bit_pos_+7&-8,e=r.readBits(i-r.bit_pos_);return e==0}function ln(r){var i=new sn(r),e=new Qt(i);nn(e);var t=an(e);return t.meta_block_length}Wi.BrotliDecompressedSize=ln;function Ma(r,i){var e=new sn(r);i==null&&(i=ln(r));var t=new Uint8Array(i),s=new fa(t);return dn(e,s),s.pos<s.buffer.length&&(s.buffer=s.buffer.subarray(0,s.pos)),s.buffer}Wi.BrotliDecompressBuffer=Ma;function dn(r,i){var e,t=0,s=0,n=0,o,a=0,l,c,d,f,u=[16,15,11,4],h=0,p=0,m=0,g=[new Pt(0,0),new Pt(0,0),new Pt(0,0)],y,w,b,x=128+Qt.READ_SIZE;b=new Qt(r),n=nn(b),o=(1<<n)-16,l=1<<n,c=l-1,d=new Uint8Array(l+x+Xt.maxDictionaryWordLength),f=l,y=[],w=[];for(var E=0;E<3*pt;E++)y[E]=new ce(0,0),w[E]=new ce(0,0);for(;!s;){var C=0,B,S=[1<<28,1<<28,1<<28],M=[0],G=[1,1,1],Z=[0,1,0,1,0,1],Q=[0],_,se,K,ue,O=null,P=null,Ce,Ee=null,z,pe=0,fe=null,We=0,_e=0,we=null,Te=0,oe=0,vt=0,Re,$e;for(e=0;e<3;++e)g[e].codes=null,g[e].htrees=null;b.readMoreInput();var Oe=an(b);if(C=Oe.meta_block_length,t+C>i.buffer.length){var ct=new Uint8Array(t+C);ct.set(i.buffer),i.buffer=ct}if(s=Oe.input_end,B=Oe.is_uncompressed,Oe.is_metadata){for(Ra(b);C>0;--C)b.readMoreInput(),b.readBits(8);continue}if(C!==0){if(B){b.bit_pos_=b.bit_pos_+7&-8,Ta(i,C,t,d,c,b),t+=C;continue}for(e=0;e<3;++e)G[e]=on(b)+1,G[e]>=2&&(Ni(G[e]+2,y,e*pt,b),Ni(pa,w,e*pt,b),S[e]=Li(w,e*pt,b),Q[e]=1);for(b.readMoreInput(),_=b.readBits(2),se=As+(b.readBits(4)<<_),K=(1<<_)-1,ue=se+(48<<_),P=new Uint8Array(G[0]),e=0;e<G[0];++e)b.readMoreInput(),P[e]=b.readBits(2)<<1;var Ht=tn(G[0]<<$r,b);Ce=Ht.num_htrees,O=Ht.context_map;var je=tn(G[2]<<en,b);for(z=je.num_htrees,Ee=je.context_map,g[0]=new Pt(ua,Ce),g[1]=new Pt(ma,G[1]),g[2]=new Pt(ue,z),e=0;e<3;++e)g[e].decode(b);for(fe=0,we=0,Re=P[M[0]],oe=Jt.lookupOffsets[Re],vt=Jt.lookupOffsets[Re+1],$e=g[1].htrees[0];C>0;){var N,et,Me,tt,q,Y,W,ye,De,Ie,Ue;for(b.readMoreInput(),S[1]===0&&(Is(G[1],y,1,M,Z,Q,b),S[1]=Li(w,pt,b),$e=g[1].htrees[M[1]]),--S[1],N=_t(g[1].codes,$e,b),et=N>>6,et>=2?(et-=2,W=-1):W=0,Me=mt.kInsertRangeLut[et]+(N>>3&7),tt=mt.kCopyRangeLut[et]+(N&7),q=mt.kInsertLengthPrefixCode[Me].offset+b.readBits(mt.kInsertLengthPrefixCode[Me].nbits),Y=mt.kCopyLengthPrefixCode[tt].offset+b.readBits(mt.kCopyLengthPrefixCode[tt].nbits),p=d[t-1&c],m=d[t-2&c],Ie=0;Ie<q;++Ie)b.readMoreInput(),S[0]===0&&(Is(G[0],y,0,M,Z,Q,b),S[0]=Li(w,0,b),pe=M[0]<<$r,fe=pe,Re=P[M[0]],oe=Jt.lookupOffsets[Re],vt=Jt.lookupOffsets[Re+1]),De=Jt.lookup[oe+p]|Jt.lookup[vt+m],We=O[fe+De],--S[0],m=p,p=_t(g[0].codes,g[0].htrees[We],b),d[t&c]=p,(t&c)===c&&i.write(d,l),++t;if(C-=q,C<=0)break;if(W<0){var De;if(b.readMoreInput(),S[2]===0&&(Is(G[2],y,2,M,Z,Q,b),S[2]=Li(w,2*pt,b),_e=M[2]<<en,we=_e),--S[2],De=(Y>4?3:Y-2)&255,Te=Ee[we+De],W=_t(g[2].codes,g[2].htrees[Te],b),W>=se){var it,hi,xe;W-=se,hi=W&K,W>>=_,it=(W>>1)+1,xe=(2+(W&1)<<it)-4,W=se+(xe+b.readBits(it)<<_)+hi}}if(ye=ka(W,u,h),ye<0)throw new Error("[BrotliDecompress] invalid distance");if(t<o&&a!==o?a=t:a=o,Ue=t&c,ye>a)if(Y>=Xt.minDictionaryWordLength&&Y<=Xt.maxDictionaryWordLength){var xe=Xt.offsetsByLength[Y],kt=ye-a-1,Ct=Xt.sizeBitsByLength[Y],es=(1<<Ct)-1,ts=kt&es,Et=kt>>Ct;if(xe+=ts*Y,Et<Qr.kNumTransforms){var qt=Qr.transformDictionaryWord(d,Ue,xe,Y,Et);if(Ue+=qt,t+=qt,C-=qt,Ue>=f){i.write(d,l);for(var ft=0;ft<Ue-f;ft++)d[ft]=d[f+ft]}}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+C)}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+C);else{if(W>0&&(u[h&3]=ye,++h),Y>C)throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+C);for(Ie=0;Ie<Y;++Ie)d[t&c]=d[t-ye&c],(t&c)===c&&i.write(d,l),++t,--C}p=d[t-1&c],m=d[t-2&c]}t&=1073741823}}i.write(d,t&c)}Wi.BrotliDecompress=dn;Xt.init()});var fn=Fe((Tf,cn)=>{cn.exports=ks().BrotliDecompressBuffer});var pi,wo=()=>{let r;pi=new Uint32Array(256);for(let i=0;i<256;i++){r=i;for(let e=0;e<8;e++)r=r&1?3988292384^r>>>1:r>>>1;pi[i]=r}};var bo=r=>r.split("").map(i=>i.charCodeAt(0)),xi=r=>{pi||wo(),typeof r=="string"&&(r=bo(r));let i=-1;for(let e=0,t=r.length;e<t;e++)i=i>>>8^pi[(i^r[e])&255];return(i^-1)>>>0};var yo=4656613057391769e-25,kr=2147483563-1,yr=40014,So=40692,gi=53668,Sr=52774,vr=12211,vo=3791,wi=32,ko=1+Math.floor(kr/wi),Co=12e-8,Eo=1-Co,Rt=class{constructor(i=Math.floor(Math.random()*4294967296)){this.idum=0;this.idum2=0;this.iy=0;this.iv=[];this.z1=null;this.seed(i)}static newSeed(){return Math.floor(Math.random()*4294967296)}seed(i){this.idum=Math.max(1,Math.floor(i)),this.idum2=this.idum,this.iy=0,this.iv=new Array(wi).fill(0);for(let e=wi+7;e>=0;e--){let t=Math.floor(this.idum/gi);this.idum=yr*(this.idum-t*gi)-t*vr,this.idum<0&&(this.idum+=2147483563),e<wi&&(this.iv[e]=this.idum)}this.iy=this.iv[0]}next(){let i=Math.floor(this.idum/gi);this.idum=yr*(this.idum-i*gi)-i*vr,this.idum<0&&(this.idum+=2147483563),i=Math.floor(this.idum2/Sr),this.idum2=So*(this.idum2-i*Sr)-i*vo,this.idum2<0&&(this.idum2+=2147483399);let e=Math.floor(this.iy/ko);return this.iy=this.iv[e]-this.idum2,this.iv[e]=this.idum,this.iy<1&&(this.iy+=kr),Math.min(yo*this.iy,Eo)}nextInt(i){return Math.floor(this.next()*i)}nextNormal(i=0,e=1,t=-1/0,s=1/0){for(;;){let n=this.z1;if(n==null){let o=Math.sqrt(-2*Math.log(this.next())),a=Ro*this.next();n=o*Math.cos(a),this.z1=o*Math.sin(a)}else this.z1=null;if(n=i+n*e,n>=t&&n<=s)return n}}shuffle(i){for(let e=i.length;e;){let t=this.nextInt(e--);[i[e],i[t]]=[i[t],i[e]]}return i}*ishuffle(i){let e=[];if(!Array.isArray(i))if(To(i)){let t=i[Symbol.iterator]();for(let s=0;s<i.size;s++){let n=s+this.nextInt(i.size-s);for(;e.length<=n;)e.push(t.next().value);yield e[n],e[n]=e[s]}return}else i=[...i];if(!Array.isArray(i))throw new Error("impossible");for(let t=0;t<i.length;t++){let s=t+this.nextInt(i.length-t);yield s in e?e[s]:i[s],e[s]=t in e?e[t]:i[t]}}pick(i){if(!i.length)throw new Error("empty array");return i[this.nextInt(i.length)]}pickWeighted(i){if(!i.length)throw new Error("empty array");let e=0;for(let[s]of i)e+=s;let t=this.next()*e;for(let[s,n]of i){if(t<s)return n;t-=s}throw new Error("bad weights")}pickAndRemove(...i){let e=0;for(let s of i)e+=s.length;if(!e)throw new Error("empty arrays");let t=this.nextInt(e);for(let s of i){if(t<s.length)return s.splice(t,1)[0];t-=s.length}throw new Error("impossible")}bitGenerator(){let i=0,e=0;return()=>{i||(i=32,e=this.nextInt(4294967296)),i--;let t=!(e&1);return e>>>=1,t}}};function To(r){return"size"in r}var Ro=2*Math.PI;var Ze=class{constructor(i,e){this.height=i;this.width=e;this._coords=void 0;this.data=new Array((i<<1|1)*(e<<1|1)),this.row=this.width<<1|1}screens(){if(this._coords)return this._coords;let i=[];for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++)i.push(e<<12|t<<4);return this._coords=i}index(i){return((i&248)>>3)+this.row*(i>>>11)}index2(i,e){return(this.row<<1)*i+2*e}yx(i){let e=i%this.row;return[(i-e)/this.row/2,e/2]}coord(i){let e=i%this.row;return(i-e)/this.row<<11|e<<3}get(i){return this.data[this.index(i)]}set(i,e){this.data[this.index(i)]=e}get2(i,e){return this.data[this.index2(i,e)]}set2(i,e,t){this.data[this.index2(i,e)]=t}plus(i,e,t){return i+(this.row<<1)*e+2*t}x(i){return i%this.row/2}y(i){return Math.floor(i/this.row)/2}border(i,e){let t,s;return i&1?(s=e<<12|2048,t=i&2?this.width<<4:0):(s=i&2?this.height<<12:0,t=e<<4|8),s|t}randomBorder(i,e){let t,s;if(e!=null)e&1?(s=i.nextInt(this.height)<<12|2048,t=e&2?this.width<<4:0):(s=e&2?this.height<<12:0,t=i.nextInt(this.width)<<4|8);else{let n=this.width+this.height,o=i.nextInt(n<<1)-n,a=!1;o<0&&(o=~o,a=!0),o<this.width?(t=o<<4|8,s=a?this.height<<12:0):(s=o-this.width<<12|2048,t=a?this.width<<4:0)}return s|t}oppositeBorder(i){return i&8?i^this.height<<12:i^this.width<<4}furthestBorder(i){return(this.height<<12|this.width<<4)-i}edgeCoordination(i,e){let t=0;if((i&2056)!==2056)throw new Error(`Bad tile: ${ee(i)}`);for(let s of[8,-8,2048,-2048]){let n=this.get(i+s);(e?n===e:n)&&t++}return t}isBorder(i){if(i&8){if(i&2048)return!1;let e=i>>>12;return!e||e===this.height}else if(i&2048){let e=i>>>4&15;return!e||e===this.width}return!1}partition(i){let e=new Ge;for(let t=0;t<this.data.length;t+=this.row)for(let s=0;s<this.row;s++){let n=t+s,o=this.coord(n);if(!(i?.get(o)??this.data[n]))continue;e.find(o);let l=o-2048;t&&(i?.get(l)??this.data[n-this.row])&&e.union([o,l]);let c=o-8;s&&(i?.get(c)??this.data[n-1])&&e.union([o,c])}return e.map()}show(){let i=[];for(let e=0;e<this.data.length;e+=this.row){let t="";for(let s=0;s<this.row;s++)t+=this.data[e+s]||" ";i.push(t)}return i.join(`
`)}static writeGrid2d(i,e,t){let s=i.index(e);for(let n=0;n<t.length;n++){let o=t[n];for(let a=0;a<o.length;a++){let l=o[a];i.data[s+n*i.row+a]=l!==" "?l:""}}}};function Cr(r){return r>>4&15|r>>8&240}function ut(r,i=1){return r-i*8}function qe(r,i=1){return r+i*8}function be(r,i=1){return r-i*2048}function re(r,i=1){return r+i*2048}var[]=[ee],F={ok:!0,value:void 0},bi=class{constructor(i,e){this.rom=i;this.random=e;this.shuffles=[]}add(...i){this.shuffles.push(...i)}shuffleAll(){for(let i of this.shuffles)i.shuffle(this.random);for(let i of this.shuffles)i.meta&&i.finish();for(let i of this.rom.locations)i.meta.shufflePits(this.random)}toString(){return[...this.shuffles].sort((i,e)=>(i.badness||0)-(e.badness||0)).join(`
`)}},yi=class{constructor(i,e){this.maxAttempts=250;this.attempt=0;this.meta=void 0;this.grid=new Ze(1,1);this.fixed=new Set;this.w=0;this.h=0;this.size=0;this.count=0;this.exitMap=[];this.loc=i,this.orig=i.meta,this.params=e??this.survey(this.orig)}toString(){return`${this.constructor.name}(${this.loc}): ${this.attempt}/${this.maxAttempts}`}get badness(){return this.attempt/this.maxAttempts}reset(){this.meta=void 0;let i=this.pickHeight(),e=this.pickWidth(),t=this.pickSize(),s=new Ze(i,e);s.data.fill(""),Object.assign(this,{h:i,w:e,size:t,grid:s,fixed:new Set,count:0,exitMap:[]})}shuffle(i){if(!(!this.loc.used||this.meta||this.attempt>this.maxAttempts)){for(Object.assign(this,{random:i});++this.attempt<=this.maxAttempts;){this.reset();let e=this.build();if(e.ok)return;console.log(`Shuffle failed ${this.loc}: ${e.fail}`)}console.error(`Completely failed to map shuffle ${this.loc}`)}}finish(){!this.meta||this.meta===this.loc.meta||this.finishInternal()}finishInternal(){if(!this.meta)throw new Error("impossible");this.meta.transferFlags(this.loc.meta,this.random);let i=[];for(let[e,t,s]of this.exitMap)for(let[n,o,a]of i)if(e(n,o)){i.push([t,s,a]);break}this.meta.transferExits(this.loc.meta,this.random);for(let[e,t,s]of i){let n=this.meta.rom.locations[s[0]>>>8].meta,o=s[0]&255,a=s[1];this.meta.attach(e,n,o,t,a)}this.meta.transferSpawns(this.loc.meta,this.random),this.meta.transferPits(this.loc.meta),this.loc.meta=this.meta}pickHeight(){return Math.max(1,Math.min(16,this.orig.height+Math.floor((this.random.nextInt(6)-1)/3)))}pickWidth(){return Math.max(1,Math.min(8,this.orig.width+Math.floor((this.random.nextInt(6)-1)/3)))}pickSize(){return this.params.size+(this.random.nextInt(5)<2?1:0)}insertTile(i,e){let t=this.posToGrid(i);for(let s=0;s<3;s++)for(let n=0;n<3;n++){let o=t+s*2048+n*8;if(this.fixed.has(o))return!1;let a=this.grid.get(o);if(a&&a!==e[s*3+n])return!1}for(let s=0;s<3;s++)for(let n=0;n<3;n++){let o=t+s*2048+n*8;this.grid.set(o,e[s*3+n])}return!0}posToGrid(i,e=0){let t=i>>>4,s=i&15;return(t<<12|s<<4)+e}insertPattern(i,{top:e=0,bottom:t=0,left:s=0,right:n=0}={}){let o=i.length-1>>>1,a=i[0].length-1>>>1,l=e+t,c=s+n;if(this.h<o+l)return{ok:!1,fail:"too short"};if(this.w<a+c)return{ok:!1,fail:"too narrow"};let d=this.random.nextInt(this.h-o-1-l)+e,f=this.random.nextInt(this.w-a-1-l)+s,u=d+1<<12|f+1<<4;Ze.writeGrid2d(this.grid,u,i);for(let h=12288;h<=20480;h+=2048)for(let p=48;p<=64;p+=8)this.fixed.add(u+(h|p));return{ok:!0,value:void 0}}extract(i,e,{h:t=3,w:s=3,replace:n=void 0}={}){let o=i.index(e),a="",l=o+t*i.row,{row:c}=i;for(let d=o;d<l;d+=c)for(let f=d;f<d+s;f++){if(n){let u=n.get(i.coord(f));if(u!=null){a+=u||" ";continue}}a+=i.data[f]||" "}return a}canSet(i,e){return this.canSetAll(new Map([[i,e]]))}canSetAll(i){let e=new Set;for(let t of i.keys()){if(this.fixed.has(t))return!1;let s=t&-2057,n=s>>>12,o=s>>>4&15;o<this.w&&n<this.h&&e.add(s),!(t&8)&&n<this.h&&o&&e.add(s-16),!(t&2048)&&o<this.w&&n&&e.add(s-4096),!(t&2056)&&o&&n&&e.add(s-4112)}for(let t of e){let s=this.extract(this.grid,t,{replace:i});if(!this.orig.tileset.getMetascreensFromTileString(s).length)return!1}return!0}addAllFixed(){for(let i=0;i<this.grid.data.length;i++)this.grid.data[i]&&this.fixed.add(this.grid.coord(i))}};var[]=[ee],T=class extends yi{constructor(){super(...arguments);this.maxPartitions=1;this.minSpikes=2;this.maxSpikes=5;this.looseRefine=!1;this.addBlocks=!0;this.initialFillType="c";this.upEdgeType="c";this._requirePitDestination=!1;this.rivers=0;this.wides=0;this.walls=0;this.bridges=0}reset(){super.reset(),this.rivers=0,this.wides=0,this.walls=0,this.bridges=0}requirePitDestination(){return this._requirePitDestination=!0,this}survey(e){let t={meta:e,id:e.id,tileset:e.tileset,size:0,edges:[0,0,0,0],stairs:[0,0],features:{arena:0,bridge:0,over:0,pit:0,ramp:0,river:0,spike:0,statue:0,under:0,wall:0,wide:0}};if(e.id>=0)for(let s of e.rom.locations[e.id].spawns)s.isMonster()&&s.monsterId===143&&t.features.statue++;for(let s of e.allPos()){let n=e.get(s);(!n.isEmpty()||n.data.exits?.length)&&t.size++;for(let o of n.data.exits??[]){let{type:a}=o;if(a==="edge:top"){s>>>4===0&&t.edges[0]++;continue}else if(a==="edge:left"){(s&15)===0&&t.edges[1]++;continue}else if(a==="edge:bottom"){s>>>4===e.height-1&&t.edges[2]++;continue}else if(a==="edge:right"){(s&15)===e.width-1&&t.edges[3]++;continue}else{if(a==="crypt")continue;if(!a.startsWith("seamless")){if(o.dir&1)throw new Error(`Bad exit direction: ${o.dir}`);t.stairs[o.dir>>>1]++;continue}}}n.hasFeature("arena")&&t.features.arena++,n.hasFeature("bridge")&&t.features.bridge++,n.hasFeature("overpass")&&t.features.over++,n.hasFeature("pit")&&t.features.pit++,n.hasFeature("ramp")&&t.features.ramp++,n.hasFeature("spikes")&&t.features.spike++,n.hasFeature("underpass")&&t.features.under++,n.hasFeature("wall")&&t.features.wall++,n.hasFeature("river")&&t.features.river++,n.hasFeature("wide")&&t.features.wide++}return t.size<2&&(e.width>1||e.height>1)&&(t.size=2),t}build(){this.init();let e;if(e=this.fillGrid(),!e.ok||(e=this.preinfer(),!e.ok))return e;let t=this.inferScreens();return t.ok?(e=this.refineMetascreens(t.value),!e.ok||(e=this.checkMetascreens(t.value),!e.ok)?e:this._requirePitDestination&&!this.requireEligiblePitDestination(t.value)?{ok:!1,fail:"no eligible pit destination"}:(this.meta=t.value,F)):t}fillGrid(){let e;return e=this.initialFill(),!e.ok||(e=this.addEdges(),!e.ok)||(e=this.addEarlyFeatures(),!e.ok)||(e=this.refine(),!e.ok)?e:this.refineEdges()?(this.removeSpurs(),this.removeTightLoops(),e=this.addLateFeatures(),!e.ok||(e=this.addStairs(...this.params.stairs??[]),!e.ok)?e:F):{ok:!1,fail:"refineEdges"}}init(){}initialFill(){return this.fillCave(this.initialFillType),F}fillCave(e){for(let t=.5;t<this.h;t++)for(let s=.5;s<this.w;s++)t>1&&this.grid.set2(t-.5,s,e),s>1&&this.grid.set2(t,s-.5,e),this.grid.set2(t,s,e);this.count=this.h*this.w}addEdges(){if(!this.params.edges)return F;for(let e=0;e<4;e++){let t=this.params.edges[e]||0;if(!t)continue;let s=le(e&1?this.h:this.w,n=>this.grid.border(e,n));for(let n of this.random.ishuffle(s))if(!this.grid.get(n)&&(e&1?e===1?this.addLeftEdge(n)&&t--:this.addRightEdge(n)&&t--:e===0?this.addUpEdge(n)&&t--:this.addDownEdge(n)&&t--,!t))break;if(t)return{ok:!1,fail:`can't fit all edges shuffling ${this.loc}
missing ${t} ${e}`}}return F}addUpEdge(e){let t=e+2048,s=t-8,o=s-8-8,a=t+8,c=a+8+8;if(this.grid.isBorder(s)){if(this.grid.get(s))return!1}else if(this.grid.get(e-16)||this.grid.isBorder(o)&&this.grid.get(o))return!1;if(this.grid.isBorder(a)){if(this.grid.get(a))return!1}else if(this.grid.get(e+16)||this.grid.isBorder(c)&&this.grid.get(c))return!1;return this.fixed.add(e),this.grid.set(e,this.upEdgeType),this.grid.set(s,""),this.grid.set(a,""),!0}addDownEdge(e){let t=e-2048,s=t-8,n=t+8;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"n"),this.grid.set(s,""),this.grid.set(n,""),!0)}addLeftEdge(e){let t=e+8,s=t-2048,n=t+2048;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"c"),!0)}addRightEdge(e){let t=e-8,s=t-2048,n=t+2048;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"c"),!0)}addEarlyFeatures(){return this.addSpikes(this.params.features?.spike??0)?this.addOverpasses(this.params.features?.over??0)?F:{ok:!1,fail:"add overpasses"}:{ok:!1,fail:`add spikes
${this.grid.show()}`}}addLateFeatures(){return this.addArenas(this.params.features?.arena??0)?this.addUnderpasses(this.params.features?.under??0)?this.addPits(this.params.features?.pit??0)?this.addRamps(this.params.features?.ramp??0)?F:{ok:!1,fail:"addRamps"}:{ok:!1,fail:"addPits"}:{ok:!1,fail:"addUnderpasses"}:{ok:!1,fail:`addArenas
${this.grid.show()}`}}addArenas(e){if(!e)return!0;let t=this.grid;for(let s of this.random.ishuffle(this.grid.screens())){let n=s|2056;if(!this.isEligibleArena(n))continue;let o=this.extract(this.grid,s),a=o.substring(0,4)+"a"+o.substring(5);if(!this.orig.tileset.getMetascreensFromTileString(a).length){console.log(`no tile ${a}`);continue}if(this.fixed.add(n),t.set(n,"a"),e--,!e)return!0}return!1}isEligibleArena(e){let t=this.grid,s=e-8,n=s-8,o=e+8,a=o+8;return!(t.get(e)!=="c"&&t.get(e)!=="w"||t.get(s)||t.get(o)||!t.isBorder(s)&&t.get(n)||!t.isBorder(o)&&t.get(a))}addUnderpasses(e){return this.addStraightScreenLate(e,"b",2048)}addOverpasses(e){let t=0;for(;e;){let s=this.random.nextInt(this.h-2)+1,n=this.random.nextInt(this.w-2)+1,o=s<<12|n<<4|2056;if(this.grid.get(o)!=="c"){if(++t>10)throw new Error("Bad attempts");continue}this.grid.set(o,"b"),this.fixed.add(o),this.grid.set(o-8,""),this.grid.set(o+8,""),e--}return!0}addPits(e){return this.addStraightScreenLate(e,"p")}addRamps(e){return this.addStraightScreenLate(e,"/",8)}addStraightScreenLate(e,t,s){if(!e)return!0;for(let n of this.random.ishuffle(this.grid.screens())){let o=n|2056;if(this.grid.get(o)!=="c")continue;if(s){let d=o-s,f=o+s;if(this.grid.get(d)||this.grid.get(f))continue}let a=this.extract(this.grid,n),l=a.substring(0,4)+t+a.substring(5);if(!!this.orig.tileset.getMetascreensFromTileString(l).length&&(this.fixed.add(o),this.grid.set(o,t),e--,!e))return!0}return!1}addSpikes(e){if(!e)return!0;let t=0;for(;e>0;){if(++t>20)return!1;let s=Math.min(e,Math.floor(this.h*.6),this.maxSpikes);for(;s<e-1&&s>this.minSpikes;)this.random.next()<.2&&s--;let n=s>2&&this.w>3?this.random.nextInt(this.w-2)+1:this.random.nextInt(this.w);s>e-this.minSpikes&&(s>=this.h-2?s=this.h-2:s=e);let a=this.random.nextInt(this.h-s-2)+1<<12|n<<4|2056,l=a+(s-1<<12);for(let f=a-4096;s&&f<=l+4096;f+=2048)this.grid.get(f)!=="c"&&(s=0);if(!s)continue;let c=[a-8,a+8,l-8,l+8],d=this.tryClear(c);if(!!d.length){for(let f of d)this.grid.set(f,"");this.fixed.add(a-2048),this.fixed.add(a-4096),this.fixed.add(l+2048),this.fixed.add(l+4096);for(let f=a;f<=l;f+=2048)this.fixed.add(f),this.grid.set(f,"s");e-=s,t=0}}return e===0}canRemove(e){return e===this.initialFillType}tryClear(e){let t=new Map;for(let c of e){if(this.fixed.has(c))return[];t.set(c,"")}let s=this.grid.partition(t),[n]=s.values();if(n.size===s.size)return[...e];let o=new Set,a=new Set(s.values());for(let c of this.fixed)o.add(s.get(c));if(o.size>this.maxPartitions)return[];let l=[...e];for(let c of a)o.has(c)||l.push(...c);return l}refine(){let e=new Set;for(let s=0;s<this.grid.data.length;s++)this.grid.data[s]&&e.add(this.grid.coord(s));let t=0;for(;this.count>this.size;){if(t++>50)throw new Error("refine failed: attempts");let s=0;for(let n of this.random.ishuffle([...e])){if(this.grid.isBorder(n)||!this.canRemove(this.grid.get(n))||this.fixed.has(n))continue;if(s>3)break;let o=this.grid.partition(this.removalMap(n)),[a]=o.values();if(a.size===o.size&&o.size>1)s++,e.delete(n),(n&2056)===2056&&this.count--,this.grid.set(n,"");else{let l;for(let d of o.values())(!l||d.size>l.size)&&(l=d);if(![...this.fixed].every(d=>l.has(d)))continue;let c=[...l].filter(d=>(d&2056)==2056).length;if(c<this.size)continue;s++,e=l,this.count=c,this.grid.set(n,"");for(let[d,f]of o)f!==l&&this.grid.set(d,"")}}if(!s)return this.looseRefine?F:{ok:!1,fail:`refine ${this.count} > ${this.size}
${this.grid.show()}`}}return F}removalMap(e){return new Map([[e,""]])}refineEdges(){let e=[];for(let o=0;o<this.grid.data.length;o++){if(!this.grid.data[o])continue;let a=this.grid.coord(o);this.grid.isBorder(a)||this.fixed.has(a)||(a^a>>8)&8&&e.push(a)}this.random.shuffle(e);let t=this.grid.partition(new Map),s=t.size,n=new Set(t.values()).size;for(let o of e){let a=this.grid.partition(new Map([[o,""]])),[l]=a.values();(l.size===a.size||new Set(a.values()).size===n)&&a.size===s-1&&(s--,this.grid.set(o,""))}return!0}removeSpurs(){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++){let s=e<<12|2056|t<<4;if(this.grid.get(s))continue;let n=s-2048,o=s+2048,a=s-8,l=s+8;(this.grid.get(n)||this.grid.get(o))&&(this.grid.get(a)||this.grid.get(l))&&(this.random.nextInt(2)?(this.grid.set(n,""),this.grid.set(o,"")):(this.grid.set(a,""),this.grid.set(l,"")))}}removeTightLoops(){for(let e=0;e<this.h-1;e++){let t=e<<12|2048;for(let s=0;s<this.w-1;s++){let n=t|s<<4|8;this.isTightLoop(n)&&this.breakTightLoop(n)}}}isTightLoop(e){for(let t=0;t<6144;t+=2048)for(let s=0;s<24;s+=8){let n=t|s;if(n!==2056&&this.grid.get(e+n)!=="c")return!1}return!0}breakTightLoop(e){let t=this.random.nextInt(65536),s=t&1?t&4096|8:t&16|2048;this.grid.set(e+s,"")}addStairs(e=0,t=0){let s=[e,t];if(!s[0]&&!s[1])return F;for(let n of this.random.ishuffle(this.grid.screens()))if(!!this.tryAddStair(n,s)&&!s[0]&&!s[1])return F;return{ok:!1,fail:"stairs"}}addEarlyStair(e,t){let s=[],n=e-8,o=e+8,a=e-2048,l=e+2048,c=[e-8,e+8];if(t==="<"){if(c.push(l),s.push([a,""]),this.grid.get(n)==="c"&&this.grid.get(o)==="c"&&this.random.nextInt(3))return s.push([l,""],[e,"<"]),s}else t===">"&&(c.push(a),s.push([l,""]));if(c=c.filter(f=>this.grid.get(f)==="c"),!c.length)return[];let d=this.random.nextInt(c.length);for(let f=0;f<c.length;f++)f!==d&&s.push([c[f],""]);return s.push([e,t]),s}tryAddStair(e,t){if(this.fixed.has(e|2056))return!1;let s=this.extract(this.grid,e),n=t[0]&&t[1],o=t[0]+t[1],a=this.random.nextInt(o)<t[0],l=[a?0:1];n&&l.push(a?1:0);for(let c of l){let d="<>"[c],f=s.substring(0,4)+d+s.substring(5);if(this.orig.tileset.getMetascreensFromTileString(f).length)return this.grid.set(e|2056,d),t[c]--,!0}return!1}tryConnect(e,t,s,n=1){for(;n-- >0;){let o=new Map,a=e;if((e&t&2056)!==2056)throw new Error(`bad start ${ee(e)} or end ${ee(t)}`);for(o.set(a,s);a!==t;){let l=[];for(let h of[8,-8,2048,-2048]){let p=a+h,m=a+2*h;this.fixed.has(m)||(o.get(m)??this.grid.get(m))||this.grid.isBorder(p)||l.push(h)}if(!l.length)break;let c=(t>>12)-(a>>12),d=(t&240)-(a&240),f=new Set(l);c<0&&f.delete(2048),c>0&&f.delete(-2048),d<0&&f.delete(8),d>0&&f.delete(-8),l.push(...f,...f);let u=this.random.pick(l);o.set(a+u,s),o.set(a=a+2*u,s)}if(a===t){for(let[l,c]of o)this.grid.set(l,c),(l&2056)===2056&&this.count++;return!0}}return!1}tryAddLoop(e,t=1){let s=new Ge;for(let l=0;l<this.grid.data.length;l++){let c=this.grid.coord(l);this.grid.get(c)||this.grid.isBorder(c)||(this.grid.get(qe(c))||s.union([c,qe(c)]),this.grid.get(re(c))||s.union([c,re(c)]))}let n=new H(()=>[]);for(let l of this.grid.screens()){let c=l+2056;if(!!this.grid.get(c))for(let d of[8,-8,2048,-2048]){let f=c+d;if(this.grid.isBorder(f)||this.grid.get(f))continue;let u=c+2*d;if(this.grid.get(u))continue;let h=new Map([[f,e]]),p=this.extract(this.grid,l,{replace:h});this.orig.tileset.getMetascreensFromTileString(p).length&&n.get(s.find(u)).push([f,u])}}let o=new Map;for(let l of n.values())if(!(l.length<2))for(let[c]of l)o.set(c,l);let a=[...o.values()];if(!a.length)return!1;for(;t-- >0;){let l=this.random.pick(a),[[c,d],[f,u]]=this.random.ishuffle(l);if(this.grid.set(c,e),this.grid.set(f,e),this.tryConnect(d,u,e,5))return!0;this.grid.set(c,""),this.grid.set(f,"")}return!1}tryExtrude(e,t,s=1){for(;s--;)for(let n of this.random.ishuffle(this.grid.screens())){let o=n+2056;if(!this.grid.get(o))continue;let a=this.extract(this.grid,n);for(let l of this.random.ishuffle([0,1,2,3])){let c=o+Kt[l],d=o+2*Kt[l];if(this.grid.get(c)||this.grid.isBorder(c)||this.grid.get(d))continue;let f=cs[l],u=a.substring(0,f)+e+a.substring(f+1);if(this.orig.tileset.getMetascreensFromTileString(u).length){this.grid.set(c,e),this.grid.set(d,e);let h=this.tryContinueExtrude(e,t,d);if(h)return h;this.grid.set(d,""),this.grid.set(c,"")}}}return 0}tryContinueExtrude(e,t,s){let n=this.extract(this.grid,s-2056),o=this.orig.tileset.getMetascreensFromTileString(n).length>0;if(t===1)return o?1:0;if(o&&!this.random.nextInt(t))return 1;for(let a of this.random.ishuffle([0,1,2,3])){let l=s+Kt[a],c=s+2*Kt[a];if(this.grid.get(l)||this.grid.isBorder(l)||this.grid.get(c))continue;let d=cs[a],f=n.substring(0,d)+e+n.substring(d+1);if(this.orig.tileset.getMetascreensFromTileString(f).length){this.grid.set(l,e),this.grid.set(c,e);let u=this.tryContinueExtrude(e,t-1,c);if(u)return u+1;this.grid.set(c,""),this.grid.set(l,"")}if(o)break}return o?1:0}tryAdd(e={}){let t=this.orig.tileset,{attempts:s=1,char:n="c",start:o,loop:a=!1}=e;for(let l=0;l<s;l++){let c=o!=null?[o&61680]:this.random.ishuffle(this.grid.screens());for(let d of c){let f=d+2056;if(!this.grid.get(f))continue;let u=this.extract(this.grid,d);for(let h of this.random.ishuffle([0,1,2,3])){let p=f+Kt[h],m=f+2*Kt[h];if(this.fixed.has(p)||this.fixed.has(m))continue;let g=this.grid.get(p),y=this.grid.get(m);if(g&&(y||g!==n)||this.grid.isBorder(p))continue;if(!a){let x=this.extract(this.grid,m-2056,{replace:new Map([[p,""]])});if(/\S/.test(x))continue}let w=cs[h],b=u.substring(0,w)+n+u.substring(w+1);if(t.getMetascreensFromTileString(b).length){this.count++,this.grid.set(p,n),this.grid.set(m,n);let x=this.extract(this.grid,m-2056);if(t.getMetascreensFromTileString(x).length)return 1;this.grid.set(m,y),this.grid.set(p,g),this.count--}}}}return 0}preinfer(){let e;return this.params.features?.spike&&(e=this.preinferSpikes(),!e.ok)?e:F}preinferSpikes(){return F}inferScreens(){let e=[];for(let n of this.grid.screens()){let o=this.extract(this.grid,n),a=this.orig.tileset.getMetascreensFromTileString(o).filter(c=>!c.data.mod);if(!a.length){if(this.grid.show().length>1e5)debugger;return{ok:!1,fail:`infer screen ${ee(n)}: [${o}]
${this.grid.show()}`}}let l=this.random.pick(a);e.push(l),l.hasFeature("wall")&&this.walls++,l.hasFeature("bridge")&&this.bridges++}let t=!0,s=new Ae(this.params.id,this.orig.tileset,this.h,this.w);for(let n=0;n<this.h;n++)for(let o=0;o<this.w;o++){let a=e[n*this.w+o];if(s.set(n<<4|o,a),a.isEmpty()||(t=!1),n){let l=s.get(n-1<<4|o);if(this.orig.tileset.isBannedVertical(l,a))return{ok:!1,fail:`bad vertical neighbor at ${n}${o}: ${l.name} ${a.name}`}}if(o){let l=s.get(n<<4|o-1);if(this.orig.tileset.isBannedHorizontal(l,a))return{ok:!1,fail:`bad horizontal neighbor at ${n}${o}: ${l.name} ${a.name}`}}}return t?{ok:!1,fail:"all screens empty"}:{ok:!0,value:s}}refineMetascreens(e){let t=this.params.features?.bridge||0,s=this.params.features?.wall||0;for(let n of this.random.ishuffle(e.allPos())){let o=(n<<8|n<<4)&61680,a=this.extract(this.grid,o),l=e.get(n);if(!(this.bridges<=t&&l.hasFeature("bridge"))){if(this.addBlocks&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"block"))){l.hasFeature("bridge")&&this.bridges--;continue}if(l.hasFeature("bridge")&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"bridge"))){this.bridges--;continue}if(this.walls<s&&!l.hasFeature("wall")&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"wall"))){this.walls++;continue}}}return this.bridges!==t?{ok:!1,fail:`refineMeta bridges want ${t} got ${this.bridges}
${e.show()}`}:this.walls!==s?{ok:!1,fail:`refineMeta walls want ${s} got ${this.walls}
${e.show()}`}:F}tryMeta(e,t,s){for(let n of s)if(!!this.checkMeta(e,new Map([[t,n]])))return e.set(t,n),!0;return!1}checkMeta(e,t){let s=t?{with:t}:{},n=e.traverse(s);return new Set(n.values()).size===this.maxPartitions}requireEligiblePitDestination(e){let t=!1,s=!1;for(let n of e.allPos()){let o=e.get(n);if(o.hasFeature("river")||o.hasFeature("empty"))continue;let a=(o.data.edges||"").split("").map(l=>l===" "?"":l);if(a[0]&&a[2]&&(t=!0),(a[1]&&a[3]||o.hasFeature("spikes"))&&(s=!0),t&&s)return!0}return!1}checkMetascreens(e){if(!this.params.features?.statue)return F;let t=0;for(let s of e.allPos()){let n=e.get(s);t+=n.data.statues?.length||0}return t<this.params.features.statue?{ok:!1,fail:"insufficient statue screens"}:F}},Mt=class extends T{constructor(){super(...arguments);this.initialFillType="w";this.upEdgeType="n"}setUpEdgeType(e){return this.upEdgeType=e,this}isEligibleArena(e){return!(e&61440)&&super.isEligibleArena(e)}addEdges(){let e=this.grid,t=super.addEdges();if(!t.ok)return t;let s=this.params.features?.arena;if(!s)return F;let n=[];for(let o=0;o<this.w;o++){let a=o<<4|2056;e.get(a-2048)&&n.push(a)}if(n.length<s)return{ok:!1,fail:`not enough edges
${e.show()}`};for(let o of this.random.ishuffle(n)){if(!s)break;let a=o-8,l=a-8,c=l-8,d=l-2048,f=l+2048,u=o+8,h=u+8,p=h+8,m=h-2048,g=h+2048;!e.isBorder(a)&&(e.isBorder(c)&&e.get(c)||e.isBorder(d)&&e.get(d)||e.isBorder(f)&&e.get(f))||!e.isBorder(u)&&(e.isBorder(p)&&e.get(p)||e.isBorder(m)&&e.get(m)||e.isBorder(g)&&e.get(g))||(this.fixed.add(o),e.set(o,"a"),e.set(a,""),e.set(l,""),e.set(u,""),e.set(h,""),this.grid.set(o,"a"),s--)}return F}addArenas(){return!0}},Si=class extends T{refineMetascreens(i){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++)this.grid.get(e<<12|t<<4|2056)==="a"&&i.set(e<<4|t,i.rom.metascreens.cryptArena_statues);return super.refineMetascreens(i)}isEligibleArena(i){return!this.grid.get(i-2048)&&super.isEligibleArena(i)}},cs=[1,3,7,5],Kt=[-2048,-8,2048,8];function vi(r,i,e=!1){let t=new hs(r,i,e),s=new fs(i,t,e);return[t,s]}var fs=class extends T{constructor(e,t,s){super(e);this.location=e;this.under=t;this.reverse=s;this.downStairs=[]}init(){this.downStairs=[]}build(){return this.under.attempt<this.attempt&&(this.under.meta=void 0,this.under.shuffle(this.random),!this.under.meta)?{ok:!1,fail:"dependent failed"}:super.build()}finishInternal(){if(!this.meta||!this.under.meta)throw new Error("impossible");this.under.finish(),super.finishInternal();for(let[e,t]of he.zip(this.under.upStairs,this.downStairs))this.meta.attach(t,this.under.meta,e)}addEarlyFeatures(){let e=super.addEarlyFeatures();if(!e.ok)return e;let t=16,s=0,n=16,o=0,a=1;for(let l of[...this.under.underBridges,-1,...this.under.upStairs]){if(l===-1){a=0;continue}let c=l>>>4,d=l&15;t=Math.min(d,t),s=Math.max(d,s),n=Math.min(c-a,n),o=Math.max(c+a,o)}e:for(let l=0;l<10;l++){let c=[],d=this.random.nextInt(this.w-(s-t))+t,u=this.random.nextInt(this.h-(o-n))+n-n<<4+(d-t);for(let h of this.under.underBridges){let p=h+u,m=p>>>4,g=p&15,y=m<<12|g<<4|2056;if(this.grid.get(y)!=="c")continue e;c.push([y,"b"]),c.push([y-8,""]),c.push([y+8,""])}for(let h of this.under.upStairsEffective){let p=h+u,m=p>>>4,g=p&15,y=m<<12|g<<4|2056;if(this.grid.get(y)!=="c")continue e;c.push([y,this.reverse?"<":">"]),c.push([y+(this.reverse?-2048:2048),""]);let w=this.addEarlyStair(y,this.reverse?"<":">");if(!w.length)continue e;c.push(...w)}for(let[h,p]of c)p&&this.fixed.add(h),(p==="<"||p===">")&&this.downStairs.push(Cr(h)),this.grid.set(h,p);return F}return{ok:!1,fail:"add fixed stairs with early features"}}addStairs(e=0,t=0){return this.reverse?super.addStairs(e-this.under.upStairs.length,t):super.addStairs(e,t-this.under.upStairs.length)}addOverpasses(){return!0}},hs=class extends T{constructor(e,t,s){super(e);this.loc=e;this.overpass=t;this.reverse=s;this.underBridges=[];this.upStairs=[];this.upStairsEffective=[]}init(){this.underBridges=[],this.upStairs=[],this.upStairsEffective=[]}build(){let e=super.build();if(!e.ok)return e;if(!this.meta)throw new Error("impossible");let t=this.reverse?"stair:down":"stair:up";for(let n of this.meta.allPos()){let o=this.meta.get(n);if(o.hasFeature("underpass")&&this.underBridges.push(n),o.hasFeature(t)){let a=0;for(let l of o.data.exits)l.type==="stair:up"&&l.entrance<32768&&(a=-16),l.type==="stair:down"&&l.entrance>32768&&(a=16);this.upStairsEffective.push(n+a),this.upStairs.push(n)}}if(!this.underBridges.length)throw new Error(`Expected bridge in ${this.loc}
${this.meta.show()}`);if(!this.upStairs.length)throw new Error(`Expected stair in ${this.loc}
${this.meta.show()}`);let s=0;for(let[,n,[o]]of this.orig.exits())n===t&&o>>>8===this.overpass.id&&s++;return this.upStairs=this.random.shuffle(this.upStairs).slice(0,s),F}};var It=class extends T{constructor(){super(...arguments);this.maxAttempts=400}refineEdges(){return!0}preinfer(){let e=[];for(let s=0;s<this.h;s++)for(let n=0;n<this.w;n++){let o=s<<12|n<<4|2056;this.grid.get(o)&&e.push(o)}let t=e.filter(s=>this.tryClear([s]).length===1);if(!t.length)return{ok:!1,fail:"all critical?"};for(let s=0;s<t.length;s++)for(let n=0;n<s;n++)if(this.tryClear([t[s],t[n]]).length>2)return super.preinfer();return{ok:!1,fail:"unable to find pair of mutually critical tiles"}}},ki=class extends It{removeTightLoops(){}};var rt=class{constructor(i,e,t){this.h=i;this.w=e;this.valid=t;this.fixed=new Set;this.size=0;this.data=new Uint8Array(i*e)}fill(){for(let i=0;i<this.h;i++)for(let e=0;e<this.w;e++){let t=i*this.w+e;i>0&&(this.data[t]|=1),e>0&&(this.data[t]|=2),i<this.h-1&&(this.data[t]|=4),e<this.w-1&&(this.data[t]|=8)}}isBorder(i,e){let t=i%this.w,s=(i-t)/this.w;return this.isBorder2(s,t,e)}isBorder2(i,e,t){if(t===0)return!i;if(t===1)return!e;if(t===2)return i>=this.h-1;if(t===3)return e>=this.w-1;throw new Error("bad direction")}delete2(i,e,t=i*this.w+e){if(this.fixed.has(t))return!1;let s=new Map;s.set(t,0);for(let n=0;n<4;n++){if(this.isBorder2(i,e,n))continue;let o=t+this.delta(n),a=this.data[o],l=a&~(1<<(n^2));if(a!==l){if(this.fixed.has(o))return!1;s.set(o,l)}}return this.try(s)}delete(i){let e=i%this.w,t=(i-e)/this.w;return this.delete2(t,e,i)}deleteEdge2(i,e,t,s=i*this.w+e){if(this.fixed.has(s))return!1;if(this.isBorder2(i,e,t))return this.data[s]&=~(1<<t),!0;let n=new Map,o=s+this.delta(t);return this.fixed.has(o)?!1:(n.set(s,this.data[s]&~(1<<t)),n.set(o,this.data[o]&~(1<<(t^2))),this.try(n))}deleteEdge(i,e){let t=i%this.w,s=(i-t)/this.w;return this.deleteEdge2(s,t,e,i)}refine(i,e){let t=0,s=new Set;for(let n=0;n<this.data.length;n++)this.data[n]&&t++,this.fixed.has(n)||s.add(n);for(;t>e;){let n=!1;for(let o of i.ishuffle(s)){if(t<=e)break;if(!this.data[o]){t--;continue}this.delete(o)&&(n=!0,t--)}if(!n)return!1}return!0}validate(){for(let i=0;i<this.h;i++)for(let e=0;e<this.w;e++){let t=i*this.w+e,s=this.data[t];if(i&&!(this.data[t-this.w]&4)!=!(s&1))throw new Error(`invalid above ${i}${e}`);if(e&&!(this.data[t-1]&8)!=!(s&2))throw new Error(`invalid left of ${i}${e}`)}}addEdge(i,e,t){let s=i*this.w+e;this.data[s]|=1<<t,this.isBorder2(i,e,t)||(this.data[s+this.delta(t)]|=1<<(t^2))}consolidate(i,e){let t=new ss;for(let n=0;n<this.data.length;n++)!this.fixed.has(n)&&this.data[n]&&t.add(this.data[n]);let s=1e3;for(;t.unique()>e&&--s;){let n=[...t].sort((c,d)=>d[1]-c[1]),o=n[e][1],a=new Set(n.filter(c=>c[1]<=o).map(c=>c[0])),l=this.findEligibleConsolidates(a);if(!l.length)return[];for(let[c,d]of i.pick(l))this.data[c]&&t.delete(this.data[c]),d&&t.add(d),this.data[c]=d}return s?[...t].map(n=>n[0]):[]}consolidateFixed(i,e){let t=new ss;for(let n=0;n<this.data.length;n++){let o=this.data[n];!this.fixed.has(n)&&e.has(o)&&t.add(o)}let s=1e3;for(;t.unique()&&--s;){let n=this.findEligibleConsolidates(e);if(!n.length)return!1;for(let[o,a]of i.pick(n)){let l=this.data[o];e.has(l)&&t.delete(l),e.has(a)&&t.add(a),this.data[o]=a}}return!!s}findEligibleConsolidates(i){let e=[],t=[];for(let s=0;s<this.data.length;s++){if(this.fixed.has(s))continue;let n=this.data[s];if(!!i.has(n))for(let o=0;o<4;o++){if(this.isBorder(s,o))continue;let a=this.delta(o);if(this.fixed.has(s+a))continue;let l=1<<o;if(i.has(n^l))continue;let c=1<<(o^2),d=this.data[s+a],f=new Map([[s,n^l],[s+a,d^c]]);if(!!this.check(f)&&(e.push(f),!i.has(d^c)&&i.has(d))){t.push(f);break}}}return t.length?t:e}try(i){if(!this.check(i))return!1;for(let[e,t]of i)this.data[e]=t;return!0}check(i){let e=new Ge;for(let t=0;t<this.h;t++)for(let s=0;s<this.w;s++){let n=t*this.w+s,o=i?.get(n)??this.data[n];o&&e.union([n]),t>0&&o&1&&e.union([n,n-this.w]),s>0&&o&2&&e.union([n,n-1]),t<this.h-1&&o&4&&e.union([n,n+this.w]),s<this.w-1&&o&8&&e.union([n,n+1])}return e.roots().length===1}addPath(i,e){let t,s;if(!this.size)t=i.nextInt(this.h),s=i.nextInt(this.w);else{let c=[];for(let f=0;f<this.data.length;f++)this.data[f]&&this.data[f]!==15&&c.push(f);if(!c.length)return!1;let d=i.pick(c);s=d%this.w,t=(d-s)/this.w}let n=new Map,o=t*this.w+s,a=0,l=!0;for(;;){let c=!1,d=n.get(o)??this.data[o],f=!1;for(let u of i.ishuffle([0,1,2,3])){let h=1<<u;if(d&h)continue;let p=d|h;if(this.valid&&!this.valid.has(p))continue;let m=t+Mo[u],g=s+Io[u];if(m<0||g<0||m>=this.h||g>=this.w)continue;let y=m*this.w+g,w=n.get(y)??this.data[y],b=w|1<<(u^2);if(w){if(w===b||this.valid&&!this.valid.has(b))continue;c=!0}l=!this.valid||this.valid.has(b),n.set(o,p),n.set(y,b),s=g,t=m,o=y,f=!0;break}if(!f||c||this.data[o]||(this.size++||this.size++,l&&e&&this.size>=e)||l&&i.nextInt(15)<a++)break}if(!n.size||!l)return!1;for(let[c,d]of n)this.data[c]=d;return!0}toGrid(i){let e=new Ze(this.h,this.w);for(let t=0;t<this.h;t++)for(let s=0;s<this.w;s++){let n=t*this.w+s,o=this.data[n];if(!o)continue;let a=t<<12|s<<4|2056;e.set(a,i);for(let l=0;l<4;l++){if(!(o&1<<l))continue;let c=l&1?8:2048;e.set(l&2?a+c:a-c,i)}}return e}delta(i){return(i&2?1:-1)*(i&1?1:this.w)}show(){let i=[];for(let e=0;e<this.h;e++){let t="";for(let s=0;s<this.w;s++)t+=" \u2575\u2574\u2518\u2577\u2502\u2510\u2524\u2576\u2514\u2500\u2534\u250C\u251C\u252C\u253C"[this.data[e*this.w+s]];i.push(t)}return i.join(`
`)}},Ci=class{constructor(i,e,t){this.grid=i;this._i=e*i.w+t}get x(){return this._i%this.grid.w}get y(){return Math.floor(this._i/this.grid.w)}go(i){let e=this.grid.delta(i),t=this._i+e,s=1<<i,n=1<<(i^2);this.grid.data[this._i]|=s,this.grid.data[this._i=t]|=n}directedPath(i,e,t){for(;;){let s=this.y,n=this.x,o=[];if(e<s&&o.push(0),t<n&&o.push(1),e>s&&o.push(2),t>n&&o.push(3),!o.length)return;this.go(i.pick(o))}}},Mo=[-1,0,1,0],Io=[0,-1,0,1];var oi=class extends T{constructor(){super(...arguments);this.maxAttempts=250}initialFill(){let e;return e=this.initialFillEarly(),!e.ok||(this.initialFillLate(),e=this.connectEarlyToLate(),!e.ok)?e:(this.count=[...this.grid.screens()].filter(t=>this.grid.get(t+2056)).length,F)}initialFillEarly(){let e=new rt(this.h,this.w,this.getValidEarlyScreens()),t=0,s=this.targetEarly();for(;t++<20&&e.size<s;)e.addPath(this.random,s)&&(t=0);return this.grid.data=e.toGrid(this.early).data,this.addAllFixed(),F}initialFillLate(){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++){let s=e<<12|t<<4|2056;this.grid.get(s)||this.grid.set(s,"c")}for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++)for(let s of[8,2048]){let n=e<<12|t<<4|2056,o=n+s,a=n+2*s;!this.grid.isBorder(o)&&!this.grid.get(o)&&this.grid.get(n)==="c"&&this.grid.get(a)==="c"&&this.grid.set(o,"c")}}connectEarlyToLate(){for(let e of this.random.ishuffle(this.grid.screens()))for(let t of[8,2048]){let s=e|2056,n=s+t,o=s+2*t;if(this.grid.isBorder(n)||this.grid.get(n))continue;this.grid.set(n,"c");let a=this.extract(this.grid,s-2056),l=this.extract(this.grid,o-2056);(!this.orig.tileset.getMetascreensFromTileString(a).length||!this.orig.tileset.getMetascreensFromTileString(l).length)&&this.grid.set(n,"")}return F}pruneDisconnected(){let e=new Set(this.grid.partition().values()),t=0;for(let s of e)if([...s].some(o=>this.grid.get(o)===this.early))t+=[...s].filter(o=>(o&2056)===2056).length;else for(let o of s){if(this.fixed.has(o))return{ok:!1,fail:`fixed tile ${ee(o)} disconnected`};this.grid.set(o,"")}return t<this.params.size?(console.error(this.grid.show()),{ok:!1,fail:"too much disconnected"}):F}getValidEarlyScreens(){if(!this.validEarlyScreens){let e=new Set;for(let t of this.orig.tileset){let s=t.edgeIndex(this.early);s!=null&&e.add(s)}this.validEarlyScreens=e}return this.validEarlyScreens}addEarlyFeatures(){if(!this.addArenas(this.params.features?.arena??0))return{ok:!1,fail:"addArenas"};let e;return e=this.pruneDisconnected(),e.ok?super.addEarlyFeatures():e}},Ei=class extends oi{constructor(){super(...arguments);this.early="w";this.maxAttempts=250}targetEarly(){let e=this.params.features?.wide;return e!=null?e+2+this.random.nextInt(3):0}initialFillEarly(){let e=new rt(this.h,this.w);e.fill();let t=le(e.data.length).slice(e.w),s=this.random.pick(t);if(!e.deleteEdge(s,1))return{ok:!1,fail:"initial stair"};if(!e.deleteEdge(s,2))return{ok:!1,fail:"initial stair"};if(!e.deleteEdge(s,3))return{ok:!1,fail:"initial stair"};e.fixed.add(s);let n=new Set(t);n.delete(s);let o=[];for(let d of this.random.ishuffle(n)){let f=function(g){return e.delete(g)?(e.fixed.add(g),!0):!1},u=this.params.features?.arena??0;if(o.length>=u)break;if(d>e.data.length-2*e.w||e.fixed.has(d))continue;let h=!e.isBorder(d,1),p=!e.isBorder(d,3);if(h&&e.fixed.has(d-1)||p&&e.fixed.has(d+1)||e.fixed.has(d-e.w)||e.fixed.has(d+e.w)||!(e.data[d]&4))continue;if(!f(d-e.w))return{ok:!1,fail:"initial arena"};if(h&&!f(d-1))return{ok:!1,fail:"initial arena"};if(p&&!f(d+1))return{ok:!1,fail:"initial arena"};let m=d+e.w;if((e.data[m]&5)!==5)return{ok:!1,fail:"initial arena"};if(!e.deleteEdge(m,1))return{ok:!1,fail:"initial arena"};if(!e.deleteEdge(m,3))return{ok:!1,fail:"initial arena"};e.deleteEdge(m+e.w,2),e.fixed.add(m),o.push(d),e.fixed.add(d)}if(!e.refine(this.random,this.targetEarly()))return{ok:!1,fail:"refine"};let a=new Set;for(let d=1;d<16;d++)this.getValidEarlyScreens().has(d)||a.add(d);if(!e.consolidateFixed(this.random,a))return{ok:!1,fail:"consolidate"};this.grid.data=e.toGrid("w").data;let l=(d,f)=>{let u=d%e.w,p=(d-u)/e.w<<12|u<<4|2056;this.grid.set(p,f);for(let m of[-2056,-2048,-2040,-8,0,8,2040,2048,2056])this.fixed.add(p+m)};l(s,">");for(let d of o)l(d,"a");let c=3;for(let d of this.grid.screens())this.grid.get(d+2056)&&c++;return this.size=c,F}addStairs(e,t){return super.addStairs(e,t?t-1:0)}addArenas(){return!0}connectEarlyToLate(){for(let e=0;e<this.h;e++){let t=e<<12|2056;for(let s=0;s<this.w;s++){let n=t|s<<4;this.grid.get(n)==="a"&&this.grid.set(n-2048,"c")}}return F}preinfer(){let e=new Map;for(let n=0;n<this.grid.data.length;n++)this.grid.data[n]==="w"&&e.set(this.grid.coord(n),"");let t=this.grid.partition(e),s=new Set;for(let[n,o]of t)this.grid.get(n)==="<"&&s.add(o);return s.size<2?{ok:!1,fail:"stairs bunched"}:F}refineMetascreens(e){for(let t of e.allPos())e.get(t).hasFeature("arena")&&e.set(t,e.rom.metascreens.fortressArena_through);return F}refineEdges(){return!0}};var nt=class extends oi{constructor(){super(...arguments);this.early="r";this.maxAttempts=250}targetEarly(){return this.params.features?.river??0}preinfer(){if([...this.orig.exits()].length<2)return F;let e=new Map;for(let n=0;n<this.grid.data.length;n++)this.grid.data[n]==="r"&&e.set(this.grid.coord(n),"");let t=this.grid.partition(e),s=[];for(let n=0;n<this.grid.data.length;n++)(this.grid.data[n]==="<"||this.grid.data[n]===">"||this.grid.data[n]&&this.grid.isBorder(this.grid.coord(n)))&&s.push(t.get(this.grid.coord(n)));return new Set(s).size<s.length?{ok:!1,fail:`river didn't matter
${this.grid.show()}`}:super.preinfer()}addLateFeatures(){return F}addArenas(e){if(!e)return!0;let t=this.grid;for(let s of this.random.ishuffle(this.grid.screens())){let n=s|2056,o=n-8,a=o-8,l=n+8,c=l+8,d=n-2048,f=n+2048;if(t.get(n)!=="c"||t.get(d)!=="c"||t.get(f)!=="c")continue;let u=t.isBorder(o)?"":this.extract(t,a-2056),h=t.isBorder(l)?"":this.extract(t,c-2056);if(!/[^ c]/.test(u+h)&&(t.isBorder(o)||(t.set(o,""),t.set(a,""),t.set(a-8,""),t.set(a-2048,""),t.set(a+2048,"")),t.isBorder(l)||(t.set(l,""),t.set(c,""),t.set(c+8,""),t.set(c-2048,""),t.set(c+2048,"")),this.fixed.add(n),this.fixed.add(d),this.fixed.add(f),t.set(n,"a"),e--,!e))return this.pruneDisconnected(),!0}return!1}},Ti=class extends nt{constructor(){super(...arguments);this.addBlocks=!1}initialFillEarly(){let e=new rt(this.h,this.w,this.getValidEarlyScreens()),t=2+this.random.nextInt(this.w-4),s=2+this.random.nextInt(this.w-4),n=new Ci(e,this.h-1,s);return n.go(0),n.directedPath(this.random,1,t),n.go(0),this.grid.data=e.toGrid("r").data,this.addAllFixed(),F}addEdges(){let e=-1,t=this.h-1<<12|2056;for(let o=0;o<this.w;o++)this.grid.get(t|o<<4)==="r"&&(e=o);if(e<0)throw new Error("no river on bottom edge");let s=t|this.random.nextInt(e)<<4,n=t|e+1+this.random.nextInt(this.w-1-e)<<4;return this.grid.set(s,">"),this.grid.set(s-8,""),this.grid.set(s+8,""),this.grid.set(n,">"),this.grid.set(n-8,""),this.grid.set(n+8,""),this.fixed.add(s),this.fixed.add(n),F}addStairs(){return F}checkMeta(e,t){let s=t?{flight:!0,with:t}:{flight:!0},n=e.traverse(s);return new Set(n.values()).size===this.maxPartitions}},Ri=class extends T{constructor(){super(...arguments);this.addBlocks=!1}pickWidth(){return super.pickWidth()+this.random.nextInt(2)}initialFill(){let e=new H(()=>[]);for(let d of this.orig.tileset){if(!d.hasFeature("spikes")||!d.data.edges)continue;let f=0;for(let u=0;u<4;u++)d.data.edges[u]==="s"&&(f|=1<<u);e.get(f).push(...d.gridTiles())}let t=1+this.random.nextInt(this.w-2),s=1+this.random.nextInt(this.h-2),n=s<<4|t,o=this.posToGrid(n,2056),a=s<this.h/2?2:0;this.insertTile(n,this.random.pick(e.get(1<<a)));for(let d=4;d>=0;d--){n+=Fo[a],o=o+us[a];let f=a^2,u=[];for(let[p,m]of e){if(!(p&1<<f))continue;let g=p&~(1<<f);if(!(d?!g:g))for(let y of m)u.push(p)}let h;for(let p of this.random.ishuffle(u))if(!this.grid.isBorder(o+us[p])&&this.insertTile(n,this.random.pick(e.get(p)))){h=31-Math.clz32(p&~(1<<f));break}if(h==null)return{ok:!1,fail:"spikes"};a=h}let l=[];for(let d=3;d<this.h-3;d++)for(let f=1;f<this.w-1;f++)l.push(d<<12|f<<4|2056);let c=!1;for(let d of this.random.ishuffle(l))if(!this.grid.get(d)){for(let f of us){if(this.grid.get(d+f)!=="c")continue;this.grid.set(d,"r");let u=2056&~Math.abs(f);this.grid.set(d+u,"r"),this.grid.set(d-u,"r");let h=this.random.pick([-u,u]);this.grid.set(d+2*h,"r"),this.grid.set(d+3*h,"r"),this.grid.set(d+2*h-f,"c"),c=!0;break}if(c)break}if(!c)return{ok:!1,fail:"nucleate river"};for(let d=5+this.random.nextInt(3);d>0;d--)if(!this.tryAdd({char:"c"}))return{ok:!1,fail:"fill cave"};for(let d=0;d<this.grid.data.length;d++)if(this.grid.data[d]&&this.grid.isBorder(this.grid.coord(d)))return{ok:!1,fail:"border"};return F}checkMeta(e,t){let s=t?{flight:!0,with:t}:{flight:!0},n=e.traverse(s);return new Set(n.values()).size===this.maxPartitions}refine(){return F}refineEdges(){return!0}addSpikes(e){return!0}refineMetascreens(e){let t=super.refineMetascreens(e);if(!t.ok)return t;function s(a){return[...new Set(a.values())].filter(c=>{for(let d of c)if(e.exitType(d)?.startsWith("stair"))return!0;return!1}).length}let n=s(e.traverse()),o=s(e.traverse({flight:!0}));return n===o?{ok:!1,fail:"flight not required"}:F}},us=[-2048,-8,2048,8],Fo=[-16,-1,16,1],Mi=class extends nt{constructor(){super(...arguments);this.addBlocks=!1}fillGrid(){let e=[],t=0;for(let l of this.random.ishuffle(le(this.w-2,c=>c+1))){if(e.length===1&&(l-e[0])**2<=1)continue;let c=this.h-1<<12|l<<4|2056;if(this.grid.set(c,"c"),this.grid.set(be(c),"c"),this.grid.set(re(c),"n"),this.fixed.add(c),this.fixed.add(be(c)),this.fixed.add(re(c)),e.push(l),t++,e.length===2)break}if(e.length<2)return{ok:!1,fail:"initial edges"};let s=this.w,n=this.random.nextInt(Math.abs(e[0]-e[1])-1)+Math.min(e[0],e[1])+1;for(let l=1;l<2*this.w;l++)l!==2*n+1&&(this.grid.set(this.h-2<<12|l<<3|2048,"r"),this.fixed.add(this.h-1<<12|l<<3|2048));let o=this.params.features.river;for(;s<o;){let l=this.tryAdd({char:"r"});if(!l)return{ok:!1,fail:`failed to extrude river
${this.grid.show()}`};s+=l,t+=l}let a=this.params.size;for(;t<a;){let l=this.tryAdd();if(!l)return{ok:!1,fail:"failed to extrude cave"};t+=l}return this.addStairs(...this.params.stairs??[])}checkMeta(){return!0}refineMetascreens(e){let t=super.refineMetascreens(e);if(!t.ok)return t;function s(l){let c=0;for(let d of new Set(l.values()))for(let f of d)if(e.exitType(f)==="edge:bottom"){c+=d.size;break}return c}let n=s(e.traverse({noFlagged:!0})),o=s(e.traverse());if(n===o)return{ok:!1,fail:"bridge didn't matter"};let a=s(e.traverse({flight:!0}));return o===a?{ok:!1,fail:"flight not required"}:F}},Ii=class extends nt{constructor(){super(...arguments);this.pattern=["               "," rrrrrrrrrrrrr "," r           r "," r rrrrrrrrr r "," r r       r r "," r r rrrrr r r "," r r r   r r r "," r r r   r r r "," r r r   r r r "," r r r < r r r "," r r r c r r r "," r r rrrrr r r "," r r       r r "," r rrrrrrrrr r "," r           r "," rrrrrrrrrrrrr ","               "]}initialFill(){return this.insertPattern(this.pattern)}addEdges(){let e;for(let n=0;n<this.grid.data.length;n++)if(this.grid.data[n]==="r"){e=this.grid.coord(n)-2056;break}if(e==null)throw new Error("no corner");let t=[];for(let n=0;n<this.pattern.length;n++)for(let o=1;o<this.pattern[n].length-1;o++)!((o^n)&1)||this.pattern[n][o]===" "&&t.push(e+(n<<11|o<<3));let s=this.random.shuffle([..."ccrrrrrrrr"]);for(let n of this.random.ishuffle(t)){let o=s[s.length-1];if(!(o==="c"&&[...this.extract(this.grid,n-2056)].filter(a=>a==="r").length<4)&&(this.canSet(n,o)&&this.grid.set(n,s.pop()),!s.length))break}for(let n=0;n<6;n++)this.tryAdd({char:"c"});return F}refine(){let e=[...this.params.stairs??[]];if(e[0]--,e[0]||e[1]){let n=this.addStairs(...e);if(!n.ok)return n}let t=0;for(let n of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,n).replace(/ /g,"")==="c"&&(e[0]&&!this.grid.get(n+8)&&(this.grid.set(n+2056,"<"),e[0]--),this.fixed.add(n+2056),++t>=2))break;let s=this.grid.partition();return new Set(s.values()).size>1?{ok:!1,fail:"orphans"}:F}fillGrid(){let e;return e=this.initialFill(),!e.ok||(e=this.addEdges(),!e.ok)||(e=this.refine(),!e.ok)?e:F}checkMeta(e,t){let s=e.traverse(t?{with:t}:{}),n=[];for(let o of new Set(s.values())){let a=0;for(let l of new Set([...o]))e.exitType(l)&&a++;n.push(a)}return n.filter(o=>o>0).length===1}refineMetascreens(e){if(!this.checkMeta(e))return{ok:!1,fail:"initial checkMeta"};let t=super.refineMetascreens(e);if(!t.ok)return t;function s(a){let l=0;for(let c of new Set(a.values()))for(let d of c)if(e.exitType(d)){l+=c.size;break}return l}let n=s(e.traverse()),o=s(e.traverse({flight:!0}));return n===o?{ok:!1,fail:"flight not required"}:F}};var Fi=class extends T{build(){let{h:i,w:e}=this,t=this.orig.rom,s=new rt(i,e);s.fill();let n=i*e<28?0:this.random.nextInt(i-1),o=this.random.nextInt(e),a=new Set;function l(S,M){s.delete2(S,M),a.add(S*s.w+M)}function c(S){return!S.startsWith("edge")}a.add(n*s.w+o),o&&l(n,o-1),o<s.w-1&&l(n,o+1),n&&(l(n-1,o),o&&l(n-1,o-1),o<s.w-1&&l(n-1,o+1));for(let S of a)s.fixed.add(S);let d=new Set;for(let S=0;S<4;S++){let M=S&1?i:e,G=this.random.shuffle(le(M)),Z=S&2?M:0,Q=this.params.edges?.[S]??0;for(;Q&&G.length;){let _=S&1?G.pop():Z,se=S&1?Z:G.pop(),K=_*s.w+se;!s.data[K]||s.fixed.has(K)||(s.addEdge(_,se,S),d.add(_<<4|se),Q--)}if(Q)return{ok:!1,fail:`could not add all edges: ${S} ${Q}
${s.toGrid("c").show()}
${s.data}`}}let f=0,u=s.h*s.w*(this.random.next()*.15+.4);for(let S of this.random.ishuffle(le(s.data.length<<2))){let M=S>>>2,G=S&3;if(!s.isBorder(M,G)&&s.deleteEdge(M,G)&&++f>=u)break}let h=new Set,p=new Set,m=[],g=[],y;for(let S of this.orig.tileset){if(S.hasFeature("arena")){y=S;continue}else if(S.hasFeature("empty")){m[0]=S;continue}let M=S.edgeIndex("s");if(M==null)throw new Error("bad edges");let G=S.data.exits?.some(Z=>c(Z.type));(G?g:m)[M]=S,(S.sid<0?p:h).add(S.sid)}if(!y)throw new Error("never found arena");let w=s.consolidate(this.random,h.size),b=new Set(w.map(S=>m[S].sid));if(!b.size)return{ok:!1,fail:"consolidate failed"};let x=[...p].filter(S=>b.has(S)),E=[...h].filter(S=>!b.has(S));if(x.length>E.length)throw new Error("out of space");if(x.length){let S=-1;for(;t.metascreens.getById(S).length;)S--;let M=S;for(let G=0;G<x.length;G++)t.metascreens.renumber(E[G],S),t.metascreens.renumber(x[G],E[G]),S=x[G];t.metascreens.renumber(M,x[x.length-1])}let C=new Ae(this.orig.id,this.orig.tileset,i,e);for(let S=0;S<s.h;S++)for(let M=0;M<s.w;M++){let G=S===n&&M===o;C.set(S<<4|M,G?y:m[s.data[S*s.w+M]])}let B=[...this.orig.exits()].filter(S=>c(S[1])).length;for(let S of this.random.ishuffle(C.allPos())){if(!B)break;if(d.has(S))continue;let M=S&15,G=S>>>4,Z=g[s.data[G*s.w+M]];!Z||(C.set(S,Z),B--)}return B?{ok:!1,fail:"could not place all doors"}:F}};function Er(r){let{swamp:i}=r.metatilesets,e=r.metascreens,t=[[3,218,172],[4,228,170],[5,229,170],[6,230,170],[7,231,170],[8,240,170],[9,241,170],[10,242,170],[11,243,170],[12,220,170],[13,221,170]];for(let[s,n,o]of t)i.getTile(s).copyFrom(n).setAlternative(o);e.swampEmpty.screen.set2d(0,[[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[210,204],[210,204],[210,204],[210,226],[226,200]]),e.swampE.screen.set2d(76,[[8,9],[12,11],[3,3]]),e.swampWSE.screen.set2d(37,[[,,4],[8,9,5],[,10,6],[,11,7],[,3,3]]),e.swampW.screen.set2d(36,[[4],[],[6],[7,13],[3,3]]),e.swampWS.screen.set2d(71,[[8,9],[12,11],[3,3]]),e.registerFix(15,0)}var Gi=class extends T{initialFill(){let e=this.size+3,t=this.random.nextInt(this.w)<<4|this.h-1<<12|2056;this.grid.isBorder(ut(t))||this.fixed.add(ut(t,2)),this.grid.isBorder(qe(t))||this.fixed.add(qe(t,2)),this.grid.set(t,">"),this.fixed.add(t),this.grid.set(be(t),"w"),this.fixed.add(be(t)),this.fixed.add(ut(t)),this.fixed.add(qe(t));let s=this.random.nextInt(this.w)<<4|2056,n=re(s,2);if(this.grid.set(s,"<"),this.fixed.add(s),this.grid.set(re(s),"w"),this.fixed.add(re(s)),this.grid.set(n,"w"),this.fixed.add(n),this.grid.set(re(n),"w"),this.fixed.add(re(n)),this.fixed.add(ut(n)),this.fixed.add(qe(n)),!this.tryConnect(be(t,2),re(n,2),"w",10))return{ok:!1,fail:"initial connect"};for(;this.count<e;)if(!this.tryAddLoop("w",10))return{ok:!1,fail:"add loops"};return F}refine(){return F}refineEdges(){return!0}addArenas(){return!0}addStairs(){return F}refineMetascreens(e){console.log(e.show());for(let s=0;s<e.height;s++)for(let n=0;n<e.width;n++){let o=s<<4|n,a=e.get(o),l=a.edgeIndex("w");if(a.hasFeature("arena"))this.arena=o+16<<8|1;else if(l===5){if(o<16||!e.get(o-16).hasFeature("arena")){e.set(o,e.rom.metascreens.goaWideHallNS_stairs);let c=(o<<8|o<<4)&61680|2056;this.grid.set(c,"H")}}else l===1&&(this.stair=o<<8|2)}if(this.reachable=void 0,!this.checkMeta(e))return{ok:!1,fail:"initial meta check"};console.log(e.show());let t=this.orig.rom.metascreens.goaWideHallNS_deadEnd;for(let s=0;s<e.width;s++)for(let n=0;n<e.height;n++){let o=n<<12|s<<4|2056,a=0;for(;n+a<e.height&&this.grid.get(o+a*4096)==="H";)a++;if(!a)continue;let l=[new Map,new Map];for(let d=0;d<a;d++)l[d&1].set(n+d<<4|s,t);let c=!1;for(let d of this.random.ishuffle(l)){if(!d.size){c=!0;continue}if(!!this.checkMeta(e,d)){for(let[f,u]of d)e.set(f,u),this.grid.set(o+4096*((f>>4)-n),"=");c=!0;break}}if(!c)return{ok:!1,fail:"could not rectify hallway"};n+=a}return super.refineMetascreens(e)}checkMeta(e,t){let s=t?{with:t}:{},n=e.traverse(s),o=n.get(this.stair);return o!==n.get(this.arena)?(console.log(`stair not connected to arena
${e.show()}`),!1):this.reachable==null?o&&o.size<n.size*.95?(console.log("too small"),!1):(this.reachable=o?.size,!0):o?.size>this.reachable*.95}};function Tr(r,i){let{metatilesets:{cave:e,fortress:t,iceCave:s,labyrinth:n,pyramid:o}}=r;r.metascreens.registerFix(14,1);{for(let l of[n,o])l.getTile(43).copyFrom(25).replaceIn(...l),l.getTile(186).copyFrom(27).replaceIn(...l);for(let l of[t,n,o,e])l.getTile(25).copyFrom(23).replaceIn(...l),l.getTile(27).copyFrom(24).replaceIn(...l);for(let l of[s,e,o])l.getTile(23).copyFrom(197),l.getTile(24).copyFrom(197);n.getTile(23).copyFrom(198).setAlternative(197),n.getTile(24).copyFrom(196).setAlternative(197)}let a=new H(()=>[]);for(let l of r.metatilesets.labyrinth)a.get(l.sid).push(l);for(let[l,c]of a){let d=r.screens[l],f=c.map(p=>p.data.tilesets.labyrinth?.removeWall),[u,...h]=new Set(f.filter(p=>p!=null));if(u!=null){if(d.set2d(u,[[197,197],[208,197]]),h.length)throw new Error("bad remove");for(let p=0;p<f.length;p++)f[p]==null&&(c[p].data.tilesets.labyrinth.addWall=[u])}if(!(c.length<2)){if(c.length>2){let p=i.pick(c.filter(m=>m.data.tilesets.labyrinth?.addWall));c.splice(c.indexOf(p),1),p.remove()}for(let p of c){let m=p.data.tilesets.labyrinth?.addWall;if(m!=null){p.data.mod="block";for(let g of m)d.set2d(g,[[23,23],[24,24]])}else p.flag="always"}}}}var Ai=class{constructor(i){this.location=i}shuffle(i){if(this.meta)throw new Error("impossible");let e=this.location.meta;Ao(e,i),i.nextInt(2)&&Bo(this.location.rom);let t=[...e.exits()].filter(a=>a[1]==="stair:up"),s=[...e.exits()].filter(a=>a[1]==="stair:down");i.shuffle(t),i.shuffle(s);for(let a of[...e.exits()])if(a[2][0]>>>8!==this.location.id){let l=(a[1]==="stair:up"?t:s).pop();e.setExit(l[0],l[1],a[2])}if(t.length!==s.length)throw new Error("length mismatch");let n=i.shuffle([...s]);for(let a=0;a<s.length;a++)s[a]===n[a]&&(i.shuffle(n),a=-1);let o=this.location.id<<8;for(let a=0;a<t.length;a++)e.setExitOneWay(t[a][0],t[a][1],[o|s[a][0],s[a][1]]),e.setExitOneWay(n[a][0],n[a][1],[o|t[a][0],t[a][1]]);this.meta=e}finish(){}};function Ao(r,i){let e=i.nextInt(2)+6,t=i.nextInt(3)+2;if(e===7&&t===3)return;let{branchNWSE:s,branchNWE:n,branchWSE:o,branchNWE_upStair:a,deadEndW:l,deadEndE:c}=r.rom.metascreens,d=e<<4|t,f=o;e===7&&t===1&&(f=c),e===7&&t===5&&(f=l),r.set2d(99,[[s],[s],[s]]),r.set2d(d-16,[[n],[a],[f]]),r.moveExit(115,d)}function Bo(r){let i=r.locations.Pyramid_Draygon.meta,e=r.locations.Pyramid_Main.meta,{metascreens:{hallSE:t,deadEndW_downStair:s,wideHallNE:n,wideHallNW:o,fortressArena_through:a,deadEndS_stairs:l}}=r;i.width=2,i.set2d(0,[[null,l],[null,a],[n,o]]),i.moveExit(32,1),e.set2d(3,[[t,s]]),e.moveExit(3,4),e.attach(4,i,1)}function Rr(r,i,e){let t=new ms(r),s=new ps(i,t),n=new xs(e,s);return[t,s,n]}var ms=class extends T{constructor(){super(...arguments);this.patterns=[["     "," >cc ","   c ","   b ","   c "],["     "," cc> "," c   "," b   "," c   "],["   c ","   b ","   c "," >cc ","     "],[" c   "," b   "," c   "," cc> ","     "]]}initialFill(){let e=this.random.pick(this.patterns);this.count=3;let t=this.insertPattern(e,{top:1,bottom:1});if(!t.ok)return t;this.addAllFixed();for(let s=0;s<this.grid.data.length;s++){if(this.grid.data[s]!==">")continue;let n=this.grid.coord(s);this.stair=n>>>8&240|n>>>4&15}return F}addEdges(){let e=10;for(;this.count<this.size&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"addEdges"}}addEarlyFeatures(){let e=!1;for(let t of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,t)===" c  c  c "){this.grid.set(t+2056,"b"),e=!0;break}return e?super.addStairs(0,2):{ok:!1,fail:"could not add bridge"}}refine(){return F}addLateFeatures(){return F}addStairs(){return F}},ps=class extends T{constructor(e,t){super(e);this.location=e;this.upper=t;this.maxAttempts=200}build(){return this.upper.attempt<this.attempt&&(this.upper.meta=void 0,this.upper.shuffle(this.random),!this.upper.meta)?{ok:!1,fail:"dependent failed"}:super.build()}initialFill(){let e=[],t=!0,s=this.upper.meta,n=this.upper.stair;if(s.get(n).isEmpty()||(n+=16,t=!1),n==null)throw new Error("no stair found");for(let x of s.allPos())s.get(x).hasFeature("overpass")&&e.push(x);this.random.shuffle(e);let o=n>>>4,a=n&15,l=a,c=o;for(let x of e){let E=x>>>4,C=x&15;o=Math.min(o,E),a=Math.min(a,C),l=Math.max(l,C),c=Math.max(c,E)}let d=c-o+1,f=l-a+1,u=o<<4|a,h=1+this.random.nextInt(this.w-f-2),m=(this.random.nextInt(this.h-d-(t?1:0))<<4|h)-u,g=(n&15)-a<f/2;n+=m;for(let x=0;x<e.length;x++)e[x]+=m;let y=t?"    <  c ":g?"    <c   ":"   c<    ";if(!this.insertTile(e[0],"   cbc   ")||!this.insertTile(e[1],"   cbc   "))throw new Error("Could not insert bridge tile");if(!this.insertTile(n,y)){let x=[-1,1,16,-16,15,17,-15,-17],E=!1;for(let C of this.random.ishuffle(x))if(this.insertTile(n+C,y)){n+=C,E=!0;break}if(!E)throw new Error("Could not insert stair")}this.stair=n,this.addAllFixed(),this.count=3;let w=g?1:-1,b=t?16:w;return!e.includes(n+w)&&!this.tryConnect(this.posToGrid(n+b,2056),this.posToGrid(e[0]-w,2056),"c",10)?{ok:!1,fail:"could not connect stair to bridge"}:this.tryConnect(this.posToGrid(e[0]+w,2056),this.posToGrid(e[1]+w,2056),"c",10)?F:{ok:!1,fail:"could not connect bridges"}}addEdges(){let e=100;for(;this.count<this.size-4&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"could not populate"}}refine(){return F}refineEdges(){return!0}addUnderpasses(){return!0}addArenas(){for(let e of this.random.ishuffle(this.grid.screens())){if(!(e&61440))continue;let t=e+2056;if(!(this.fixed.has(t)||this.grid.get(t))&&!(this.grid.get(ut(t,2))||this.grid.get(qe(t,2)))&&this.grid.get(re(t,2))==="c"&&!!this.canSetAll(new Map([[re(t),"c"],[t,"a"],[be(t),"c"],[be(t,2),"c"]])))return this.grid.set(re(t),"c"),this.grid.set(t,"a"),this.grid.set(be(t),"c"),this.fixed.add(t),this.fixed.add(be(t,2)),!0}return!1}addStairs(e=0,t=0){return super.addStairs(e-1,t)}finishInternal(){if(!this.meta)throw new Error("impossible");this.upper.finish(),super.finishInternal();let e=this.upper.meta,t=this.upper.stair,s=this.stair;t!=null&&s!=null&&this.meta.attach(s,e,t,"stair:up","stair:down")}},xs=class extends T{constructor(e,t){super(e);this.main=t}build(){return this.main.attempt<this.attempt&&(this.main.meta=void 0,this.main.shuffle(this.random),!this.main.meta)?{ok:!1,fail:"dependent failed"}:super.build()}findArena(e){for(let t of e.allPos())if(e.get(t).hasFeature("arena"))return t;throw new Error("never found arena")}initialFill(){let e=this.main.meta,t=this.findArena(e),s=this.posToGrid(t,2056);return this.grid.set(s,"a"),this.grid.set(be(s),"c"),this.grid.set(re(s),"c"),this.fixed.add(s),this.fixed.add(re(s)),this.fixed.add(re(s,2)),F}addEdges(){let e=10,t=2+this.random.nextInt(2);for(;this.count<t&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"addEdges"}}refine(){return F}addLateFeatures(){return F}inferScreens(){let e=super.inferScreens();if(!e.ok)return e;let t=e.value,s=this.findArena(t),n=this.main.meta;return t.set(s+15,this.orig.tileset.unreachableVariant(n.get(s+15))),t.set(s+16,this.orig.tileset.unreachableVariant(n.get(s+16))),t.set(s+17,this.orig.tileset.unreachableVariant(n.get(s+17))),e}finishInternal(){if(!this.meta)throw new Error("impossible");this.main.finish();let e=this.main.meta,t=this.findArena(this.meta);super.finishInternal(),e.setExit(t,"seamless:up",[this.meta.id<<8|t,"seamless:down"]),this.meta.freeFlags=new Set(e.freeFlags)}reportFailure(){throw new Error("Completely failed to shuffle Karmine Kensu map")}},gs=class extends T{constructor(){super(...arguments);this.looseRefine=!0}pickWidth(){return 8}pickHeight(){return 5}initialFill(){if(this.grid.height!==5||this.grid.width!==8)throw new Error("bad size");return Ze.writeGrid2d(this.grid,0,gs.PATTERN),this.count=36,F}addSpikes(){let e=this.random.nextInt(4);for(let n=1;n<10;n++)for(let o=0;o<4;o++){let a=2*o+5+n*17;if(o===e)this.grid.data[a]="c";else{let l=this.grid.coord(a);this.fixed.add(l),n===5&&(this.fixed.add(l+8),this.fixed.add(l+16),this.fixed.add(l-8),this.fixed.add(l-16))}}let t=0;for(let n of this.random.ishuffle(this.grid.screens())){if(t===3)break;let o=n|2056,a=be(o),l=be(o,2),c=re(o),d=re(o,2),f=ut(o),u=qe(o);if(this.grid.get(o)!=="c"||this.grid.get(a)==="s"||this.grid.get(l)==="s"||this.grid.get(c)==="s"||this.grid.get(d)==="s")continue;let h=[],p=[];for(let m of[c,f,u])this.grid.get(m)==="c"&&(this.grid.get(2*m-o)==="s"?p.push(m):h.push(m));if(!(p.length>1)&&!(!h.length&&!p.length)){for(;h.length+p.length>1&&!(h.length+p.length===2&&!h.includes(c)&&!p.includes(c));){let[m]=h.splice(this.random.nextInt(h.length),1);this.grid.set(m,"")}this.grid.set(a,""),this.fixed.add(o),this.grid.set(o,"<"),t++}}return new Set(this.grid.partition().values()).size===1}addStairs(){return F}},ai=gs;ai.PATTERN=["                 ","   ccccccccccc   ","   c c c c c c   "," ccc s s s s ccc "," c c s s s s c c "," ccccscscscscccc "," c c s s s s c c "," ccc s s s s ccc ","   c c c c c c   ","   ccccccccccc   ","                 "];function Mr(r,i,e){let t=r.locations;Po(r,e);let s=new bi(r,e);s.add(),s.shuffles.length||s.add(new T(t.EastCave1),new T(t.EastCave2),new T(t.EastCave3),...vi(t.SealedCave1,t.SealedCave2),new T(t.SealedCave3),new T(t.SealedCave4),new T(t.SealedCave5),new T(t.SealedCave6),new T(t.SealedCave7),new T(t.SealedCave8),new T(t.WindmillCave),new T(t.ZebuCave),new Fi(t.Swamp),new T(t.MtSabreWest_Cave1),new T(t.MtSabreWest_Cave2),new T(t.MtSabreWest_Cave3),new T(t.MtSabreWest_Cave4),new T(t.MtSabreWest_Cave5),new T(t.MtSabreWest_Cave6),new It(t.MtSabreWest_Cave7),new T(t.MtSabreNorth_Cave1),new T(t.MtSabreNorth_Cave2),new T(t.MtSabreNorth_Cave3),new T(t.MtSabreNorth_Cave4),new T(t.MtSabreNorth_Cave5),new T(t.MtSabreNorth_Cave6),new T(t.MtSabreNorth_Cave7),new T(t.MtSabreNorth_Cave8),new T(t.MtSabreNorth_Cave9),new T(t.MtSabreNorth_LeftCell2),new T(t.MtSabreNorth_SummitCave),new T(t.KirisaPlantCave1),new T(t.KirisaPlantCave2),new T(t.KirisaPlantCave3),new T(t.FogLampCave1),new T(t.FogLampCave2),new T(t.FogLampCave3),new ki(t.FogLampCaveDeadEnd),...vi(t.FogLampCave5,t.FogLampCave4,!0),...vi(t.FogLampCave7,t.FogLampCave6),new It(t.WaterfallCave1),new T(t.WaterfallCave2),new Mt(t.WaterfallCave3),new Ti(t.WaterfallCave4),new nt(t.EvilSpiritIsland2).requirePitDestination(),new It(t.EvilSpiritIsland3),new nt(t.EvilSpiritIsland4),new Ei(t.SaberaPalace1).requirePitDestination(),new T(t.SaberaPalace2),new T(t.SaberaPalace2_West),new T(t.JoelSecretPassage),new T(t.MtHydra_Cave1),new T(t.MtHydra_Cave2),new T(t.MtHydra_Cave3),new T(t.MtHydra_Cave4),new T(t.MtHydra_Cave5),new T(t.MtHydra_Cave6),new Mt(t.MtHydra_Cave7),new T(t.MtHydra_Cave8),new T(t.MtHydra_Cave9),new T(t.MtHydra_Cave10),new Mt(t.Styx1).setUpEdgeType("c"),new Mi(t.Styx2).requirePitDestination(),new T(t.Styx3),new Ii(t.OasisCaveMain),new T(t.DesertCave1),new T(t.DesertCave2),new T(t.Pyramid_Branch),new Ai(t.Pyramid_Main),new Si(t.Crypt_Entrance),new Mt(t.Crypt_Hall1).setUpEdgeType("c"),new T(t.Crypt_DeadEndLeft),new T(t.Crypt_DeadEndRight),new T(t.Crypt_Branch),new T(t.Crypt_Hall2),new Gi(t.GoaFortress_Kelbesque),new nt(t.GoaFortress_Sabera),new T(t.GoaFortress_Mado1).requirePitDestination(),new T(t.GoaFortress_Mado2),new T(t.GoaFortress_Mado3),new T(t.GoaFortress_Karmine1),new T(t.GoaFortress_Karmine2),new T(t.GoaFortress_Karmine4),new ai(t.GoaFortress_Karmine6),...Rr(t.GoaFortress_Karmine3,t.GoaFortress_Karmine5,t.GoaFortress_Kensu),new Ri(t.OasisCave_Entrance)),s.shuffleAll(),console.log(String(s))}function Po(r,i=new Rt(1)){gr(r),Er(r),Tr(r,i)}var Vt=typeof __VERSION__=="object"?__VERSION__:{},ws=Vt.STATUS||"unstable",Ir=Vt.VERSION||"HEAD",hf=Vt.LABEL||"HEAD",Fr=Vt.HASH||"HEAD",uf=Vt.DATE||new Date,mf=Vt.PREV||"";var No={};po(No,{default:()=>bs});var bs=go("");var un=xo(fn());function*hn(r){let i=new TextDecoder("UTF-8"),e=r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength),t=e.byteLength,s=0;for(;s+4<t;){let o=n(0,100);if(!o&&!e[s+1]&&!e[s+2]&&!e[s+2])break;let a=parseInt(n(124,12),8),l=n(156,1);if(n(257,6)==="ustar"){let c=n(345,155);c&&(o=`${c}/${o}`)}if(l==="0"||l===""){let c=e.subarray(s+512,s+512+a);yield{filename:o,contents:c}}s+=512+Math.ceil(a/512)*512}function n(o,a){let l=s+o,c=e.subarray(l,l+a).indexOf(0),d=c<0?l+a:l+c;return i.decode(e.subarray(l,d))}}function Ia(r){return(i,e)=>{let t=r(i),s=r(e);return t<s?-1:t>s?1:0}}function Bs(r,i=e=>e){let e=()=>{let t=r();return e=()=>i(t),e()};return()=>e()}var mn=Bs(()=>[...hn((0,un.default)(bs))].sort(Ia(r=>r.filename)));function Oi(r){return Array.isArray(r)?r.map(Oi):typeof r!="object"?r:Object.fromEntries(Object.entries(r).map(([i,e])=>[i,Oi(e)]))}var Fa=new TextDecoder,pn=r=>Fa.decode(r);function Ga({filename:r,contents:i}){return{filename:r,contents:pn(i)}}var xn=Bs(()=>mn().filter(({filename:r})=>r.endsWith(".s")).map(Ga),Oi),gn=Bs(()=>Object.fromEntries(mn().filter(({filename:r})=>r.endsWith(".nss")).map(({filename:r,contents:i})=>[r,pn(i)])),Oi);var Ps=class{constructor(i,e,t,s){this.filename=i,this.chrdata=Array.from(new Uint8Array(e)),this.palette=t,this.rendered=Array.from(new Uint8Array(s.data))}};async function Bf(r){let i=document.createElement("canvas");i.width=112,i.height=100;let e=i.getContext("2d");e.imageSmoothingEnabled=!1,e.fillStyle="#155fd9",e.fillRect(0,0,i.width,i.height);let t=new ImageData(new Uint8ClampedArray(r.rendered),128,128),s=await createImageBitmap(t,{resizeQuality:"pixelated"});return e.drawImage(s,0,0,16,24,24,2,16*4,24*4),i.toDataURL("image/png")}async function Aa(r,i){let e=r.byteLength/16,t=8,s=0,n=document.createElement("canvas");n.width=128,n.height=128;let a=n.getContext("2d").createImageData(128,128),l=new Uint8ClampedArray(r);for(let c=0;c<e;++c){let d=c*16,f=c%16*8,u=Math.floor(c/16)*8;for(let h=0;h<t;++h){let p=l[d+h],m=l[d+h+8];for(let g=0;g<t;++g){let y=7-g,w=p>>y&1,b=(m>>y&1)<<1,x=(w|b)+s*4,E=Na[i[x]],C=(f+g)*4+(u+h)*4*128;a.data[0+C]=E[0],a.data[1+C]=E[1],a.data[2+C]=E[2],a.data[3+C]=x==0?0:255}}}return a}var Ui=class{constructor(i,e,t,s){this.name=i,this.converter=e,this.nssdata=t,this.description=s}static async init(i,e,t,s){let n=await t;return new Ui(i,e,n,s)}static applyPatch(i,e,t){if(!Ui.isCustom(i))return;let s=t?262144:0;for(let[n,o]of Lt.getChr(i.converter))for(let a of o)for(let l=0;l<16;++l)e[a+l+s]=i.nssdata.chrdata[n*16+l];for(let[n,o]of Lt.getPalette(i.converter))for(let a of o)switch(n){case"color0":e[a]=i.nssdata.palette[0];break;case"color1":e[a]=i.nssdata.palette[1];break;case"color2":e[a]=i.nssdata.palette[2];break;case"color3":e[a]=i.nssdata.palette[3];break;case"metasprite":e[a+s]=0;break}}},xt=Ui;xt.isCustom=i=>i.name!="Simea";var Di=class{constructor(){this.mapping=new Map;this.mapping.set("simea",new Map([["Simea",xt.init("Simea","simea",wn("Simea.nss"),"The original main character of Crystalis")],["Mesia",xt.init("Mesia","simea",wn("Mesia.nss"),"Secondary protagonist Mesia takes the spotlight! Artwork by jroweboy")]]))}static get(i){return this.instance||(this.instance=new Di),this.instance.mapping.get(i)}};function k(r,i,e){return 262160+r*8192+i*4096+e*16}var Lt=class{constructor(){this.chrMapping=new Map;this.paletteMapping=new Map;this.simeaChrMapping=this.generateSimeaMapping(),this.simeaPaletteMapping=this.generateSimeaPalette(),this.chrMapping.set("simea",this.simeaChrMapping),this.paletteMapping.set("simea",this.simeaPaletteMapping)}static getChr(i){return this.instance||(this.instance=new Lt),this.instance.chrMapping.get(i)}static getPalette(i){return this.instance||(this.instance=new Lt),this.instance.paletteMapping.get(i)}generateSimeaPalette(){let i=new Map,e=27888+16;return i.set("color0",[e+0]),i.set("color1",[e+1]),i.set("color2",[e+2]),i.set("color3",[e+3]),i.set("metasprite",[245844+16]),i}generateSimeaMapping(){let t=new Map;t.set(0,[k(8,0,26)]),t.set(1,[k(8,0,27)]),t.set(16,[k(8,0,0)]),t.set(17,[k(8,0,1)]),t.set(32,[k(8,0,32)]),t.set(33,[k(8,0,33)]),t.set(2,[k(8,0,28)]),t.set(3,[k(8,0,29)]),t.set(18,[k(8,0,2)]),t.set(19,[k(8,0,3)]),t.set(20,[k(8,0,4)]),t.set(21,[k(8,0,5)]),t.set(34,[k(8,0,34)]),t.set(35,[k(8,0,35)]),t.set(36,[k(8,0,36)]),t.set(37,[k(8,0,37)]),t.set(6,[k(8,0,30)]),t.set(7,[k(8,0,31)]),t.set(22,[k(8,0,6)]),t.set(23,[k(8,0,7)]),t.set(38,[k(8,0,38)]),t.set(39,[k(8,0,39)]),t.set(64,[k(8,0,20)]),t.set(65,[k(8,0,21)]),t.set(80,[k(8,0,52)]),t.set(81,[k(8,0,53)]),t.set(50,[k(8,0,60)]),t.set(51,[k(8,0,61)]),t.set(66,[k(8,0,24)]),t.set(67,[k(8,0,25)]),t.set(82,[k(8,0,56)]),t.set(68,[k(8,0,22)]),t.set(69,[k(8,0,23)]),t.set(84,[k(8,0,54)]),t.set(112,[k(8,0,14)]),t.set(113,[k(8,0,15)]),t.set(128,[k(8,0,46)]),t.set(129,[k(8,0,47)]),t.set(114,[k(8,0,18)]),t.set(115,[k(8,0,19)]),t.set(130,[k(8,0,48)]),t.set(131,[k(8,0,51)]),t.set(116,[k(8,0,16)]),t.set(117,[k(8,0,17)]),t.set(133,[k(8,0,49)]),t.set(160,[k(8,0,8)]),t.set(161,[k(8,0,9)]),t.set(176,[k(8,0,40)]),t.set(146,[k(8,0,58)]),t.set(147,[k(8,0,59)]),t.set(162,[k(8,0,12)]),t.set(163,[k(8,0,13)]),t.set(178,[k(8,0,44)]),t.set(179,[k(8,0,45)]),t.set(164,[k(8,0,10)]),t.set(165,[k(8,0,11)]),t.set(181,[k(8,0,43)]);let s=new Map(t);for(let[o,a]of s){let l=o+8,c=a.map(d=>d+1024);t.set(l,c)}t.set(192,[k(11,1,0)]),t.set(193,[k(11,1,1)]),t.set(208,[k(11,1,2)]),t.set(209,[k(11,1,3)]),t.set(224,[k(11,1,4)]),t.set(225,[k(11,1,5)]),t.set(194,[k(11,1,36)]),t.set(195,[k(11,1,37)]),t.set(210,[k(11,1,6)]),t.set(211,[k(11,1,7)]),t.set(226,[k(11,1,38)]),t.set(227,[k(11,1,39)]),t.set(196,[k(11,1,32)]),t.set(197,[k(11,1,33)]),t.set(212,[k(11,1,34)]),t.set(213,[k(11,1,35)]),t.set(214,[k(11,1,20)]),t.set(215,[k(11,1,21)]),t.set(230,[k(11,1,22)]),t.set(231,[k(11,1,23)]),t.set(54,[k(11,1,12)]),t.set(55,[k(11,1,13)]),t.set(70,[k(11,1,50)]),t.set(71,[k(11,1,51)]),t.set(86,[k(11,1,46)]),t.set(87,[k(11,1,47)]),t.set(102,[k(11,1,18)]),t.set(103,[k(11,1,19)]),t.set(118,[k(11,1,8)]),t.set(119,[k(11,1,9)]),t.set(134,[k(11,1,40)]),t.set(135,[k(11,1,41)]),t.set(150,[k(11,1,44)]),t.set(151,[k(11,1,45)]),t.set(166,[k(11,1,10)]),t.set(167,[k(11,1,11)]),t.set(182,[k(11,1,42)]),t.set(183,[k(11,1,43)]);let n=o=>[k(8,0,o)+1024*2,k(8,0,o)+1024*3,k(8,1,o),k(8,1,o)+1024,k(8,1,o)+1024*2];return t.set(240,n(16)),t.set(241,n(17)),t.set(242,n(18)),t.set(243,n(19)),t.set(244,n(20)),t.set(245,n(21)),t.set(246,n(22)),t.set(247,n(23)),t.set(248,[k(8,1,237)]),t.set(249,n(25)),t.set(250,n(26)),t.set(252,n(48)),t.set(253,n(49)),t.set(254,n(50)),t.set(255,n(51)),t}};async function wn(r){let i=gn()[r],e=r.replace(/^.*[\\\/]/,"");return La(e,i)}function bn(r){let i="",e="",t=0;for(;t<r.length;)if(r[t]==="["){++t;let s=r.indexOf("]",t),n=parseInt(r.slice(t,s),16)-1;i+=e.repeat(n),t=s+1}else e=r.slice(t,t+2),i+=e,t+=2;return i}function yn(r,i){return r.match(new RegExp(".{1,"+i+"}","g"))||[]}function Ba(r){let i=yn(r,2).map(e=>parseInt(e,16));return new Uint8Array(i)}function Pa(r){return r.map(i=>parseInt(i,16))}async function La(r,i){let e=new Map(i.split(`
`).filter(a=>a.includes("=")).map(a=>a.split("=")).map(a=>[a[0],a[1]])),t=e.get("Palette")||"",s=Pa(yn(bn(t).slice(0,32),2)),n=Ba(bn(e.get("CHRMain")||"")),o=await Aa(new Uint8ClampedArray(n),s);return new Ps(r,n,s,o)}var Na=[[84,84,84],[0,30,116],[8,16,144],[48,0,136],[68,0,100],[92,0,48],[84,4,0],[60,24,0],[32,42,0],[8,58,0],[0,64,0],[0,60,0],[0,50,60],[0,0,0],[0,0,0],[0,0,0],[152,150,152],[8,76,196],[48,50,236],[92,30,228],[136,20,176],[160,20,100],[152,34,32],[120,60,0],[84,90,0],[40,114,0],[8,124,0],[0,118,40],[0,102,120],[0,0,0],[0,0,0],[0,0,0],[236,238,236],[76,154,236],[120,124,236],[176,98,236],[228,84,236],[236,88,180],[236,106,100],[212,136,32],[160,170,0],[116,196,0],[76,208,32],[56,204,108],[56,180,204],[60,60,60],[0,0,0],[0,0,0],[236,238,236],[168,204,236],[188,188,236],[212,178,236],[236,174,236],[236,174,212],[236,180,176],[228,196,144],[204,210,120],[180,222,120],[168,226,144],[152,226,180],[160,214,228],[160,162,160],[0,0,0],[0,0,0]];function vn(r,i,e){return new Ls(i,e).smudge(r)}function*Wa(r){let i=0;for(;i<r.length;){let e=r.indexOf(`
`,i)+1||r.length;yield r.substring(i,e),i=e}}var Ls=class{constructor(i,e){this.cpu=i;this.prg=e}smudge(i){let e="";for(let t of Wa(i))e+=this.smudgeLine(t);return e}smudgeLine(i){let e=/^([^;]*?)<@([0-9a-f]+)(?: (.*?))?@>(.*\n?)$/i.exec(i);if(e){let[,s,n,o,a]=e,l=parseInt(n,16),c=Oa(this.cpu,this.prg,l,o);return s+c+a}let t="";for(;;){let s=/^([^;]*?)\[@([0-9a-f]+)(:[0-9]+|:[wdb])?@\](.*\n?)/i.exec(i);if(!s){t+=i;break}let[,n,o,a,l]=s;i=l,t+=n;let c=parseInt(o,16);t+=Da(this.prg,c,a)}return t}};function Oa(r,i,e,t){let s=t,[n,o]=r.disasm(i[e])||["brk","imp"],a=r.argLen(o);return s||(a>0&&(s=i[e+1]),a>1&&(s=s|i[e+2]<<8)),n+(a?" "+r.format(o,s):"")}function Da(r,i,e){let t=r[i];if(e===":w")return t|=r[i+1]<<8,`($${Sn(t,4)})`;if(/:\d+/.test(e)){let s=parseInt(e.substring(1)),n='"';for(let o=0;o<s;o++){let a=String.fromCharCode(r[i+o]);'"\\'.includes(a)&&(a="\\"+a),n+=a}return n+='"',n}else return e===":d"?String(t):e===":b"?`%${t.toString(2).padStart(8,"0")}`:`$${Sn(t,2)}`}var Ns=class{constructor(i){this.plain=i}fix(i,e,t){}format(i,e){return this.plain}},Nt=class extends Ns{constructor(e){super("");this.fix=e}static set(e){return new Nt(t=>t.set(e))}},$t=Nt;$t.push=new Nt(e=>e.push()),$t.alt=new Nt(e=>e.alt()),$t.pop=new Nt(e=>e.pop()),$t.merge=new Nt(e=>e.merge());function Sn(r,i=2){return r.toString(16).padStart(i,"0")}var Pe={of:(...r)=>{let i=0n;for(let e of r)i|=1n<<BigInt(e);return i},from:r=>{let i=0n;for(let e of r)i|=1n<<BigInt(e);return i},containsAll:(r,i)=>!(i&~r),with:(r,i)=>r|1n<<BigInt(i),without:(r,i)=>r&~(1n<<BigInt(i)),has:(r,i)=>!!(r&1n<<BigInt(i)),bits:r=>{let i=[],e=0;for(;r;){let t=Number(r&0xffffffffn),s=32;for(;t;){let n=Math.clz32(t)+1;s-=n,t<<=n,n===32&&(t=0),i.push(e|s)}r>>=32n,e+=32}return i},clone:r=>r,empty:r=>!r,difference:(r,i)=>r&~i};var Hi=class{constructor(i){this.worlds=i;let e=new Set,t=new Set,s=new Map,n=new Map;for(let f=0;f<i.length;f++){let u=i[f],h=f<<24;for(let[p,m]of u.requirements){e.add(h|p);for(let g of m)for(let y of g)t.add(h|y)}for(let[p,m]of u.items)n.set(h|p,m);for(let[p,m]of u.slots)s.set(h|p,m)}this.itemInfos=new Map(n),this.slotInfos=new Map(s),this.progression=new Set(t);for(let f of n.keys())t.add(f);let o=new Set,a=new Set,l=new Set;for(let f of t)(e.has(f)?o:l).add(f);for(let f of e)t.has(f)||a.add(f);this.common=o.size,this.slots=new ns([...o,...a]),this.items=new ns([...o,...l]);let c=[],d=[];for(let f=0;f<i.length;f++){let u=f<<24;for(let[h,p]of i[f].requirements){let m=this.slots.index(u|h);if(m==null)throw new Error(`Provided a non-slot? ${ee(h)}`);for(let g of p){let y=[...g].map(w=>this.items.index(u|w)??Ye());(c[m]||(c[m]=[])).push(Pe.from(y));for(let w of y)(d[w]||(d[w]=new Set)).add(m)}}}for(let f=0;f<this.slots.length;f++)if(!c[f]||!c[f].length){let u=this.slots.get(f)??NaN,h=this.checkName(u);console.error(`Nothing provided $${ee(u)}: ${h} (index ${f})`)}this.graph=new rs(c),this.unlocks=new rs(d.map(ui))}async shuffle(i,e,t=200,s,n){s&&s.addTasks(Math.floor(t/10));for(let o=0;o<t;o++){s&&o%10===9&&(s.addCompleted(1),await new Promise(requestAnimationFrame));let a=new os;this.prefill(a,e);let l=this.compressFill(a),c=this.itemPool(l.values(),e),d=Pe.from(new Set(c)),f=Math.floor(o/5);if(!this.fillInternal(l,c,d,e,i,f))continue;let u=n?[]:void 0,h=this.traverse(m=>l.get(m),Pe.of(),u);if(h.size!==this.slots.length){let m=b=>`${String(b).padStart(3)} ${this.slots.get(b).toString(16).padStart(3,"0")} ${this.checkName(this.slots.get(b))}`,g=b=>`${String(b).padStart(3)} ${this.items.get(b).toString(16).padStart(3,"0")} ${this.checkName(this.items.get(b))}`,y=new Set([...this.slots].map(b=>b[0]));for(let b of h)y.delete(b);let w=new Map;for(let b of y)w.set(m(b),this.graph.get(b).map(x=>`
    `+Pe.bits(x).map(g).join(" & ")).join(""));console.error(`Initial fill never reached slots:
  ${[...w.keys()].sort().map(b=>b+w.get(b)).join(`
  `)}`);continue}this.expandFill(l,a);let p=this.fillNonProgression(a,i,e);if(p!=null){if(s&&s.addCompleted(Math.floor((t-o)/100)),n){for(let[m,g]of a){let y=this.checkName(m).replace(/^[0-9a-f]{3} /,"");n.addSlot(m,y,g)}if(u)for(let[m,...g]of u)(m<this.common||l.has(m))&&n.addCheck(this.slots.get(m),g.map(y=>this.items.get(y)))}return p}}return null}fillInternal(i,e,t,s,n,o){let a=new Set(i.keys());for(let l=e.pop();l!=null;l=e.pop()){if(!Pe.has(t,l))continue;let c=this.itemInfoFromIndex(l);t=Pe.without(t,l);let d=this.expandReachable(this.traverse(h=>i.get(h),t),n);s.shuffle(d);let f=!1,u=new Set(i.keys());for(let h of d){if(u.has(h))continue;u.add(h);let p=this.slotInfoFromIndex(h);if(!(!p||!this.fits(p,c,n))){i.set(h,l),f=!0;break}}if(!f){if(u.clear(),o-- >0){for(let h of d){if(u.has(h)||!i.has(h)||a.has(h))continue;u.add(h);let p=this.slotInfoFromIndex(h);if(!p||!this.fits(p,c,n))continue;let m=i.replace(h,l)??Ye();t=Pe.with(t,m),e.push(m),s.shuffle(e),f=!0;break}if(f)continue}return!1}}return!0}expandReachable(i,e){let t=[];for(let s of i){let n=this.slotInfoFromIndex(s);!n||e.preserveUniqueChecks()&&!n.unique||kn(t,s,n.weight||1)}return t}itemPool(i,e){let t=new Set(i),s=[];for(let[n,o]of this.itemInfos){let a=this.items.index(n);a!=null&&(!this.progression.has(n)||t.has(a)||kn(s,a,o.weight||1))}return e.shuffle(s)}fits(i,e,t){if(t.preserveUniqueChecks()&&e.unique&&!i.unique)return!1;let s=e.preventLoss||i.preventLoss;return!(i.lossy&&e.losable&&s)}fillNonProgression(i,e,t){let s=[[],[],[]],n=[[],[]];for(let[c,d]of this.itemInfos){if(i.hasValue(c))continue;let f=2;d.losable&&d.preventLoss&&(f=1),e.preserveUniqueChecks()&&d.unique&&(f=0),s[f].push(c)}for(let[c,d]of this.slotInfos){if(i.has(c))continue;let f=d.lossy&&d.preventLoss?0:1;n[f].push(c)}for(let c of[...s,...n])t.shuffle(c);let o=c=>this.checkName(c),a=he.count(he.concat(...n)),l=he.count(he.concat(...s));if(l>a)throw console.log(`Slots ${a}:
  ${[...he.concat(...n)].map(o).join(`
  `)}`),console.log(`Items ${l}:
  ${[...he.concat(...s)].map(o).join(`
  `)}`),new Error("Too many items");for(let c of he.concat(...s)){let d=!1;for(let f of[...n]){if(d)break;for(let u=0;u<f.length;u++)if(this.fits(this.slotInfos.get(f[u]),this.itemInfos.get(c),e)){i.set(f[u],c),d=!0,f.splice(u,1);break}}if(!d)return console.log(`Slots:
  ${[...he.concat(...n)].map(o).join(`
  `)}`),console.error(`REROLL: Could not place item ${o(c)}`),null}return new Map(i)}traverse(i,e,t){e=Pe.clone(e);let s=new Set,n=new Set;for(let o=0;o<this.slots.length;o++){if(this.graph.get(o)==null){console.dir(this);let a=this.slots.get(o);throw new Error(`Unreachable slot ${a?.toString(16)}`)}n.add(o)}for(let o of n){if(n.delete(o),s.has(o))continue;let a=this.graph.get(o);if(a==null)throw new Error(`Not in graph: ${o}`);for(let l=0,c=a.length;l<c;l++){if(!Pe.containsAll(e,a[l]))continue;t&&t.push([o,...Pe.bits(a[l])]),s.add(o);let d=[];o<this.common&&d.push(o);let f=i(o);f!=null&&d.push(f);for(let u of d){e=Pe.with(e,u);for(let h of this.unlocks.get(u)||[]){if(this.graph.get(h)==null)throw console.dir(this),new Error(`Adding bad node ${h} from unlock ${u}`);n.add(h)}}break}}return s}expandFill(i,e){for(let[t,s]of i){let n=this.slots.get(t),o=this.items.get(s);if(n==null||o==null)throw new Error("missing");e.replace(n,o)}}compressFill(i){let e=new os;for(let[t,s]of i){let n=this.slots.index(t),o=this.items.index(s);if(n==null||o==null)throw new Error(`Bad slot/item: ${t} ${n} ${s} ${o}`);e.set(n,o)}return e}checkName(i){return this.worlds[i>>>24].checkName(i&16777215)}prefill(i,e){for(let t=0;t<this.worlds.length;t++){let s=t<<24,n=this.worlds[t].prefill(e);for(let[o,a]of n)i.set(s|o,s|a)}}itemInfoFromIndex(i){let e=this.items.get(i);if(e==null)throw new Error(`Bad item: ${i}`);return this.itemInfoFromId(e)}itemInfoFromId(i){let e=this.itemInfos.get(i);if(e==null)throw new Error(`Missing info: ${ee(i)}`);return e}slotInfoFromIndex(i){let e=this.slots.get(i);if(e==null)throw new Error(`Bad slot: ${i}`);return this.slotInfoFromId(e)}slotInfoFromId(i){let e=this.slotInfos.get(i);if(e!=null)return e}};function kn(r,i,e){for(let t=0;t<e;t++)r.push(i)}var qi=class{constructor(i,e,t,s=1){this.rom=i;this._width=t,this._height=e,this.element=document.createElement("div"),this.canvas=document.createElement("canvas"),this.element.appendChild(this.canvas),this.canvas.width=t,this.canvas.height=e,this.ctx=this.canvas.getContext("2d")||Ye(),this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.palettes=new Uint32Array(1024),this.layers=le(s,()=>new Uint32Array(t*e)),this.data=this.layers[0];for(let n=0;n<256;n++)for(let o=0;o<4;o++){let a=Ua[i.palettes[n].color(o)];this.palettes[n<<2|o]=a|4278190080}}useLayer(i){this.data=this.layers[i]||Ye(`Bad layer: ${i}`)}resizeWidth(i,e){let t=new Uint32Array(e*this._height),s=Math.min(e,this._width);for(let n=0;n<this._height;n++)t.subarray(n*e,n+e+s).set(i.subarray(n*this._width,n*this._width+s));return t}resizeHeight(i,e){let t=new Uint32Array(this._width*e),s=this._width*Math.min(e,this._height);return t.subarray(0,s).set(i.subarray(0,s)),t}get width(){return this._width}set width(i){for(let e=0;e<this.layers.length;e++)this.layers[e]=this.resizeWidth(this.layers[e],i);this._width=i,this.canvas.width=i}get height(){return this._height}set height(i){for(let e=0;e<this.layers.length;e++)this.layers[e]=this.resizeHeight(this.layers[e],i);this._height=i,this.canvas.height=i}get minX(){return this._minX}get maxX(){return this._maxX}get minY(){return this._minY}get maxY(){return this._maxY}fill(i){this.data.fill(i)}clear(i){let e=i!=null?this.palettes[i<<2]:0;this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.layers[0].fill(e);for(let t=1;t<this.layers.length;t++)this.layers[t].fill(0)}toDataUrl(i=!1){return this.canvas.toDataURL("image/png")}render(){let i=this.canvas,e=this.ctx;for(let t=0;t<this.layers.length;t++){t&&(i=document.createElement("canvas"),i.width=this.canvas.width,i.height=this.canvas.height,e=i.getContext("2d")||Ye());let s=new Uint8Array(this.layers[t].buffer),n=e.getImageData(0,0,this._width,this._height);n.data.set(s),e.putImageData(n,0,0),t&&this.ctx.drawImage(i,0,0)}}rect(i,e,t,s,n){let o=Math.max(0,i),a=Math.max(0,e),l=Math.min(this._height,i+t),c=Math.min(this._width,e+s);for(i=o;i<l;i++)for(e=a;e<c;e++)this.data[i*this._width+e]=n}tile(i,e,t,s){if(e<0||i<0||e+8>=this._width||i+8>=this._height)return;let n=this.rom.patterns.get(t).flip(s<<6);for(let o=0;o<8;o++){let a=n.pixels[8|o]<<1,l=n.pixels[o];for(let c=7;c>=0;c--){let d=a&2|l&1;a>>>=1,l>>>=1,d&&(this.data[(i+o)*this._width+e+c]=this.palettes[s&1020|d])}}this._minX=Math.min(this._minX,e),this._maxX=Math.max(this._maxX,e+8),this._minY=Math.min(this._minY,i),this._maxY=Math.max(this._maxY,i+8)}metatile(i,e,t,s,n=0){let o=this.rom.locations[s],a=[...o.tilePatterns];o.animation&&(a[1]=this.rom.tileAnimations[o.animation].pages[n&7]);let l=[...o.tilePalettes,127],c=this.rom.tilesets[o.tileset],d=l[c.attrs[t]];for(let f=0;f<2;f++)for(let u=0;u<2;u++){let h=c.tiles[f<<1|u][t],p=a[h&128?1:0]<<6|h&127,m=e+(u<<3),g=i+(f<<3);this.tile(g,m,p,d<<2)}}metasprite(i,e,t,s,n=0,o=0){let a=this.rom.locations[s],l=this.rom.metasprites[t],c=[64,66,...a.spritePatterns],d=[0,1,...a.spritePalettes],f=!1;if(l.mirrored!=null&&(l=this.rom.metasprites[l.mirrored],f=!0),!l||!l.used)return;let u=o&l.frameMask;for(let[h,p,m,g]of l.sprites[u]){if(h==128)break;h=Cn(h),p=Cn(p),g=g+n&255;let y=c[g>>6],w=d[m&3]+176&255,b=y<<6|g&63;f&&(h=-8-h,m^=64),this.tile(i+p,e+h,b,w<<2|m>>6)}}text(i,e,t,s=18){for(let n=0;n<t.length;n++)this.tile(i,e+8*n,t.charCodeAt(n)|3840,s<<2)}},Ua=[5395026,11796480,10485760,11599933,7602281,91,95,6208,12048,543240,26368,1196544,7153664,0,0,0,12899815,16728064,14421538,16729963,14090399,6818519,6588,21681,27227,35843,43776,2918400,10777088,0,0,0,16316664,16755516,16742785,16735173,16730354,14633471,4681215,46327,57599,58229,259115,7911470,15065624,7895160,0,0,16777215,16773822,16300216,16300248,16758527,16761855,13095423,10148607,8973816,8650717,12122296,16119980,16777136,16308472,0,0];function Cn(r){return r<128?r:r-256}function V(r){return r}(e=>{function r({id:t},{x:s,y:n}){let o=s>>>8,a=s>>>4&15,l=n>>>8,c=n>>>4&15;return t<<16|l<<12|o<<8|c<<4|a}e.from=r;function i(t,s,n){let o=t;if(s){let a=(o&240)+(s<<4);for(;a>=240;){if((o&61440)>=61440)return-1;a-=240,o+=4096}for(;a<0;){if(!(o&61440))return-1;a+=240,o-=4096}o=o&-241|a}if(n){let a=(o&15)+n;for(;a>=16;){if((o&3840)>=1792)return-1;a-=16,o+=256}for(;a<0;){if(!(o&3840))return-1;a+=16,o-=256}o=o&-16|a}return o}e.add=i})(V||(V={}));var En=Symbol("[LocationMap data]"),gt=class extends qi{constructor(e,t=0){super(e,1,1,4);this.rom=e;this.flags=new Set;this._maxWidth=1/0;let s=e.locations[t];this.width=(s.used?s.width:1)*256,this.height=(s.used?s.height:1)*240,this.location=s;let n=o=>{let a=o.offsetX,l=o.offsetY,c=o.target;for(;c&&c!==this.element;)c=c.parentElement;if(!c)return;let d=a>>8,f=Math.floor(l/240),u=a-256*d>>4,h=l-240*f>>4,m=this.location.id<<16|f<<12|d<<8|h<<4|u;gt.setData(o,{tile:m,target:this})};this.element.addEventListener("mousemove",n),this.element.addEventListener("mousedown",n),this.element.addEventListener("mouseup",n),this.element.addEventListener("click",n),this.redraw()}static getData(e){return e[En]}static setData(e,t){e[En]=t}get id(){return this.location.id}set id(e){this.location=this.rom.locations[e],this.height=(this.location.used?this.location.height:1)*240,this.width=(this.location.used?this.location.width:1)*256,this.ensureWidth(),this.redraw()}get maxWidth(){return this._maxWidth}set maxWidth(e){this._maxWidth=e,this.ensureWidth()}ensureWidth(){if(this.width<=this._maxWidth){this.element.style.transform="",this.element.style.width="",this.element.style.height="";return}let e=this._maxWidth/this.width,t=(1-e)*50;this.element.style.transform=`translate(-${t}%,-${t}%) scale(${e})`,this.element.style.width=`${this.width*e}px`,this.element.style.height=`${this.height*e}px`}clearOverlay(){this.useLayer(1),this.fill(0),this.useLayer(3),this.fill(0),this.render()}overlayShade(e){this.useLayer(3),this.fill(e)}overlayArea(e,t,s){for(let n of e){if(n>>>16!==this.location.id)continue;let o=n>>>12&15,a=n>>>8&15,l=n>>>4&15,c=n&15,d=240*o+16*l,f=256*a+16*c;s!=null&&(this.useLayer(3),this.rect(d-1,f-1,18,18,0)),this.useLayer(1),e.has(V.add(n,-1,0))||this.rect(d-1,f-1,2,18,t),e.has(V.add(n,0,-1))||this.rect(d-1,f-1,18,2,t),e.has(V.add(n,1,0))||this.rect(d+15,f-1,2,18,t),e.has(V.add(n,0,1))||this.rect(d-1,f+15,18,2,t)}}redraw(){this.useLayer(0),this.clear(this.location.tilePalettes[0]);for(let e=0;e<this.location.height;e++)for(let t=0;t<this.location.width;t++){let s=this.location.screens[e][t];this.drawScreen(this.rom.screens[s],e,t)}this.useLayer(2);for(let e of this.location.spawns){let t=0,{x:s,y:n}=e;n-=e.yt&240;let o,a=0;if(e.isNpc()){let l=this.rom.npcs[e.id];if(!l||!l.data)continue;s+=8,n+=12,o=(a>>5)+2&3|l.data[3]}else if(e.isChest())o=170;else if(e.isMonster()){let l=this.rom.objects[e.monsterId];if(!l)continue;o=l.metasprite,l.action==41?o=a&32?107:104:[42,94].includes(l.action)&&(o=(a>>5)+2&3|l.data[31])}e.patternBank&&(t+=64),o!=null&&this.metasprite(n,s,o,this.location.id,t)}this.render()}drawScreen(e,t,s){let n=t*240,o=s*256,a=this.rom.tilesets[this.location.tileset],l,c=!1;for(let d of this.location.flags)if(d.xs===s&&d.ys===t){l=d.flag,this.rom.flags[l]?.logic.assumeTrue&&(c=!0);break}for(let d=0;d<240;d+=16)for(let f=0;f<16;f++){let u=e.tiles[d|f];u<32&&(this.flags.has(l)||c)&&(u=a.alternates[u]),this.metatile(n+d,o+f*16,u,this.location.id,0)}}};var L;(d=>{function r(...f){return[[].concat(...f.map(([u])=>u))]}d.and=r;function i(...f){let u=[];for(let h of f){if(h===d.OPEN)return d.OPEN;h!==d.CLOSED&&u.push(...t(h))}return u.length?u:d.CLOSED}d.or=i;function e(f,u){if(f===d.OPEN)return t(u);if(u===d.OPEN)return t(f);if(f===d.CLOSED||u===d.CLOSED)return d.CLOSED;let h=new c;for(let p of f)for(let m of u)h.addList([...p,...m]);return t(h)}d.meet=e;function t(f){return f instanceof c?[...he.map(f,u=>[...u])]:f}d.freeze=t;function s(f){return f instanceof c?f.label():f.map(u=>u.join("&")).join("|")}d.label=s;function n(f){let u=f[Symbol.iterator](),{value:h,done:p}=u.next();if(p||!u.next().done)return!1;let m=h[Symbol.iterator]();return Boolean(m.next().done)}d.isOpen=n;function o(f){let u=f[Symbol.iterator]();return Boolean(u.next().done)}d.isClosed=o,d.OPEN=[[]],d.CLOSED=[];class c{constructor(u){this.self=u;this.map=new Map}[Symbol.iterator](){return this.map.values()}addInternal(u,h){for(let p of h)if(Array.isArray(p))throw new Error;if(h.has(this.self)||this.map.has(u))return!1;for(let[p,m]of this.map){if(Tn(h,m))return!1;Tn(m,h)&&this.map.delete(p)}return this.map.set(u,h),!0}addRoute(u){return this.addInternal(u[zi],u.deps)}addAll(u){for(let h of u)this.addList(h)}addList(u){let h=[...new Set(u)].sort(),p=new Set(h);this.addInternal(h.join("&"),p)}restrict(u){let h=[...this.map.values()];this.map.clear();for(let p of h)for(let m of u)this.addList([...p,...m])}label(){return[this.map.keys()].join("|")}}d.Builder=c})(L||(L={}));function Tn(r,i){if(r.size<i.size)return!1;for(let e of i)if(!r.has(e))return!1;return!0}var zi=Symbol("depsLabel"),Xe=class{constructor(i,e){this.target=i;let t=[...new Set(e)].sort();this.deps=new Set(t),this[zi]=t.join("&"),this.label=`${this.target}:${this[zi]}`}};zi;var Ki=class{constructor(i){this.rom=i;this.tiles=new H(i=>Ha(this.rom,i));this.bosses=new H(i=>new Os(i));this.statues=new Map;this.flags=new H(i=>new H(e=>new H(t=>new Hs(i,e,t))));this.meets=new H(i=>new H(e=>new qs(i,e)));this._seamless=new H(i=>new Ws(i))}tile(i){return i&4?void 0:this.tiles.get(i)}boss(i,e){return e?this.rage||(this.rage=new Us(i,this.rom.flags.RageSkip.id)):this.bosses.get(i)}statue(i){let e=L.label(i),t=this.statues.get(e);return t||this.statues.set(e,t=new Ds(i)),t}flag(i,e,t){return i||(i=qa),this.flags.get(i).get(e).get(t)}meet(i,e){return this.meets.get(i).get(e)}seamless(i){return this._seamless.get(i)}label(i,e){return i.label?i.label(e):"Terrain"}},j;(f=>{f.FLY=2,f.BLOCKED=4,f.SLOPE=32,f.PAIN=128,f.BITS=166,f.SWAMP=256,f.BARRIER=512,f.SLOPE8=1024,f.SLOPE9=2048,f.DOLPHIN=4096;function d(u,h){return u.label?.(h)??"Terrain"}f.label=d})(j||(j={}));var Ws=class{constructor(i){this._delegate=i;this.enter=i.enter,this.exit=i.exit}label(i){return`Seamless(${j.label(this._delegate,i)})`}},Wt=class{constructor(i,e=L.OPEN){this.enter=i;this.exit=[[15,e]]}get kind(){return"Simple"}label(i){let e=[];return L.isOpen(this.enter)||e.push(`enter = ${Le(this.enter,i)}`),L.isOpen(this.exit[0][1])||e.push(`exit = ${Le(this.exit[0][1],i)}`),`${this.kind}(${e.join(", ")})`}},Vi=class{constructor(i,e,t=4){this.enter=i;this.exit=e?[[15&~t,e],[t,L.OPEN]]:[[15,L.OPEN]]}get kind(){return"South"}label(i){if(this.exit.length===1)return Wt.prototype.label.call(this,i);let e=[];return L.isOpen(this.enter)||e.push(`enter = ${Le(this.enter,i)}`),L.isOpen(this.exit[0][1])||e.push(`other = ${Le(this.exit[0][1],i)}`),L.isOpen(this.exit[1][1])||e.push(`south = ${Le(this.exit[1][1],i)}`),`${this.kind}(${e.join(", ")})`}};function Ha(r,i){let e=L.OPEN,t,s=4;return i&j.DOLPHIN&&i&j.FLY?(i&j.SLOPE&&(t=r.flags.ClimbWaterfall.r),e=[[r.flags.CurrentlyRidingDolphin.c],[r.flags.Flight.c]]):(i&j.SLOPE9?t=r.flags.ClimbSlope9.r:i&j.SLOPE8?t=r.flags.ClimbSlope8.r:i&j.SLOPE&&(t=r.flags.ClimbSlope10.r),i&j.FLY&&(e=r.flags.Flight.r)),i&j.SWAMP&&(e=e.map(n=>[r.flags.TravelSwamp.c,...n])),i&j.PAIN&&(e=e.map(n=>[r.flags.CrossPain.c,...n])),i&j.BARRIER&&(e=e.map(n=>[r.flags.ShootingStatue.c,...n]),t=r.flags.ShootingStatueSouth.r,s=1),new Vi(e,t,s)}var Os=class extends Wt{constructor(e){super(L.OPEN,[[e]]);this._flag=e}get kind(){return"Boss"}},Ds=class extends Vi{constructor(e){super(L.OPEN,e);this._req=e}get kind(){return"Statue"}},Us=class{constructor(i,e){this._rageFlag=i;this._rageSkipFlag=e;this.enter=L.OPEN;this.exit=[[11,[[i],[e]]],[4,L.OPEN]]}label(){return"Rage"}},Hs=class extends Wt{constructor(i,e,t){if(i.exit.length!==1||t.exit.length!==1)throw console.error(i,t),new Error("bad flag");let s=[[e]],n=e>=0?L.meet(t.enter,s):t.enter,o=e>=0?L.meet(t.exit[0][1],s):t.exit[0][1];super(L.or(i.enter,n),L.or(i.exit[0][1],o))}get kind(){return"Flag"}},qa=new Wt(L.CLOSED,L.CLOSED);function Rn(r){let i=[];for(let e=0;e<r.exit.length;e++)for(let t=0;t<4;t++)r.exit[e][0]&1<<t&&(i[t]=e);for(let e=0;e<4;e++)if(i[e]==null)throw new Error(`Bad terrain: ${r.exit.map(t=>t[0]).join(",")}`);return i}var qs=class{constructor(i,e){this.left=i;this.right=e;let t=Rn(i),s=Rn(e),n=new Set,o=[];for(let a=0;a<4;a++)n.add(t[a]<<2|s[a]);for(let a of n){let[l,c]=i.exit[a>>2],[d,f]=e.exit[a&3];o.push([l&d,L.meet(c,f)])}this.enter=L.meet(i.enter,e.enter),this.exit=o}get kind(){return"Terrain"}label(i){if(this.exit.length===1)return Wt.prototype.label.call(this,i);let e=[];L.isOpen(this.enter)||e.push(`enter = ${Le(this.enter,i)}`);for(let[t,s]of this.exit){let n=[t&1?"N":"",t&2?"W":"",t&4?"S":"",t&8?"E":""].join("");e.push(`exit${n} = ${Le(s,i)}`)}return`${this.kind}(${e.join(", ")})`}};function Le(r,i){let e=[...r],t=e.map(s=>he.isEmpty(s)?"open":[...s].map(n=>i.flags[n]?.debug).join(" & ")).join(") | (");return e.length>1?`(${t})`:e.length?t:"never"}j.debugLabel=Le;typeof window=="object"&&(window.debugLabel=Le);var ji=class{constructor(i,e){this.rom=i;this.world=e;this.element=document.createElement("div"),this.element.addEventListener("click",t=>this.click(t)),this.element.addEventListener("mousemove",t=>this.move(t)),this.renderArea(0)}click(i){let e=gt.getData(i);if(!e)return;let t=this.world.tiles.get(e.tile);if(t!=null){if(t.area===this.area){let s=t.exit!=null?this.world.tiles.get(t.exit):null;s&&s.area!==this.area&&(t=s)}t.area&&t.area!==this.area&&this.renderArea(t.area.id)}}move(i){let e=gt.getData(i);if(!e)return;let t=this.world.tiles.get(e.tile);if(t==null)return;let s=t.exit!=null&&!this.area.tiles.has(t.exit);e.target.element.style.cursor=s?"pointer":"default"}clear(){for(;this.element.childNodes.length;)this.element.childNodes[0].remove()}renderArea(i){this.clear();let e=document.createElement("select");e.appendChild(document.createElement("option")),e.children[0].textContent="Select location";for(let s of this.rom.locations){if(!s.used)continue;let n=this.world.locations[s.id]?.areas[Symbol.iterator]().next().value;if(n==null)continue;let o=document.createElement("option");o.textContent=`${ee(s.id)} ${s.name}`,o.value=String(n.id),e.appendChild(o)}e.addEventListener("change",()=>{this.renderArea(Number(e.value))}),this.element.appendChild(e),this.area=this.world.areas[i];let t=document.createElement("pre");t.textContent=`Area ${i}
Locations: ${this.area.locations.size}
Tiles: ${this.area.tiles.size}
Terrain: ${j.label(this.area.terrain,this.rom)}
Checks:
  ${[...new Set(this.area.checks.map(([s,n])=>`${s.debug}: ${Le(n,this.rom)}`))].join(`
  `)}
Routes:
  ${Le(this.area.routes,this.rom).split(" | ").join(`
  `).replace(/[()]/g,"")}`,this.element.appendChild(t);for(let s of this.area.locations){let n=this.rom.locations[s],o=document.createElement("h2");o.textContent=n.name,this.element.appendChild(o),this.element.appendChild(this.makeLocation(this.area,n))}}makeLocation(i,e){let t=new gt(this.rom,e.id);t.maxWidth=574,t.overlayShade(1426063360);for(let s of this.world.locations[e.id].areas)s!==i&&t.overlayArea(s.tiles,4294901760);return t.overlayArea(i.tiles,4278255615,0),t.render(),t.element}};var di;(o=>{function r(a){switch(a){case 0:return"N";case 1:return"W";case 2:return"S";case 3:return"E"}throw new Error(`Bad direction: ${a}`)}o.name=r;function i(){return[0,1,2,3]}o.all=i,o.North=0,o.West=1,o.South=2,o.East=3})(di||(di={}));var ze;(s=>{function r(n,o){return{*[Symbol.iterator](){let{x:a,y:l}=o;a+=8;for(let c of[-16,0]){let d=a+c;for(let f of[-16,0]){let u=l+f;yield V.from(n,{x:d,y:u})}}}}}s.trigger=r;function i(n,...o){let a=new Set,l=[...n];for(let[c,d]of o)for(let f of l)a.add(V.add(f,c,d));return a}s.adjust=i;function e(n){let o=[];for(let a=0;a<240;a++)o.push(n&-256|a);return o}s.screen=e;function t(n,...o){let a=new Set,l=[...n];for(let c of o)for(let d of l)a.add(d&65535|c.id<<16);return a}s.atLocation=t})(ze||(ze={}));function Ot(r){return r}(e=>{e.from=(t,s)=>typeof t=="number"||!s?Number(t)>>>8:t.id<<8|s.y>>>8<<4|s.x>>>8;function i(t){return t>>>8}e.fromTile=i})(Ot||(Ot={}));function Se(r){return r}(e=>{function r(t,s){return t*(1<<24)+s}e.of=r;function i(t){return[Math.floor(t/(1<<24)),t%(1<<24)]}e.split=i})(Se||(Se={}));var[]=[ee],Yi=class{constructor(i,e,t=!1){this.rom=i;this.flagset=e;this.tracker=t;this.terrainFactory=new Ki(this.rom);this.terrains=new Map;this.checks=new H(()=>new Set);this.slots=new Map;this.items=new Map;this.itemUses=new H(()=>[]);this.exits=new Map;this.exitSet=new Set;this.seamlessExits=new Set;this.tiles=new Ge;this.neighbors=new H(()=>0);this.routes=new H(()=>new L.Builder);this.routeEdges=new H(()=>new ri);this.requirementMap=new H(i=>new L.Builder(i));this.limeTreeEntranceLocation=-1;for(let s of i.items)for(let n of s.itemUseData)n.kind==="expect"?this.itemUses.get(n.want).push([s,n]):n.kind==="location"&&this.itemUses.get(~n.want).push([s,n]);this.aliases=new Map([[i.flags.ChangeAkahana,i.flags.Change],[i.flags.ChangeSoldier,i.flags.Change],[i.flags.ChangeStom,i.flags.Change],[i.flags.ChangeWoman,i.flags.Change],[i.flags.ParalyzedKensuInDanceHall,i.flags.Paralysis],[i.flags.ParalyzedKensuInTavern,i.flags.Paralysis]]),e.assumeTriggerGlitch()&&(this.seamlessExits.add=()=>this.seamlessExits);for(let s of i.locations)this.processLocation(s);this.addExtraChecks(),this.unionNeighbors(),this.recordExits(),this.buildNeighbors(),this.addAllRoutes(),this.consolidateChecks(),this.buildRequirementMap()}addExtraChecks(){let{locations:{Leaf_ToolShop:i,MezameShrine:e,Oak:t,Shyron_ToolShop:s},flags:{AbleToRideDolphin:n,BallOfFire:o,BallOfThunder:a,BallOfWater:l,BallOfWind:c,Barrier:d,BlizzardBracelet:f,BowOfMoon:u,BowOfSun:h,BreakStone:p,BreakIce:m,BreakIron:g,BrokenStatue:y,BuyHealing:w,BuyWarp:b,ClimbWaterfall:x,ClimbSlope8:E,ClimbSlope9:C,ClimbSlope10:B,CrossPain:S,CurrentlyRidingDolphin:M,Flight:G,FlameBracelet:Z,FormBridge:Q,GasMask:_,GlowingLamp:se,InjuredDolphin:K,LeadingChild:ue,LeatherBoots:O,Money:P,OpenedCrypt:Ce,RabbitBoots:Ee,Refresh:z,RepairedStatue:pe,RescuedChild:fe,ShellFlute:We,ShieldRing:_e,ShootingStatue:we,ShootingStatueSouth:Te,StormBracelet:oe,Sword:vt,SwordOfFire:Re,SwordOfThunder:$e,SwordOfWater:Oe,SwordOfWind:ct,TornadoBracelet:Ht,TravelSwamp:je,TriggerSkip:N,UsedBowOfMoon:et,UsedBowOfSun:Me,WildWarp:tt},items:{MedicalHerb:q,WarpBoots:Y}}=this.rom,W=this.entrance(e),ye=this.entrance(t);this.addCheck([W],wt(u,h),[Ce.id]),this.addCheck([W],u.r,[et.id]),this.addCheck([W],h.r,[Me.id]),this.addCheck([W],wt(n,We),[M.id]),this.addCheck([ye],wt(ue),[fe.id]),this.addItemCheck([W],wt(se,y),pe.id,{lossy:!0,unique:!0});for(let xe of this.rom.shops){if(xe.location===i.id||xe.location===s.id||!xe.used||xe.type!==1)continue;let kt=[xe.location<<16|136];for(let Ct of xe.contents)Ct===q.id?this.addCheck(kt,P.r,[w.id]):Ct===Y.id&&this.addCheck(kt,P.r,[b.id])}let De=ct.r,Ie=Re.r,Ue=Oe.r,it=$e.r;if(!this.flagset.orbsOptional()){let xe=ot(c,Ht),kt=ot(o,Z),Ct=ot(l,f),es=ot(a,oe);if(De=L.meet(De,xe),Ie=L.meet(Ie,kt),Ue=L.meet(Ue,Ct),it=L.meet(it,es),this.flagset.assumeSwordChargeGlitch()){let Et=function(qt){return ts.map(ft=>ft[0]===qt.c?ft:[qt.c,...ft])},ts=L.or(De,Ie,Ue,it);De=Et(ct),Ie=Et(Re),Ue=Et(Oe),it=Et($e)}}this.addCheck([W],De,[p.id]),this.addCheck([W],Ie,[m.id]),this.addCheck([W],Ue,[Q.id]),this.addCheck([W],it,[g.id]),this.addCheck([W],ot(ct,Re,Oe,$e),[vt.id]),this.addCheck([W],G.r,[x.id,B.id]),this.addCheck([W],ot(G,Ee),[E.id]),this.addCheck([W],ot(G,Ee),[C.id]),this.addCheck([W],d.r,[we.id,Te.id]),this.addCheck([W],_.r,[je.id]);let hi=this.flagset.changeGasMaskToHazmatSuit()?_:O;if(this.addCheck([W],ot(G,Ee,hi),[S.id]),this.flagset.leatherBootsGiveSpeed()&&this.addCheck([W],O.r,[E.id]),this.flagset.assumeGhettoFlight()&&this.addCheck([W],wt(M,Ee),[x.id]),this.flagset.fogLampNotRequired()){let xe=this.flagset.requireHealedDolphinToRide();this.addCheck([W],xe?K.r:[[]],[n.id])}this.flagset.guaranteeBarrier()||this.addCheck([W],[[P.c,w.c],[P.c,_e.c],[P.c,z.c]],[we.id,Te.id]),this.flagset.assumeFlightStatueSkip()&&this.addCheck([W],[[P.c,G.c]],[we.id]),this.flagset.guaranteeGasMask()||this.addCheck([W],[[P.c,w.c],[P.c,z.c]],[je.id,S.id]),this.flagset.assumeWildWarp()&&this.addCheck([W],L.OPEN,[tt.id]),this.flagset.assumeTriggerGlitch()&&(this.addCheck([W],L.OPEN,[N.id]),this.addCheck([W],N.r,[S.id,E.id,C.id]))}addExtraRoutes(){let{flags:{BuyWarp:i,SwordOfThunder:e,Teleport:t,WildWarp:s},locations:{MezameShrine:n}}=this.rom;if(this.addRoute(new Xe(this.entrance(n),[])),this.flagset.teleportOnThunderSword()){let o=this.rom.townWarp.thunderSwordWarp;this.addRoute(new Xe(this.entrance(o[0],o[1]&31),[e.c,i.c])),this.addRoute(new Xe(this.entrance(o[0],o[1]&31),[e.c,t.c]))}if(this.flagset.assumeWildWarp())for(let o of this.rom.wildWarp.locations){if(o===this.rom.locations.UndergroundChannel.id)continue;let a=this.entrance(o),l=this.terrains.get(a)??Ye("bad entrance");for(let c of l.enter)this.addRoute(new Xe(a,[s.c,...c]))}}consolidateChecks(){for(let[i,e]of this.checks){let t=this.tiles.find(i);if(i!==t){for(let s of e)this.checks.get(t).add(s);this.checks.delete(i)}}}buildRequirementMap(){for(let[e,t]of this.checks)for(let{checks:s,requirement:n}of t)for(let o of s){let a=this.requirementMap.get(o);for(let l of n)for(let c of this.routes.get(e)||[])a.addList([...l,...c])}if(!Mn)return;let i=[];for(let[e,t]of this.requirementMap){let s=n=>this.rom.flags[n].name;for(let n of t)i.push(`${s(e)}: ${[...n].map(s).join(" & ")}
`)}i.sort((e,t)=>e<t?-1:e>t?1:0),console.log(i.join(""))}getLocationList(i="Crystalis"){let e=Mn?t=>t.debug:t=>t.name;return{worldName:i,requirements:this.requirementMap,items:this.items,slots:this.slots,checkName:t=>e(this.rom.flags[t]),prefill:t=>{let{Crystalis:s,MesiaInTower:n,LeafElder:o}=this.rom.flags,a=new Map([[n.id,s.id]]);return this.flagset.guaranteeSword()&&a.set(o.id,512|t.nextInt(4)),a}}}processLocation(i){!i.used||(this.processLocationTiles(i),this.processLocationSpawns(i),this.processLocationItemUses(i))}unionNeighbors(){for(let[i,e]of this.terrains){let t=V.add(i,0,1);this.terrains.get(t)===e&&this.tiles.union([i,t]);let s=V.add(i,1,0);this.terrains.get(s)===e&&this.tiles.union([i,s])}}addAllRoutes(){this.addExtraRoutes();for(let[i,e]of this.neighbors){let[t,s]=Se.split(i),n=this.terrains.get(t),o=this.terrains.get(s);if(!n||!o)throw new Error(`missing terrain ${ee(n?t:s)}`);for(let[a,l]of n.exit)if(!!(a&e))for(let c of l)for(let d of o.enter)this.addRoute(new Xe(s,[...c,...d]),t)}if(typeof document=="object"){let i=document.getElementById("debug");i&&i.appendChild(new ji(this.rom,this.getWorldData()).element)}}getWorldData(){let i=0,e=new H(()=>({})),t=le(256,()=>({areas:new Set,tiles:new Set})),s=[];for(let n of this.tiles.sets()){let o=this.tiles.find(he.first(n)),a=this.terrains.get(o);if(!a)continue;let l=this.routes.has(o)?L.freeze(this.routes.get(o)):[];if(!l.length)continue;let c={checks:[],id:i++,locations:new Set,routes:l,terrain:a,tiles:new Set};s.push(c);for(let d of n){let f=d>>>16;c.locations.add(f),c.tiles.add(d),t[f].areas.add(c),t[f].tiles.add(d),e.get(d).area=c}}for(let[n,o]of this.exits)e.has(n)&&(e.get(n).exit=o);for(let[n,o]of this.checks){let a=e.get(n).area;if(!!a)for(let{checks:l,requirement:c}of o)for(let d of l){let f=this.rom.flags[d]||Ye();a.checks.push([f,c])}}return{tiles:e,areas:s,locations:t}}addRoute(i,e){if(e!=null){this.routeEdges.get(e).add(i);for(let a of this.routes.get(e))this.addRoute(new Xe(i.target,[...a,...i.deps]));return}let t=new ri,s=new ri,n=i;t.add(n);let o=t[Symbol.iterator]();for(;;){let{value:a,done:l}=o.next();if(l)return;s.add(a),t.delete(a);let c=new ri,d=a.target;if(this.routes.get(d).addRoute(a))for(let u of this.routeEdges.get(d))c.add(new Xe(u.target,[...a.deps,...u.deps]));for(let u of c)s.has(u)||(t.delete(u),t.add(u))}}recordExits(){for(let[i,e]of this.exits)this.exitSet.add(Se.of(this.tiles.find(i),this.tiles.find(e)));for(let i of this.exitSet){let[e,t]=Se.split(i);if(this.terrains.get(e)!==this.terrains.get(t))continue;let s=Se.of(t,e);this.exitSet.has(s)&&(this.tiles.union([e,t]),this.exitSet.delete(i),this.exitSet.delete(s))}}buildNeighbors(){for(let[i,e]of this.terrains){if(!e)continue;let t=V.add(i,1,0),s=this.terrains.get(t);s&&s!==e&&this.handleAdjacentNeighbors(i,t,di.North);let n=V.add(i,0,1),o=this.terrains.get(n);o&&o!==e&&this.handleAdjacentNeighbors(i,n,di.West)}for(let i of this.exitSet){let[e,t]=Se.split(i);if(!this.terrains.has(e)||!this.terrains.has(t))continue;let s=Se.of(this.tiles.find(e),this.tiles.find(t));this.neighbors.set(s,this.neighbors.get(s)|1)}}handleAdjacentNeighbors(i,e,t){let s=this.tiles.find(i),n=this.tiles.find(e);if(!this.seamlessExits.has(e)){let o=Se.of(n,s);this.neighbors.set(o,this.neighbors.get(o)|1<<t)}if(!this.seamlessExits.has(i)){let o=t^2,a=Se.of(s,n);this.neighbors.set(a,this.neighbors.get(a)|1<<o)}}processLocationTiles(i){let e=new Map,t=new Set,s=(i.id&248)===88;for(let c of i.spawns)if(c.isWall())e.set(Ot.from(i,c),c.id&3);else if(c.isMonster()&&c.id===63){let d=Ot.from(i,c)<<8|c.yt<<4;for(let f=4;f<=11;f++)for(let u=-3;u<=3;u++)t.add(V.add(d,u,f))}let n=this.rom.tilesets[i.tileset],o=this.rom.tileEffects[i.tileEffects-179],a=c=>{let d=i.screens[(c&61440)>>>12][(c&3840)>>>8];return o.effects[this.rom.screens[d].tiles[c&255]]},l=(c,d,f)=>{if(c&=j.BITS,i.id===26&&(c|=j.SWAMP),(i.id===96||i.id===104)&&(c|=j.DOLPHIN),i.id===100&&(d&61680)<4144&&(c|=j.DOLPHIN),f&&(c|=j.BARRIER),!(c&j.DOLPHIN)&&c&j.SLOPE){let u=d,h=0;for(;a(u)&j.SLOPE;)u=V.add(u,1,0),h++;h<6?c&=~j.SLOPE:h<9?c|=j.SLOPE8:h<10&&(c|=j.SLOPE9)}if(c&j.PAIN){for(let u of[[0,1],[1,0],[0,-1],[-1,0]])if(!(a(V.add(d,...u))&(j.PAIN|j.FLY))){c&=~j.PAIN;break}}return this.terrainFactory.tile(c)};for(let c=0,d=i.height;c<d;c++){let f=i.screens[c],u=i.id<<8|c<<4;for(let h=0,p=i.width;h<p;h++){let m=this.rom.screens[f[h]],g=u|h,y=g&255,w=e.get(g),b=s?this.rom.flags.AlwaysTrue.id:w!=null?this.wallCapability(w):i.flags.find(C=>C.screen===y)?.flag,x=i.pits.find(C=>C.fromScreen===g);x&&this.exits.set(g<<8|136,x.toScreen<<8|136);let E=this.rom.flags[b]?.logic??{};for(let C=0;C<240;C++){let B=g<<8|C,S=m.tiles[C];E.assumeTrue&&S<32&&(S=n.alternates[S]);let M=i.isShop()?0:o.effects[S],G=t.has(B),Z=l(M,B,G);if(S<32&&n.alternates[S]!==S&&b!=null&&!E.assumeTrue&&!E.assumeFalse){let Q=l(o.effects[n.alternates[S]],B,G);Q&&(Z=this.terrainFactory.flag(Z,E.track?b:-1,Q))}Z&&this.terrains.set(B,Z)}}}for(let c of i.exits){let{dest:d,entrance:f}=c,u=V.from(i,c),h;if(c.isSeamless()){h=u&65535|d<<16;let p=V.from(i,c);this.seamlessExits.add(p);let m=this.terrains.get(p);m&&this.terrains.set(p,this.terrainFactory.seamless(m))}else h=this.entrance(this.rom.locations[d],f&31);this.exits.set(u,h),d===this.rom.locations.LimeTreeLake.id&&this.rom.locations.LimeTreeLake.entrances[f].y>160&&(this.limeTreeEntranceLocation=i.id)}}processLocationSpawns(i){for(let e of i.spawns)e.isTrigger()?this.processTrigger(i,e):e.isNpc()?this.processNpc(i,e):e.isBoss()?this.processBoss(i,e):e.isChest()?this.processChest(i,e):e.isMonster()?this.processMonster(i,e):e.type===3&&e.id===224&&this.processKeyUse(ze.screen(V.from(i,e)),this.rom.flags.UsedWindmillKey.r)}processTrigger(i,e){let t=this.rom.trigger(e.id);if(!t)throw new Error(`Missing trigger ${e.id.toString(16)}`);let s=this.filterRequirements(t.conditions),n=this.filterAntiRequirements(t.conditions),o=V.from(i,e),a=ze.trigger(i,e),l=[];for(let c of t.flags){let d=this.flag(c);d?.logic.track&&l.push(d.id)}switch(l.length&&this.addCheck(a,s,l),t.message.action){case 25:t.id===134&&!this.flagset.assumeRabbitSkip()?a=ze.adjust(a,[0,-1],[0,1]):t.id===186&&!this.flagset.assumeTeleportSkip()&&!this.flagset.disableTeleportSkip()&&(a=ze.atLocation(a,this.rom.locations.CordelPlainEast,this.rom.locations.CordelPlainWest)),this.flagset.assumeTriggerGlitch()&&(n=L.or(n,this.rom.flags.TriggerSkip.r)),this.addTerrain(a,this.terrainFactory.statue(n));break;case 29:this.addBossCheck(a,this.rom.bosses.Mado1,s);break;case 8:case 11:case 12:case 13:case 15:this.addItemGrantChecks(a,s,t.id);break;case 24:{let c=this.flagset.chargeShotsOnly()?L.meet(s,wt(this.rom.flags.WarpBoots)):s;this.addItemCheck(a,c,this.rom.flags.StomFightReward.id,{lossy:!0,unique:!0});break}case 30:this.addItemCheck(a,s,this.rom.flags.MesiaInTower.id,{lossy:!0,unique:!0});break;case 31:this.handleBoat(o,i,s);break;case 27:i===this.rom.locations.Portoa_PalaceEntrance&&(a=ze.adjust(a,[-2,0]),n=this.rom.flags.TalkedToFortuneTeller.r),this.handleMovingGuard(a,i,n);break}for(let[c,d]of this.itemUses.get(e.type<<8|e.id))this.processItemUse([V.from(i,e)],L.OPEN,c,d)}processNpc(i,e){let t=this.rom.npcs[e.id];if(!t||!t.used)throw new Error(`Unknown npc: ${ee(e.id)}`);let s=t.spawnConditions.get(i.id)||[],n=this.filterRequirements(s),o=V.from(i,e),a=[this.terrains.has(o)?o:this.walkableNeighbor(o)??o];for(let[d,f]of this.itemUses.get(e.type<<8|e.id))this.processItemUse(a,n,d,f);if(t===this.rom.npcs.SaberaDisguisedAsMesia&&this.addBossCheck(a,this.rom.bosses.Sabera1,n),t.data[2]&4&&!this.flagset.assumeStatueGlitch()){let d;d=this.filterAntiRequirements(s),t===this.rom.npcs.Rage?(a=ze.adjust(a,[2,-1],[2,0],[2,1],[2,2]),a=ze.adjust(a,[0,-6],[0,-2],[0,2],[0,6])):t===this.rom.npcs.PortoaThroneRoomBackDoorGuard?d=L.or(this.rom.flags.MesiaRecording.r,wt(this.rom.flags.Paralysis,this.rom.flags.QueenNotInThroneRoom)):t===this.rom.npcs.SoldierGuard&&(d=void 0),d&&this.addTerrain(a,this.terrainFactory.statue(d))}if(t===this.rom.npcs.FortuneTeller&&(a=ze.adjust(a,[0,0],[2,0])),L.isClosed(n))return;let[[...l]]=n;for(let d of t.globalDialogs){let f=this.flag(~d.condition),u=this.flag(d.condition);if(f?.logic.assumeFalse||u?.logic.assumeTrue)return;f?.logic.track&&l.push(f.id)}let c=t.localDialogs.get(i.id)??t.localDialogs.get(-1)??[];for(let d of c){let f=[...l],u=this.flag(d.condition),h=this.flag(~d.condition);if(u?.logic.track&&f.push(u.id),!u?.logic.assumeFalse&&!h?.logic.assumeTrue&&this.processDialog(a,t,f,d),u?.logic.assumeTrue||h?.logic.assumeFalse)break;h?.logic.track&&l.push(h.id)}}processDialog(i,e,t,s){this.addCheckFromFlags(i,[t],s.flags);let n={lossy:!0,unique:!0};switch(s.message.action){case 8:this.processKeyUse(i,[t]);break;case 20:this.addItemCheck(i,[t],this.rom.flags.SlimedKensu.id,n);break;case 16:this.addItemCheck(i,[t],this.rom.flags.AsinaInBackRoom.id,n);break;case 17:this.addItemCheck(i,[t],256|e.data[1],n);break;case 3:case 10:this.addItemCheck(i,[t],256|e.data[0],n);break;case 9:let o=e.data[1];o!==255&&this.addItemCheck(i,[t],256|o,n);break;case 25:this.addItemCheck(i,[t],this.rom.flags.AkahanaFluteOfLimeTradein.id,n);break;case 26:this.addItemCheck(i,[t],this.rom.flags.Rage.id,n);break;case 27:break}}processLocationItemUses(i){for(let[e,t]of this.itemUses.get(~i.id))this.processItemUse([this.entrance(i)],L.OPEN,e,t)}handleMovingGuard(i,e,t){if(this.flagset.assumeStatueGlitch())return;let s=[];for(let n of e.spawns.slice(0,2))if(n.isNpc()&&this.rom.npcs[n.id].isParalyzable()){s.push([this.rom.flags.Paralysis.c]);break}this.flagset.assumeTriggerGlitch()&&s.push([this.rom.flags.TriggerSkip.c]),this.addTerrain(i,this.terrainFactory.statue([...t,...s].map(ui)))}handleBoat(i,e,t){let s=this.walkableNeighbor(i);if(s==null)throw new Error("Could not find walkable neighbor.");let n=i>>8&240|i>>4&15,o=i>>4&240|i&15,a;for(let u of e.exits)u.yt===n&&u.xt<o&&(a=u);if(!a)throw new Error("Could not find boat exit");let l=this.rom.locations[a.dest];if(!l)throw new Error("Bad destination");let c=l.entrances[a.entrance],d=V.from(l,c),f=d;for(;;){f=V.add(f,0,-1);let u=this.walkableNeighbor(f);if(u!=null){let h={enter:L.freeze(t),exit:[[15,L.OPEN]]};this.addTerrain([s],h),this.exits.set(s,u),this.exitSet.add(Se.of(s,u)),this.exits.set(d,u),this.exitSet.add(Se.of(d,u)),this.terrains.set(d,this.terrainFactory.tile(0));return}}}addItemGrantChecks(i,e,t){let s=this.itemGrant(t),n=256|s;if(s==null)throw new Error(`missing item grant for ${t.toString(16)}`);let o=t>=128;this.addItemCheck(i,e,n,{lossy:!0,unique:!0,preventLoss:o})}addTerrain(i,e){for(let t of i){let s=this.terrains.get(t);s!=null&&this.terrains.set(t,this.terrainFactory.meet(s,e))}}addCheck(i,e,t){if(L.isClosed(e))return;let s={requirement:L.freeze(e),checks:t};for(let n of i)!this.terrains.has(n)||this.checks.get(n).add(s)}addItemCheck(i,e,t,s){this.addCheck(i,e,[t]),this.slots.set(t,s);let n=this.rom.itemGets[this.rom.slots[t&255]],o=this.rom.items[n.itemId],a=o?.unique,l=n.isLosable(),c=a||o===this.rom.items.OpelStatue,d=1;o===this.rom.items.SwordOfWind&&(d=5),o===this.rom.items.SwordOfFire&&(d=5),o===this.rom.items.SwordOfWater&&(d=10),o===this.rom.items.SwordOfThunder&&(d=15),o===this.rom.items.Flight&&(d=15),this.items.set(512|n.id,{unique:a,losable:l,preventLoss:c,weight:d})}addCheckFromFlags(i,e,t){let s=[];for(let n of t){let o=this.flag(n);o?.logic.track&&s.push(o.id)}s.length&&this.addCheck(i,e,s)}walkableNeighbor(i){if(this.isWalkable(i))return i;for(let e of[-1,1]){let t=V.add(i,e,0),s=V.add(i,0,e);if(this.isWalkable(t))return t;if(this.isWalkable(s))return s}}isWalkable(i){return!(this.getEffects(i)&j.BITS)}ensurePassable(i){return this.isWalkable(i)?i:this.walkableNeighbor(i)??i}getEffects(i){let e=this.rom.locations[i>>>16],t=this.rom.tileEffects[e.tileEffects-179].effects,s=e.screens[(i&61440)>>>12][(i&3840)>>>8];return t[this.rom.screens[s].tiles[i&255]]}processBoss(i,e){let{bosses:t}=this.rom,{Rage:s,StatueOfSun:n,StatueOfMoon:o}=t,a=e.id===201,l=e.id===202,c=e.id===195,d=c?s:a?o:l?n:t.fromLocation(i.id),f=V.from(i,e);if(!d||!d.flag)throw new Error(`Bad boss at ${i.name}`);let u=f&-256,h=this.terrainFactory.boss(d.flag.id,c),p=le(240,m=>u|m);this.addTerrain(p,h),!a&&!l&&this.addBossCheck(p,d)}addBossCheck(i,e,t=L.OPEN){if(e.flag==null)throw new Error(`Expected a flag: ${e}`);let s=L.meet(t,this.bossRequirements(e));e===this.rom.bosses.Draygon2?this.addCheck(i,s,[e.flag.id]):this.addItemCheck(i,s,e.flag.id,{lossy:!1,unique:!0})}processChest(i,e){if(this.rom.slots[e.id]>=112)return;let t=256|e.id,s=this.rom.slots[e.id];if(s>=112)return;let n=this.rom.items[s],o=this.flagset.preserveUniqueChecks()?!!n?.unique:!0;this.addItemCheck([V.from(i,e)],L.OPEN,t,{lossy:!1,unique:o})}processMonster(i,e){let t=this.rom.objects[e.monsterId];if(!(t instanceof ht))return;let{Money:s,RageSkip:n,Sword:o,SwordOfWind:a,SwordOfFire:l,SwordOfWater:c,SwordOfThunder:d}=this.rom.flags;if(i.id===this.limeTreeEntranceLocation&&t.isBird()&&this.flagset.assumeRageSkip()&&this.addCheck([this.entrance(i)],L.OPEN,[n.id]),!t.goldDrop)return;let f=[V.from(i,e)];if(!this.flagset.guaranteeMatchingSword()){this.addCheck(f,o.r,[s.id]);return}let u=[a,l,c,d].filter((h,p)=>t.elements&1<<p);this.addCheck(f,ot(...u),[s.id])}processItemUse(i,e,t,s){i=new Set([...i].map(a=>this.walkableNeighbor(a)??a));let n=[[512|t.id]];t.itemUseData.some(a=>a.tradeNpc()===this.rom.npcs.Aryllis.id)&&n[0].push(this.rom.flags.Change.c),t===this.rom.items.MedicalHerb&&(n[0][0]=this.rom.flags.BuyHealing.c);let o=L.meet(e,n);switch(this.addCheckFromFlags(i,o,s.flags),s.message.action){case 16:this.processKeyUse(i,o);break;case 8:case 11:case 12:case 13:case 15:case 28:this.addItemGrantChecks(i,o,t.id);break;case 2:this.addItemCheck(i,o,256|this.rom.npcs[s.want&255].data[1],{lossy:!0,unique:!0});break}}processKeyUse(i,e){let[t,...s]=new Set([...i].map(a=>Ot.from(a)));if(t==null||s.length)throw new Error("Expected one screen");let o=this.rom.locations[t>>>8].flags.find(a=>a.screen===(t&255));if(o==null)throw new Error("Expected flag on screen");this.addCheck(i,e,[o.flag])}bossRequirements(i){if(i===this.rom.bosses.Rage)return this.tracker&&this.flagset.randomizeTrades()?this.rom.flags.Sword.r:[[this.rom.npcs.Rage.dialog()[0].condition]];let e=i.object,t=new L.Builder;if(this.tracker&&this.flagset.shuffleBossElements()||!this.flagset.guaranteeMatchingSword())t.addAll(this.rom.flags.Sword.r);else{let n=this.flagset.guaranteeSwordMagic()?i.swordLevel:1,o=this.rom.objects[e];for(let a=0;a<4;a++)o.isVulnerable(a)&&t.addAll(this.swordRequirement(a,n))}let s=[];if(i.npc!=null&&i.location!=null){let n=i.npc.spawns(this.rom.locations[i.location]);s.push(...this.filterRequirements(n)[0])}return i===this.rom.bosses.Insect?s.push(this.rom.flags.InsectFlute.c,this.rom.flags.GasMask.c):i===this.rom.bosses.Draygon2&&s.push(this.rom.flags.BowOfTruth.c),this.flagset.guaranteeRefresh()&&s.push(this.rom.flags.Refresh.c),t.restrict([s]),L.freeze(t)}swordRequirement(i,e){let t=[this.rom.flags.SwordOfWind,this.rom.flags.SwordOfFire,this.rom.flags.SwordOfWater,this.rom.flags.SwordOfThunder][i];if(e===1)return t.r;let s=[[this.rom.flags.BallOfWind,this.rom.flags.TornadoBracelet],[this.rom.flags.BallOfFire,this.rom.flags.FlameBracelet],[this.rom.flags.BallOfWater,this.rom.flags.BlizzardBracelet],[this.rom.flags.BallOfThunder,this.rom.flags.StormBracelet]][i];return e===3?wt(t,...s):s.map(n=>[t.c,n.c])}itemGrant(i){for(let[e,t]of this.rom.itemGets.actionGrants)if(e===i)return t;throw new Error(`Could not find item grant ${i.toString(16)}`)}filterRequirements(i){let e=[];for(let t of i)if(t<0){if(this.flag(~t)?.logic?.assumeTrue)return L.CLOSED}else{let s=this.flag(t);if(s?.logic.assumeFalse)return L.CLOSED;s?.logic.track&&e.push(s.id)}return[e]}filterAntiRequirements(i){let e=[];for(let t of i)if(t>=0){if(this.flag(~t)?.logic?.assumeFalse)return L.OPEN}else{let s=this.flag(~t);if(s?.logic.assumeTrue)return L.OPEN;s?.logic.track&&e.push([s.id])}return e}flag(i){let e=i,t=this.rom.flags[e];return this.aliases.get(t)??t}entrance(i,e=0){return typeof i=="number"&&(i=this.rom.locations[i]),this.tiles.find(V.from(i,i.entrances[e]))}wallCapability(i){switch(i){case 0:return this.rom.flags.BreakStone.id;case 1:return this.rom.flags.BreakIce.id;case 2:return this.rom.flags.FormBridge.id;case 3:return this.rom.flags.BreakIron.id;default:throw new Error(`bad wall type: ${i}`)}}};function wt(...r){return[r.map(i=>i.id)]}function ot(...r){return r.map(i=>[i.id])}var Mn=!1;function Fn(r){if(!r.compressedMapData){r.compressedMapData=!0;for(let i=0;i<3;i++)r.metascreens.renumber(256|i,320|i),delete r.screens[256|i]}}function Gn(r){if(!r.compressedMapData)throw new Error("Must compress first");let{grass:i,town:e,cave:t,dolphinCave:s,pyramid:n,river:o,sea:a,lime:l,mountain:c,shrine:d,desert:f,mountainRiver:u,swamp:h,house:p,fortress:m,labyrinth:g,iceCave:y,tower:w}=r.metatilesets;r.moveScreens([h],4),r.moveScreens([p],4),r.moveScreens([e],4),r.moveScreens([l],4),r.moveScreens([d],4),r.moveScreens([w],4),r.moveScreens([c,u],4),r.moveScreens([t,n,m,g,y],5);let[]=[a,s,i,o,f]}var[]=[mi];function An(r,i){let o=r.objects[159],a=r.objects[127],l=r.objects[141];l.used=!0,l.name="Crumbling Horizontal Platform",l.sfx=o.sfx,o.data.forEach((f,u)=>l.data[u]=f),l.data[3]=a.data[3];let c=new Set([127-80,141-80]),d=new Set([126-80,159-80]);for(let f of r.locations){if(!f.pits.length)continue;let u=i.nextInt(3)<1;for(let h of f.spawns)!h.isMonster()||(d.has(h.id)&&(h.id=(u?159:126)-80),c.has(h.id)&&(h.id=(u?141:127)-80))}}var[]=[ee];function Ke(r,i,...e){let t=i,s=0,n;for(;(n=e[s++])!=null;)if(typeof n=="number")r[t++]=n;else if(typeof n=="string")for(let o of n)r[t++]=o.charCodeAt(0);else throw new Error("bad data")}function Bn(r){r[107924]=255,r[118213]=168,r[106870]=255,r[108620]=255,r[120899]=160,r[122987]&=7,r[122991]&=7,r[122995]&=7,r[122999]&=7,r[123003]&=7,r[123012]&=7,r[123035]&=7,r[123065]&=7,r[123141]=47,r[123511]=0,r[123750]=64,r[123761]=0,r[123783]=0,r[123793]=0,Ke(r,106856,51,51),Ke(r,107662,51,51),r[105393]=112,r[105397]=113,r[105079]=114,r[105963]=115,r[106565]=116,r[106721]=117,r[106725]=118,r[106729]=119,r[108037]=120,r[107457]=121,r[107461]=122,r[107465]=123,Ke(r,123063,192,0),Ke(r,123690,192,0),Ke(r,123696,192,0),Ke(r,123702,192,0),Ke(r,123104,192,0),Ke(r,123110,192,0),r[116739]=0,Ke(r,116749,162,179),r[109190]=254,Ke(r,513749,37,41,57,58,59,71,60,62,132,70,178,66,180,65,255);for(let i of[231255,231287,231291,231319,231323,231387,231391,231419,231423,231451,231455,231525,231557,231561,231589])r[i]|=1;Ke(r,157038,"Simea",16,0,"     ",16,0)}function Pn(r,i){gl(r),Za(r),ja(r),Ya(r),Ja(r,i),Rl(r),Ml(r),Tl(r),Qa(r),_a(r),il(r),Xa(r),fl(r),sl(r),vl(r,i),yl(r),i.requireHealedDolphinToRide()&&ol(r),i.saharaRabbitsRequireTelepathy()&&al(r),cl(r,i),rl(r,i),nl(r),i.teleportOnThunderSword()?(ll(r),r.townWarp.thunderSwordWarp=[r.locations.Shyron.id,65]):dl(r),el(r),i.fogLampNotRequired()&&tl(r,i),wl(r),bl(r),hl(r),ul(r,i),i.disableRabbitSkip()&&ml(r),i.disableFlightStatueSkip()&&pl(r),Sl(r,i),$a(r),i.chargeShotsOnly()&&kl(r),i.orbsOptional()&&Cl(r),i.noBowMode()&&El(r),xl(r),i.hardcoreMode()&&Il(r),i.shouldUpdateHud()&&(Va(r),r.writeMonsterNames=!0),i.shouldColorSwordElements()&&Ka(r),i.hasStatTracking()&&za(r)}function za(r){for(let x=0;x<4;x++)r.patterns.set(5376,41+x,He.BLANK_TILES[x]);if(r.prg[143082]===40)return;r.prg[143082]=40;let t=143364,s=144132,n=128-1;for(let x=t;x<s;x++)r.prg[x]>=41&&r.prg[x]<=45&&(r.prg[x]+=n);let o=42,a=160;for(let x=t;x<s;x+=192)r.prg[x+a]=o;let l=new Map([[66,a]]),c=142469,d=142546;for(let x=c;x<d;x++)l.has(r.prg[x])&&(r.prg[x]=l.get(r.prg[x]));for(let x=t;x<s;x+=192)for(let E=123;E<=127;E++)r.prg[x+E]==o+n&&(r.prg[x+E]=o);let f=3,u=2,h=144376,p=144440;for(let x=h;x<p;x++){let E=r.prg[x];for(let C=0;C<8;C+=2){let B=f<<C,S=u<<C;(E&B)==B&&(E=E&(255^3<<C)|S)}r.prg[x]=E}let m=144440,g=4*f,y=[15,48,15,17];for(let x=0;x<y.length;x++)r.prg[m+g+x]=y[x];r.prg[m+u*4+3]=8;let w=145114,b=145222;for(let x=w;x<b;x+=4)r.prg[x]+=128}function Ka(r){function i(e,t){for(let s=0;s<=10;s++){if(s===8)continue;let n=r.patterns.get(s|e),o=[...n.pixels];for(let a=0;a<n.pixels.length;a++)n.pixels[a]=o[a^8],a>>>3===t&&(n.pixels[a]|=o[a])}}i(4240),i(4304),i(4368),i(4432),i(4496)}function Va(r){r.patterns.set(3584,0,He.HUD_LF),r.patterns.set(3584,1,He.HUD_PW),r.patterns.set(3584,2,He.HUD_EY),r.patterns.set(3584,3,He.HUD_LV),r.patterns.set(3584,4,He.HUD_DL),r.patterns.set(3584,5,He.HUD_MP),r.patterns.set(3584,6,He.HUD_EX),r.patterns.set(3584,26,He.HUD_CLOSE_LEFT),r.patterns.set(3584,27,He.HUD_CLOSE_RIGHT)}function ja(r){r.items.GlowingLamp.itemUseData[0].message.action=11}function Ya(r){let i=r.nextFreeTrigger("mezame");i.used=!0,i.conditions=[~r.flags.AlwaysTrue.id],i.message=ni.of({action:4}),i.flags=[r.flags.AlwaysTrue.id],r.locations.MezameShrine.spawns.push(J.of({tile:136,type:2,id:i.id}))}function Za(r){let i=new Set([129,139,144,153,166,167,168,169,170,171,172,r.allocatedTriggers.get("zombie warp")]);for(let e of r.locations)!e.used||(e.spawns=e.spawns.filter(t=>!t.isTrigger()||!i.has(t.id)))}function Ja(r,i){if(r.objects[16].atk=3,r.objects[17].atk=6,r.objects[18].atk=8,r.objects[24].atk=3,r.objects[19].atk=5,r.objects[25].atk=5,r.objects[23].atk=7,r.objects[26].atk=7,r.objects[20].atk=3,r.objects[21].atk=6,r.objects[22].atk=8,r.objects[28].atk=3,r.objects[29].atk=3,r.objects[30].atk=5,r.objects[27].atk=7,r.objects[31].atk=7,i.slowDownTornado()){let e=r.objects[18];e.speed=7,e.data[12]=96}}function Xa(r){let i=r.trigger(160);i.used=!0,i.conditions=[],i.flags=[],i.message=ni.of({part:0,index:0,action:21}),r.objects[94].data[13]=254,r.items.InsectFlute.itemUseData[0].flags=[r.flags.UsedInsectFlute.id]}function Qa(r){r.items.OpelStatue.selectedItemValue=0}function _a(r){for(let i of[96,100,101,102,103,104,105,106,107,108,109,111])for(let e of[0,1,2])r.patterns.set(i<<6,e,r.patterns.get(94<<6,e).pixels);r.objects[12].metasprite=169}function $a(r){for(let i in[4,5,8,9])r.tileEffects[188-179].effects[i]=24,r.tileEffects[181-179].effects[i]=24}function el(r){let{tiles:i}=r.screens[161];i[40]=159,i[55]=35,i[56]=35,i[57]=33,i[71]=141,i[72]=143,i[86]=153,i[87]=154,i[88]=140}function tl(r,i){let{flags:{AlwaysTrue:e,InjuredDolphin:t,FogLamp:s,KensuInCabin:n,ReturnedFogLamp:o},items:{ShellFlute:a},locations:{BoatHouse:l,Portoa_FishermanHouse:c},npcs:d}=r,f=i.requireHealedDolphinToRide();a.itemUseData[0].want=f?t.id:e.id,d.KensuInCabin.data[0]=103,d.KensuInCabin.localDialogs.get(-1)[0].message.action=10,d.KensuInCabin.localDialogs.get(-1)[0].flags=[],d.KensuInCabin.spawnConditions.set(l.id,[o.id,~n.id]),d.Fisherman.spawnConditions.set(c.id,[s.id]),r.itemGets[100].flags=[],r.itemGets[103].copyFrom(r.itemGets[100])}function il(r){for(let i of r.locations)for(let e of i.spawns)e.isChest()&&(e.timed=!1)}function sl(r){let i=r.locations;i.GoaFortress_Kelbesque.spawns[0].x-=16,i.GoaFortress_Zebu.spawns.splice(1,1),i.GoaFortress_Tornel.spawns.splice(2,1),i.GoaFortress_Asina.spawns.splice(2,1),i.GoaFortress_Kensu.spawns.splice(3,1),i.GoaFortress_Kensu.spawns.splice(1,1)}function rl(r,i){let{items:{AlarmFlute:e},flags:{TalkedToZebuStudent:t,ZebuStudent:s},locations:{MezameShrine:n,Leaf_StudentHouse:o,WaterfallCave4:a,ZebuCave:l},npcs:{WindmillGuard:c,Zebu:d}}=r;if(r.itemGets[49].inventoryRowStart=32,e.unique=!0,e.basePrice=0,i.zebuStudentGivesItem())c.data[1]=49;else{c.data[1]=255;let h=c.dialog(o)[0];h.condition=~t.id,h.flags.push(t.id),Ln(d.spawns(l),s.id,t.id),n.spawns.push(J.of({screen:0,tile:155,type:2,id:49})),n.spawns.push(J.of({screen:0,tile:149,type:2,id:73})),r.itemGets[73].itemId=r.items.MedicalHerb.id}let f=[[33,.72],[31,.9]],u=0;for(let h of r.shops)if(h.type===1)for(let p=0,m=h.contents.length;p<m;p++){if(h.contents[p]!==49)continue;let[g,y]=f[u++%f.length];h.contents[p]=g,r.shopDataTablesAddress&&(h.prices[p]=Math.round(h.prices[p]*y))}r.itemGets[91].itemId=29,a.spawn(25).id=16}function nl(r){let{flags:{Karmine:i,Mado1:e},npcs:{Brokahana:t}}=r,s=ar(t.localDialogs.get(-1))[0];if(s.condition!==~i.id)throw new Error(`Bad brokahana condition: ${s.condition}`);s.condition=~e.id}function ol(r){let{flags:{InjuredDolphin:i,ShellFlute:e},npcs:{Fisherman:t,FishermanDaughter:s}}=r;t.spawnConditions.set(214,[e.id,i.id]);let n=s.localDialogs.get(-1);n.unshift(n[0].clone()),n[0].condition=~i.id,n[1].condition=~e.id}function al(r){let{flags:{Telepathy:i},npcs:{Deo:e,SaharaBunny:t}}=r;t.globalDialogs.push(ds.of(~i.id,[26,18])),e.globalDialogs.push(ds.of(~i.id,[26,19]))}function ll(r){let{flags:{WarpShyron:i}}=r;r.itemGets[3].flags.push(i.id)}function dl(r){r.itemGets[3].acquisitionAction.action=22}function cl(r,i){if(i.leatherBootsGiveSpeed()){let e=r.items[47];if(e.menuName="Speed Boots",e.messageName="Speed Boots",i.changeGasMaskToHazmatSuit()){let t=r.items[41];t.menuName="Hazmat Suit",t.messageName="Hazmat Suit"}}for(let e=5;e<12;e+=2)r.items[e].menuName=r.items[e].menuName.replace("Ball","Orb"),r.items[e].messageName=r.items[e].messageName.replace("Ball","Orb")}function fl(r){let{flags:{BallOfWind:i,TornadoBracelet:e},npcs:{Tornel:t}}=r,s=t.localDialogs.get(33),n=[s[0],s[2],s[2].clone(),s[1]];n[1].condition=~e.id,n[2].condition=~i.id,n[3].condition=-1,t.localDialogs.set(33,n)}function hl(r){let{CordelPlainEast:i,KirisaMeadow:e,UndergroundChannel:t}=r.locations;for(let s of[i,e,t])for(let n of s.spawns)n.isChest()&&(n.data[2]|=32)}function ul(r,i){let{CordelPlainEast:e,CordelPlainWest:t}=r.locations;for(let s of e.spawns)(s.isChest()||i.disableTeleportSkip()&&s.isTrigger())&&t.spawns.push(s.clone())}function ml(r){for(let i of r.locations.MtSabreNorth_Main.spawns)i.isTrigger()&&i.id===134&&i.x===1856&&(i.x+=16,i.y+=16)}function pl(r){let i=r.hitboxes[r.objects.guardianStatueMissile.hitbox],e=r.hitboxes[6];r.objects.guardianStatueMissile.hitbox=e.id,e.x0=i.x0-6,e.w=i.w+12,e.y0=i.y0-2,e.h=i.h+4}function xl(r){r.messages.parts[32][15].text+=`
Item: [:ITEM:]`}function gl(r){let{flags:{WarpZombie:i},locations:{ZombieTown:e}}=r;r.flags.insertZombieWarpFlag();let t=r.messages.parts[33][0];t.text=[" {1a:Leaf}      {16:Brynmaer} {1d:Oak} ","{0c:Nadare}'s  {1e:Portoa}   {14:Amazones} ","{19:Joel}      Zombie   {20:Swan} ","{23:Shyron}    {18:Goa}      {21:Sahara}"].join(`
`);let s=r.nextFreeTrigger("zombie warp");s.used=!0,s.conditions=[],s.message=ni.of({}),s.flags=[i.id];for(let n of e.spawns)n.isTrigger()&&n.id===138&&(n.id=s.id);if(r.townWarp.locations.splice(7,0,e.id),r.townWarp.locations.pop()!==255)throw new Error("unexpected")}function wl(r){r.trigger(138).conditions=[~r.flags.CurrentlyRidingDolphin.id],r.messages.parts[29][16].text=`The cave entrance appears
to be underwater. You'll
need to swim.`}function bl(r){let i=r.nextFreeTrigger("channel item");i.used=!0,i.conditions=[r.flags.CurrentlyRidingDolphin.id,~r.flags.UndergroundChannelUnderwaterChest.id];let e=r.messages.alloc();e.text="Dolphin: {:HERO:}, I just found a [3b:Love Pendant] under the water!",i.message=ni.of({part:e.part,index:e.id,action:15});let t=r.locations.UndergroundChannel.spawns.find(s=>s.isChest());t.data[2]=2,t.yt++,t.id=i.id,r.itemGets.actionGrants.set(i.id,59)}function yl(r){let e=r.npcs[13].localDialogs.get(53)[0];e.message.action=23}function Sl(r,i){let e=r.locations.LimeTreeLake,t=r.screens[r.metascreens.limeTreeLake.sid];if(i.disableRageSkip()){t.set2d(32,t.get2d(0,143)),t.set2d(42,t.get2d(58,1)),t.set2d(16,t.get2d(32,4)),t.set2d(26,t.get2d(42,5)),t.set2d(27,t.get2d(0,16));for(let n of e.spawns)n.tile+=32;let s=r.metascreens.limeTreeLake.findExitByType("cave");s.entrance+=8192,s.exits=s.exits.map(n=>n+32)}else t.set2d(144,[[118,118,118,118,119,120,null,null,null,null,121,122,118,118,118,118],[118,118,119,120,null,null,null,null,null,null,null,null,121,122,118,118]])}function vl(r,i){function e(q,Y){let W=q.indexOf(Y);if(W<0)throw new Error(`Could not find element ${Y} in ${q}`);q.splice(W,1)}function t(q,Y){let W=q.findIndex(Y);if(W<0)throw new Error(`Could not find element in ${q}`);q.splice(W,1)}let{locations:{BoatHouse:s,Brynmaer:n,Crypt_Draygon2:o,Joel_Shed:a,Leaf_ElderHouse:l,MtSabreNorth_SummitCave:c,MtSabreWest_Upper:d,PortoaPalace_ThroneRoom:f,Portoa_PalaceEntrance:u,Portoa_AsinaRoom:h,Portoa_FortuneTeller:p,Shyron_Temple:m,StomHouse:g,Swan_DanceHall:y,Swan_Tavern:w,WindmillCave:b,WaterfallCave4:x,WaterfallValleyNorth:E,ZebuCave:C,ZombieTown_HouseBasement:B},items:{GlowingLamp:S,KeyToPrison:M,LovePendant:G,StatueOfOnyx:Z},npcs:{Akahana:Q,AkahanaInBrynmaer:_,Asina:se,AztecaInShyron:K,Clark:ue,Draygon:O,FortuneTeller:P,Kensu:Ce,KensuInCabin:Ee,KensuInSwan:z,LeafElder:pe,LeafRabbit:fe,OakChild:We,OakElder:_e,OakMother:we,PortoaPalaceFrontGuard:Te,PortoaQueen:oe,PortoaThroneRoomBackDoorGuard:vt,Rage:Re,Stom:$e,StonedAkahana:Oe,Tornel:ct,WindmillGuard:Ht,Zebu:je},flags:N}=r;Ce.localDialogs.delete(w.id),z.link(Ce.id),z.used=!0,z.data=[...Ce.data],Ce.data[0]=S.id,y.spawns.find(q=>q.isNpc()&&q.id===Ce.id).id=z.id,G.itemUseData[0].want=256|z.id,Oe.linkDialog(Q.id),_.used=!0,_.link(Q.id),_.data=[...Q.data],n.spawns.find(q=>q.isNpc()&&q.id===Q.id).id=_.id,Z.itemUseData[0].want=256|_.id,pe.dialog(l).splice(0,0,...pe.dialog(l).splice(2,1)),fe.dialog()[2].condition=N.RescuedLeafElder.id,fe.dialog()[2].flags.push(N.TalkedToLeafRabbit.id),fe.dialog()[3].flags.push(N.TalkedToLeafRabbit.id),Ht.spawns(b)[1]=~N.WindmillGuardAlarmFluteTradein.id,e(Q.spawns(x),~N.BehindWhirlpool.id),e(Oe.spawns(x),~N.BehindWhirlpool.id);function et(q){q.reverse();for(let Y=0;Y<q.length;Y++){let W=q[Y+1];q[Y].condition=W?~W.condition:-1}}for(let q=0;q<4;q++){let Y=_e.dialog()[q];Y.condition!==r.flags.OakElder.id&&(Y.message.action=3)}(()=>{let[q,Y,W,ye]=we.dialog();ye.condition=~N.RescuedChild.id,Y.condition=-1,we.dialog().splice(0,4,ye,W,q,Y)})();for(let q of[32,33,34,124,125])et(r.npcs[q].dialog());We.dialog().unshift(...We.dialog().splice(1,1)),vt.spawnConditions.set(f.id,[~N.QueenNotInThroneRoom.id,~N.MesiaRecording.id]),Te.dialog()[1].condition=N.MesiaRecording.id,oe.dialog()[3].condition=N.SwordOfWater.id,oe.dialog()[3].message.action=3,oe.dialog()[4].flags.push(N.PortoaQueenGoingAway.id),oe.spawns(f)[1]=~N.MesiaRecording.id,oe.spawns(h)[0]=N.MesiaRecording.id,oe.dialog()[1].condition=N.MesiaRecording.id,P.spawns(p)[1]=~N.MesiaRecording.id,ue.spawnConditions.set(B.id,[~N.Clark.id]),ue.spawnConditions.set(a.id,[N.Clark.id]),je.localDialogs.set(C.id,[st.of(~N.TalkedToZebuInCave.id,[0,26],[N.TalkedToZebuInCave.id]),st.of(N.LeafVillagersRescued.id,[0,29]),st.of(N.LeafAbduction.id,[0,28]),st.of(N.ZebuAtWindmill.id,[0,29]),st.of(N.UsedWindmillKey.id,[0,27,3]),st.of(-1,[0,29])]),e(je.spawns(C),~N.BehindWhirlpool.id),ct.spawnConditions.delete(d.id),$e.spawnConditions.delete(g.id),e(se.spawns(h),~N.CalmedAngrySea.id);let Me=r.npcs[52];Me.spawnConditions.set(f.id,[N.MesiaRecording.id,~N.PortoaQueen.id]),Me.localDialogs.set(u.id,Me.localDialogs.get(-1)),Me.data[0]=r.items.FluteOfLime.id;let tt=r.messages.alloc();tt.text="The queen left this for you.",Me.localDialogs.set(f.id,[st.of(~N.PortoaQueen.id,[tt.part,tt.id,3]),st.of(-1,[10,14])]),f.spawns.push(J.of({yt:3,xt:12,type:1,patternBank:1,id:Me.id})),oe.localDialogs.set(h.id,oe.dialog().splice(0,2)),oe.localDialogs.set(f.id,oe.dialog()),oe.localDialogs.delete(-1),Ee.spawnConditions.set(s.id,[~N.AbleToRideDolphin.id,N.ReturnedFogLamp.id]),Ee.dialog()[0].message.action=2,K.spawns(m).push(~N.ShyronMassacre.id),r.trigger(130).conditions.push(~N.ShyronMassacre.id),Re.dialog()[0].condition=N.SwordOfWater.id,O.spawnConditions.set(o.id,[~N.Draygon2.id]),je.dialog(m).unshift(...je.dialog(m).splice(1,1)),r.trigger(128).conditions=[~N.ShyronMassacre.id,N.TalkedToZebuInShyron.id,N.SwordOfThunder.id],r.trigger(129).conditions=[],i.barrierRequiresCalmSea()&&r.trigger(132).conditions.push(N.CalmedAngrySea.id),r.trigger(140).conditions.push(N.TalkedToZebuInCave.id),r.trigger(141).used=!1;for(let q of c.spawns)q.isTrigger()&&q.id===141&&(q.id=178);t(E.spawns,q=>q.isTrigger()&&q.id===141),r.trigger(178).conditions.push(N.Kelbesque1.id),r.trigger(178).flags.push(~N.LeafVillagersCurrentlyAbducted.id,~N.LeafElderCurrentlyAbducted.id,N.LeafVillagersRescued.id),r.trigger(140).conditions.push(~N.Kelbesque1.id),r.trigger(134).conditions.push(~N.Kelbesque1.id),e(M.itemUseData[0].flags,~N.LeafVillagersCurrentlyAbducted.id),Ln(r.trigger(187).conditions,~N.Rage.id,~N.MesiaRecording.id)}function kl(r){for(let i of[8,9,39])r.objects[i].collisionPlane=0;r.npcs.Brokahana.data[0]=r.items.FruitOfLime.id}function Cl(r){for(let i of[16,20,24,29])r.objects[i].terrainSusceptibility&=-5,r.objects[i].level=2}function El(r){let{flags:{UsedBowOfTruth:i},locations:{Crypt_Draygon2:e,MezameShrine:t}}=r,s;for(let n of t.spawns)n.isTrigger()&&n.tile===136&&(s=r.trigger(n.id));if(!s)throw new Error("Could not find start trigger");s.flags.push(i.id),r.tileEffects[185-179].effects[88]=0,t.meta.setExit(0,"door",[e.meta.id<<8|16,"edge:bottom"])}function Tl(r){r.objects[51].elements=15}function Rl(r){r.tileEffects[181-179].effects[116]=6,r.tileEffects[182-179].effects[70]=6}function Ml(r){for(let i of r.objects)i instanceof ht&&(i.isProjectile()||i.isBoss()||i.isFlyer()||i!==r.objects.mimic&&(i.terrainSusceptibility|=3))}function Ln(r,i,e){for(let t=0;t<r.length;t++)if(r[t]===i){r[t]=e;return}throw new Error(`Could not find ${i} in ${r.join(",")}`)}function Il(r){for(let i of r.locations)i.checkpoint=i.saveable=!1}function Nn(r,i,e){if(!i.randomizeTrades())return;let{items:{StatueOfOnyx:t,FogLamp:s,LovePendant:n,KirisaPlant:o,IvoryStatue:a},locations:{Swan_DanceHall:l,PortoaPalace_ThroneRoom:c},npcs:{KensuInSwan:d}}=r,f=new Map,u=[[t,0,"Akahana"],[s,0,"Fisherman"],[n,0,"Kensu"],[o,0,"Aryllis"],[a,0,"Slimed Kensu"]],h=u.map(([g,y,w])=>{if(g.trades.indexOf(y)<0||y>=g.itemUseData.length)throw new Error(`not a trade: ${g} ${y}`);return[g.itemUseData[y],g.id,w]});e.shuffle(h);for(let[g,y]of u){let[w,b,x]=h.pop();g.itemUseData[y]=w,r.spoiler&&r.spoiler.addTrade(g.id,g.messageName,x),w.want===356&&i.fogLampNotRequired()&&([...r.npcs[100].spawnConditions.values()][0][0]=512|g.id),f.set(b,g.id)}r.itemGets.actionGrants=new Map([...r.itemGets.actionGrants].map(([g,y])=>[f.get(g)??g,y]));let p=r.items[e.nextInt(4)];r.npcs[195].localDialogs.get(-1)[0].condition=512|p.id,r.spoiler&&r.spoiler.addTrade(p.id,p.messageName,"Rage"),r.npcs.PortoaQueen.dialog(c)[1].condition=512|p.id;let m=r.items[e.nextInt(4)*2+6];for(let g of r.npcs[95].localDialogs.values())for(let y=2;y<g.length;y++)if(g[y].message.action===3){g[y-2].condition=~(512|m.id-1),g[y-1].condition=~(512|m.id),r.spoiler&&r.spoiler.addTrade(m.id,m.messageName,"Tornel");break}d.dialog(l)[0].message.mid="13:00"}function Wn(r){let i=new Map;for(let e of r.items)for(let t of e.trades)i.set(e.itemUseData[t].want&255,e.id);return i}function Dn(r){let{flags:{AkahanaStatueOfOnyxTradein:i,AsinaInBackRoom:e,BehindWhirlpool:t,KensuInSwan:s,MtSabreNorthSummit:n,MtSabreWestTornel:o,PortoaQueen:a,Rage:l,RepairedStatue:c,SlimedKensu:d,StomFightReward:f,UndergroundChannelUnderwaterChest:u,ZebuAtWindmill:h},npcs:{AkahanaInBrynmaer:p,Aryllis:m,Fisherman:g,PortoaQueen:y},locations:{PortoaPalace_ThroneRoom:w}}=r;P("03:06",",","");let b=Wn(r);function x(z){let pe=b.get(z.id);if(!pe)throw new Error(`No trade-in for ${z.name}`);return r.items[pe]}h.item.isMagic()||ue("00:1b"),P("00:1b","[41:Refresh]",O(h.item));let E=x(p);P("02:01","an unusual statue",On(E)),P("02:02","a statue",`the ${Zi(E)}`),P("02:02","[29:Gas Mask]",O(i)),f.item.isMagic()||ue("03:01"),P("03:01","[43:Telepathy]",O(f));let C=Al(r);P("03:01","[06:Tornado Bracelet]",O(C)),P("05:0a","[06:Tornado Bracelet]",O(C)),P("05:0a","[44:Teleport]",O(o));let B=x(g);P("09:01","[35:Fog Lamp]",O(B)),P("09:04","[35:Fog Lamp]",O(B)),P("09:05","[35:Fog Lamp]",O(B)),P("09:06","lamp",Zi(B));let S=y.dialog(w)[1].condition;P("0a:0c","[28:Flute of Lime]",O(a)),P("0a:0d","[02:Sword of Water]",O(S)),e.item.isMagic()||ue("0b:01"),P("0b:01","[45:Recover]",O(e)),t.item.isMagic()||(ue("0b:01"),ue("1d:12")),P("0b:01","[46:Barrier]",O(t)),P("1d:12","[46:Barrier]",O(t));let M=Ce(79,78,77,76,71,70,69,68,75,74,73,72);M?P("0d:00","[35:Fog Lamp]",O(M)):P("0d:00","that a [35:Fog Lamp] was","there was treasure");let G=r.npcs.Rage.dialog()[0].condition;P("0e:03","[02:Sword of Water]",O(G)),P("0e:03","[09:Ball of Water]",O(l)),P("10:0c","that's","is"),P("10:0c",/, is in the\+lighthouse/,"");let Z=x(m);P("12:05","[3c:Kirisa Plant]",O(Z)),P("12:10","the plant",`the ${Zi(Z)}`),P("12:10","[3c:Kirisa Plant]",O(Z));let Q=`Our illustrious chief seeks ${On(Z)}.`;P("12:09",/[^]*/,Q),P("12:0a",/[^]*/,Q);let _=x(r.npcs.KensuInSwan);P("13:02","[3b:Love Pendant]",O(_)),P("13:00","pendant",Zi(_)),s.item.isMagic()||ue("13:02"),P("13:02","[47:Change]",O(s));let se=x(r.npcs.SlimedKensu);P("18:06","[3d:Ivory Statue]",O(se)),P("18:07","[3d:Ivory Statue]",O(se)),P("18:06","It's in a room","{0b:Karmine} is"),d.item.isMagic()||P("18:07","teach","give"),P("18:07","[48:Flight]",O(d)),n.item.isMagic()||ue("1c:10"),P("1c:10","[42:Paralysis]",O(n)),P("20:06","Statue of Gold",O(c));let K=r.allocatedTriggers.get("channel item");K!=null&&P(r.trigger(K).message.mid,"[3b:Love Pendant]",O(u));{let z=r.messages.alloc();r.trigger(134).message.mid=z.mid,z.text="{:HERO:}, there's nothing to see here! Return to Zebu at once!",r.messages.parts[28][15].text="{:HERO:}, you cannot climb this yet! Seek out [44:Teleport] at once!"}function ue(z){P(z,/teach\s+you\s+the\s+magic\s+of/,"bestow upon you the")}function O(z){return typeof z=="number"?z=r.items[r.itemGets[z&255].itemId]:z instanceof pr||(z=z.item),`[${ee(z.id)}:${z.messageName}]`}function P(z,pe,fe){let[We,_e]=z.split(":").map(Te=>parseInt(Te,16)),we=r.messages.parts[We][_e];we.text=we.text.replace(pe,fe)}function Ce(...z){let pe=[fe=>Fl.has(fe),fe=>Gl.has(fe),fe=>Ee(fe).unique];for(let fe of pe)for(let We of z){let we=[...r.locations[We].spawns].reverse();for(let Te of we){if(!Te.isChest())continue;let oe=r.slots[Te.id];if(oe<=72&&fe(oe))return r.items[oe]}}}function Ee(z){let pe=r.itemGets[z];return r.items[pe.itemId]}}var Fl=new Set([62,63,64]),Gl=new Set([0,1,2,3,65,66,67,68,69,70,71,72]);function Al(r){let{Tornel:i}=r.npcs;for(let e of i.localDialogs.values())for(let t=2;t<e.length;t++){let s=~e[t].condition;if(s>516&&s<=524&&!(s&1))return r.items[s&255]}return r.items.TornadoBracelet}function On(r){let i=r.rom.items;switch(r){case i.StatueOfOnyx:return"an unusual statue";case i.FluteOfLime:return"a rare instrument";case i.FogLamp:return"a brilliant lamp";case i.LovePendant:return"a beautiful charm";case i.KirisaPlant:return"a fragrant plant";case i.IvoryStatue:return"an exotic statue"}return ls(),"a valuable item"}function Zi(r){let i=r.rom.items;switch(r){case i.StatueOfOnyx:return"statue";case i.FluteOfLime:return"instrument";case i.FogLamp:return"lamp";case i.LovePendant:return"pendant";case i.KirisaPlant:return"plant";case i.IvoryStatue:return"statue"}return ls(),"item"}function Hn(r){let{locations:{Portoa:i,PortoaPalace_ThroneRoom:e,Portoa_PalaceEntrance:t,UndergroundChannel:s,WaterfallCave2:n,WaterfallCave3:o}}=r;zs(t,"edge:bottom",183,i),zs(e,"door",146,s),zs(n,"stair:up",191,o),Pl(r)}function zs(r,i,e,t){let[s,...n]=[...r.meta.exits()].filter(([,g])=>g===i);if(!s)throw new Error(`Could not find ${i} in ${r}`);if(n.length)throw new Error(`Ambiguous ${i} in ${r}`);let[o,a]=s[2],l=o>>>8;if(l===t.id)return;let c=o&255,d=r.rom.locations[l],u=d.meta.get(c).data.exits.find(g=>g.type===a);if(!u)throw new Error(`Bad entrance in ${d}`);let h=((u.entrance&61440)>>>8|(u.entrance&240)>>>4)+Bl[u.dir];d.spawns.length>17&&d.spawns.pop();let p=t.spawns.findIndex(g=>g.isTrigger()&&g.id===e),m=p>=0?t.spawns.splice(p,1)[0]:J.of({type:2,id:e});m.xt=(c&15)<<4|h&15,m.yt=c&240|h>>>4,d.spawns.push(m)}var Bl=[16,0,0,0];function Pl(r){let{locations:{MtSabreNorth_Main:i,ValleyOfWind:e}}=r;for(let t of Un(e,17)){let s=r.locations[t>>>8],n=t&255;Ji(s,n,r.flags.OpenedSealedCave)}for(let t of Un(i,4)){let s=r.locations[t>>>8];if(s.data.fixed||s.spawns.length>15)continue;let n=t&255;Ji(s,n,r.flags.OpenedPrison);let o=s.meta.get(n).findExitByType("cave").entrance,a=J.of({screen:n,coord:o,type:2,id:173});if(s.spawns.push(a),s.spawns.length>15)continue;let l=J.of({screen:n,coord:o-4112,type:4,id:44});s.spawns.splice(1,0,l)}}function Un(r,i){let e=new Set([r,r.id<<8|i]),t=new Set;for(let n of r.meta.exits())n[0]===i&&(n[1]==="cave"||n[1]==="gate")&&t.add(n[2]);let s=[];for(let n of t){if(e.has(n[0]))continue;let o=r.rom.locations[n[0]>>>8],a=n[0]&255;if(!o.meta.customFlags.has(a)){if(n[1]==="cave"||n[1]==="gate"){let l=o.meta.get(a);l.flag==="custom:true"?s.push(n[0]):console.error(`No flag for ${l.name}`);continue}if(!e.has(o)){e.add(o);for(let l of o.meta.exits())l[1]==="cave"||l[1]==="gate"||t.add(l[2])}}}return console.log(`From ${r}: ${s.map(n=>n.toString(16))}`),s}function Ji(r,i,e,t){e?r.meta.customFlags.set(i,e):r.meta.customFlags.delete(i),!t&&(r===r.rom.locations.CordelPlainEast?Ji(r.rom.locations.CordelPlainWest,i,e,!0):r===r.rom.locations.CordelPlainWest&&Ji(r.rom.locations.CordelPlainEast,i,e,!0))}function qn(r){Ll(r)}function Ll(r){let{locations:{AngrySea:i},npcs:{Dolphin:e},metascreens:{beachCabinEntrance:t,beachCave:s,beachExitN:n,boatChannel:o}}=r;e.spawnScripts=[];let a=new Set(le(16,l=>l));for(let l=0;l<i.entrances.length;l++){let c=i.entrances[l],d=i.meta.get(c.screen),f;if(d===o){if(i.meta.get(c.screen-1)!==t)throw new Error(`Bad boatChannel entrance ${c}`);c=Tt.of({screen:c.screen-1,tile:0}),d=t}d===t?f={entrance:Tt.of({screen:c.screen-17,coord:47336}),movement:5}:d===s?f={entrance:Tt.of({screen:c.screen,coord:59400}),movement:8}:d===n&&(f={entrance:Tt.of({screen:c.screen,coord:55544}),movement:9}),f&&(a.delete(l),e.spawnScripts[l]=f)}[e.channelSpawn,e.evilSpiritIslandSpawn]=a,e.spawnScripts[e.channelSpawn]={entrance:Tt.of({x:424,y:120}),movement:6},e.spawnScripts[e.evilSpiritIslandSpawn]={entrance:Tt.of({x:424,y:120}),movement:7}}function Kn(r){let i=new Set;for(let e of r.locations)for(let t of e.pits??[])i.add(t.dest<<8|t.toScreen);for(let e of i){let t=r.locations[e>>8],s=e&255,n=t.exits.filter(d=>d.screen===s),o=t.entrances.filter(d=>d.screen===s),a=new Map(n.map(d=>[d.tile,d])),l=new Ge;for(let d of a.keys())for(let f of zn)a.has(d+f)&&l.union([d,d+f]);let c=l.map();for(let d of o)for(let f of zn){let u=c.get(d.tile+f);for(let h of u??[]){let p=a.get(h),m=ur.of({screen:e&255,tile:h+f,dest:p.dest,entrance:p.entrance});t.exits.push(m)}}}}var zn=[1,-1,16,-16];function Vn(r,i){let e=[...r.townWarp.locations].filter(l=>l!==255),t=i.nextInt(e.length),s=e[t],n=64;(s===r.locations.Shyron.id||s===r.locations.Shyron_Temple.id)&&(n=65),r.townWarp.thunderSwordWarp=[s,n];let o=768-e.length+t,a=r.itemGets[3].flags;for(let l=0;l<a.length;l++)if(a[l]===765){a[l]=o;return}a.push(o)}function jn(r,i,e){let t=new Set(le(256,o=>o).filter(o=>o in r.objects));for(let[o]of Dt)t.delete(o);for(let[o,a]of Dt)for(let l of t)r.objects[o].base===r.objects[l].base&&(Dt.set(l,a),t.delete(o));for(let o of[200,249,250])r.objects[o].attackType=o>240?254:255,r.objects[o].statusEffect=0;r.objects[125].elements|=8;let s=new Set([87,94,104,125,136,151,155,158]),n=new Set([80,83,95,105]);for(let[o,{sdef:a,swrd:l,hits:c,satk:d,dgld:f,sexp:u}]of Dt){let h=r.objects[o].data,p=s.has(o)?1:0;if(h[2]|=128,h[6]=c,h[7]=d,h[8]=a|l<<4,h[16]=h[16]&15|f<<4,h[17]=u,(p?i.shuffleBossElements():i.shuffleMonsterElements())&&!n.has(o)){let m=[...r.objects[o].elements.toString(2).padStart(4,"0")];e.shuffle(m),r.objects[o].elements=Number.parseInt(m.join(""),2)}}if(i.shuffleMonsterElements()){let o=e.nextInt(4);for(let a of n)r.objects[a].elements=1<<o}}var Dt=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,12,18,,110],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,100],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,120],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,110],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,110],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,110],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,120],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,120],[148,"m","Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,110],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,110],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,6,26,,73],[161,"m","Tower Defense Mech (2)",5,,8,36,,85],[162,"m","Tower Sentinel",,,1,,,32],[163,"m","Air Sentry",3,,2,26,,65],[165,"b","Vampire 2",3,,12,27,,100],[164,"b","Dyna",6,5,32,,,,],[180,"b","dyna pod",6,5,48,26,,,],[184,"p","dyna counter",15,,,42,,,],[185,"p","dyna laser",15,,,42,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,15],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,15],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map(([r,i,e,t=0,s=0,n=0,o=0,a=0,l=0])=>[r,{id:r,type:i,name:e,sdef:t,swrd:s,hits:n,satk:o,dgld:a,sexp:l}]));function Nl(r){console.log("flip sabera entrance");let i=r[0];i.set2d(113,[[i.rom.metascreens.deadEndE_upStair],[i.rom.metascreens.caveEmpty]]),i.moveExits([129,"stair:down",113,"stair:up"]),r[1]=113,r[2]="stair:up"}function Wl(r,i){console.log("flip karmine entrance");let e=r[0],t=e.rom.metascreens;e.set2d(32,[[t.caveEmpty,t.hallNS],[t.deadEndE_upStair,t.hallNW]]),e.replaceMonsters(i),e.moveExits([48,"stair:down",48,"stair:up"]),r[2]="stair:up"}function Ol(r){console.log("flip karmine exit");let i=r[0],e=i.rom.metascreens;i.set2d(1,[[e.deadEndS_stairs,e.caveEmpty]]),i.moveExits([2,"stair:down",1,"stair:up"]),r[1]=1,r[2]="stair:up"}function Ks(r){console.log("flip generic exit");let i=r[0],e=i.rom.metascreens;i.width<2&&(i.width=2),i.set2d(0,[[e.hallSE,e.deadEndW_downStair]]),i.moveExits([0,"stair:up",1,"stair:down"]),r[1]=1,r[2]="stair:down"}function Vs(r,i){r[3](r,i),r[3]=void 0}function Yn(r,i){let e=r.locations,t=[0,1,2,3];i.shuffle(t);let s=[[e.GoaFortress_Kelbesque.meta,131,"stair:down"],[e.GoaFortress_Sabera.meta,129,"stair:down",Nl],[e.GoaFortress_Mado1.meta,114,"stair:down"],[e.GoaFortress_Karmine1.meta,48,"stair:down",Wl]],n=[[e.GoaFortress_Zebu.meta,0,"stair:up",Ks],[e.GoaFortress_Tornel.meta,0,"stair:up",Ks],[e.GoaFortress_Asina.meta,0,"stair:up",Ks],[e.GoaFortress_Kensu.meta,2,"stair:down",Ol]],o=[[e.GoaFortress_Entrance.meta,0,"edge:top"]],a=[],l=!0,c=o[0];for(let d of t){let f=l||s[d][3]||o[o.length-1][3],u=f?i.pick([!1,!0]):!0;console.log(`FLOOR ${d}: up ${l} flexible ${!!f} reverse ${u}`);let h=u?n[d]:s[d];console.log(`push b ${r.locations[h[0].id].name}`),a.push(h),l!==(h[2]==="stair:down")&&(h[3]?Vs(h,i):Vs(c,i)),o.push(c=u?s[d]:n[d]),console.log(`push a ${r.locations[c[0].id].name}`),l=c[2]==="stair:up"}l&&Vs(c,i),a.push([e.GoaFortress_Exit.meta,1,"stair:up"]);for(let d=0;d<o.length;d++)o[d][0].attach(o[d][1],a[d][0],a[d][1],o[d][2],a[d][2])}var Dl=6,Ul=33,js=new Map([["pawn",54],["inn",55],["armor",56],["tool",57],["tavern",59]]),Hl=new Set(["inn","armor","tool","pawn"]),Zn=new Set([...Hl,"house","tavern"]);function Jn(r,i,e){let{locations:{Crypt_Hall1:t,Goa:s,GoaFortress_Exit:n,Shyron:o},metascreens:{squareTownNE_house:a,fortressTownEntrance:l,mountainPathE_gate:c}}=r,d=new Set([s.id,o.id]),f=new Set([a.data.id,l.data.id,c.data.id]);if(i.shuffleAreas())for(let b of[s,n,o,t])b.data.houseType="palace";let u=new H(()=>[]),h=new H(()=>[]),p=new H(()=>new Set);for(let b of r.locations){if(!b.used||b.data.houseType==null)continue;let x;for(let[E,C,B]of b.meta.exits()){let S=(E&240)<<4|b.meta.get(E).findExitByType(C).entrance>>>8;(!x||S>x[3])&&(x=[E,C,B,S])}for(let[E,C,B]of[x]){let S={type:b.data.houseType,inside:[b.id<<8|E,C],outside:B},M=B[0];h.get(M).push(S),u.get(b.data.houseType).push(S);let G=r.locations[M>>>8].screens[M>>>4&15][M&15];p.get(G).add(M)}}let m=new Map,g=new Map;for(let[b,x]of e.ishuffle(p))x.size>=2||f.has(b)?g.set(b,x):m.set(b,x);let y=new Set,w=u.get("inn");for(let[,b]of[...g,...m]){let x=new Map,E=!0;for(let C of b){for(let B of h.get(C)){let S=E&&Zn.has(B.type)?[...Zn].map(O=>u.get(O)):[u.get(x.get(B.outside[1])??B.type)];S=S.filter(O=>O.length),B.type==="palace"&&d.has(B.outside[0]>>>8)&&(S=S.map(O=>O.filter(P=>!d.has(P.inside[0]>>>8))));let M=[...b].every(O=>!y.has(O>>>8));!M&&S.length>1?S=S.filter(O=>O!==w):M&&S.some(O=>O===w)&&(S=[w]);let G=e.pickAndRemove(...S);if(G.type==="inn")for(let O of b)y.add(O>>>8);if(x.set(B.outside[1],G.type),r.spoiler&&r.spoiler.addHouse(G.inside[0]>>>8,B.outside[0]>>>8),Ae.connect(r,B.outside,G.inside),!E||js.get(B.type)===js.get(G.type))continue;let Z=r.locations[B.outside[0]>>>8];if(Z.meta.tileset!==r.metatilesets.town)continue;let Q=Ae.findExitTiles(r,B.outside);if(Q.length>1)continue;let _=Q[0]-32;(Q[0]&240)<32&&(_-=3856);let se=_>>8,K=_&255,ue=js.get(G.type)??(Z.meta.get(se).data.tallHouses?.includes(K)?Ul:Dl);r.screens[Z.screens[se>>4][se&15]].tiles[K]=ue}E=!1}}}function Xn(r,i,e){let t=[],s=[];for(let n of r.locations)if(!ql.has(n.id)){for(let o of n.spawns)if(o.isChest()){let a=r.slots[o.id];if(a>=112&&s.push(o.id),i.preserveUniqueChecks()){let l=r.itemGets[a];if(r.items[l?.itemId]?.unique)continue}if(o.isInvisible())continue;t.push(o.id)}}e.shuffle(t),r.slots.setMimicCount(s.length),[...he.zip(s,t,(n,o)=>r.slots.swap(n,o))]}var ql=new Set([182]);function Qn(r,i){for(let e of r.locations)(e.id&248)!==88&&e.meta.replaceMonsters(i)}var Xi=class{constructor(i){this.rom=i;this.monsterConstraints=new Map;this.npcConstraints=new Map;this.allSpritePalettes=new Set;let e=new H(()=>[]);for(let t of i.locations)if(!!t.used)for(let s=0;s<t.spawns.length;s++){let n=t.spawns[s];!n.used||(n.isMonster()?e.get(n.monsterId).push([t,s,n]):(n.isNpc()||n.isBoss())&&e.get(~n.id).push([t,s,n]))}for(let[t,s]of e)if(t<0){let n=i.npcs[~t],o=[n.data[3]];if(!i.metasprites[o[0]])throw new Error(`bad NPC: ${~t}`);n.data[2]===208&&o.push(192);let l=n.data[2]<128?n.data[2]&112:0,c=this.computeConstraint(o,s,!0,l);~t===95&&(c=c.ignorePalette()),this.npcConstraints.set(~t,c)}else{let n=me.ALL,o=this.rom.objects[t];for(let a of Ys(i,o)){let c=i.objectActions[a.action]?.data.metasprites||(()=>[a.metasprite]),d=this.computeConstraint(c(a),s,a.id===t,a.data[1]),f=n.meet(d);if(!f)throw new Error(`Bad meet for ${t} with ${a.id}`);if(f&&(n=f),a.data[4]&2){let u=this.computeConstraint([a.data[20]],s,!1,a.data[1]),h=n.meet(u);if(!h)throw new Error(`Bad meet for ${t} bonus ${a.id}`);n=h}}this.monsterConstraints.set(o.id,n),o.constraint=n}}getMonsterConstraint(i,e){let t=this.monsterConstraints.get(e)||me.NONE;return(i&88)===88||!this.rom.objects[e].goldDrop?t:t.meet(me.COIN)||me.NONE}getNpcConstraint(i,e){let t=this.npcConstraints.get(e)||me.NONE;return i===30&&e===96?t.meet(me.STOM_FIGHT):i===160&&e===201?t.meet(me.GUARDIAN_STATUE):t}shufflePalettes(i){let e=[...this.allSpritePalettes];for(let[t,s]of this.monsterConstraints)this.monsterConstraints.set(t,s.shufflePalette(i,e));for(let[t,s]of this.npcConstraints)this.npcConstraints.set(t,s.shufflePalette(i,e))}configure(i,e){if(!e.used)return;let t=this.rom.slots[e.id],s=e.isMonster()?this.monsterConstraints.get(e.monsterId):e.isNpc()?this.npcConstraints.get(e.id):e.isChest()?t<112?me.TREASURE_CHEST:me.MIMIC:void 0;if(!!s){if(s.shift===3||s.float.length>=2)throw new Error("don't know what to do with two floats");if(!s.float.length)e.patternBank=Number(s.shift===2);else if(s.float[0].has(i.spritePatterns[0]))e.patternBank=0;else if(s.float[0].has(i.spritePatterns[1]))e.patternBank=1;else if(e.isMonster())throw new Error("no matching pattern bank")}}computeConstraint(i,e,t,s=0){let n=new Set,o=new Set;for(let c of i.map(d=>this.rom.metasprites[d])){for(let d of c.palettes())o.add(d);for(let d of c.patternBanks(s))n.add(d)}t=t&&n.size==1&&[...n][0]===2;let a=new Map;for(let[c,,d]of e)a.set(d.patternBank&&t?~c.id:c.id,d);let l;for(let[c,d]of a){let f=this.rom.locations[c<0?~c:c];for(let h of o)h>1&&this.allSpritePalettes.add(f.spritePalettes[h-2]);let u=me.fromSpawn(o,n,f,d,t);l=l?l.join(u):u,!t&&d.patternBank&&(l=l.shifted())}if(!l)throw new Error("Expected child to appear");return l}};function*Ys(r,i){yield i;let e=i.spawnedReplacement();e&&(yield*Ys(r,e));let t=i.spawnedChild();t&&(yield*Ys(r,t)),i.id===80&&(yield r.objects.largeBlueSlime),i.id===83&&(yield r.objects.largeRedSlime)}function $n(r,i,e){let t=new Xi(r);i.shuffleSpritePalettes()&&t.shufflePalettes(e);let s=new Js(i,{});for(let n of r.locations)n.used&&s.populate(n);s.shuffle(e,t)}var Js=class{constructor(i,e){this.flags=i;this.report=e;this.monsters=[];this.used=[];this.locations=[]}populate(i){let{maxFlyers:e=0,nonFlyers:t={},skip:s=!1,tower:n=!1,fixedSlots:o={},...a}=_n[i.id]||{};for(let u of Object.keys(a))throw new Error(`Unexpected property '${u}' in MONSTER_ADJUSTMENTS[${i.id}]`);let l=s===!0||!this.flags.shuffleTowerMonsters()&&n||!i.spritePatterns||!i.spritePalettes,c=[],d=[],f=12;for(let u of l?[]:i.spawns){if(++f,!u.used||!u.isMonster())continue;let h=u.monsterId;if(!Dt.has(h)||Dt.get(h).type!=="m")continue;let p=i.rom.objects[h];if(!(p instanceof ht))continue;let m=u.patternBank,g=i.spritePatterns[m],y=p.palettes(!0),w=y.includes(2)?i.spritePalettes[0]:void 0,b=y.includes(3)?i.spritePalettes[1]:void 0;c.push({id:h,pat:g,pal2:w,pal3:b,patBank:m}),(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+i.id.toString(16)),d.push(f)}(!c.length||s)&&(d=[]),this.locations.push({location:i,slots:d}),this.monsters.push(...c)}shuffle(i,e){let t=e.rom;for(this.report["pre-shuffle locations"]=this.locations.map(s=>s.location.id),this.report["pre-shuffle monsters"]=this.monsters.map(s=>s.id),i.shuffle(this.locations),i.shuffle(this.monsters),this.report["post-shuffle locations"]=this.locations.map(s=>s.location.id),this.report["post-shuffle monsters"]=this.monsters.map(s=>s.id);this.locations.length;){let{location:s,slots:n}=this.locations.pop(),o=this.report["$"+s.id.toString(16).padStart(2,"0")]=[],{maxFlyers:a=0,nonFlyers:l={},tower:c=!1}=_n[s.id]||{};if(c)continue;let d=a,f=me.forLocation(s.id);s.bossId()!=null;for(let m of s.spawns)if(m.isChest()&&!m.isInvisible())t.slots[m.id]<112?f=f.meet(me.TREASURE_CHEST,!0):f=f.meet(me.MIMIC,!0);else if(m.isNpc()||m.isBoss()){let g=e.getNpcConstraint(s.id,m.id);f=f.meet(g,!0),m.isNpc()&&(m.id===107||m.id===104)&&(f=f.meet(me.KENSU_CHEST,!0))}else if(m.isMonster()&&!(t.objects[m.monsterId]instanceof ht)){let g=e.getMonsterConstraint(s.id,m.monsterId);f=f.meet(g,!0)}else m.isShootingWall(s)&&(f=f.meet(me.SHOOTING_WALL,!0));o.push(`Initial pass: ${f.fixed.map(m=>m.size<1/0?"["+[...m].join(", ")+"]":"all")}`);let u=new Map,h=m=>{let g=t.objects[m.id];if(g.monsterClass){let M=u.get(g.monsterClass);if(M!=null&&M!==m.id)return!1}let y=Zs.has(m.id),w=zl.has(m.id);if(y){if(!d)return!1;--d}let b=e.getMonsterConstraint(s.id,m.id),x=f.tryMeet(b);if(!x&&f.pal2.size<1/0&&f.pal3.size<1/0&&this.flags.shuffleSpritePalettes()&&(x=f.tryMeet(b,!0)),!x)return!1;let E;if(p){let M=t.objects[m.id];if(!(M instanceof ht))throw new Error(`non-monster: ${M}`);if(E=p(M),E==null)return!1}o.push(`  Adding ${m.id.toString(16)}: ${x}`),f=x,g.monsterClass&&u.set(g.monsterClass,m.id);let C=0;if(y||w){for(let M=0;M<n.length;M++)if(n[M]in l){C=M;break}}else for(let M=0;M<n.length;M++)if(!(n[M]in l)){C=M;break}(this.report[`mon-${m.id.toString(16)}`]=this.report[`mon-${m.id.toString(16)}`]||[]).push("$"+s.id.toString(16));let B=n[C],S=s.spawns[B-13];return y?(S.data[0]=253,S.data[1]=255):p?(S.screen=E>>>8,S.tile=E&255):B in l&&(S.y+=l[B][0]*16,S.x+=l[B][1]*16),S.monsterId=m.id,o.push(`    slot ${B.toString(16)}: ${S}`),n.splice(C,1),!0},p=s.monstersMoved||n.length&&this.flags.randomizeMaps()?s.monsterPlacer(i):null;if(d&&n.length)for(let m=0;m<Math.min(40,this.monsters.length);m++)Zs.has(this.monsters[m].id)&&h(this.monsters[m])&&this.monsters.splice(m,1);for(let m=0;m<this.monsters.length&&n.length;m++)if(h(this.monsters[m])){let[g]=this.monsters.splice(m,1);Zs.has(g.id)||this.used.push(g),m--}for(let m=0;m<this.used.length&&n.length;m++)h(this.used[m])&&(this.used.push(...this.used.splice(m,1)),m--);if(f.fix(s,i),n.length){console.error(`Failed to fill location ${s.id.toString(16)} ${s.name}: ${n.length} remaining`);for(let m of n){let g=s.spawns[m-13];g.x=g.y=0,g.id=176,g.data[0]=254}}for(let m of s.spawns)e.configure(s,m)}}},Zs=new Set([89,92,110,111,129,138,163,196]),zl=new Set([85,93,124,188,193]),_n={[3]:{fixedSlots:{pat1:96},maxFlyers:2},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},[26]:{fixedSlots:{pal3:35,pat1:79},maxFlyers:2,nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{fixedSlots:{pat1:80},maxFlyers:1},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{tower:!0},[90]:{tower:!0},[91]:{tower:!0},[96]:{fixedSlots:{pal3:8,pat1:82},maxFlyers:2,skip:!0},[100]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[104]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}};function Qs(r,i,e){new Xs(r,i,e).shuffle()}var Xs=class{constructor(i,e,t){this.rom=i;this.flags=e;this.random=t}shuffle(){this.shuffleBackgrounds()}shuffleBackgrounds(){let i=new H(()=>[]);for(let t of this.rom.locations)!t.tilePalettes.some(s=>s!==154)||i.get(t.colorGroup).push(t);let e=[new Map,new Map];for(let t of i.values())for(let s of t)for(let n=0;n<2;n++)for(let o=0;o<2;o++){let a=e[n].get(s.tilePatterns[o]);a||e[n].set(s.tilePatterns[o],a=new Set),a.add(s.tilePalettes[n])}for(let t of i.values()){let s=t[0],n=[new Set,new Set];for(let l=0;l<2;l++)n[l]=new Set([...e[l].get(s.tilePatterns[0]),...e[l].get(s.tilePatterns[1])]);let o=this.random.pick([...n[0]]),a=this.random.pick([...n[1]]);for(let l of t)l.tilePalettes[0]=o,l.tilePalettes[1]=a}}};function ei(r,i){i.eastCave?Kl(r,i.eastCave):i.classicLimeTreeToLeaf&&Vl(r),jl(r),Yl(r),Xl(r),Ql(r),Zl(r)}(i=>{function r(e,t){let s={};if(e.addEastCave()){s.eastCave={};let n=["cordel","lime","goa","desert"],o=t.nextInt(4);[s.eastCave.exit1]=n.splice(o,1),s.eastCave.exit2=t.pick(n)}else e.connectLimeTreeToLeaf()&&(s.classicLimeTreeToLeaf=!0);return s}i.generateOptions=r})(ei||(ei={}));function Kl(r,i){let{locations:{EastCave1:e,EastCave2:t,EastCave3:s,SealedCave1:n,ValleyOfWind:o},metascreens:{boundaryE_cave:a,branchNSE:l,branchNWE:c,branchNWSE:d,branchNWS:f,branchWSE:u,caveEmpty:h,deadEndE:p,deadEndE_downStair:m,deadEndE_upStair:g,deadEndN_stairs:y,deadEndS:w,deadEndS_stairs:b,deadEndW:x,deadEndW_downStair:E,hallNE:C,hallNS:B,hallNW:S,hallSE:M,hallWS:G,hallWE:Z,hallNS_entrance:Q,hallNS_ramp:_,hallNS_wall:se}}=r;r.locations.allocate(e),r.locations.allocate(t),i.exit2&&r.locations.allocate(s);for(let K of[e,t,s])K.bgm=K.originalBgm=23,K.entrances=[],K.exits=[],K.pits=[],K.spawns=[],K.flags=[],K.width=K.height=1,K.screens=[[128]],K.tilePalettes=[26,27,5],K.originalTilePalettes=[26,27,5],K.tileset=136,K.tileEffects=181,K.tilePatterns=[20,2],K.spritePatterns=[...n.spritePatterns],K.spritePalettes=[...n.spritePalettes];e.meta=new Ae(e.id,r.metatilesets.cave,5,5),e.meta.set2d(0,[[p,G,h,M,x],[h,B,M,S,h],[M,d,f,h,h],[B,_,C,Z,G],[Q,C,x,g,S]]),t.meta=new Ae(t.id,r.metatilesets.cave,5,5),t.meta.set2d(0,[[p,G,w,h,w],[h,B,B,h,B],[h,l,c,u,S],[h,_,h,C,G],[p,S,h,h,y]]),o.meta.set2d(51,[[a]]),r.tileEffects[0].effects[192]=0,e.meta.attach(67,t.meta,68),e.meta.attach(64,o.meta,51),i.exit1&&(e.meta.set2d(4,[[E]]),eo(e,4,i.exit1)),i.exit2&&(s.meta=new Ae(s.id,r.metatilesets.cave,3,1),s.meta.set2d(0,[[b],[se],[Q]]),s.spawns.push(J.from([24,7,35,0])),s.flags.push(mr.of({screen:16,flag:r.flags.alloc(512)})),t.meta.set2d(64,[[m]]),t.meta.attach(64,s.meta,0),eo(s,32,i.exit2)),e.spawns.push(J.of({screen:33,tile:135,timed:!0,id:2}),J.of({screen:18,tile:136,timed:!1,id:2}),J.of({screen:19,tile:137,timed:!0,id:2}),J.of({screen:50,tile:104,timed:!1,id:2}),J.of({screen:65,tile:136,timed:!0,id:2}),J.of({screen:51,tile:152,timed:!0,id:2}),J.of({screen:3,tile:136,timed:!0,id:2})),t.spawns.push(J.of({screen:1,tile:136,timed:!0,id:2}),J.of({screen:17,tile:72,timed:!1,id:2}),J.of({screen:18,tile:119,timed:!0,id:2}),J.of({screen:20,tile:40,timed:!1,id:2}),J.of({screen:35,tile:133,timed:!0,id:2}),J.of({screen:49,tile:136,timed:!0,id:2}),J.of({screen:51,tile:138,timed:!1,id:2}),J.of({screen:52,tile:152,timed:!0,id:2}),J.of({screen:65,tile:130,timed:!0,id:2}),J.of({y:272,x:1144,type:2,id:89}),J.of({y:112,x:264,type:2,id:124})),r.slots.swap(49,89)}function eo(r,i,e){let{locations:{CordelPlainEast:t,CordelPlainWest:s,Desert2:n,GoaValley:o,LimeTreeValley:a},metascreens:{bendNE:l,bendSE:c,boundaryN_trees:d,boundaryW_cave:f,cornerNE:u,cornerNW:h,cornerSE:p,cornerSE_cave:m,cornerSW:g}}=r.rom,y,w;switch(e){case"lime":y=a,w=16,y.resizeScreens(0,1,0,0),y.meta.spliceColumns(0,1,2,[[h,d],[f,c],[g,p]]);break;case"cordel":let b=[[f,c],[g,p]];y=t,w=85,y.meta.set2d(85,b),s.meta.set2d(85,b);break;case"goa":y=o,w=17,y.meta.set2d(1,[[h,u],[f,l]]);break;case"desert":y=n,w=83,y.meta.set2d(83,[[m]]);break}r.meta.attach(i,y.meta,w)}function Vl(r){let{locations:{ValleyOfWind:i,LimeTreeValley:e},metascreens:{exitE:t,exitW_southwest:s,overworldEmpty_alt:n}}=r;i.meta.set2d(84,[[t]]),e.meta.set2d(16,[[s],[n]]),i.meta.attach(84,e.meta,16)}function jl(r){let{TowerEntrance:i,Crypt_Teleporter:e}=r.locations;e.meta.attach(0,i.meta,0,"teleporter","teleporter")}function Yl(r){let{flags:{OpenedSwanGate:i},locations:{SwanGate:e},npcs:{SoldierGuard:t}}=r;e.spawns.push(J.of({xt:10,yt:2,type:1,id:45}),J.of({xt:11,yt:2,type:1,id:45})),t.localDialogs.get(e.id)[0].flags.push(i.id)}function Zl(r){Jl(r.locations.SaberaPalace2_West,r.locations.SaberaPalace2,0,1,16,32,48,49,65,81,97)}function Jl(r,i,...e){r.rom.locations.allocate(r,i),r.bgm=i.bgm,r.entrances=[],r.exits=[],r.pits=[],r.spawns=[],r.flags=[],r.width=r.height=1,r.screens=[[128]],r.tilePalettes=zt(i.tilePalettes),r.originalTilePalettes=zt(i.originalTilePalettes),r.tileset=i.tileset,r.tileEffects=i.tileEffects,r.tilePatterns=zt(i.tilePatterns),r.spritePatterns=zt(i.spritePatterns),r.spritePalettes=zt(i.spritePalettes);let s=0,n=0;for(let a of e)s=Math.max(s,(a>>>4)+1),n=Math.max(n,(a&15)+1);r.meta=new Ae(r.id,i.meta.tileset,s,n);for(let a of e)r.meta.set(a,i.meta.get(a)),i.meta.set(a,i.meta.tileset.empty);let o=new Set(e);r.flags=i.flags.filter(a=>o.has(a.screen)),i.flags=i.flags.filter(a=>!o.has(a.screen)),r.spawns=i.spawns.filter(a=>o.has(a.screen)),i.spawns=i.spawns.filter(a=>!o.has(a.screen)),i.meta.moveExitsAndPitsTo(r.meta)}function Xl(r){let i=r.locations.GoaFortress_Kensu.meta;for(let[e,t]of i.exits())e<16||t.startsWith("seamless")||i.deleteExit(e,t)}function Ql(r){r.locations.ZebuCave.spawns.find(i=>i.isTrigger()).yt+=3}var _l=["!Random Key","!Curious Key","!Bronze Key","!Silver Key","!Golden Key","!Ancient Key","!Small Key","!Shiny Key","!Mysterious Key","!Magic Key","!Backdoor Key","!Skeleton Key","Piano Key","Encryption Key","Private Key","Public Key","Key Card","Any Key","Space Bar","Return Key","Imaginary Key","Giant Key","Out of Key","Key of C","Key of G","Key of B Flat","Key of F Sharp","Lockpick","Transponder Key","Sharp Key","Flat Key","Locke and Key","Major Key","Minor Key","Cookie","Turkey","Monkey","Ctrl Key","Escape Key","Car Key","Clock Key","Florida Key","Key Lime Pie","Keystone","Answer Key"],$l=["!Random Flute","!Wooden Flute","!Metal Flute","!Piccolo","Horn of Plenty","!Ocarina","Fairy Ocarina","Ocarina of Time","!Pan Pipes","!Bugle","!Bagpipes","Kazoo","Lute","Harp","Guitar","Electric Guitar","!Tin Whistle","Magic Whistle","Dog Whistle","!Recorder","!Accordion","!Harmonica","Sousaphone","Trumpet","French Horn","Trombone","Euphonium","Tuba","Clarinet","Saxophone","Oboe","Bassoon","Violin","Viola","Cello","Theramin","Synthesizer","Moog Synth","Piano","Harpsichord","Pipe Organ","Note Block","Snare Drum","Xylophone","Marimba","Tambourine","Tornelsbane","Flute of Power"],ed=["!Random Lamp","!Bronze Lamp","!Silver Lamp","!Gold Lamp","!Oil Lamp","!Magic Lamp","Genie Lamp","Dull Lamp","Desk Lamp","Shimmering Lamp","Broken Lamp","Brass Lantern","Overhead Lamp","Pedestal Lamp","Incubation Lamp","Fluorescent Lamp","Ultraviolet Lamp","Heat Lamp","Recessed Lighting","Laser Pointer","Spotlight","Flashlight","Search Light","Batsignal","Candelabra","Chandelier","Birthday Candle","Tallow Candle","Wax Candle","Tanning Bed","CRT"],td=["!Random Statue","!Rusty Statue","!Forbidden Statue","Golden Idol","!Strange Statue","!Glass Statue","!Copper Statue","!White Statue","Invisible Statue","Burt Figurine","Draygon Figurine","Karmine Figurine","Mado Figurine","Sabera Figurine","Kelbesque Figurine","Flail Guy Trophy","Metroid Amiibo","Model of Dyna","Jeff Peters Statue","M. Toki Statue","Statue of Liberty","Colossus of Rhodes","Mattrick Figurine","Dragondarch Statue","Overswarm Statue","Trueblue83 Statue","TheAxeMan Idol","Acmlm Figurine","CodeGorilla Trophy"],id=["!Random Bow","Crossbow","Autocrossbow","Long Bow","Compound Bow","Silver Arrows","Wooden Bow","Violin Bow","Tae Bo","Botox","Bo Derek","Bo Diddley","Bo Dallas","Rainbow","Hair Bow","Bow Tie","!Bow of Earth","!Bow of Stars","!Bow of Wind","!Bow of Fire","!Bow of Water","!Bow of Thunder","!Bow of Light","!Bow of Darkness","Bow of Lies","Bow of Life","Bow of Death","Bow of Freedom","JBowe","KLINGSBO","LILLABO","SVALBO","Buriza-Do Kyanon","Windforce","Eaglehorn"];function to(r,i,e){if(!i.unidentifiedItems())return;let t=(...c)=>c.map(d=>r.items[d]),s=t(50,51,52),n=t(39,40,49,54),o=t(53,57),a=t(37,56,58,61),l=t(62,63,64);for(let[c,[...d]]of[[s,_l],[n,$l],[o,ed],[a,td],[l,id]]){let f=(i.communityJokes()?d:d.filter(h=>h.startsWith("!"))).map(h=>h.replace(/^!/,""));e.shuffle(f);let u=e.shuffle([0,1,2,3]);for(let h of c){let p=f.pop();r.spoiler&&r.spoiler.addUnidentifiedItem(h.id,h.messageName,p),h.menuName=h.messageName=p,h.palette=u.pop()}}}var sd=new Map([["Sword of Wind",["Sord of Wind","Sowrd of Wind","Sword of Wien"]],["Sword of Fire",["Sword of Frirer"]],["Sword of Water",["Horde of Otters"]],["Sword of Thunder",["Sorg of Chunker"]],["Flame Bracelet",["Fame Bracelet"]],["Storm Bracelet",["Stom Bracelet"]],["Sacred Shield",["Scared Shield"]],["Bow of Truth",["Bow of Strewth"]],["Statue of Onyx",["Statue of Onxy"]],["Ivory Statue",["Ivory Statute"]],["Fog Lamp",["Frog Lamp","Smog Lamp","Dog Lamp","Bog Lamp","Fog Lump"]],["Glowing Lamp",["Glowing Lump"]],["Key to Stxy",["Key to Styx"]],["Insect Flute",["Bug Flute","Bug Whistle"]],["Flute of Lime",["Flute of Grime"]],["Iron Necklace",["I Ron Necklace"]],["Shield Ring",["Sho Ring"]],["Deo's Pendant",["Rabbit Necklace","Bunny Pendant"]],["Speed Boots",["Hermes Sandals"]],["Rabbit Boots",["Deo's Boots","Jumping Boots","Rabid Boots"]],["Alarm Flute",["Pocket Rooster","Alarm Clock"]],["Shell Flute",["Conch Shell","Dolphin Flute"]],["Eye Glasses",["3D Glasses","X-Ray Goggles"]],["Kirisa Plant",["Kilika Plant"]],["Refresh",["Refresherize","Cure","Cura","Curaga"]],["Recover",["Recoverize","Esuna"]],["Paralysis",["Paralycize","Stop","Pew Pew"]],["Telepathy",["Telepathize","Clairvoyance","ESP","Head Talk"]],["Teleport",["Teleportate","Warp","Go"]],["Change",["Changeify","Transform","Disguise"]],["Barrier",["Barrierize","Protect","Wall","Shield"]],["Flight",["Flyify","Blight","Super Jump"]],["Fruit of Lime",["Fruit of Crime","Gold Needle","Soft"]],["Medical Herb",["Potion","Hi Potion"]],["Fruit of Repun",["Anti-Slime Pill","Maiden's Kiss"]]]),rd=new Map([["Aryllis",["Mimic Queen"]],["Akahana",["Steve","Jerkahana","Mashamahana"]],["Asina",["Athena","Jrowina"]],["Azteca",["Steve"]],["Clark",["Steve","Fred","Mattrick","Clarktrick"]],["Deo",["Steve"]],["Kelbesque",["Linebacker"]],["Kensu",["Steve","Jerksu"]],["Karmine",["Slimelord"]],["Nadare",["Steve"]],["Mado",["Steve"]],["Rage",["Steve"]],["Sabera",["Flamelord"]],["Stom",["Steve"]],["Tornel",["Steve"]],["Zebu",["Steve","Pervy Old Man"]]]),nd=new Map([["Poison Slime",["Mattrick Slime"]],["Mud Golem",["Bear"]],["Axe Wereboar",["The Axeman"]],["Pillbug",["Tomato"]],["Ice Golem",["Polar Bear"]],["Flail Guy",["Kfal's Dude"]],["Flail Knight",["Kfal's Knight"]],["Flying Plant",["Obnoxious Turnip"]],["Beholder",["Floating Eye"]],["Burt",["Bert","Bort","Sorceror"]],["Mummy",["Tornel Hugger"]],["Robot Sentry",["C-3PO","T-1000","Johnny 5"]],["Robot Enforcer",["ED-209","R2-D2","Agent Smith"]],["Robocopter",["Cylon Drone","Megatron","Roflcopter","Roflcopter","Roflcopter"]],["DYNA",["GLaDOS","HAL-9000","Multivac"]]]);function io(r,i,e){!i.communityJokes()||(od(r,i,e),ld(r,e),dd(r,e))}function od(r,i,e){if(i.unidentifiedItems()||"sphereAnalysis"in globalThis)return;let t=e.next()<.05?r.items:[r.items[e.nextInt(72)]];for(let s of t){if(!s)continue;let n=sd.get(s.messageName)||[],o=Math.floor(e.nextInt(3*n.length+1)/3);o<n.length?s.messageName=s.menuName=n[o]:s.messageName===s.menuName&&(s.messageName=s.menuName=_s(s.messageName,e))}}function _s(r,i){let e=r.split(""),t=i.nextInt(e.length-1);return e[t]===" "||e[t+1]===" "?r:(e[t].toUpperCase()===e[t]?e.splice(t+1,1):[e[t],e[t+1]]=[e[t+1],e[t]],e.join(""))}function so(r,i){for(let e of r.messages.parts)for(let t of e)t.text=i(t.text);r.messages.personNames=r.messages.personNames.map(i),ad(r,i)}function ro(r,i){return e=>e.includes(r)?e.split(r).join(i):e}function ad(r,i){for(let e of r.objects)e.displayName&&(e.displayName=i(e.displayName))}function ld(r,i){let e=r.messages.parts[0][24];e.text="Rachel: "+e.text.replace("is the village of","village is");let t=[...rd].flatMap(([a,l])=>["",...l,...l].map(c=>[a,c])),[s,n]=i.pick(t),o=n||_s(s,i);o!==s&&so(r,ro(s,o))}function dd(r,i){for(let e=0;e<10;e++){let[t,s]=i.pick([...nd]),o=i.pick(["",...s,...s,...s])||_s(t,i);o!==t&&so(r,ro(t,o))}}function no(r){let{locations:i}=r,{CordelPlainEast:e,CordelPlainWest:t,WaterfallValleyNorth:s,WaterfallValleySouth:n,MezameShrine:o,MtSabreWest_Cave1:a}=i;e.meta.reconcileExits(t.meta);for(let l of s.meta.allPos()){let c=s.meta.get(l),d=n.meta.get(l);c.isEmpty()&&!d.isEmpty()?s.meta.set(l,d):d.isEmpty()&&!c.isEmpty()&&n.meta.set(l,c)}for(let l of i)!l.used||(l.exits=[],l.entrances=[],l.meta.writeEntrance0());o.meta.getExit(0,"door")||o.meta.attach(0,o.meta,0,"door","door");for(let l of i)!l.used||l!==a&&(l.meta.write(),l===t&&a.used&&a.meta.write())}var Qi=class{constructor(i){this.rom=i;this.slots=[];this.route=[];this.mazes=[];this.trades=[];this.walls=[];this.unidentifiedItems=[];this.wildWarps=[];this.houses=[];this.flags=""}addCheck(i,e){this.route.push(new $s(this,i,e))}addSlot(i,e,t){this.slots[i&255]=new er(this.rom,i&255,e,t&255)}addMaze(i,e,t){this.mazes.push({id:i,name:e,maze:t})}addTrade(i,e,t){this.trades.push({itemId:i,item:e,npc:t})}addUnidentifiedItem(i,e,t){this.unidentifiedItems.push({itemId:i,oldName:e,newName:t})}addWall(i,e,t){this.walls.push({location:i,oldElement:e,newElement:t})}addWildWarp(i,e){this.wildWarps.push({id:i,name:e})}addHouse(i,e){this.houses.push({houseId:i,townId:e,house:this.rom.locations[i].name,town:this.rom.locations[e].name})}formatCondition(i){return this.rom.flags[i]?.name}formatConditionList(i){let e=[];for(let t of i){let s=this.rom.flags[t];s?.logic.track&&e.push(s.name)}return e.join(", ")}},$s=class{constructor(i,e,t){this.spoiler=i;this.condition=e;this.deps=t}toString(){let i=0;return(this.condition&-128)===256&&(i=512|this.spoiler.rom.slots[this.condition&255]),`${this.spoiler.formatCondition(this.condition)}${i?` (${this.spoiler.formatCondition(i)})`:""}: [${this.spoiler.formatConditionList(this.deps)}]`}},er=class{constructor(i,e,t,s){this.slot=e;this.slotName=t;this.item=s;this.itemName=oo(i,s),this.originalItem=oo(i,e)}toString(){return`${this.itemName}: ${this.slotName} (${this.originalItem})`}};function oo(r,i){return i>=112?"Mimic":r.items[r.itemGets[i].itemId].messageName}var ao=new Map([["stair:up","C"],["edge:top","N"],["edge:left","W"],["edge:right","E"],["cave","C"],["door","C"],["door2","C"],["door3","C"],["fortress","F"]]),tr=new Map([["N","S"],["S","N"],["E","W"],["W","E"],["C","X"],["X","C"],["F","O"],["O","F"]]);function cd(r,[i,e,[t,s]]){let n=ao.get(e)||tr.get(ao.get(s)),o=!1,a=r.id.toString(16),l=(r.id<<8|i).toString(16)+" "+e,c=r.rom.locations[t>>>8],d=t&255,f=t.toString(16)+" "+s,u=c.id.toString(16),h={loc:c,pos:d,type:s,area:u,key:f,reverse:null,origRev:null,get conn(){return tr.get(n)},set conn(m){n=tr.get(m)},get shuffle(){return o},set shuffle(m){if(m&&!n)throw new Error("shuffle without conn");o=m}},p={loc:r,pos:i,type:e,key:l,reverse:h,area:a,origRev:h,get conn(){return n},set conn(m){n=m},get shuffle(){return o},set shuffle(m){if(m&&!n)throw new Error("shuffle without conn");o=m}};return h.reverse=h.origRev=p,p}function lo(r,i){return typeof i=="string"?r.type===i:typeof i=="number"?r.pos===i:i instanceof mi?r.reverse.loc===i:i.every(e=>lo(r,e))}function co(r,i,e){if(!i.shuffleAreas())return;let{locations:t}=r,s=new Map,n=new H(()=>[]);for(let w of r.locations)for(let b of w.meta.exits()){if(w===t.CordelPlainEast&&(b[0]&15)<5||w===t.CordelPlainWest&&(b[0]&15)>4||w.isTower())continue;let x=cd(w,b);if(x.loc!==t.Portoa_FortuneTeller&&x.reverse.loc!==t.Portoa_FortuneTeller&&!s.has(x.key)){if(s.has(x.reverse.key))throw new Error(`Inconsistent exits: ${x.key} | ${x.reverse.key}`);s.set(x.key,x),s.set(x.reverse.key,x.reverse),n.get(x.loc).push(x),n.get(x.reverse.loc).push(x.reverse)}}function o(w,...b){let x=[];for(let E of n.get(w))for(let C of b)if(lo(E,C)){x.push(E);break}return x}for(let w of o(t.ValleyOfWind,"door","windmill"))w.area="windmill";for(let w of o(t.AngrySea,100))w.area="lighthouse";o(t.Portoa_FishermanIsland,"edge:right")[0].oneWay=!0;function a(w,...b){for(let x of o(w,...b))x.shuffle=!0}function l(...w){let b=new Set(w);for(let x of w)for(let E of n.get(x))b.has(E.reverse.loc)||(E.shuffle=!0)}if(l(t.Leaf_OutsideStart),a(t.ValleyOfWind,"cave","door","edge:bottom","edge:top","edge:left","edge:right"),l(t.WindmillCave),l(t.EastCave1,t.EastCave2,t.EastCave3),l(t.ZebuCave,t.MtSabreWest_Cave1),l(t.CordelPlainWest,t.CordelPlainEast),l(t.WaterfallValleyNorth,t.WaterfallValleySouth),l(t.KirisaMeadow),l(t.LimeTreeLake),a(t.Portoa_FishermanIsland,"edge:right"),a(t.PortoaPalace_ThroneRoom,"door"),a(t.Joel,"edge:bottom"),l(t.JoelSecretPassage),a(t.EvilSpiritIsland1,"stair:up"),a(t.ZombieTown,"cave"),a(t.AngrySea,"edge:top"),l(t.SwanGate),a(t.GoaValley,"edge:left"),l(t.Desert1),l(t.GoaFortressBasement),l(t.DesertCave1),l(t.SaharaOutsideCave),l(t.DesertCave2),a(t.Desert2,"stair:down"),!i.shuffleHouses()){let w=[[t.ZombieTown,"fortress"],[t.MtHydra,"gate"],[t.Desert2,"fortress"],[t.Goa,"edge:top"],[t.Portoa,"fortress"],[t.Shyron,"fortress"],[t.GoaValley,"fortress"],[t.OasisCave_Entrance,"stair:up"],[t.MtHydra_OutsideShyron,"gate"],[t.Crypt_Entrance,"crypt"]];for(let[b,x]of w){let[E]=o(b,x);E.conn="F",E.shuffle=!0}}{let[w]=o(t.Oak,"edge:bottom");w.conn="X",w.shuffle=!0}let c=new Ge;for(let w of s.values())w.shuffle||c.union([w.area,w.reverse.area]);let d=new H(()=>[]);for(let w of s.values())!w.shuffle||d.get(w.area=c.find(w.area)).push(w);let f=n.get(t.MezameShrine)[0].area;function u(){let w=new Set,b=new Map,x=[];for(let C of[f,...d.keys()]){if(w.has(C))continue;let B=new Set([C]),S=[];for(let M of B){w.add(M);for(let G of d.get(M))b.set(G,x.length),S.push(G),!(G.oneWay||w.has(G.reverse.area))&&B.add(G.reverse.area)}x.push(S)}let E=0;for(let C=1;C<x.length;C++)x[C].length<x[E].length&&(E=C);return[x.length,b,x[E]]}let h=new H(()=>[]);for(let w of s.values())!w.shuffle||!w.conn||h.get(w.conn).push(w);for(let w of"NWCF"){let b=h.get(w),x=e.shuffle([...b]).map(E=>E.reverse);for(let E=0;E<x.length;E++){let C=b[E],B=x[E];[C.reverse,B.reverse]=[B,C]}}let p=0,[m,g,y]=u();for(;p-- >0||m>1;){let w=e.pick(y),b=h.get(w.conn);if(m>1){let B=g.get(w);b=b.filter(S=>g.get(S)!==B)}let x=e.pick(b),E=w.reverse,C=x.reverse;if(w.reverse=C,C.reverse=w,x.reverse=E,E.reverse=x,[m,g,y]=u(),p<-10)debugger}for(let w of s.values()){if(w.reverse!==w.origRev){let b=function(x){return`${x.loc.name} ${x.type}(${x.pos.toString(16)})`};console.log(`${b(w)}  =>  ${b(w.reverse)}  (was ${b(w.origRev)})`)}w.loc.meta.attach(w.pos,w.reverse.loc.meta,w.reverse.pos,w.type,w.reverse.type)}}function fo(r){for(let i of r.locations){let e=new Set;for(let t of i.spawns)if(!!t.isTrigger()&&e.has(t.coord))throw new Error(`Overlapping triggers on ${i} at ${t.coord.toString(16)}`)}}var ir=!0,ho=wr("asm");function Au(r){return r?/^[0-9a-f]{1,8}$/i.test(r)?Number.parseInt(r,16):xi(r):Rt.newSeed()}var{}={watchArray:hr};function fd(r,i){let e={_ALLOW_TELEPORT_OUT_OF_BOSS:r.hardcoreMode()&&r.shuffleBossElements(),_ALLOW_TELEPORT_OUT_OF_TOWER:!0,_AUDIBLE_WALLS:r.audibleWallCues(i),_AUTO_EQUIP_BRACELET:r.autoEquipBracelet(i),_BARRIER_REQUIRES_CALM_SEA:!0,_BUFF_DEOS_PENDANT:r.buffDeosPendant(),_BUFF_DYNA:r.buffDyna(),_CHECK_FLAG0:!0,_CTRL1_SHORTCUTS:r.controllerShortcuts(i),_CUSTOM_SHOOTING_WALLS:!0,_DISABLE_SHOP_GLITCH:r.disableShopGlitch(),_DISABLE_STATUE_GLITCH:r.disableStatueGlitch(),_DISABLE_SWORD_CHARGE_GLITCH:r.disableSwordChargeGlitch(),_DISABLE_TRIGGER_SKIP:r.disableTriggerGlitch(),_DISABLE_WARP_BOOTS_REUSE:r.disableShopGlitch(),_DISABLE_WILD_WARP:!1,_EXPAND_PRG:ir,_EXTRA_EXTENDED_SCREENS:!0,_EXTRA_PITY_MP:!0,_FIX_BLIZZARD_SPAWN:!0,_FIX_COIN_SPRITES:!0,_FIX_OPEL_STATUE:!0,_FIX_SHAKING:!0,_FIX_SWORD_MANA_CHECK:!0,_FIX_VAMPIRE:!0,_HAZMAT_SUIT:r.changeGasMaskToHazmatSuit(),_LEATHER_BOOTS_GIVE_SPEED:r.leatherBootsGiveSpeed(),_MAX_SCALING_IN_TOWER:r.maxScalingInTower(),_MONEY_AT_START:r.shuffleHouses()||r.shuffleAreas(),_NERF_FLIGHT:!0,_NERF_MADO:!0,_NEVER_DIE:r.neverDie(),_NORMALIZE_SHOP_PRICES:r.shuffleShops(),_PITY_HP_AND_MP:!0,_PROGRESSIVE_BRACELET:!0,_RABBIT_BOOTS_CHARGE_WHILE_WALKING:r.rabbitBootsChargeWhileWalking(),_RANDOM_FLYER_SPAWNS:!0,_REQUIRE_HEALED_DOLPHIN_TO_RIDE:r.requireHealedDolphinToRide(),_REVERSIBLE_SWAN_GATE:!0,_SAHARA_RABBITS_REQUIRE_TELEPATHY:r.saharaRabbitsRequireTelepathy(),_SIMPLIFY_INVISIBLE_CHESTS:!0,_SOFT_RESET_SHORTCUT:!0,_STATS_TRACKING:r.hasStatTracking(),_TELEPORT_ON_THUNDER_SWORD:r.teleportOnThunderSword(),_TINK_MODE:!r.guaranteeMatchingSword(),_TRAINER:r.trainer(),_TWELFTH_WARP_POINT:!0,_UNIDENTIFIED_ITEMS:r.unidentifiedItems(),_ENEMY_HP:r.shouldUpdateHud(),_UPDATE_HUD:r.shouldUpdateHud(),_WARP_FLAGS_TABLE:!0,_ZEBU_STUDENT_GIVES_ITEM:r.zebuStudentGivesItem()};return Object.keys(e).filter(t=>e[t]).map(t=>`.define ${t} ${e[t]}
`).join("")}function hd(r,i){for(let e of i)xt.applyPatch(e,r,ir)}async function Bu(r,i,e,t,s,n){let o=16+(r[6]&4?512:0)+(r[4]<<14)+(r[5]<<13);if(r.length>o&&(r=r.slice(0,o)),ir&&r.length<524288){if(r.length<524288){let h=new Uint8Array(r.length+262144);h.subarray(0,262160).set(r.subarray(0,262160)),h.subarray(524304).set(r.subarray(262160)),h[4]<<=1,r=h}let u=r.subarray(16);u.subarray(507904,524288).set(u.subarray(245760,262144))}let a=r.slice(16);if(Bn(r.subarray(16)),typeof i!="number")throw new Error("Bad seed");let l=xi(i.toString(16).padStart(8,"0")+String(e.filterOptional()))>>>0,c=new Rt(l),d=t||[],f=[];for(let u=0;u<5;u++)try{return await ud(r,e,i,c,s,n,d,a)}catch(h){f.push(h),console.error(`Attempt ${u+1} failed: ${h.stack}`)}throw new Error(`Shuffle failed: ${f.map(u=>u.stack).join(`

`)}`)}async function ud(r,i,e,t,s,n,o,a){let l=String(i),c=i.filterRandom(t),d=new br(r),f=String(c);d.flags.defrag(),Fn(d),Gn(d),typeof window=="object"&&(window.rom=d),d.spoiler=new Qi(d),s&&(s.spoiler=d.spoiler),f!==l&&(d.spoiler.flags=f),Pn(d,c),xr(d),ei(d,ei.generateOptions(c,t)),d.scalingLevels=48,c.shuffleShops()&&pd(d,c,t),c.shuffleGoaFloors()&&Yn(d,t),xd(d),gd(d,c,t),An(d,t),c.nerfWildWarp()&&d.wildWarp.locations.fill(0),c.randomizeWildWarp()&&bd(d,c,t),c.randomizeThunderTeleport()&&Vn(d,t),jn(d,c,t),to(d,c,t),io(d,c,t),Nn(d,c,t),c.shuffleHouses()&&Jn(d,c,t),c.shuffleAreas()&&co(d,c,t),Hn(d),c.randomizeMaps()&&Mr(d,c,t),no(d),Qn(d,t),c.shuffleMimics()&&Xn(d,c,t),c.shuffleMonsters()&&$n(d,c,t);let u=new Yi(d,c),h=new Hi([u.getLocationList()]);if(!c.noShuffle()){let w=await h.shuffle(c,t,void 0,n,d.spoiler);if(w){for(let[b,x]of w)d.slots[b&255]=x&255;d.slots.setCheckCount(w.size)}else return[r,-1]}c.shuffleShops()&&Ed(d,c.bargainHunting()?t:void 0),c.buffMedicalHerb()&&(d.items.MedicalHerb.value=80,d.items.FruitOfPower.value=56),c.storyMode()&&vd(d),c.blackoutMode()&&Sd(d),md(d,c,t),Dn(d),qn(d),fo(d),c.buffDyna()&&yd(d,c),c.trainer()&&(d.wildWarp.locations=[10,26,53,72,109,110,140,170,172,176,182,159,166,88,92,0]),c.randomizeMusic("early")&&uo(d,c,t),c.shuffleTilePalettes("early")&&Qs(d,c,t),Cd(d,c),t.shuffle(d.randomNumbers.values);async function p(w){let b=fd(c,w),x=new dr(is.P02),E=new fr;E.enter(lr.concat(new as(b,"flags.s"),...xn().map(({filename:B,contents:S})=>new as(vn(S,is.P02,a),B,{lineContinuations:!0}))));let C=new cr(E,x);return x.tokens(C),x.module()}d.messages.compress();let m=r.slice(16);d.modules.set(ho,await p("early")),d.writeData(m),d.modules.set(ho,await p("late"));let g=o?.some(w=>xt.isCustom(w))||!1,y=kd(r,e,l,m,g);return c.randomizeMusic("late")&&uo(d,c,t),c.noMusic("late")&&wd(d),c.shuffleTilePalettes("late")&&Qs(d,c,t),Kn(d),d.writeData(),hd(r,o),[r,y]}function md(r,i,e){let{}={rom:r,flags:i,random:e};r.messages.parts[2][2].text=`
{01:Akahana} is handed a statue.#
Thanks for finding that.
I was totally gonna sell
it for tons of cash.#
Here, have this lame
[29:Gas Mask] or something.`,r.messages.parts[0][14].text="It's dangerous to go alone! Take this.",r.messages.parts[0][14].fixText()}function pd(r,i,e){let t={[0]:{contents:[],shops:[]},[1]:{contents:[],shops:[]}};for(let s of r.shops){if(!s.used||s.location===255)continue;let n=t[s.type];n&&(n.contents.push(...s.contents.filter(o=>o!==255)),n.shops.push(s),s.contents=[])}for(let s of Object.values(t)){let n=null,o=[...s.contents];for(e.shuffle(o);o.length;){(!n||!n.length)&&(n&&o.shift(),n=[...s.shops,...s.shops,...s.shops,...s.shops],e.shuffle(n));let a=o[0],l=n[0];l.contents.length<4&&!l.contents.includes(a)&&(l.contents.push(a),o.shift()),n.shift()}}for(let s of Object.values(t))for(let n of s.shops){for(;n.contents.length<4;)n.contents.push(255);n.contents.sort((o,a)=>o-a)}}function xd(r){for(let i of r.locations)if(!!i.used){for(let e of i.spawns)if(e.isWall()){let t=e.id&15;e.id=t|t<<4;let s=e.isShootingWall(i);e.data[2]=s?51:35}}}function gd(r,i,e){if(!i.randomizeWalls())return;let t=[[5,56],[17],[106],[20]];function s(o){return o.data[2]&32?o.id>>>4&3:o.id&3}let n=new H(()=>[]);for(let o of r.locations)n.get(o.data.area).push(o);for(let o of n.values()){let a=e.nextInt(4),l=e.pick(t[a]),c=!1;for(let d of o)for(let f of d.spawns)if(f.isWall()){let u=s(f);if(u===2)continue;if(u===3){let h=e.nextInt(4);r.spoiler&&r.spoiler.addWall(d.name,u,h),f.data[2]|=32,f.id=48|h}else!c&&r.spoiler&&(r.spoiler.addWall(d.name,u,a),c=!0),f.data[2]|=32,f.id=u<<4|a,d.tilePalettes[2]=l}}}function wd(r){for(let i of[...r.locations,...r.bosses.musics])i.bgm=0}function uo(r,i,e){let t=new H(()=>[]),s=new Set;for(let a of r.locations){if(a.id===95||a.id===0||!a.used)continue;let l=a.musicGroup;s.add(a.bgm),t.get(l).push(a)}for(let a of r.bosses.musics)t.set(a,[a]),s.add(a.bgm);let n=[...s],o=new Set;for(let a of t.values()){let l=e.pick(n);for(let c of a)c.bgm=l,o.add(c)}}function bd(r,i,e){let t=[];for(let s of r.locations)s&&s.used&&s.id&&!s.isShop()&&(s.id&248)!==88&&s!==r.locations.Crypt_Draygon2&&s!==r.locations.Crypt_Teleporter&&s!==r.locations.MesiaShrine&&s!==r.locations.LimeTreeLake&&t.push(s);e.shuffle(t),r.wildWarp.locations=[];for(let s of[...t.slice(0,15).sort((n,o)=>n.id-o.id)])r.wildWarp.locations.push(s.id),r.spoiler&&r.spoiler.addWildWarp(s.id,s.name);r.wildWarp.locations.push(0)}function yd(r,i){r.objects[184].collisionPlane=1,r.objects[184].immobile=!0,r.objects[185].collisionPlane=1,r.objects[185].immobile=!0,r.objects[51].collisionPlane=2,r.adHocSpawns[40].slotRangeLower=28,r.adHocSpawns[41].slotRangeUpper=28,r.adHocSpawns[42].slotRangeUpper=28}function Sd(r){let i=new Set([r.metatilesets.cave.tilesetId,r.metatilesets.fortress.tilesetId,r.metatilesets.iceCave.tilesetId,r.metatilesets.labyrinth.tilesetId,r.metatilesets.pyramid.tilesetId]);for(let e of r.locations)i.has(e.tileset)&&e.tilePalettes.fill(154)}var vd=r=>{let i=[r.flags.Kelbesque1.id,r.flags.Sabera1.id,r.flags.Mado1.id,r.flags.Kelbesque2.id,r.flags.Sabera2.id,r.flags.Mado2.id,r.flags.Karmine.id,r.flags.Draygon1.id,r.flags.SwordOfWind.id,r.flags.SwordOfFire.id,r.flags.SwordOfWater.id,r.flags.SwordOfThunder.id];r.npcs[203].spawnConditions.get(166).push(...i)};function kd(r,i,e,t,s){let n=xi(t),o=n.toString(16).padStart(8,"0").toUpperCase(),a=ws==="unstable"?Fr.substring(0,7).padStart(7,"0").toUpperCase()+"     ":Ir.substring(0,12).padEnd(12," "),l=i.toString(16).padStart(8,"0").toUpperCase(),c=(u,...h)=>{u+=16;for(let p of h)if(typeof p=="string")for(let m of p)r[u++]=m.charCodeAt(0);else if(typeof p=="number")r[u++]=p;else throw new Error(`Bad value: ${p}`)},d=(u,h)=>{let p=[];for(let m=0;m<u.length||m<h.length;m++)p.push(u[m]||" "),p.push(h[m]||" ");return p.join("")};c(161743,d("  VERSION     SEED      ",`  ${a}${l}`));let f;if(e.length>46){if(e.length>92)throw new Error("Flag string way too long!");f=e.substring(46,92).padEnd(46," "),e=e.substring(0,46)}return e=e.padEnd(46," "),c(161791,d(e.substring(0,23),e.substring(23))),f&&c(161839,d(f.substring(0,23),f.substring(23))),s&&c(161923,126),c(161925,d(o.substring(0,4),o.substring(4))),c(153366,"RANDOMIZER"),ws==="unstable"&&c(153404,"BETA"),n}function Cd(r,i){i.decreaseEnemyDamage()&&r.scaling.setPhpFormula(e=>16+6*e),r.scaling.setExpScalingFactor(i.expScalingFactor()),i.disableShopGlitch()?r.coinDrops.values=[0,5,10,15,25,40,65,105,170,275,445,600,700,800,900,1e3]:r.coinDrops.values=[0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800],r.items.CarapaceShield.defense=r.items.TannedHide.defense=3,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=9,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=13,r.items.PsychoArmor.defense=r.items.PsychoShield.defense=20,r.items.CeramicSuit.defense=r.items.BattleShield.defense=32,r.items.CarapaceShield.defense=r.items.TannedHide.defense=2,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=10,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=14,r.items.BattleArmor.defense=24}var Ed=(r,i)=>{for(let t of r.shops)if(t.type!==3)for(let s=0,n=t.prices.length;s<n;s++)t.contents[s]<128?t.prices[s]=i?i.nextNormal(1,.3,.5,1.5):1:t.type!==2?t.prices[s]=0:t.prices[s]=i?i.nextNormal(1,.5,.375,1.625):1;let e=le(48,t=>t);r.shops.rescale=!0,r.shops.toolShopScaling=e.map(t=>Math.round(8*2**(t/10))),r.shops.armorShopScaling=e.map(t=>Math.round(8*2**((47-t)/12)));for(let t=13;t<39;t++)r.items[t].basePrice=Td[t]},Td={13:4,14:16,15:50,16:325,17:1e3,18:2e3,19:4e3,21:6,22:20,23:75,24:250,25:1e3,26:4800,29:25,30:30,31:45,32:40,33:36,34:200,35:150,36:65,38:300},[]=[ee];var _i=r=>"",sr=r=>r===!0?!1:r,rr=class{constructor(i,e){this.flag=i;this.opts=e;rr.flags.set(i,this)}static all(){return[...this.flags.values()]}},Ne=rr;Ne.flags=new Map;var ve=class{constructor(i,e,t,s){this.name=e;this.description=t;this.flags=s.map(n=>n instanceof Ne?[n,!0]:n),i.presets.set(mo(e),this)}static all(){return dt.instance||(dt.instance=new dt),[...dt.instance.presets.values()]}get flagString(){return this._flagString==null&&(this._flagString=String(new si(`@${this.name}`))),this._flagString}};function mo(r){return r.toLowerCase().replace(/[^a-z]/g,"")}var dt=class{constructor(){this.presets=new Map;this.Casual=new ve(this,"Casual",`
      Basic flags for a relatively easy playthrough.  This is a good
      place to start.`,[X.PreserveUniqueChecks,X.NoShuffleMimics,X.DecreaseEnemyDamage,X.GuaranteeRefresh,X.GuaranteeStartingSword,X.ExperienceScalesFaster,X.NoCommunityJokes,U.NoThunderSwordWarp,$.Shops,$.Dyna,[$.Maps,"!"],[$.WildWarp,"!"],ge.SpoilerLog]);this.Classic=new ve(this,"Classic",`
      Provides a relatively quick playthough with a reasonable amount of
      challenge.  Similar to older versions.`,[X.GuaranteeStartingSword,X.NoCommunityJokes,D.StatueGlitch,[U.NoThunderSwordWarp,"!"],[$.Maps,"!"],ge.SpoilerLog]);this.Standard=new ve(this,"Standard",`
      Well-balanced, standard race flags.`,[ne.RandomizeWeaknesses,U.StoryMode,ge.SpoilerLog]);this.NoBowMode=new ve(this,"No Bow Mode",`
      The tower is open from the start, as soon as you're ready for it.`,[ne.RandomizeWeaknesses,ne.TowerRobots,te.MaxScalingInTower,U.NoBowMode,ge.SpoilerLog]);this.Advanced=new ve(this,"Advanced",`
      A balanced randomization with quite a bit more difficulty.`,[D.GhettoFlight,D.MtSabreRequirementSkip,D.StatueGlitch,[D.SwordChargeGlitch,"!"],ie.Barrier,ie.BattleMagic,ie.GasMask,te.MaxScalingInTower,ne.RandomizeWeaknesses,ne.TowerRobots,U.OrbsNotRequired,U.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.UnidentifiedKeyItems,ge.SpoilerLog]);this.WildWarp=new ve(this,"Wild Warp",`
      Significantly opens up the game right from the start with wild
      warp in logic.`,[X.GuaranteeRefresh,I.RandomizeWildWarp,ne.RandomizeWeaknesses,ne.TowerRobots,U.OrbsNotRequired,U.StoryMode,ge.SpoilerLog]);this.Mystery=new ve(this,"Mystery",`
      Even the options are random.`,[[I.ShuffleAreas,"?"],[I.ShuffleHouses,"?"],[I.RandomizeMaps,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeWildWarp,"?"],[U.OrbsNotRequired,"?"],[U.NoBowMode,"?"],[U.StoryMode,"?"],[U.VanillaDolphin,"?"],[U.NoThunderSwordWarp,"?"],[D.RageSkip,"?"],[D.TriggerSkip,"?"],[D.StatueGlitch,"?"],[D.GhettoFlight,"?"],[D.SwordChargeGlitch,"?"],[D.MtSabreRequirementSkip,"?"],[Qe.RandomizeMusic,"?"],[Qe.RandomizeMapColors,"?"],[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],[X.NoShuffleMimics,"?"],[X.PreserveUniqueChecks,"?"],[ie.Barrier,"?"],[ie.BattleMagic,"?"],[ie.GasMask,"?"],[$.Dyna,"?"],[$.BonusItems,"?"],[$.Maps,"?"],ge.SpoilerLog]);this.Hardcore=new ve(this,"Hardcore",`
      Not for the faint of heart.  Good luck.`,[ie.Barrier,ie.BattleMagic,te.ExperienceScalesSlower,te.MaxScalingInTower,te.Permadeath,U.OrbsNotRequired,U.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.UnidentifiedKeyItems]);this.FullStupid=new ve(this,"The Full Stupid",`
      Only a few noble fools have ever completed this.  Be sure to record this
      because pics or it didn't happen.`,[ie.Barrier,ie.BattleMagic,te.Blackout,te.ExperienceScalesSlower,te.MaxScalingInTower,te.Permadeath,ne.RandomizeWeaknesses,ne.TowerRobots,U.OrbsNotRequired,U.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.ShuffleGoaFloors,I.UnidentifiedKeyItems]);this.Tournament2022Early=new ve(this,"Tournament 2022 Early Rounds",`
      Lots of potential complexity, but within reason.  Requires all swords and
      bosses, as well as a few glitches, but guarantees a starting sword.`,[X.GuaranteeStartingSword,D.StatueGlitch,D.StatueGauntletSkip,[ne.RandomizeWeaknesses,"?"],U.OrbsNotRequired,U.StoryMode,[U.VanillaDolphin,"?"],[U.NoThunderSwordWarp,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]]);this.Tournament2022Mid=new ve(this,"Tournament 2022 Mid Rounds",`
      Some additional challenges compared to the early rounds: some additional
      mystery flags and glitches, as well as max difficulty scaling in the
      tower.`,[[X.GuaranteeStartingSword,"?"],[D.GhettoFlight,"?"],[D.StatueGlitch,"?"],[D.MtSabreRequirementSkip,"?"],[D.StatueGauntletSkip,"?"],te.MaxScalingInTower,[te.NoBuffMedicalHerb,"?"],[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],[ie.Barrier,"?"],[ie.BattleMagic,"?"],U.StoryMode,[U.VanillaDolphin,"?"],[U.OrbsNotRequired,"?"],[U.NoThunderSwordWarp,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]]);this.Tournament2022Finals=new ve(this,"Tournament 2022 Finals Round",`
      Many of the more difficult mystery flags from the mid rounds are now
      always on, plus entrance shuffle.`,[[X.GuaranteeStartingSword,"?"],D.GhettoFlight,D.StatueGlitch,D.MtSabreRequirementSkip,D.StatueGauntletSkip,te.NoBuffMedicalHerb,te.MaxScalingInTower,[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],ie.Barrier,ie.BattleMagic,U.StoryMode,[U.VanillaDolphin,"?"],[U.OrbsNotRequired,"?"],[U.NoThunderSwordWarp,"?"],I.ShuffleHouses,[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]])}static get(i){return this.instance||(this.instance=new dt),this.instance.presets.get(mo(i))}},nr=class{constructor(){this.flags=new Map}static all(){return[...this.sections]}static flag(i,e){nr.sections.add(this.instance||(this.instance=new this));let t=new Ne(i,e);if(!i.startsWith(this.instance.prefix))throw new Error(`bad flag ${i} ${e}`);return this.instance.flags.set(i,t),t}},ke=nr;ke.sections=new Set;var Ve=class extends ke{constructor(){super(...arguments);this.prefix="W";this.name="World"}},I=Ve;I.RandomizeMaps=Ve.flag("Wm",{name:"Randomize maps",text:`Individual maps are randomized.  For now this is only a subset of
           possible maps.  A randomized map will have all the same features
           (exits, chests, NPCs, etc) except things are moved around.`,hard:!0}),I.ShuffleAreas=Ve.flag("Wa",{name:"Shuffle areas",text:"Shuffles some or all area connections.",hard:!0}),I.ShuffleHouses=Ve.flag("Wh",{name:"Shuffle house entrances",text:`Shuffles all the house entrances, as well as a handful of other
           things, like the palace/fortress-type entrances at the top of
           several towns, and standalone houses.`,hard:!0}),I.RandomizeTrades=Ve.flag("Wt",{name:"Randomize trade-in items",text:`Items expected by various NPCs will be shuffled: specifically,
           Statue of Onyx, Kirisa Plant, Love Pendant, Ivory Statue, Fog
           Lamp, and Flute of Lime (for Akahana).  Rage will expect a
           random sword, and Tornel will expect a random bracelet.`,hard:!0}),I.UnidentifiedKeyItems=Ve.flag("Wu",{name:"Unidentified key items",text:`Item names will be generic and effects will be shuffled.  This
           includes keys, flutes, lamps, and statues.`,hard:!0}),I.RandomizeWallElements=Ve.flag("We",{name:"Randomize elements to break walls",text:`Walls will require a randomized element to break.  Normal rock and
           ice walls will indicate the required element by the color (light
           grey or yellow for wind, blue for fire, bright orange ("embers") for
           water, or dark grey ("steel") for thunder.  The element to break
           these walls is the same throughout an area.  Iron walls require a
           one-off random element, with no visual cue, and two walls in the
           same area may have different requirements.`}),I.ShuffleGoaFloors=Ve.flag("Wg",{name:"Shuffle Goa fortress floors",text:"The four areas of Goa fortress will appear in a random order."}),I.RandomizeSpriteColors=Ve.flag("Ws",{name:"Randomize sprite colors",text:`Monsters and NPCs will have different colors.  This is not an
           optional flag because it affects what monsters can be grouped
           together.`}),I.RandomizeWildWarp=Ve.flag("Ww",{name:"Randomize wild warp",text:`Wild warp will go to Mezame Shrine and 15 other random locations.
           These locations will be considered in-logic.`,excludes:["Vw"]});var Ut=class extends ke{constructor(){super(...arguments);this.prefix="R";this.name="Routing"}},U=Ut;U.StoryMode=Ut.flag("Rs",{name:"Story Mode",text:`Draygon 2 won't spawn unless you have all four swords and have
           defeated all major bosses of the tetrarchy.`}),U.NoBowMode=Ut.flag("Rb",{name:"No Bow mode",text:`No items are required to finish the game.  An exit is added from
           Mezame shrine directly to the Draygon 2 fight (and the normal entrance
           is removed).  Draygon 2 spawns automatically with no Bow of Truth.`}),U.OrbsNotRequired=Ut.flag("Ro",{name:"Orbs not required to break walls",text:"Walls can be broken and bridges formed with level 1 shots."}),U.NoThunderSwordWarp=Ut.flag("Rt",{name:"No Sword of Thunder warp",text:`Normally when acquiring the thunder sword, the player is instantly
           warped to a random town.  This flag disables the warp.  If set as
           "R!t", then the warp will always go to Shyron, like in vanilla.`,modes:"!"}),U.VanillaDolphin=Ut.flag("Rd",{name:"Vanilla Dolphin interactions",text:`By default, the randomizer changes a number of dolphin and boat
           interactions: (1) healing the dolphin and having the Shell Flute
           is no longer required before the fisherman spawns: instead, he
           will spawn as soon as you have the item he wants; (2) talking to
           Kensu in the beach cabin is no longer required for the Shell Flute
           to work: instead, the Shell Flute will always work, and Kensu will
           spawn after the Fog Lamp is turned in and will give a key item
           check.  This flag restores the vanilla interaction where healing
           and shell flute are required, and Kensu no longer drops an item.`});var at=class extends ke{constructor(){super(...arguments);this.prefix="G";this.name="Glitches";this.description=`
      By default, the randomizer disables all known glitches (except ghetto
      flight).  These flags selectively re-enable certain glitches.  Most of
      these flags have two modes: normally enabling a glitch will add it as
      possibly required by logic, but clicking a second time will add a '!'
      and enable the glitch outside of logic (e.g. "G!c").`}},D=at;D.GhettoFlight=at.flag("Gf",{name:"Ghetto flight",text:`Ghetto flight allows using Dolphin and Rabbit Boots to fly up the
           waterfalls in the Angry Sea (without calming the whirlpools).
           This is done by swimming up to a diagonal beach and jumping
           in a different direction immediately before disembarking.`}),D.StatueGlitch=at.flag("Gs",{name:"Statue glitch",text:`Statue glitch allows getting behind statues that block certain
           entrances: the guards in Portoa, Amazones, Oak, Goa, and Shyron,
           as well as the statues in the Waterfall Cave.  It is done by
           approaching the statue from the top right and holding down and
           left on the controller while mashing B.`,modes:"!"}),D.MtSabreRequirementSkip=at.flag("Gn",{name:"Mt Sabre requirements skip",text:`Entering Mt Sabre North normally requires (1) having Teleport,
           and (2) talking to the rabbit in Leaf after the abduction (via
           Telepathy).  Both of these requirements can be skipped: first by
           flying over the river in Cordel plain rather than crossing the
           bridge, and then by threading the needle between the hitboxes in
           Mt Sabre North.`,modes:"!"}),D.StatueGauntletSkip=at.flag("Gg",{name:"Statue gauntlet skip",text:`The shooting statues in front of Goa and Stxy normally require
           Barrier to pass safely.  With this flag, Flight can also be used
           by flying around the edge of the statue.`,modes:"!"}),D.SwordChargeGlitch=at.flag("Gc",{name:"Sword charge glitch",text:`Sword charge glitch allows charging one sword to the level of
           another sword by equipping the higher-level sword, re-entering
           the menu, changing to the lower-level sword without exiting the
           menu, creating a hard save, resetting, and then continuing.`,hard:!0,modes:"!"}),D.TriggerSkip=at.flag("Gt",{name:"Trigger skip",text:`A wide variety of triggers and exit squares can be skipped by
           using an invalid item every frame while walking.  This allows
           bypassing both Mt Sabre North entrance triggers, the Evil Spirit
           Island entrance trigger, triggers for guards to move, slopes,
           damage tiles, and seamless map transitions.`,hard:!0,modes:"!"}),D.RageSkip=at.flag("Gr",{name:"Rage skip",text:`Rage can be skipped by damage-boosting diagonally into the Lime
           Tree Lake screen.  This provides access to the area beyond the
           lake if flight or bridges are available.  For simplicity, the
           logic only assumes this is possible if there's a flyer.`,hard:!0,modes:"!"});var ci=class extends ke{constructor(){super(...arguments);this.prefix="A";this.name="Aesthetics";this.description=`
      These flags don't directly affect gameplay or shuffling, but they do
      affect the experience significantly enough that there are three modes
      for each: "off", "optional" (no exclamation point), and "required"
      (exclamation point).  The first two are equivalent for seed generation
      purposes, so that you can play the same seed with either setting.
      Setting it to "!" will change the seed.`}},Qe=ci;Qe.RandomizeMusic=ci.flag("Am",{name:"Randomize background music",modes:"!",optional:sr}),Qe.NoMusic=ci.flag("As",{name:"No background music",optional:_i}),Qe.RandomizeMapColors=ci.flag("Ac",{name:"Randomize map colors",modes:"!",optional:sr});var $i=class extends ke{constructor(){super(...arguments);this.prefix="M";this.name="Monsters"}},ne=$i;ne.RandomizeWeaknesses=$i.flag("Me",{name:"Randomize monster weaknesses",text:"Monster and boss elemental weaknesses are shuffled."}),ne.TowerRobots=$i.flag("Mt",{name:"Shuffle tower robots",text:`Tower robots will be shuffled into the normal pool.  At some
           point, normal monsters may be shuffled into the tower as well.`,hard:!0});var lt=class extends ke{constructor(){super(...arguments);this.prefix="E";this.name="Easy Mode";this.description=`
      The following options make parts of the game easier.`}},X=lt;X.NoShuffleMimics=lt.flag("Et",{name:"Don't shuffle mimics.",text:"Mimics will be in their vanilla locations."}),X.PreserveUniqueChecks=lt.flag("Eu",{name:"Keep unique items and consumables separate",text:`Normally all items and mimics are shuffled into a single pool and
           distributed from there.  If this flag is set, unique items
           (specifically, anything that cannot be sold) will only be found in
           either (a) checks that held unique items in vanilla, or (b) boss
           drops.  Chests containing consumables in vanilla may be safely
           ignored, but chests containing unique items in vanilla may still
           end up with non-unique items because of bosses like Vampire 2 that
           drop consumables.  If mimics are shuffled, they will only be in
           consumable locations.`}),X.DecreaseEnemyDamage=lt.flag("Ed",{name:"Decrease enemy damage",text:`Enemy attack power will be significantly decreased in the early game
           (by a factor of 3).  The gap will narrow in the mid-game and eventually
           phase out at scaling level 40.`}),X.GuaranteeStartingSword=lt.flag("Es",{name:"Guarantee starting sword",text:`The Leaf elder is guaranteed to give a sword.  It will not be
           required to deal with any enemies before finding the first sword.`}),X.GuaranteeRefresh=lt.flag("Er",{name:"Guarantee refresh",text:`Guarantees the Refresh spell will be available before fighting
           Tetrarchs.`}),X.ExperienceScalesFaster=lt.flag("Ex",{name:"Experience scales faster",text:'Less grinding will be required to "keep up" with the game difficulty.',excludes:["Hx"]}),X.NoCommunityJokes=lt.flag("Ec",{name:"No community jokes",text:`Skip community jokes, such as funny/misspelled item, monster, or
           character names.  This will make it easier to look up information
           in guides/FAQs if necessary.`});var ti=class extends ke{constructor(){super(...arguments);this.prefix="N";this.name="No guarantees";this.description=`
      Removes various guarantees from the logic.`}},ie=ti;ie.BattleMagic=ti.flag("Nw",{name:"Battle magic not guaranteed",text:`Normally, the logic will guarantee that level 3 sword charges are
           available before fighting the tetrarchs (with the exception of Karmine,
           who only requires level 2).  This disables that check.`,hard:!0}),ie.MatchingSword=ti.flag("Ns",{name:'Matching sword not guaranteed ("Tink Mode")',text:`Enables "tink strats", where wrong-element swords will still do a
           single damage per hit.  Player may be required to fight monsters
           (including bosses) with tinks.`,hard:!0}),ie.Barrier=ti.flag("Nb",{name:"Barrier not guaranteed",text:`Normally, the logic will guarantee Barrier (or else refresh and shield
           ring) before entering Stxy, the Fortress, or fighting Karmine.  This
           disables that check.`,hard:!0}),ie.GasMask=ti.flag("Ng",{name:"Gas mask not guaranteed",text:`The logic will not guarantee gas mask before needing to enter the swamp,
           nor will leather boots (or hazmat suit) be guaranteed to cross long
           stretches of spikes.  Gas mask is still guaranteed to kill the insect.`,hard:!0});var bt=class extends ke{constructor(){super(...arguments);this.prefix="H";this.name="Hard mode"}},te=bt;te.NoBuffMedicalHerb=bt.flag("Hm",{name:"Don't buff medical herb or fruit of power",text:`Medical Herb is not buffed to heal 80 damage, which is helpful to make
           up for cases where Refresh is unavailable early.  Fruit of Power is not
           buffed to restore 56 MP.`,hard:!0}),te.MaxScalingInTower=bt.flag("Ht",{name:"Max scaling level in tower",text:"Enemies in the tower spawn at max scaling level.",hard:!0}),te.ExperienceScalesSlower=bt.flag("Hx",{name:"Experience scales slower",text:'More grinding will be required to "keep up" with the difficulty.',excludes:["Ex"],hard:!0}),te.ChargeShotsOnly=bt.flag("Hc",{name:"Charge shots only",text:"Stabbing is completely ineffective.  Only charged shots work.",hard:!0}),te.Blackout=bt.flag("Hz",{name:"Blackout",text:"All caves and fortresses are permanently dark.",hard:!0}),te.Permadeath=bt.flag("Hh",{name:"Permadeath",text:"Hardcore mode: checkpoints and saves are removed.",hard:!0});var yt=class extends ke{constructor(){super(...arguments);this.name="Vanilla";this.prefix="V";this.description=`
      Options to restore vanilla behavior changed by default.`}},$=yt;$.Dyna=yt.flag("Vd",{name:"Don't buff Dyna",text:`By default, we makes the Dyna fight a bit more of a challenge.
           Side pods will fire significantly more.  The safe spot has been
           removed.  The revenge beams pass through barrier.  Side pods can
           now be killed.  This flag prevents that change.`}),$.BonusItems=yt.flag("Vb",{name:"Don't buff bonus items",text:`Leather Boots are changed to Speed Boots, which increase player walking
           speed (this allows climbing up the slope to access the Tornado Bracelet
           chest, which is taken into consideration by the logic).  Deo's pendant
           restores MP while moving.  Rabbit boots enable sword charging up to
           level 2 while walking (level 3 still requires being stationary, so as
           to prevent wasting tons of magic).`}),$.Maps=yt.flag("Vm",{name:"Vanilla maps",text:`Normally the randomizer adds a new "East Cave" to Valley of Wind,
           borrowed from the GBC version of the game.  This cave contains two
           chests (one considered a key item) on the upper floor and exits to
           two random areas (chosen between Lime Tree Valley, Cordel Plain,
           Goa Valley, or Desert 2; the quicksand is removed from the entrances
           to Pyramid and Crypt), one unblocked on the lower floor, and one
           down the stairs and behind a rock wall from the upper floor.  This
           flag prevents adding that cave.  If set as "V!m" then a direct path
           will instead be added between Valley of Wind and Lime Tree Valley
           (as in earlier versions of the randomizer).`,modes:"!"}),$.Shops=yt.flag("Vs",{name:"Vanilla shops",text:`By default, we disable shop glitch, shuffle shop contents, and tie
           the prices to the scaling level (item shops and inns increase by a
           factor of 2 every 10 scaling levels, armor shops decrease by a
           factor of 2 every 12 scaling levels).  This flag prevents all of
           these changes, restoring shops to be completely vanilla.`}),$.WildWarp=yt.flag("Vw",{name:"Vanilla wild warp",text:`By default, Wild Warp is nerfed to only return to Mezame Shrine.
           This flag restores it to work like normal.  Note that this will put
           all wild warp locations in logic unless the flag is set as (V!w).`,modes:"!"}),$.Hud=yt.flag("Vh",{name:"Vanilla HUD",text:`By default, the blue status bar (HUD) at the bottom of the screen
           is reorganized a bit, including displaying enemies' names and HP.
           This can be set either as Vh (which will optionally disable the
           changes, and will produce the same seed as not setting Vh) or as
           V!h (which requires all players to disable it to get the same
            seed).`,modes:"!",optional:sr});var fi=class extends ke{constructor(){super(...arguments);this.prefix="Q";this.name="Quality of Life";this.description=`
      The following quality-of-life flags turn <i>off</i> improvements that
      are normally on by default.  They are optional and will not affect the
      seed generation.  They may be toggled freely in race mode.`}},St=fi;St.NoAutoEquip=fi.flag("Qa",{name:"Don't automatically equip orbs and bracelets",text:`Prevents adding a quality-of-life improvement to automatically equip
           the corresponding orb/bracelet whenever changing swords.`,optional:_i}),St.NoControllerShortcuts=fi.flag("Qc",{name:"Disable controller shortcuts",text:`By default, we disable second controller input and instead enable
           some new shortcuts on controller 1: Start+A+B for wild warp, and
           Select+B to quickly change swords.  To support this, the action of
           the start and select buttons is changed slightly.  This flag
           disables this change and retains normal behavior.`,optional:_i}),St.AudibleWallCues=fi.flag("Qw",{name:"Audible wall cues",text:`Provide an audible cue when failing to break a non-iron wall.
           The intended way to determine which sword is required for normal
           cave walls is by looking at the color.  This causes the level 3
           sword sound of the required element to play when the wall fails
           to break.  Note that fortress walls (iron in vanilla) do not give
           this hint, since there is no visual cue for them, either.`,optional:_i});var ii=class extends ke{constructor(){super(...arguments);this.prefix="D";this.name="Debug Mode";this.description=`
      These options are helpful for exploring or debugging.  Note that,
      while they do not directly affect any randomization, they
      <i>do</i> factor into the seed to prevent cheating, and they
      will remove the option to generate a seed for racing.`}},ge=ii;ge.SpoilerLog=ii.flag("Ds",{name:"Generate a spoiler log",text:`Note: <b>this will change the placement of items</b> compared to a
           seed generated without this flag turned on.`}),ge.TrainerMode=ii.flag("Dt",{name:"Trainer mode",text:`Installs a trainer for practicing certain parts of the game.
           At the start of the game, the player will have all swords, basic
           armors and shields, all worn items and magics, a selection of
           consumables, bow of truth, maximum cash, all warp points activated,
           and the Shyron massacre will have been triggered.  Wild warp is
           reconfigured to provide easy access to all bosses.  Additionally,
           the following button combinations are recognized:<ul>
             <li>Start+Up: increase player level
             <li>Start+Down: increase scaling level
             <li>Start+Left: get all balls
             <li>Start+Right: get all bracelets
             <li>Start+B+Down: get a full set of consumable items
             <li>Start+B+Left: get all advanced armors
             <li>Start+B+Right: get all advanced shields
           </ul>`}),ge.NeverDie=ii.flag("Di",{name:"Player never dies"}),ge.NoShuffle=ii.flag("Dn",{name:"Do not shuffle items",text:`Items will not be shuffled. WARNING: This disables the logic and
           is very likely to result in an unwinnable seed`});var si=class{constructor(i="@Casual"){if(typeof i!="string"){this.flags=new Map;for(let[s,n]of i)this.set(s.flag,n);return}if(i.startsWith("@")){let s=dt.get(i.substring(1));if(!s)throw new or(`Unknown preset: ${i}`);this.flags=new Map(s.flags);return}this.flags=new Map,i=i.replace(/[^A-Za-z0-9!?]/g,"");let e=/([A-Z])([a-z0-9!?]+)/g,t;for(;t=e.exec(i);){let[,s,n]=t,o=/([!?]|^)([a-z0-9]+)/g;for(;t=o.exec(n);){let[,a,l]=t;for(let c of l)this.set(s+c,a||!0)}}}filterOptional(){return new si(new Map([...this.flags].map(([i,e])=>[i,i.opts.optional?i.opts.optional(e):e])))}filterRandom(i){function e(t,s){return s!=="?"?s:i.pick([!0,!1,...t.opts.modes||""])}return new si(new Map([...this.flags].map(([t,s])=>[t,e(t,s)])))}toString(){let i=new H(()=>new H(()=>[]));for(let[t,s]of this.flags){if(t.flag.length!==2)throw new Error(`Bad flag ${t.flag}`);if(!s)continue;let n=i.get(t.flag[0]),o=s===!0?"":s;n.get(o).push(t.flag[1])}let e=[];for(let[t,s]of i.sortedEntries()){let n=t;for(let[o,a]of s.sortedEntries())n+=o+a.sort().join("");e.push(n)}return e.join(" ")}toggle(i){let e=Ne.flags.get(i);if(!e)return console.error(`Bad flag: ${i}`),!1;let t=this.flags.get(e)||!1,s=[!1,!0,...e.opts.modes||"","?",!1],n=s.indexOf(t);if(n<0)throw new Error(`Bad current mode ${t}`);let o=s[n+1];return this.flags.set(e,o),o}set(i,e){let t=Ne.flags.get(i);if(!t){console.error(`Bad flag: ${i}`);return}if(!e)this.flags.delete(t);else if(e===!0||e==="?"||t.opts.modes?.includes(e))this.flags.set(t,e);else{console.error(`Bad flag mode: ${i[0]}${e}${i.substring(1)}`);return}for(let s of t.opts.excludes||[])this.flags.delete(Ne.flags.get(s))}check(i,...e){let t=i instanceof Ne?i:Ne.flags.get(i);return e.length||e.push(!0),e.includes(t&&this.flags.get(t)||!1)}get(i){let e=i instanceof Ne?i:Ne.flags.get(i);return e&&this.flags.get(e)||!1}preserveUniqueChecks(){return this.check(X.PreserveUniqueChecks)}shuffleMimics(){return this.check(X.NoShuffleMimics,!1)}buffDeosPendant(){return this.check($.BonusItems,!1)}changeGasMaskToHazmatSuit(){return this.check($.BonusItems,!1)}slowDownTornado(){return this.check($.BonusItems,!1)}leatherBootsGiveSpeed(){return this.check($.BonusItems,!1)}rabbitBootsChargeWhileWalking(){return this.check($.BonusItems,!1)}shuffleSpritePalettes(){return this.check(I.RandomizeSpriteColors)}shuffleMonsters(){return!0}shuffleShops(){return this.check($.Shops,!1)}bargainHunting(){return this.shuffleShops()}shuffleTowerMonsters(){return this.check(ne.TowerRobots)}shuffleMonsterElements(){return this.check(ne.RandomizeWeaknesses)}shuffleBossElements(){return this.shuffleMonsterElements()}buffMedicalHerb(){return this.check(te.NoBuffMedicalHerb,!1)}decreaseEnemyDamage(){return this.check(X.DecreaseEnemyDamage)}trainer(){return this.check(ge.TrainerMode)}neverDie(){return this.check(ge.NeverDie)}noShuffle(){return this.check(ge.NoShuffle)}chargeShotsOnly(){return this.check(te.ChargeShotsOnly)}barrierRequiresCalmSea(){return!0}connectLimeTreeToLeaf(){return this.check($.Maps,"!")}addEastCave(){return this.check($.Maps,!1)}zebuStudentGivesItem(){return!this.shuffleAreas()&&!this.shuffleHouses()}fogLampNotRequired(){return this.check(U.VanillaDolphin,!1)}storyMode(){return this.check(U.StoryMode)}noBowMode(){return this.check(U.NoBowMode)}requireHealedDolphinToRide(){return this.check(U.VanillaDolphin)}saharaRabbitsRequireTelepathy(){return!0}teleportOnThunderSword(){return this.check(U.NoThunderSwordWarp,!1,"!")}randomizeThunderTeleport(){return this.check(U.NoThunderSwordWarp,!1)}orbsOptional(){return this.check(U.OrbsNotRequired)}shuffleGoaFloors(){return this.check(I.ShuffleGoaFloors)}shuffleHouses(){return this.check(I.ShuffleHouses)}shuffleAreas(){return this.check(I.ShuffleAreas)}randomizeMaps(){return this.check(I.RandomizeMaps)}randomizeTrades(){return this.check(I.RandomizeTrades)}unidentifiedItems(){return this.check(I.UnidentifiedKeyItems)}randomizeWalls(){return this.check(I.RandomizeWallElements)}guaranteeSword(){return this.check(X.GuaranteeStartingSword)}guaranteeSwordMagic(){return this.check(ie.BattleMagic,!1)}guaranteeMatchingSword(){return this.check(ie.MatchingSword,!1)}guaranteeGasMask(){return this.check(ie.GasMask,!1)}guaranteeBarrier(){return this.check(ie.Barrier,!1)}guaranteeRefresh(){return this.check(X.GuaranteeRefresh)}communityJokes(){return this.check(X.NoCommunityJokes,!1)}disableSwordChargeGlitch(){return this.check(D.SwordChargeGlitch,!1)}disableTeleportSkip(){return this.check(D.MtSabreRequirementSkip,!1)}disableRabbitSkip(){return this.check(D.MtSabreRequirementSkip,!1)}disableShopGlitch(){return this.check($.Shops,!1)}disableStatueGlitch(){return this.check(D.StatueGlitch,!1)}disableRageSkip(){return this.check(D.RageSkip,!1)}disableTriggerGlitch(){return this.check(D.TriggerSkip,!1)}disableFlightStatueSkip(){return this.check(D.StatueGauntletSkip,!1)}assumeSwordChargeGlitch(){return this.check(D.SwordChargeGlitch)}assumeGhettoFlight(){return this.check(D.GhettoFlight)}assumeTeleportSkip(){return this.check(D.MtSabreRequirementSkip)}assumeRabbitSkip(){return this.check(D.MtSabreRequirementSkip)}assumeStatueGlitch(){return this.check(D.StatueGlitch)}assumeTriggerGlitch(){return this.check(D.TriggerSkip)}assumeFlightStatueSkip(){return this.check(D.StatueGauntletSkip)}assumeWildWarp(){return this.check($.WildWarp,!0)||this.check(I.RandomizeWildWarp)}assumeRageSkip(){return this.check(D.RageSkip)}nerfWildWarp(){return this.check($.WildWarp,!1)&&this.check(I.RandomizeWildWarp,!1)}allowWildWarp(){return!this.nerfWildWarp()}randomizeWildWarp(){return this.check(I.RandomizeWildWarp,!0)}blackoutMode(){return this.check(te.Blackout)}hardcoreMode(){return this.check(te.Permadeath)}buffDyna(){return!this.check($.Dyna)}maxScalingInTower(){return this.check(te.MaxScalingInTower)}expScalingFactor(){return this.check(te.ExperienceScalesSlower)?.25:this.check(X.ExperienceScalesFaster)?2.5:1}autoEquipBracelet(i){return i==="early"||this.check(St.NoAutoEquip,!1)}controllerShortcuts(i){return i==="early"||this.check(St.NoControllerShortcuts,!1)}randomizeMusic(i){return this.check(Qe.RandomizeMusic,i==="early"?"!":!0)}shuffleTilePalettes(i){return this.check(Qe.RandomizeMapColors,i==="early"?"!":!0)}noMusic(i){return i==="late"&&this.check(Qe.NoMusic)}audibleWallCues(i){return i==="late"&&this.check(St.AudibleWallCues)}shouldColorSwordElements(){return!0}shouldUpdateHud(){return this.check($.Hud,!1)}hasStatTracking(){return!0}};export{xi as a,Po as b,ws as c,Ir as d,hf as e,Fr as f,uf as g,mf as h,Bf as i,xt as j,Di as k,La as l,Au as m,Bu as n,ve as o,ke as p,si as q};
