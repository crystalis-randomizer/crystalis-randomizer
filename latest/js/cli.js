#!/usr/bin/env -S node --inspect 
var uo=Object.create;var X7=Object.defineProperty;var bo=Object.getOwnPropertyDescriptor;var mo=Object.getOwnPropertyNames;var po=Object.getPrototypeOf,go=Object.prototype.hasOwnProperty;var t6=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),V6=(r,e)=>{for(var x in e)X7(r,x,{get:e[x],enumerable:!0})},yo=(r,e,x,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of mo(e))!go.call(r,s)&&s!==x&&X7(r,s,{get:()=>e[s],enumerable:!(t=bo(e,s))||t.enumerable});return r};var za=(r,e,x)=>(x=r!=null?uo(po(r)):{},yo(e||!r||!r.__esModule?X7(x,"default",{value:r,enumerable:!0}):x,r));var J6=r=>new Uint8Array(Buffer.from(r,"base64"));var Aa=t6(La=>{function Di(r){this.buffer=r,this.pos=0}Di.prototype.read=function(r,e,x){this.pos+x>this.buffer.length&&(x=this.buffer.length-this.pos);for(var t=0;t<x;t++)r[e+t]=this.buffer[this.pos+t];return this.pos+=x,x};La.BrotliInput=Di;function Gi(r){this.buffer=r,this.pos=0}Gi.prototype.write=function(r,e){if(this.pos+e>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(r.subarray(0,e),this.pos),this.pos+=e,e};La.BrotliOutput=Gi});var qi=t6((Om,Oi)=>{var ge=4096,qf=2*ge+32,$i=2*ge-1,Wf=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function ye(r){this.buf_=new Uint8Array(qf),this.input_=r,this.reset()}ye.READ_SIZE=ge;ye.IBUF_MASK=$i;ye.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var r=0;r<4;r++)this.val_|=this.buf_[this.pos_]<<8*r,++this.pos_;return this.bit_end_pos_>0};ye.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var r=this.buf_ptr_,e=this.input_.read(this.buf_,r,ge);if(e<0)throw new Error("Unexpected end of input");if(e<ge){this.eos_=1;for(var x=0;x<32;x++)this.buf_[r+e+x]=0}if(r===0){for(var x=0;x<32;x++)this.buf_[(ge<<1)+x]=this.buf_[x];this.buf_ptr_=ge}else this.buf_ptr_=0;this.bit_end_pos_+=e<<3}};ye.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[this.pos_&$i]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};ye.prototype.readBits=function(r){32-this.bit_pos_<r&&this.fillBitWindow();var e=this.val_>>>this.bit_pos_&Wf[r];return this.bit_pos_+=r,e};Oi.exports=ye});var Wi=t6(q7=>{q7.dictionary=new Uint8Array([116,105,109,101,100,111,119,110,108,105,102,101,108,101,102,116,98,97,99,107,99,111,100,101,100,97,116,97,115,104,111,119,111,110,108,121,115,105,116,101,99,105,116,121,111,112,101,110,106,117,115,116,108,105,107,101,102,114,101,101,119,111,114,107,116,101,120,116,121,101,97,114,111,118,101,114,98,111,100,121,108,111,118,101,102,111,114,109,98,111,111,107,112,108,97,121,108,105,118,101,108,105,110,101,104,101,108,112,104,111,109,101,115,105,100,101,109,111,114,101,119,111,114,100,108,111,110,103,116,104,101,109,118,105,101,119,102,105,110,100,112,97,103,101,100,97,121,115,102,117,108,108,104,101,97,100,116,101,114,109,101,97,99,104,97,114,101,97,102,114,111,109,116,114,117,101,109,97,114,107,97,98,108,101,117,112,111,110,104,105,103,104,100,97,116,101,108,97,110,100,110,101,119,115,101,118,101,110,110,101,120,116,99,97,115,101,98,111,116,104,112,111,115,116,117,115,101,100,109,97,100,101,104,97,110,100,104,101,114,101,119,104,97,116,110,97,109,101,76,105,110,107,98,108,111,103,115,105,122,101,98,97,115,101,104,101,108,100,109,97,107,101,109,97,105,110,117,115,101,114,39,41,32,43,104,111,108,100,101,110,100,115,119,105,116,104,78,101,119,115,114,101,97,100,119,101,114,101,115,105,103,110,116,97,107,101,104,97,118,101,103,97,109,101,115,101,101,110,99,97,108,108,112,97,116,104,119,101,108,108,112,108,117,115,109,101,110,117,102,105,108,109,112,97,114,116,106,111,105,110,116,104,105,115,108,105,115,116,103,111,111,100,110,101,101,100,119,97,121,115,119,101,115,116,106,111,98,115,109,105,110,100,97,108,115,111,108,111,103,111,114,105,99,104,117,115,101,115,108,97,115,116,116,101,97,109,97,114,109,121,102,111,111,100,107,105,110,103,119,105,108,108,101,97,115,116,119,97,114,100,98,101,115,116,102,105,114,101,80,97,103,101,107,110,111,119,97,119,97,121,46,112,110,103,109,111,118,101,116,104,97,110,108,111,97,100,103,105,118,101,115,101,108,102,110,111,116,101,109,117,99,104,102,101,101,100,109,97,110,121,114,111,99,107,105,99,111,110,111,110,99,101,108,111,111,107,104,105,100,101,100,105,101,100,72,111,109,101,114,117,108,101,104,111,115,116,97,106,97,120,105,110,102,111,99,108,117,98,108,97,119,115,108,101,115,115,104,97,108,102,115,111,109,101,115,117,99,104,122,111,110,101,49,48,48,37,111,110,101,115,99,97,114,101,84,105,109,101,114,97,99,101,98,108,117,101,102,111,117,114,119,101,101,107,102,97,99,101,104,111,112,101,103,97,118,101,104,97,114,100,108,111,115,116,119,104,101,110,112,97,114,107,107,101,112,116,112,97,115,115,115,104,105,112,114,111,111,109,72,84,77,76,112,108,97,110,84,121,112,101,100,111,110,101,115,97,118,101,107,101,101,112,102,108,97,103,108,105,110,107,115,111,108,100,102,105,118,101,116,111,111,107,114,97,116,101,116,111,119,110,106,117,109,112,116,104,117,115,100,97,114,107,99,97,114,100,102,105,108,101,102,101,97,114,115,116,97,121,107,105,108,108,116,104,97,116,102,97,108,108,97,117,116,111,101,118,101,114,46,99,111,109,116,97,108,107,115,104,111,112,118,111,116,101,100,101,101,112,109,111,100,101,114,101,115,116,116,117,114,110,98,111,114,110,98,97,110,100,102,101,108,108,114,111,115,101,117,114,108,40,115,107,105,110,114,111,108,101,99,111,109,101,97,99,116,115,97,103,101,115,109,101,101,116,103,111,108,100,46,106,112,103,105,116,101,109,118,97,114,121,102,101,108,116,116,104,101,110,115,101,110,100,100,114,111,112,86,105,101,119,99,111,112,121,49,46,48,34,60,47,97,62,115,116,111,112,101,108,115,101,108,105,101,115,116,111,117,114,112,97,99,107,46,103,105,102,112,97,115,116,99,115,115,63,103,114,97,121,109,101,97,110,38,103,116,59,114,105,100,101,115,104,111,116,108,97,116,101,115,97,105,100,114,111,97,100,118,97,114,32,102,101,101,108,106,111,104,110,114,105,99,107,112,111,114,116,102,97,115,116,39,85,65,45,100,101,97,100,60,47,98,62,112,111,111,114,98,105,108,108,116,121,112,101,85,46,83,46,119,111,111,100,109,117,115,116,50,112,120,59,73,110,102,111,114,97,110,107,119,105,100,101,119,97,110,116,119,97,108,108,108,101,97,100,91,48,93,59,112,97,117,108,119,97,118,101,115,117,114,101,36,40,39,35,119,97,105,116,109,97,115,115,97,114,109,115,103,111,101,115,103,97,105,110,108,97,110,103,112,97,105,100,33,45,45,32,108,111,99,107,117,110,105,116,114,111,111,116,119,97,108,107,102,105,114,109,119,105,102,101,120,109,108,34,115,111,110,103,116,101,115,116,50,48,112,120,107,105,110,100,114,111,119,115,116,111,111,108,102,111,110,116,109,97,105,108,115,97,102,101,115,116,97,114,109,97,112,115,99,111,114,101,114,97,105,110,102,108,111,119,98,97,98,121,115,112,97,110,115,97,121,115,52,112,120,59,54,112,120,59,97,114,116,115,102,111,111,116,114,101,97,108,119,105,107,105,104,101,97,116,115,116,101,112,116,114,105,112,111,114,103,47,108,97,107,101,119,101,97,107,116,111,108,100,70,111,114,109,99,97,115,116,102,97,110,115,98,97,110,107,118,101,114,121,114,117,110,115,106,117,108,121,116,97,115,107,49,112,120,59,103,111,97,108,103,114,101,119,115,108,111,119,101,100,103,101,105,100,61,34,115,101,116,115,53,112,120,59,46,106,115,63,52,48,112,120,105,102,32,40,115,111,111,110,115,101,97,116,110,111,110,101,116,117,98,101,122,101,114,111,115,101,110,116,114,101,101,100,102,97,99,116,105,110,116,111,103,105,102,116,104,97,114,109,49,56,112,120,99,97,109,101,104,105,108,108,98,111,108,100,122,111,111,109,118,111,105,100,101,97,115,121,114,105,110,103,102,105,108,108,112,101,97,107,105,110,105,116,99,111,115,116,51,112,120,59,106,97,99,107,116,97,103,115,98,105,116,115,114,111,108,108,101,100,105,116,107,110,101,119,110,101,97,114,60,33,45,45,103,114,111,119,74,83,79,78,100,117,116,121,78,97,109,101,115,97,108,101,121,111,117,32,108,111,116,115,112,97,105,110,106,97,122,122,99,111,108,100,101,121,101,115,102,105,115,104,119,119,119,46,114,105,115,107,116,97,98,115,112,114,101,118,49,48,112,120,114,105,115,101,50,53,112,120,66,108,117,101,100,105,110,103,51,48,48,44,98,97,108,108,102,111,114,100,101,97,114,110,119,105,108,100,98,111,120,46,102,97,105,114,108,97,99,107,118,101,114,115,112,97,105,114,106,117,110,101,116,101,99,104,105,102,40,33,112,105,99,107,101,118,105,108,36,40,34,35,119,97,114,109,108,111,114,100,100,111,101,115,112,117,108,108,44,48,48,48,105,100,101,97,100,114,97,119,104,117,103,101,115,112,111,116,102,117,110,100,98,117,114,110,104,114,101,102,99,101,108,108,107,101,121,115,116,105,99,107,104,111,117,114,108,111,115,115,102,117,101,108,49,50,112,120,115,117,105,116,100,101,97,108,82,83,83,34,97,103,101,100,103,114,101,121,71,69,84,34,101,97,115,101,97,105,109,115,103,105,114,108,97,105,100,115,56,112,120,59,110,97,118,121,103,114,105,100,116,105,112,115,35,57,57,57,119,97,114,115,108,97,100,121,99,97,114,115,41,59,32,125,112,104,112,63,104,101,108,108,116,97,108,108,119,104,111,109,122,104,58,229,42,47,13,10,32,49,48,48,104,97,108,108,46,10,10,65,55,112,120,59,112,117,115,104,99,104,97,116,48,112,120,59,99,114,101,119,42,47,60,47,104,97,115,104,55,53,112,120,102,108,97,116,114,97,114,101,32,38,38,32,116,101,108,108,99,97,109,112,111,110,116,111,108,97,105,100,109,105,115,115,115,107,105,112,116,101,110,116,102,105,110,101,109,97,108,101,103,101,116,115,112,108,111,116,52,48,48,44,13,10,13,10,99,111,111,108,102,101,101,116,46,112,104,112,60,98,114,62,101,114,105,99,109,111,115,116,103,117,105,100,98,101,108,108,100,101,115,99,104,97,105,114,109,97,116,104,97,116,111,109,47,105,109,103,38,35,56,50,108,117,99,107,99,101,110,116,48,48,48,59,116,105,110,121,103,111,110,101,104,116,109,108,115,101,108,108,100,114,117,103,70,82,69,69,110,111,100,101,110,105,99,107,63,105,100,61,108,111,115,101,110,117,108,108,118,97,115,116,119,105,110,100,82,83,83,32,119,101,97,114,114,101,108,121,98,101,101,110,115,97,109,101,100,117,107,101,110,97,115,97,99,97,112,101,119,105,115,104,103,117,108,102,84,50,51,58,104,105,116,115,115,108,111,116,103,97,116,101,107,105,99,107,98,108,117,114,116,104,101,121,49,53,112,120,39,39,41,59,41,59,34,62,109,115,105,101,119,105,110,115,98,105,114,100,115,111,114,116,98,101,116,97,115,101,101,107,84,49,56,58,111,114,100,115,116,114,101,101,109,97,108,108,54,48,112,120,102,97,114,109,226,128,153,115,98,111,121,115,91,48,93,46,39,41,59,34,80,79,83,84,98,101,97,114,107,105,100,115,41,59,125,125,109,97,114,121,116,101,110,100,40,85,75,41,113,117,97,100,122,104,58,230,45,115,105,122,45,45,45,45,112,114,111,112,39,41,59,13,108,105,102,116,84,49,57,58,118,105,99,101,97,110,100,121,100,101,98,116,62,82,83,83,112,111,111,108,110,101,99,107,98,108,111,119,84,49,54,58,100,111,111,114,101,118,97,108,84,49,55,58,108,101,116,115,102,97,105,108,111,114,97,108,112,111,108,108,110,111,118,97,99,111,108,115,103,101,110,101,32,226,128,148,115,111,102,116,114,111,109,101,116,105,108,108,114,111,115,115,60,104,51,62,112,111,117,114,102,97,100,101,112,105,110,107,60,116,114,62,109,105,110,105,41,124,33,40,109,105,110,101,122,104,58,232,98,97,114,115,104,101,97,114,48,48,41,59,109,105,108,107,32,45,45,62,105,114,111,110,102,114,101,100,100,105,115,107,119,101,110,116,115,111,105,108,112,117,116,115,47,106,115,47,104,111,108,121,84,50,50,58,73,83,66,78,84,50,48,58,97,100,97,109,115,101,101,115,60,104,50,62,106,115,111,110,39,44,32,39,99,111,110,116,84,50,49,58,32,82,83,83,108,111,111,112,97,115,105,97,109,111,111,110,60,47,112,62,115,111,117,108,76,73,78,69,102,111,114,116,99,97,114,116,84,49,52,58,60,104,49,62,56,48,112,120,33,45,45,60,57,112,120,59,84,48,52,58,109,105,107,101,58,52,54,90,110,105,99,101,105,110,99,104,89,111,114,107,114,105,99,101,122,104,58,228,39,41,41,59,112,117,114,101,109,97,103,101,112,97,114,97,116,111,110,101,98,111,110,100,58,51,55,90,95,111,102,95,39,93,41,59,48,48,48,44,122,104,58,231,116,97,110,107,121,97,114,100,98,111,119,108,98,117,115,104,58,53,54,90,74,97,118,97,51,48,112,120,10,124,125,10,37,67,51,37,58,51,52,90,106,101,102,102,69,88,80,73,99,97,115,104,118,105,115,97,103,111,108,102,115,110,111,119,122,104,58,233,113,117,101,114,46,99,115,115,115,105,99,107,109,101,97,116,109,105,110,46,98,105,110,100,100,101,108,108,104,105,114,101,112,105,99,115,114,101,110,116,58,51,54,90,72,84,84,80,45,50,48,49,102,111,116,111,119,111,108,102,69,78,68,32,120,98,111,120,58,53,52,90,66,79,68,89,100,105,99,107,59,10,125,10,101,120,105,116,58,51,53,90,118,97,114,115,98,101,97,116,39,125,41,59,100,105,101,116,57,57,57,59,97,110,110,101,125,125,60,47,91,105,93,46,76,97,110,103,107,109,194,178,119,105,114,101,116,111,121,115,97,100,100,115,115,101,97,108,97,108,101,120,59,10,9,125,101,99,104,111,110,105,110,101,46,111,114,103,48,48,53,41,116,111,110,121,106,101,119,115,115,97,110,100,108,101,103,115,114,111,111,102,48,48,48,41,32,50,48,48,119,105,110,101,103,101,97,114,100,111,103,115,98,111,111,116,103,97,114,121,99,117,116,115,116,121,108,101,116,101,109,112,116,105,111,110,46,120,109,108,99,111,99,107,103,97,110,103,36,40,39,46,53,48,112,120,80,104,46,68,109,105,115,99,97,108,97,110,108,111,97,110,100,101,115,107,109,105,108,101,114,121,97,110,117,110,105,120,100,105,115,99,41,59,125,10,100,117,115,116,99,108,105,112,41,46,10,10,55,48,112,120,45,50,48,48,68,86,68,115,55,93,62,60,116,97,112,101,100,101,109,111,105,43,43,41,119,97,103,101,101,117,114,111,112,104,105,108,111,112,116,115,104,111,108,101,70,65,81,115,97,115,105,110,45,50,54,84,108,97,98,115,112,101,116,115,85,82,76,32,98,117,108,107,99,111,111,107,59,125,13,10,72,69,65,68,91,48,93,41,97,98,98,114,106,117,97,110,40,49,57,56,108,101,115,104,116,119,105,110,60,47,105,62,115,111,110,121,103,117,121,115,102,117,99,107,112,105,112,101,124,45,10,33,48,48,50,41,110,100,111,119,91,49,93,59,91,93,59,10,76,111,103,32,115,97,108,116,13,10,9,9,98,97,110,103,116,114,105,109,98,97,116,104,41,123,13,10,48,48,112,120,10,125,41,59,107,111,58,236,102,101,101,115,97,100,62,13,115,58,47,47,32,91,93,59,116,111,108,108,112,108,117,103,40,41,123,10,123,13,10,32,46,106,115,39,50,48,48,112,100,117,97,108,98,111,97,116,46,74,80,71,41,59,10,125,113,117,111,116,41,59,10,10,39,41,59,10,13,10,125,13,50,48,49,52,50,48,49,53,50,48,49,54,50,48,49,55,50,48,49,56,50,48,49,57,50,48,50,48,50,48,50,49,50,48,50,50,50,48,50,51,50,48,50,52,50,48,50,53,50,48,50,54,50,48,50,55,50,48,50,56,50,48,50,57,50,48,51,48,50,48,51,49,50,48,51,50,50,48,51,51,50,48,51,52,50,48,51,53,50,48,51,54,50,48,51,55,50,48,49,51,50,48,49,50,50,48,49,49,50,48,49,48,50,48,48,57,50,48,48,56,50,48,48,55,50,48,48,54,50,48,48,53,50,48,48,52,50,48,48,51,50,48,48,50,50,48,48,49,50,48,48,48,49,57,57,57,49,57,57,56,49,57,57,55,49,57,57,54,49,57,57,53,49,57,57,52,49,57,57,51,49,57,57,50,49,57,57,49,49,57,57,48,49,57,56,57,49,57,56,56,49,57,56,55,49,57,56,54,49,57,56,53,49,57,56,52,49,57,56,51,49,57,56,50,49,57,56,49,49,57,56,48,49,57,55,57,49,57,55,56,49,57,55,55,49,57,55,54,49,57,55,53,49,57,55,52,49,57,55,51,49,57,55,50,49,57,55,49,49,57,55,48,49,57,54,57,49,57,54,56,49,57,54,55,49,57,54,54,49,57,54,53,49,57,54,52,49,57,54,51,49,57,54,50,49,57,54,49,49,57,54,48,49,57,53,57,49,57,53,56,49,57,53,55,49,57,53,54,49,57,53,53,49,57,53,52,49,57,53,51,49,57,53,50,49,57,53,49,49,57,53,48,49,48,48,48,49,48,50,52,49,51,57,52,48,48,48,48,57,57,57,57,99,111,109,111,109,195,161,115,101,115,116,101,101,115,116,97,112,101,114,111,116,111,100,111,104,97,99,101,99,97,100,97,97,195,177,111,98,105,101,110,100,195,173,97,97,115,195,173,118,105,100,97,99,97,115,111,111,116,114,111,102,111,114,111,115,111,108,111,111,116,114,97,99,117,97,108,100,105,106,111,115,105,100,111,103,114,97,110,116,105,112,111,116,101,109,97,100,101,98,101,97,108,103,111,113,117,195,169,101,115,116,111,110,97,100,97,116,114,101,115,112,111,99,111,99,97,115,97,98,97,106,111,116,111,100,97,115,105,110,111,97,103,117,97,112,117,101,115,117,110,111,115,97,110,116,101,100,105,99,101,108,117,105,115,101,108,108,97,109,97,121,111,122,111,110,97,97,109,111,114,112,105,115,111,111,98,114,97,99,108,105,99,101,108,108,111,100,105,111,115,104,111,114,97,99,97,115,105,208,183,208,176,208,189,208,176,208,190,208,188,209,128,208,176,209,128,209,131,209,130,208,176,208,189,208,181,208,191,208,190,208,190,209,130,208,184,208,183,208,189,208,190,208,180,208,190,209,130,208,190,208,182,208,181,208,190,208,189,208,184,209,133,208,157,208,176,208,181,208,181,208,177,209,139,208,188,209,139,208,146,209,139,209,129,208,190,208,178,209,139,208,178,208,190,208,157,208,190,208,190,208,177,208,159,208,190,208,187,208,184,208,189,208,184,208,160,208,164,208,157,208,181,208,156,209,139,209,130,209,139,208,158,208,189,208,184,208,188,208,180,208,176,208,151,208,176,208,148,208,176,208,157,209,131,208,158,208,177,209,130,208,181,208,152,208,183,208,181,208,185,208,189,209,131,208,188,208,188,208,162,209,139,209,131,208,182,217,129,217,138,216,163,217,134,217,133,216,167,217,133,216,185,217,131,217,132,216,163,217,136,216,177,216,175,217,138,216,167,217,129,217,137,217,135,217,136,217,132,217,133,217,132,217,131,216,167,217,136,217,132,217,135,216,168,216,179,216,167,217,132,216,165,217,134,217,135,217,138,216,163,217,138,217,130,216,175,217,135,217,132,216,171,217,133,216,168,217,135,217,132,217,136,217,132,217,138,216,168,217,132,216,167,217,138,216,168,217,131,216,180,217,138,216,167,217,133,216,163,217,133,217,134,216,170,216,168,217,138,217,132,217,134,216,173,216,168,217,135,217,133,217,133,216,180,217,136,216,180,102,105,114,115,116,118,105,100,101,111,108,105,103,104,116,119,111,114,108,100,109,101,100,105,97,119,104,105,116,101,99,108,111,115,101,98,108,97,99,107,114,105,103,104,116,115,109,97,108,108,98,111,111,107,115,112,108,97,99,101,109,117,115,105,99,102,105,101,108,100,111,114,100,101,114,112,111,105,110,116,118,97,108,117,101,108,101,118,101,108,116,97,98,108,101,98,111,97,114,100,104,111,117,115,101,103,114,111,117,112,119,111,114,107,115,121,101,97,114,115,115,116,97,116,101,116,111,100,97,121,119,97,116,101,114,115,116,97,114,116,115,116,121,108,101,100,101,97,116,104,112,111,119,101,114,112,104,111,110,101,110,105,103,104,116,101,114,114,111,114,105,110,112,117,116,97,98,111,117,116,116,101,114,109,115,116,105,116,108,101,116,111,111,108,115,101,118,101,110,116,108,111,99,97,108,116,105,109,101,115,108,97,114,103,101,119,111,114,100,115,103,97,109,101,115,115,104,111,114,116,115,112,97,99,101,102,111,99,117,115,99,108,101,97,114,109,111,100,101,108,98,108,111,99,107,103,117,105,100,101,114,97,100,105,111,115,104,97,114,101,119,111,109,101,110,97,103,97,105,110,109,111,110,101,121,105,109,97,103,101,110,97,109,101,115,121,111,117,110,103,108,105,110,101,115,108,97,116,101,114,99,111,108,111,114,103,114,101,101,110,102,114,111,110,116,38,97,109,112,59,119,97,116,99,104,102,111,114,99,101,112,114,105,99,101,114,117,108,101,115,98,101,103,105,110,97,102,116,101,114,118,105,115,105,116,105,115,115,117,101,97,114,101,97,115,98,101,108,111,119,105,110,100,101,120,116,111,116,97,108,104,111,117,114,115,108,97,98,101,108,112,114,105,110,116,112,114,101,115,115,98,117,105,108,116,108,105,110,107,115,115,112,101,101,100,115,116,117,100,121,116,114,97,100,101,102,111,117,110,100,115,101,110,115,101,117,110,100,101,114,115,104,111,119,110,102,111,114,109,115,114,97,110,103,101,97,100,100,101,100,115,116,105,108,108,109,111,118,101,100,116,97,107,101,110,97,98,111,118,101,102,108,97,115,104,102,105,120,101,100,111,102,116,101,110,111,116,104,101,114,118,105,101,119,115,99,104,101,99,107,108,101,103,97,108,114,105,118,101,114,105,116,101,109,115,113,117,105,99,107,115,104,97,112,101,104,117,109,97,110,101,120,105,115,116,103,111,105,110,103,109,111,118,105,101,116,104,105,114,100,98,97,115,105,99,112,101,97,99,101,115,116,97,103,101,119,105,100,116,104,108,111,103,105,110,105,100,101,97,115,119,114,111,116,101,112,97,103,101,115,117,115,101,114,115,100,114,105,118,101,115,116,111,114,101,98,114,101,97,107,115,111,117,116,104,118,111,105,99,101,115,105,116,101,115,109,111,110,116,104,119,104,101,114,101,98,117,105,108,100,119,104,105,99,104,101,97,114,116,104,102,111,114,117,109,116,104,114,101,101,115,112,111,114,116,112,97,114,116,121,67,108,105,99,107,108,111,119,101,114,108,105,118,101,115,99,108,97,115,115,108,97,121,101,114,101,110,116,114,121,115,116,111,114,121,117,115,97,103,101,115,111,117,110,100,99,111,117,114,116,121,111,117,114,32,98,105,114,116,104,112,111,112,117,112,116,121,112,101,115,97,112,112,108,121,73,109,97,103,101,98,101,105,110,103,117,112,112,101,114,110,111,116,101,115,101,118,101,114,121,115,104,111,119,115,109,101,97,110,115,101,120,116,114,97,109,97,116,99,104,116,114,97,99,107,107,110,111,119,110,101,97,114,108,121,98,101,103,97,110,115,117,112,101,114,112,97,112,101,114,110,111,114,116,104,108,101,97,114,110,103,105,118,101,110,110,97,109,101,100,101,110,100,101,100,84,101,114,109,115,112,97,114,116,115,71,114,111,117,112,98,114,97,110,100,117,115,105,110,103,119,111,109,97,110,102,97,108,115,101,114,101,97,100,121,97,117,100,105,111,116,97,107,101,115,119,104,105,108,101,46,99,111,109,47,108,105,118,101,100,99,97,115,101,115,100,97,105,108,121,99,104,105,108,100,103,114,101,97,116,106,117,100,103,101,116,104,111,115,101,117,110,105,116,115,110,101,118,101,114,98,114,111,97,100,99,111,97,115,116,99,111,118,101,114,97,112,112,108,101,102,105,108,101,115,99,121,99,108,101,115,99,101,110,101,112,108,97,110,115,99,108,105,99,107,119,114,105,116,101,113,117,101,101,110,112,105,101,99,101,101,109,97,105,108,102,114,97,109,101,111,108,100,101,114,112,104,111,116,111,108,105,109,105,116,99,97,99,104,101,99,105,118,105,108,115,99,97,108,101,101,110,116,101,114,116,104,101,109,101,116,104,101,114,101,116,111,117,99,104,98,111,117,110,100,114,111,121,97,108,97,115,107,101,100,119,104,111,108,101,115,105,110,99,101,115,116,111,99,107,32,110,97,109,101,102,97,105,116,104,104,101,97,114,116,101,109,112,116,121,111,102,102,101,114,115,99,111,112,101,111,119,110,101,100,109,105,103,104,116,97,108,98,117,109,116,104,105,110,107,98,108,111,111,100,97,114,114,97,121,109,97,106,111,114,116,114,117,115,116,99,97,110,111,110,117,110,105,111,110,99,111,117,110,116,118,97,108,105,100,115,116,111,110,101,83,116,121,108,101,76,111,103,105,110,104,97,112,112,121,111,99,99,117,114,108,101,102,116,58,102,114,101,115,104,113,117,105,116,101,102,105,108,109,115,103,114,97,100,101,110,101,101,100,115,117,114,98,97,110,102,105,103,104,116,98,97,115,105,115,104,111,118,101,114,97,117,116,111,59,114,111,117,116,101,46,104,116,109,108,109,105,120,101,100,102,105,110,97,108,89,111,117,114,32,115,108,105,100,101,116,111,112,105,99,98,114,111,119,110,97,108,111,110,101,100,114,97,119,110,115,112,108,105,116,114,101,97,99,104,82,105,103,104,116,100,97,116,101,115,109,97,114,99,104,113,117,111,116,101,103,111,111,100,115,76,105,110,107,115,100,111,117,98,116,97,115,121,110,99,116,104,117,109,98,97,108,108,111,119,99,104,105,101,102,121,111,117,116,104,110,111,118,101,108,49,48,112,120,59,115,101,114,118,101,117,110,116,105,108,104,97,110,100,115,67,104,101,99,107,83,112,97,99,101,113,117,101,114,121,106,97,109,101,115,101,113,117,97,108,116,119,105,99,101,48,44,48,48,48,83,116,97,114,116,112,97,110,101,108,115,111,110,103,115,114,111,117,110,100,101,105,103,104,116,115,104,105,102,116,119,111,114,116,104,112,111,115,116,115,108,101,97,100,115,119,101,101,107,115,97,118,111,105,100,116,104,101,115,101,109,105,108,101,115,112,108,97,110,101,115,109,97,114,116,97,108,112,104,97,112,108,97,110,116,109,97,114,107,115,114,97,116,101,115,112,108,97,121,115,99,108,97,105,109,115,97,108,101,115,116,101,120,116,115,115,116,97,114,115,119,114,111,110,103,60,47,104,51,62,116,104,105,110,103,46,111,114,103,47,109,117,108,116,105,104,101,97,114,100,80,111,119,101,114,115,116,97,110,100,116,111,107,101,110,115,111,108,105,100,40,116,104,105,115,98,114,105,110,103,115,104,105,112,115,115,116,97,102,102,116,114,105,101,100,99,97,108,108,115,102,117,108,108,121,102,97,99,116,115,97,103,101,110,116,84,104,105,115,32,47,47,45,45,62,97,100,109,105,110,101,103,121,112,116,69,118,101,110,116,49,53,112,120,59,69,109,97,105,108,116,114,117,101,34,99,114,111,115,115,115,112,101,110,116,98,108,111,103,115,98,111,120,34,62,110,111,116,101,100,108,101,97,118,101,99,104,105,110,97,115,105,122,101,115,103,117,101,115,116,60,47,104,52,62,114,111,98,111,116,104,101,97,118,121,116,114,117,101,44,115,101,118,101,110,103,114,97,110,100,99,114,105,109,101,115,105,103,110,115,97,119,97,114,101,100,97,110,99,101,112,104,97,115,101,62,60,33,45,45,101,110,95,85,83,38,35,51,57,59,50,48,48,112,120,95,110,97,109,101,108,97,116,105,110,101,110,106,111,121,97,106,97,120,46,97,116,105,111,110,115,109,105,116,104,85,46,83,46,32,104,111,108,100,115,112,101,116,101,114,105,110,100,105,97,110,97,118,34,62,99,104,97,105,110,115,99,111,114,101,99,111,109,101,115,100,111,105,110,103,112,114,105,111,114,83,104,97,114,101,49,57,57,48,115,114,111,109,97,110,108,105,115,116,115,106,97,112,97,110,102,97,108,108,115,116,114,105,97,108,111,119,110,101,114,97,103,114,101,101,60,47,104,50,62,97,98,117,115,101,97,108,101,114,116,111,112,101,114,97,34,45,47,47,87,99,97,114,100,115,104,105,108,108,115,116,101,97,109,115,80,104,111,116,111,116,114,117,116,104,99,108,101,97,110,46,112,104,112,63,115,97,105,110,116,109,101,116,97,108,108,111,117,105,115,109,101,97,110,116,112,114,111,111,102,98,114,105,101,102,114,111,119,34,62,103,101,110,114,101,116,114,117,99,107,108,111,111,107,115,86,97,108,117,101,70,114,97,109,101,46,110,101,116,47,45,45,62,10,60,116,114,121,32,123,10,118,97,114,32,109,97,107,101,115,99,111,115,116,115,112,108,97,105,110,97,100,117,108,116,113,117,101,115,116,116,114,97,105,110,108,97,98,111,114,104,101,108,112,115,99,97,117,115,101,109,97,103,105,99,109,111,116,111,114,116,104,101,105,114,50,53,48,112,120,108,101,97,115,116,115,116,101,112,115,67,111,117,110,116,99,111,117,108,100,103,108,97,115,115,115,105,100,101,115,102,117,110,100,115,104,111,116,101,108,97,119,97,114,100,109,111,117,116,104,109,111,118,101,115,112,97,114,105,115,103,105,118,101,115,100,117,116,99,104,116,101,120,97,115,102,114,117,105,116,110,117,108,108,44,124,124,91,93,59,116,111,112,34,62,10,60,33,45,45,80,79,83,84,34,111,99,101,97,110,60,98,114,47,62,102,108,111,111,114,115,112,101,97,107,100,101,112,116,104,32,115,105,122,101,98,97,110,107,115,99,97,116,99,104,99,104,97,114,116,50,48,112,120,59,97,108,105,103,110,100,101,97,108,115,119,111,117,108,100,53,48,112,120,59,117,114,108,61,34,112,97,114,107,115,109,111,117,115,101,77,111,115,116,32,46,46,46,60,47,97,109,111,110,103,98,114,97,105,110,98,111,100,121,32,110,111,110,101,59,98,97,115,101,100,99,97,114,114,121,100,114,97,102,116,114,101,102,101,114,112,97,103,101,95,104,111,109,101,46,109,101,116,101,114,100,101,108,97,121,100,114,101,97,109,112,114,111,118,101,106,111,105,110,116,60,47,116,114,62,100,114,117,103,115,60,33,45,45,32,97,112,114,105,108,105,100,101,97,108,97,108,108,101,110,101,120,97,99,116,102,111,114,116,104,99,111,100,101,115,108,111,103,105,99,86,105,101,119,32,115,101,101,109,115,98,108,97,110,107,112,111,114,116,115,32,40,50,48,48,115,97,118,101,100,95,108,105,110,107,103,111,97,108,115,103,114,97,110,116,103,114,101,101,107,104,111,109,101,115,114,105,110,103,115,114,97,116,101,100,51,48,112,120,59,119,104,111,115,101,112,97,114,115,101,40,41,59,34,32,66,108,111,99,107,108,105,110,117,120,106,111,110,101,115,112,105,120,101,108,39,41,59,34,62,41,59,105,102,40,45,108,101,102,116,100,97,118,105,100,104,111,114,115,101,70,111,99,117,115,114,97,105,115,101,98,111,120,101,115,84,114,97,99,107,101,109,101,110,116,60,47,101,109,62,98,97,114,34,62,46,115,114,99,61,116,111,119,101,114,97,108,116,61,34,99,97,98,108,101,104,101,110,114,121,50,52,112,120,59,115,101,116,117,112,105,116,97,108,121,115,104,97,114,112,109,105,110,111,114,116,97,115,116,101,119,97,110,116,115,116,104,105,115,46,114,101,115,101,116,119,104,101,101,108,103,105,114,108,115,47,99,115,115,47,49,48,48,37,59,99,108,117,98,115,115,116,117,102,102,98,105,98,108,101,118,111,116,101,115,32,49,48,48,48,107,111,114,101,97,125,41,59,13,10,98,97,110,100,115,113,117,101,117,101,61,32,123,125,59,56,48,112,120,59,99,107,105,110,103,123,13,10,9,9,97,104,101,97,100,99,108,111,99,107,105,114,105,115,104,108,105,107,101,32,114,97,116,105,111,115,116,97,116,115,70,111,114,109,34,121,97,104,111,111,41,91,48,93,59,65,98,111,117,116,102,105,110,100,115,60,47,104,49,62,100,101,98,117,103,116,97,115,107,115,85,82,76,32,61,99,101,108,108,115,125,41,40,41,59,49,50,112,120,59,112,114,105,109,101,116,101,108,108,115,116,117,114,110,115,48,120,54,48,48,46,106,112,103,34,115,112,97,105,110,98,101,97,99,104,116,97,120,101,115,109,105,99,114,111,97,110,103,101,108,45,45,62,60,47,103,105,102,116,115,115,116,101,118,101,45,108,105,110,107,98,111,100,121,46,125,41,59,10,9,109,111,117,110,116,32,40,49,57,57,70,65,81,60,47,114,111,103,101,114,102,114,97,110,107,67,108,97,115,115,50,56,112,120,59,102,101,101,100,115,60,104,49,62,60,115,99,111,116,116,116,101,115,116,115,50,50,112,120,59,100,114,105,110,107,41,32,124,124,32,108,101,119,105,115,115,104,97,108,108,35,48,51,57,59,32,102,111,114,32,108,111,118,101,100,119,97,115,116,101,48,48,112,120,59,106,97,58,227,130,115,105,109,111,110,60,102,111,110,116,114,101,112,108,121,109,101,101,116,115,117,110,116,101,114,99,104,101,97,112,116,105,103,104,116,66,114,97,110,100,41,32,33,61,32,100,114,101,115,115,99,108,105,112,115,114,111,111,109,115,111,110,107,101,121,109,111,98,105,108,109,97,105,110,46,78,97,109,101,32,112,108,97,116,101,102,117,110,110,121,116,114,101,101,115,99,111,109,47,34,49,46,106,112,103,119,109,111,100,101,112,97,114,97,109,83,84,65,82,84,108,101,102,116,32,105,100,100,101,110,44,32,50,48,49,41,59,10,125,10,102,111,114,109,46,118,105,114,117,115,99,104,97,105,114,116,114,97,110,115,119,111,114,115,116,80,97,103,101,115,105,116,105,111,110,112,97,116,99,104,60,33,45,45,10,111,45,99,97,99,102,105,114,109,115,116,111,117,114,115,44,48,48,48,32,97,115,105,97,110,105,43,43,41,123,97,100,111,98,101,39,41,91,48,93,105,100,61,49,48,98,111,116,104,59,109,101,110,117,32,46,50,46,109,105,46,112,110,103,34,107,101,118,105,110,99,111,97,99,104,67,104,105,108,100,98,114,117,99,101,50,46,106,112,103,85,82,76,41,43,46,106,112,103,124,115,117,105,116,101,115,108,105,99,101,104,97,114,114,121,49,50,48,34,32,115,119,101,101,116,116,114,62,13,10,110,97,109,101,61,100,105,101,103,111,112,97,103,101,32,115,119,105,115,115,45,45,62,10,10,35,102,102,102,59,34,62,76,111,103,46,99,111,109,34,116,114,101,97,116,115,104,101,101,116,41,32,38,38,32,49,52,112,120,59,115,108,101,101,112,110,116,101,110,116,102,105,108,101,100,106,97,58,227,131,105,100,61,34,99,78,97,109,101,34,119,111,114,115,101,115,104,111,116,115,45,98,111,120,45,100,101,108,116,97,10,38,108,116,59,98,101,97,114,115,58,52,56,90,60,100,97,116,97,45,114,117,114,97,108,60,47,97,62,32,115,112,101,110,100,98,97,107,101,114,115,104,111,112,115,61,32,34,34,59,112,104,112,34,62,99,116,105,111,110,49,51,112,120,59,98,114,105,97,110,104,101,108,108,111,115,105,122,101,61,111,61,37,50,70,32,106,111,105,110,109,97,121,98,101,60,105,109,103,32,105,109,103,34,62,44,32,102,106,115,105,109,103,34,32,34,41,91,48,93,77,84,111,112,66,84,121,112,101,34,110,101,119,108,121,68,97,110,115,107,99,122,101,99,104,116,114,97,105,108,107,110,111,119,115,60,47,104,53,62,102,97,113,34,62,122,104,45,99,110,49,48,41,59,10,45,49,34,41,59,116,121,112,101,61,98,108,117,101,115,116,114,117,108,121,100,97,118,105,115,46,106,115,39,59,62,13,10,60,33,115,116,101,101,108,32,121,111,117,32,104,50,62,13,10,102,111,114,109,32,106,101,115,117,115,49,48,48,37,32,109,101,110,117,46,13,10,9,13,10,119,97,108,101,115,114,105,115,107,115,117,109,101,110,116,100,100,105,110,103,98,45,108,105,107,116,101,97,99,104,103,105,102,34,32,118,101,103,97,115,100,97,110,115,107,101,101,115,116,105,115,104,113,105,112,115,117,111,109,105,115,111,98,114,101,100,101,115,100,101,101,110,116,114,101,116,111,100,111,115,112,117,101,100,101,97,195,177,111,115,101,115,116,195,161,116,105,101,110,101,104,97,115,116,97,111,116,114,111,115,112,97,114,116,101,100,111,110,100,101,110,117,101,118,111,104,97,99,101,114,102,111,114,109,97,109,105,115,109,111,109,101,106,111,114,109,117,110,100,111,97,113,117,195,173,100,195,173,97,115,115,195,179,108,111,97,121,117,100,97,102,101,99,104,97,116,111,100,97,115,116,97,110,116,111,109,101,110,111,115,100,97,116,111,115,111,116,114,97,115,115,105,116,105,111,109,117,99,104,111,97,104,111,114,97,108,117,103,97,114,109,97,121,111,114,101,115,116,111,115,104,111,114,97,115,116,101,110,101,114,97,110,116,101,115,102,111,116,111,115,101,115,116,97,115,112,97,195,173,115,110,117,101,118,97,115,97,108,117,100,102,111,114,111,115,109,101,100,105,111,113,117,105,101,110,109,101,115,101,115,112,111,100,101,114,99,104,105,108,101,115,101,114,195,161,118,101,99,101,115,100,101,99,105,114,106,111,115,195,169,101,115,116,97,114,118,101,110,116,97,103,114,117,112,111,104,101,99,104,111,101,108,108,111,115,116,101,110,103,111,97,109,105,103,111,99,111,115,97,115,110,105,118,101,108,103,101,110,116,101,109,105,115,109,97,97,105,114,101,115,106,117,108,105,111,116,101,109,97,115,104,97,99,105,97,102,97,118,111,114,106,117,110,105,111,108,105,98,114,101,112,117,110,116,111,98,117,101,110,111,97,117,116,111,114,97,98,114,105,108,98,117,101,110,97,116,101,120,116,111,109,97,114,122,111,115,97,98,101,114,108,105,115,116,97,108,117,101,103,111,99,195,179,109,111,101,110,101,114,111,106,117,101,103,111,112,101,114,195,186,104,97,98,101,114,101,115,116,111,121,110,117,110,99,97,109,117,106,101,114,118,97,108,111,114,102,117,101,114,97,108,105,98,114,111,103,117,115,116,97,105,103,117,97,108,118,111,116,111,115,99,97,115,111,115,103,117,195,173,97,112,117,101,100,111,115,111,109,111,115,97,118,105,115,111,117,115,116,101,100,100,101,98,101,110,110,111,99,104,101,98,117,115,99,97,102,97,108,116,97,101,117,114,111,115,115,101,114,105,101,100,105,99,104,111,99,117,114,115,111,99,108,97,118,101,99,97,115,97,115,108,101,195,179,110,112,108,97,122,111,108,97,114,103,111,111,98,114,97,115,118,105,115,116,97,97,112,111,121,111,106,117,110,116,111,116,114,97,116,97,118,105,115,116,111,99,114,101,97,114,99,97,109,112,111,104,101,109,111,115,99,105,110,99,111,99,97,114,103,111,112,105,115,111,115,111,114,100,101,110,104,97,99,101,110,195,161,114,101,97,100,105,115,99,111,112,101,100,114,111,99,101,114,99,97,112,117,101,100,97,112,97,112,101,108,109,101,110,111,114,195,186,116,105,108,99,108,97,114,111,106,111,114,103,101,99,97,108,108,101,112,111,110,101,114,116,97,114,100,101,110,97,100,105,101,109,97,114,99,97,115,105,103,117,101,101,108,108,97,115,115,105,103,108,111,99,111,99,104,101,109,111,116,111,115,109,97,100,114,101,99,108,97,115,101,114,101,115,116,111,110,105,195,177,111,113,117,101,100,97,112,97,115,97,114,98,97,110,99,111,104,105,106,111,115,118,105,97,106,101,112,97,98,108,111,195,169,115,116,101,118,105,101,110,101,114,101,105,110,111,100,101,106,97,114,102,111,110,100,111,99,97,110,97,108,110,111,114,116,101,108,101,116,114,97,99,97,117,115,97,116,111,109,97,114,109,97,110,111,115,108,117,110,101,115,97,117,116,111,115,118,105,108,108,97,118,101,110,100,111,112,101,115,97,114,116,105,112,111,115,116,101,110,103,97,109,97,114,99,111,108,108,101,118,97,112,97,100,114,101,117,110,105,100,111,118,97,109,111,115,122,111,110,97,115,97,109,98,111,115,98,97,110,100,97,109,97,114,105,97,97,98,117,115,111,109,117,99,104,97,115,117,98,105,114,114,105,111,106,97,118,105,118,105,114,103,114,97,100,111,99,104,105,99,97,97,108,108,195,173,106,111,118,101,110,100,105,99,104,97,101,115,116,97,110,116,97,108,101,115,115,97,108,105,114,115,117,101,108,111,112,101,115,111,115,102,105,110,101,115,108,108,97,109,97,98,117,115,99,111,195,169,115,116,97,108,108,101,103,97,110,101,103,114,111,112,108,97,122,97,104,117,109,111,114,112,97,103,97,114,106,117,110,116,97,100,111,98,108,101,105,115,108,97,115,98,111,108,115,97,98,97,195,177,111,104,97,98,108,97,108,117,99,104,97,195,129,114,101,97,100,105,99,101,110,106,117,103,97,114,110,111,116,97,115,118,97,108,108,101,97,108,108,195,161,99,97,114,103,97,100,111,108,111,114,97,98,97,106,111,101,115,116,195,169,103,117,115,116,111,109,101,110,116,101,109,97,114,105,111,102,105,114,109,97,99,111,115,116,111,102,105,99,104,97,112,108,97,116,97,104,111,103,97,114,97,114,116,101,115,108,101,121,101,115,97,113,117,101,108,109,117,115,101,111,98,97,115,101,115,112,111,99,111,115,109,105,116,97,100,99,105,101,108,111,99,104,105,99,111,109,105,101,100,111,103,97,110,97,114,115,97,110,116,111,101,116,97,112,97,100,101,98,101,115,112,108,97,121,97,114,101,100,101,115,115,105,101,116,101,99,111,114,116,101,99,111,114,101,97,100,117,100,97,115,100,101,115,101,111,118,105,101,106,111,100,101,115,101,97,97,103,117,97,115,38,113,117,111,116,59,100,111,109,97,105,110,99,111,109,109,111,110,115,116,97,116,117,115,101,118,101,110,116,115,109,97,115,116,101,114,115,121,115,116,101,109,97,99,116,105,111,110,98,97,110,110,101,114,114,101,109,111,118,101,115,99,114,111,108,108,117,112,100,97,116,101,103,108,111,98,97,108,109,101,100,105,117,109,102,105,108,116,101,114,110,117,109,98,101,114,99,104,97,110,103,101,114,101,115,117,108,116,112,117,98,108,105,99,115,99,114,101,101,110,99,104,111,111,115,101,110,111,114,109,97,108,116,114,97,118,101,108,105,115,115,117,101,115,115,111,117,114,99,101,116,97,114,103,101,116,115,112,114,105,110,103,109,111,100,117,108,101,109,111,98,105,108,101,115,119,105,116,99,104,112,104,111,116,111,115,98,111,114,100,101,114,114,101,103,105,111,110,105,116,115,101,108,102,115,111,99,105,97,108,97,99,116,105,118,101,99,111,108,117,109,110,114,101,99,111,114,100,102,111,108,108,111,119,116,105,116,108,101,62,101,105,116,104,101,114,108,101,110,103,116,104,102,97,109,105,108,121,102,114,105,101,110,100,108,97,121,111,117,116,97,117,116,104,111,114,99,114,101,97,116,101,114,101,118,105,101,119,115,117,109,109,101,114,115,101,114,118,101,114,112,108,97,121,101,100,112,108,97,121,101,114,101,120,112,97,110,100,112,111,108,105,99,121,102,111,114,109,97,116,100,111,117,98,108,101,112,111,105,110,116,115,115,101,114,105,101,115,112,101,114,115,111,110,108,105,118,105,110,103,100,101,115,105,103,110,109,111,110,116,104,115,102,111,114,99,101,115,117,110,105,113,117,101,119,101,105,103,104,116,112,101,111,112,108,101,101,110,101,114,103,121,110,97,116,117,114,101,115,101,97,114,99,104,102,105,103,117,114,101,104,97,118,105,110,103,99,117,115,116,111,109,111,102,102,115,101,116,108,101,116,116,101,114,119,105,110,100,111,119,115,117,98,109,105,116,114,101,110,100,101,114,103,114,111,117,112,115,117,112,108,111,97,100,104,101,97,108,116,104,109,101,116,104,111,100,118,105,100,101,111,115,115,99,104,111,111,108,102,117,116,117,114,101,115,104,97,100,111,119,100,101,98,97,116,101,118,97,108,117,101,115,79,98,106,101,99,116,111,116,104,101,114,115,114,105,103,104,116,115,108,101,97,103,117,101,99,104,114,111,109,101,115,105,109,112,108,101,110,111,116,105,99,101,115,104,97,114,101,100,101,110,100,105,110,103,115,101,97,115,111,110,114,101,112,111,114,116,111,110,108,105,110,101,115,113,117,97,114,101,98,117,116,116,111,110,105,109,97,103,101,115,101,110,97,98,108,101,109,111,118,105,110,103,108,97,116,101,115,116,119,105,110,116,101,114,70,114,97,110,99,101,112,101,114,105,111,100,115,116,114,111,110,103,114,101,112,101,97,116,76,111,110,100,111,110,100,101,116,97,105,108,102,111,114,109,101,100,100,101,109,97,110,100,115,101,99,117,114,101,112,97,115,115,101,100,116,111,103,103,108,101,112,108,97,99,101,115,100,101,118,105,99,101,115,116,97,116,105,99,99,105,116,105,101,115,115,116,114,101,97,109,121,101,108,108,111,119,97,116,116,97,99,107,115,116,114,101,101,116,102,108,105,103,104,116,104,105,100,100,101,110,105,110,102,111,34,62,111,112,101,110,101,100,117,115,101,102,117,108,118,97,108,108,101,121,99,97,117,115,101,115,108,101,97,100,101,114,115,101,99,114,101,116,115,101,99,111,110,100,100,97,109,97,103,101,115,112,111,114,116,115,101,120,99,101,112,116,114,97,116,105,110,103,115,105,103,110,101,100,116,104,105,110,103,115,101,102,102,101,99,116,102,105,101,108,100,115,115,116,97,116,101,115,111,102,102,105,99,101,118,105,115,117,97,108,101,100,105,116,111,114,118,111,108,117,109,101,82,101,112,111,114,116,109,117,115,101,117,109,109,111,118,105,101,115,112,97,114,101,110,116,97,99,99,101,115,115,109,111,115,116,108,121,109,111,116,104,101,114,34,32,105,100,61,34,109,97,114,107,101,116,103,114,111,117,110,100,99,104,97,110,99,101,115,117,114,118,101,121,98,101,102,111,114,101,115,121,109,98,111,108,109,111,109,101,110,116,115,112,101,101,99,104,109,111,116,105,111,110,105,110,115,105,100,101,109,97,116,116,101,114,67,101,110,116,101,114,111,98,106,101,99,116,101,120,105,115,116,115,109,105,100,100,108,101,69,117,114,111,112,101,103,114,111,119,116,104,108,101,103,97,99,121,109,97,110,110,101,114,101,110,111,117,103,104,99,97,114,101,101,114,97,110,115,119,101,114,111,114,105,103,105,110,112,111,114,116,97,108,99,108,105,101,110,116,115,101,108,101,99,116,114,97,110,100,111,109,99,108,111,115,101,100,116,111,112,105,99,115,99,111,109,105,110,103,102,97,116,104,101,114,111,112,116,105,111,110,115,105,109,112,108,121,114,97,105,115,101,100,101,115,99,97,112,101,99,104,111,115,101,110,99,104,117,114,99,104,100,101,102,105,110,101,114,101,97,115,111,110,99,111,114,110,101,114,111,117,116,112,117,116,109,101,109,111,114,121,105,102,114,97,109,101,112,111,108,105,99,101,109,111,100,101,108,115,78,117,109,98,101,114,100,117,114,105,110,103,111,102,102,101,114,115,115,116,121,108,101,115,107,105,108,108,101,100,108,105,115,116,101,100,99,97,108,108,101,100,115,105,108,118,101,114,109,97,114,103,105,110,100,101,108,101,116,101,98,101,116,116,101,114,98,114,111,119,115,101,108,105,109,105,116,115,71,108,111,98,97,108,115,105,110,103,108,101,119,105,100,103,101,116,99,101,110,116,101,114,98,117,100,103,101,116,110,111,119,114,97,112,99,114,101,100,105,116,99,108,97,105,109,115,101,110,103,105,110,101,115,97,102,101,116,121,99,104,111,105,99,101,115,112,105,114,105,116,45,115,116,121,108,101,115,112,114,101,97,100,109,97,107,105,110,103,110,101,101,100,101,100,114,117,115,115,105,97,112,108,101,97,115,101,101,120,116,101,110,116,83,99,114,105,112,116,98,114,111,107,101,110,97,108,108,111,119,115,99,104,97,114,103,101,100,105,118,105,100,101,102,97,99,116,111,114,109,101,109,98,101,114,45,98,97,115,101,100,116,104,101,111,114,121,99,111,110,102,105,103,97,114,111,117,110,100,119,111,114,107,101,100,104,101,108,112,101,100,67,104,117,114,99,104,105,109,112,97,99,116,115,104,111,117,108,100,97,108,119,97,121,115,108,111,103,111,34,32,98,111,116,116,111,109,108,105,115,116,34,62,41,123,118,97,114,32,112,114,101,102,105,120,111,114,97,110,103,101,72,101,97,100,101,114,46,112,117,115,104,40,99,111,117,112,108,101,103,97,114,100,101,110,98,114,105,100,103,101,108,97,117,110,99,104,82,101,118,105,101,119,116,97,107,105,110,103,118,105,115,105,111,110,108,105,116,116,108,101,100,97,116,105,110,103,66,117,116,116,111,110,98,101,97,117,116,121,116,104,101,109,101,115,102,111,114,103,111,116,83,101,97,114,99,104,97,110,99,104,111,114,97,108,109,111,115,116,108,111,97,100,101,100,67,104,97,110,103,101,114,101,116,117,114,110,115,116,114,105,110,103,114,101,108,111,97,100,77,111,98,105,108,101,105,110,99,111,109,101,115,117,112,112,108,121,83,111,117,114,99,101,111,114,100,101,114,115,118,105,101,119,101,100,38,110,98,115,112,59,99,111,117,114,115,101,65,98,111,117,116,32,105,115,108,97,110,100,60,104,116,109,108,32,99,111,111,107,105,101,110,97,109,101,61,34,97,109,97,122,111,110,109,111,100,101,114,110,97,100,118,105,99,101,105,110,60,47,97,62,58,32,84,104,101,32,100,105,97,108,111,103,104,111,117,115,101,115,66,69,71,73,78,32,77,101,120,105,99,111,115,116,97,114,116,115,99,101,110,116,114,101,104,101,105,103,104,116,97,100,100,105,110,103,73,115,108,97,110,100,97,115,115,101,116,115,69,109,112,105,114,101,83,99,104,111,111,108,101,102,102,111,114,116,100,105,114,101,99,116,110,101,97,114,108,121,109,97,110,117,97,108,83,101,108,101,99,116,46,10,10,79,110,101,106,111,105,110,101,100,109,101,110,117,34,62,80,104,105,108,105,112,97,119,97,114,100,115,104,97,110,100,108,101,105,109,112,111,114,116,79,102,102,105,99,101,114,101,103,97,114,100,115,107,105,108,108,115,110,97,116,105,111,110,83,112,111,114,116,115,100,101,103,114,101,101,119,101,101,107,108,121,32,40,101,46,103,46,98,101,104,105,110,100,100,111,99,116,111,114,108,111,103,103,101,100,117,110,105,116,101,100,60,47,98,62,60,47,98,101,103,105,110,115,112,108,97,110,116,115,97,115,115,105,115,116,97,114,116,105,115,116,105,115,115,117,101,100,51,48,48,112,120,124,99,97,110,97,100,97,97,103,101,110,99,121,115,99,104,101,109,101,114,101,109,97,105,110,66,114,97,122,105,108,115,97,109,112,108,101,108,111,103,111,34,62,98,101,121,111,110,100,45,115,99,97,108,101,97,99,99,101,112,116,115,101,114,118,101,100,109,97,114,105,110,101,70,111,111,116,101,114,99,97,109,101,114,97,60,47,104,49,62,10,95,102,111,114,109,34,108,101,97,118,101,115,115,116,114,101,115,115,34,32,47,62,13,10,46,103,105,102,34,32,111,110,108,111,97,100,108,111,97,100,101,114,79,120,102,111,114,100,115,105,115,116,101,114,115,117,114,118,105,118,108,105,115,116,101,110,102,101,109,97,108,101,68,101,115,105,103,110,115,105,122,101,61,34,97,112,112,101,97,108,116,101,120,116,34,62,108,101,118,101,108,115,116,104,97,110,107,115,104,105,103,104,101,114,102,111,114,99,101,100,97,110,105,109,97,108,97,110,121,111,110,101,65,102,114,105,99,97,97,103,114,101,101,100,114,101,99,101,110,116,80,101,111,112,108,101,60,98,114,32,47,62,119,111,110,100,101,114,112,114,105,99,101,115,116,117,114,110,101,100,124,124,32,123,125,59,109,97,105,110,34,62,105,110,108,105,110,101,115,117,110,100,97,121,119,114,97,112,34,62,102,97,105,108,101,100,99,101,110,115,117,115,109,105,110,117,116,101,98,101,97,99,111,110,113,117,111,116,101,115,49,53,48,112,120,124,101,115,116,97,116,101,114,101,109,111,116,101,101,109,97,105,108,34,108,105,110,107,101,100,114,105,103,104,116,59,115,105,103,110,97,108,102,111,114,109,97,108,49,46,104,116,109,108,115,105,103,110,117,112,112,114,105,110,99,101,102,108,111,97,116,58,46,112,110,103,34,32,102,111,114,117,109,46,65,99,99,101,115,115,112,97,112,101,114,115,115,111,117,110,100,115,101,120,116,101,110,100,72,101,105,103,104,116,115,108,105,100,101,114,85,84,70,45,56,34,38,97,109,112,59,32,66,101,102,111,114,101,46,32,87,105,116,104,115,116,117,100,105,111,111,119,110,101,114,115,109,97,110,97,103,101,112,114,111,102,105,116,106,81,117,101,114,121,97,110,110,117,97,108,112,97,114,97,109,115,98,111,117,103,104,116,102,97,109,111,117,115,103,111,111,103,108,101,108,111,110,103,101,114,105,43,43,41,32,123,105,115,114,97,101,108,115,97,121,105,110,103,100,101,99,105,100,101,104,111,109,101,34,62,104,101,97,100,101,114,101,110,115,117,114,101,98,114,97,110,99,104,112,105,101,99,101,115,98,108,111,99,107,59,115,116,97,116,101,100,116,111,112,34,62,60,114,97,99,105,110,103,114,101,115,105,122,101,45,45,38,103,116,59,112,97,99,105,116,121,115,101,120,117,97,108,98,117,114,101,97,117,46,106,112,103,34,32,49,48,44,48,48,48,111,98,116,97,105,110,116,105,116,108,101,115,97,109,111,117,110,116,44,32,73,110,99,46,99,111,109,101,100,121,109,101,110,117,34,32,108,121,114,105,99,115,116,111,100,97,121,46,105,110,100,101,101,100,99,111,117,110,116,121,95,108,111,103,111,46,70,97,109,105,108,121,108,111,111,107,101,100,77,97,114,107,101,116,108,115,101,32,105,102,80,108,97,121,101,114,116,117,114,107,101,121,41,59,118,97,114,32,102,111,114,101,115,116,103,105,118,105,110,103,101,114,114,111,114,115,68,111,109,97,105,110,125,101,108,115,101,123,105,110,115,101,114,116,66,108,111,103,60,47,102,111,111,116,101,114,108,111,103,105,110,46,102,97,115,116,101,114,97,103,101,110,116,115,60,98,111,100,121,32,49,48,112,120,32,48,112,114,97,103,109,97,102,114,105,100,97,121,106,117,110,105,111,114,100,111,108,108,97,114,112,108,97,99,101,100,99,111,118,101,114,115,112,108,117,103,105,110,53,44,48,48,48,32,112,97,103,101,34,62,98,111,115,116,111,110,46,116,101,115,116,40,97,118,97,116,97,114,116,101,115,116,101,100,95,99,111,117,110,116,102,111,114,117,109,115,115,99,104,101,109,97,105,110,100,101,120,44,102,105,108,108,101,100,115,104,97,114,101,115,114,101,97,100,101,114,97,108,101,114,116,40,97,112,112,101,97,114,83,117,98,109,105,116,108,105,110,101,34,62,98,111,100,121,34,62,10,42,32,84,104,101,84,104,111,117,103,104,115,101,101,105,110,103,106,101,114,115,101,121,78,101,119,115,60,47,118,101,114,105,102,121,101,120,112,101,114,116,105,110,106,117,114,121,119,105,100,116,104,61,67,111,111,107,105,101,83,84,65,82,84,32,97,99,114,111,115,115,95,105,109,97,103,101,116,104,114,101,97,100,110,97,116,105,118,101,112,111,99,107,101,116,98,111,120,34,62,10,83,121,115,116,101,109,32,68,97,118,105,100,99,97,110,99,101,114,116,97,98,108,101,115,112,114,111,118,101,100,65,112,114,105,108,32,114,101,97,108,108,121,100,114,105,118,101,114,105,116,101,109,34,62,109,111,114,101,34,62,98,111,97,114,100,115,99,111,108,111,114,115,99,97,109,112,117,115,102,105,114,115,116,32,124,124,32,91,93,59,109,101,100,105,97,46,103,117,105,116,97,114,102,105,110,105,115,104,119,105,100,116,104,58,115,104,111,119,101,100,79,116,104,101,114,32,46,112,104,112,34,32,97,115,115,117,109,101,108,97,121,101,114,115,119,105,108,115,111,110,115,116,111,114,101,115,114,101,108,105,101,102,115,119,101,100,101,110,67,117,115,116,111,109,101,97,115,105,108,121,32,121,111,117,114,32,83,116,114,105,110,103,10,10,87,104,105,108,116,97,121,108,111,114,99,108,101,97,114,58,114,101,115,111,114,116,102,114,101,110,99,104,116,104,111,117,103,104,34,41,32,43,32,34,60,98,111,100,121,62,98,117,121,105,110,103,98,114,97,110,100,115,77,101,109,98,101,114,110,97,109,101,34,62,111,112,112,105,110,103,115,101,99,116,111,114,53,112,120,59,34,62,118,115,112,97,99,101,112,111,115,116,101,114,109,97,106,111,114,32,99,111,102,102,101,101,109,97,114,116,105,110,109,97,116,117,114,101,104,97,112,112,101,110,60,47,110,97,118,62,107,97,110,115,97,115,108,105,110,107,34,62,73,109,97,103,101,115,61,102,97,108,115,101,119,104,105,108,101,32,104,115,112,97,99,101,48,38,97,109,112,59,32,10,10,73,110,32,32,112,111,119,101,114,80,111,108,115,107,105,45,99,111,108,111,114,106,111,114,100,97,110,66,111,116,116,111,109,83,116,97,114,116,32,45,99,111,117,110,116,50,46,104,116,109,108,110,101,119,115,34,62,48,49,46,106,112,103,79,110,108,105,110,101,45,114,105,103,104,116,109,105,108,108,101,114,115,101,110,105,111,114,73,83,66,78,32,48,48,44,48,48,48,32,103,117,105,100,101,115,118,97,108,117,101,41,101,99,116,105,111,110,114,101,112,97,105,114,46,120,109,108,34,32,32,114,105,103,104,116,115,46,104,116,109,108,45,98,108,111,99,107,114,101,103,69,120,112,58,104,111,118,101,114,119,105,116,104,105,110,118,105,114,103,105,110,112,104,111,110,101,115,60,47,116,114,62,13,117,115,105,110,103,32,10,9,118,97,114,32,62,39,41,59,10,9,60,47,116,100,62,10,60,47,116,114,62,10,98,97,104,97,115,97,98,114,97,115,105,108,103,97,108,101,103,111,109,97,103,121,97,114,112,111,108,115,107,105,115,114,112,115,107,105,216,177,216,175,217,136,228,184,173,230,150,135,231,174,128,228,189,147,231,185,129,233,171,148,228,191,161,230,129,175,228,184,173,229,155,189,230,136,145,228,187,172,228,184,128,228,184,170,229,133,172,229,143,184,231,174,161,231,144,134,232,174,186,229,157,155,229,143,175,228,187,165,230,156,141,229,138,161,230,151,182,233,151,180,228,184,170,228,186,186,228,186,167,229,147,129,232,135,170,229,183,177,228,188,129,228,184,154,230,159,165,231,156,139,229,183,165,228,189,156,232,129,148,231,179,187,230,178,161,230,156,137,231,189,145,231,171,153,230,137,128,230,156,137,232,175,132,232,174,186,228,184,173,229,191,131,230,150,135,231,171,160,231,148,168,230,136,183,233,166,150,233,161,181,228,189,156,232,128,133,230,138,128,230,156,175,233,151,174,233,162,152,231,155,184,229,133,179,228,184,139,232,189,189,230,144,156,231,180,162,228,189,191,231,148,168,232,189,175,228,187,182,229,156,168,231,186,191,228,184,187,233,162,152,232,181,132,230,150,153,232,167,134,233,162,145,229,155,158,229,164,141,230,179,168,229,134,140,231,189,145,231,187,156,230,148,182,232,151,143,229,134,133,229,174,185,230,142,168,232,141,144,229,184,130,229,156,186,230,182,136,230,129,175,231,169,186,233,151,180,229,143,145,229,184,131,228,187,128,228,185,136,229,165,189,229,143,139,231,148,159,230,180,187,229,155,190,231,137,135,229,143,145,229,177,149,229,166,130,230,158,156,230,137,139,230,156,186,230,150,176,233,151,187,230,156,128,230,150,176,230,150,185,229,188,143,229,140,151,228,186,172,230,143,144,228,190,155,229,133,179,228,186,142,230,155,180,229,164,154,232,191,153,228,184,170,231,179,187,231,187,159,231,159,165,233,129,147,230,184,184,230,136,143,229,185,191,229,145,138,229,133,182,228,187,150,229,143,145,232,161,168,229,174,137,229,133,168,231,172,172,228,184,128,228,188,154,229,145,152,232,191,155,232,161,140,231,130,185,229,135,187,231,137,136,230,157,131,231,148,181,229,173,144,228,184,150,231,149,140,232,174,190,232,174,161,229,133,141,232,180,185,230,149,153,232,130,178,229,138,160,229,133,165,230,180,187,229,138,168,228,187,150,228,187,172,229,149,134,229,147,129,229,141,154,229,174,162,231,142,176,229,156,168,228,184,138,230,181,183,229,166,130,228,189,149,229,183,178,231,187,143,231,149,153,232,168,128,232,175,166,231,187,134,231,164,190,229,140,186,231,153,187,229,189,149,230,156,172,231,171,153,233,156,128,232,166,129,228,187,183,230,160,188,230,148,175,230,140,129,229,155,189,233,153,133,233,147,190,230,142,165,229,155,189,229,174,182,229,187,186,232,174,190,230,156,139,229,143,139,233,152,133,232,175,187,230,179,149,229,190,139,228,189,141,231,189,174,231,187,143,230,181,142,233,128,137,230,139,169,232,191,153,230,160,183,229,189,147,229,137,141,229,136,134,231,177,187,230,142,146,232,161,140,229,155,160,228,184,186,228,186,164,230,152,147,230,156,128,229,144,142,233,159,179,228,185,144,228,184,141,232,131,189,233,128,154,232,191,135,232,161,140,228,184,154,231,167,145,230,138,128,229,143,175,232,131,189,232,174,190,229,164,135,229,144,136,228,189,156,229,164,167,229,174,182,231,164,190,228,188,154,231,160,148,231,169,182,228,184,147,228,184,154,229,133,168,233,131,168,233,161,185,231,155,174,232,191,153,233,135,140,232,191,152,230,152,175,229,188,128,229,167,139,230,131,133,229,134,181,231,148,181,232,132,145,230,150,135,228,187,182,229,147,129,231,137,140,229,184,174,229,138,169,230,150,135,229,140,150,232,181,132,230,186,144,229,164,167,229,173,166,229,173,166,228,185,160,229,156,176,229,157,128,230,181,143,232,167,136,230,138,149,232,181,132,229,183,165,231,168,139,232,166,129,230,177,130,230,128,142,228,185,136,230,151,182,229,128,153,229,138,159,232,131,189,228,184,187,232,166,129,231,155,174,229,137,141,232,181,132,232,174,175,229,159,142,229,184,130,230,150,185,230,179,149,231,148,181,229,189,177,230,139,155,232,129,152,229,163,176,230,152,142,228,187,187,228,189,149,229,129,165,229,186,183,230,149,176,230,141,174,231,190,142,229,155,189,230,177,189,232,189,166,228,187,139,231,187,141,228,189,134,230,152,175,228,186,164,230,181,129,231,148,159,228,186,167,230,137,128,228,187,165,231,148,181,232,175,157,230,152,190,231,164,186,228,184,128,228,186,155,229,141,149,228,189,141,228,186,186,229,145,152,229,136,134,230,158,144,229,156,176,229,155,190,230,151,133,230,184,184,229,183,165,229,133,183,229,173,166,231,148,159,231,179,187,229,136,151,231,189,145,229,143,139,229,184,150,229,173,144,229,175,134,231,160,129,233,162,145,233,129,147,230,142,167,229,136,182,229,156,176,229,140,186,229,159,186,230,156,172,229,133,168,229,155,189,231,189,145,228,184,138,233,135,141,232,166,129,231,172,172,228,186,140,229,150,156,230,172,162,232,191,155,229,133,165,229,143,139,230,131,133,232,191,153,228,186,155,232,128,131,232,175,149,229,143,145,231,142,176,229,159,185,232,174,173,228,187,165,228,184,138,230,148,191,229,186,156,230,136,144,228,184,186,231,142,175,229,162,131,233,166,153,230,184,175,229,144,140,230,151,182,229,168,177,228,185,144,229,143,145,233,128,129,228,184,128,229,174,154,229,188,128,229,143,145,228,189,156,229,147,129,230,160,135,229,135,134,230,172,162,232,191,142,232,167,163,229,134,179,229,156,176,230,150,185,228,184,128,228,184,139,228,187,165,229,143,138,232,180,163,228,187,187,230,136,150,232,128,133,229,174,162,230,136,183,228,187,163,232,161,168,231,167,175,229,136,134,229,165,179,228,186,186,230,149,176,231,160,129,233,148,128,229,148,174,229,135,186,231,142,176,231,166,187,231,186,191,229,186,148,231,148,168,229,136,151,232,161,168,228,184,141,229,144,140,231,188,150,232,190,145,231,187,159,232,174,161,230,159,165,232,175,162,228,184,141,232,166,129,230,156,137,229,133,179,230,156,186,230,158,132,229,190,136,229,164,154,230,146,173,230,148,190,231,187,132,231,187,135,230,148,191,231,173,150,231,155,180,230,142,165,232,131,189,229,138,155,230,157,165,230,186,144,230,153,130,233,150,147,231,156,139,229,136,176,231,131,173,233,151,168,229,133,179,233,148,174,228,184,147,229,140,186,233,157,158,229,184,184,232,139,177,232,175,173,231,153,190,229,186,166,229,184,140,230,156,155,231,190,142,229,165,179,230,175,148,232,190,131,231,159,165,232,175,134,232,167,132,229,174,154,229,187,186,232,174,174,233,131,168,233,151,168,230,132,143,232,167,129,231,178,190,229,189,169,230,151,165,230,156,172,230,143,144,233,171,152,229,143,145,232,168,128,230,150,185,233,157,162,229,159,186,233,135,145,229,164,132,231,144,134,230,157,131,233,153,144,229,189,177,231,137,135,233,147,182,232,161,140,232,191,152,230,156,137,229,136,134,228,186,171,231,137,169,229,147,129,231,187,143,232,144,165,230,183,187,229,138,160,228,184,147,229,174,182,232,191,153,231,167,141,232,175,157,233,162,152,232,181,183,230,157,165,228,184,154,229,138,161,229,133,172,229,145,138,232,174,176,229,189,149,231,174,128,228,187,139,232,180,168,233,135,143,231,148,183,228,186,186,229,189,177,229,147,141,229,188,149,231,148,168,230,138,165,229,145,138,233,131,168,229,136,134,229,191,171,233,128,159,229,146,168,232,175,162,230,151,182,229,176,154,230,179,168,230,132,143,231,148,179,232,175,183,229,173,166,230,160,161,229,186,148,232,175,165,229,142,134,229,143,178,229,143,170,230,152,175,232,191,148,229,155,158,232,180,173,228,185,176,229,144,141,231,167,176,228,184,186,228,186,134,230,136,144,229,138,159,232,175,180,230,152,142,228,190,155,229,186,148,229,173,169,229,173,144,228,184,147,233,162,152,231,168,139,229,186,143,228,184,128,232,136,172,230,156,131,229,147,161,229,143,170,230,156,137,229,133,182,229,174,131,228,191,157,230,138,164,232,128,140,228,184,148,228,187,138,229,164,169,231,170,151,229,143,163,229,138,168,230,128,129,231,138,182,230,128,129,231,137,185,229,136,171,232,174,164,228,184,186,229,191,133,233,161,187,230,155,180,230,150,176,229,176,143,232,175,180,230,136,145,229,128,145,228,189,156,228,184,186,229,170,146,228,189,147,229,140,133,230,139,172,233,130,163,228,185,136,228,184,128,230,160,183,229,155,189,229,134,133,230,152,175,229,144,166,230,160,185,230,141,174,231,148,181,232,167,134,229,173,166,233,153,162,229,133,183,230,156,137,232,191,135,231,168,139,231,148,177,228,186,142,228,186,186,230,137,141,229,135,186,230,157,165,228,184,141,232,191,135,230,173,163,229,156,168,230,152,142,230,152,159,230,149,133,228,186,139,229,133,179,231,179,187,230,160,135,233,162,152,229,149,134,229,138,161,232,190,147,229,133,165,228,184,128,231,155,180,229,159,186,231,161,128,230,149,153,229,173,166,228,186,134,232,167,163,229,187,186,231,173,145,231,187,147,230,158,156,229,133,168,231,144,131,233,128,154,231,159,165,232,174,161,229,136,146,229,175,185,228,186,142,232,137,186,230,156,175,231,155,184,229,134,140,229,143,145,231,148,159,231,156,159,231,154,132,229,187,186,231,171,139,231,173,137,231,186,167,231,177,187,229,158,139,231,187,143,233,170,140,229,174,158,231,142,176,229,136,182,228,189,156,230,157,165,232,135,170,230,160,135,231,173,190,228,187,165,228,184,139,229,142,159,229,136,155,230,151,160,230,179,149,229,133,182,228,184,173,229,128,139,228,186,186,228,184,128,229,136,135,230,140,135,229,141,151,229,133,179,233,151,173,233,155,134,229,155,162,231,172,172,228,184,137,229,133,179,230,179,168,229,155,160,230,173,164,231,133,167,231,137,135,230,183,177,229,156,179,229,149,134,228,184,154,229,185,191,229,183,158,230,151,165,230,156,159,233,171,152,231,186,167,230,156,128,232,191,145,231,187,188,229,144,136,232,161,168,231,164,186,228,184,147,232,190,145,232,161,140,228,184,186,228,186,164,233,128,154,232,175,132,228,187,183,232,167,137,229,190,151,231,178,190,229,141,142,229,174,182,229,186,173,229,174,140,230,136,144,230,132,159,232,167,137,229,174,137,232,163,133,229,190,151,229,136,176,233,130,174,228,187,182,229,136,182,229,186,166,233,163,159,229,147,129,232,153,189,231,132,182,232,189,172,232,189,189,230,138,165,228,187,183,232,174,176,232,128,133,230,150,185,230,161,136,232,161,140,230,148,191,228,186,186,230,176,145,231,148,168,229,147,129,228,184,156,232,165,191,230,143,144,229,135,186,233,133,146,229,186,151,231,132,182,229,144,142,228,187,152,230,172,190,231,131,173,231,130,185,228,187,165,229,137,141,229,174,140,229,133,168,229,143,145,229,184,150,232,174,190,231,189,174,233,162,134,229,175,188,229,183,165,228,184,154,229,140,187,233,153,162,231,156,139,231,156,139,231,187,143,229,133,184,229,142,159,229,155,160,229,185,179,229,143,176,229,144,132,231,167,141,229,162,158,229,138,160,230,157,144,230,150,153,230,150,176,229,162,158,228,185,139,229,144,142,232,129,140,228,184,154,230,149,136,230,158,156,228,187,138,229,185,180,232,174,186,230,150,135,230,136,145,229,155,189,229,145,138,232,175,137,231,137,136,228,184,187,228,191,174,230,148,185,229,143,130,228,184,142,230,137,147,229,141,176,229,191,171,228,185,144,230,156,186,230,162,176,232,167,130,231,130,185,229,173,152,229,156,168,231,178,190,231,165,158,232,142,183,229,190,151,229,136,169,231,148,168,231,187,167,231,187,173,228,189,160,228,187,172,232,191,153,228,185,136,230,168,161,229,188,143,232,175,173,232,168,128,232,131,189,229,164,159,233,155,133,232,153,142,230,147,141,228,189,156,233,163,142,230,160,188,228,184,128,232,181,183,231,167,145,229,173,166,228,189,147,232,130,178,231,159,173,228,191,161,230,157,161,228,187,182,230,178,187,231,150,151,232,191,144,229,138,168,228,186,167,228,184,154,228,188,154,232,174,174,229,175,188,232,136,170,229,133,136,231,148,159,232,129,148,231,155,159,229,143,175,230,152,175,229,149,143,233,161,140,231,187,147,230,158,132,228,189,156,231,148,168,232,176,131,230,159,165,232,179,135,230,150,153,232,135,170,229,138,168,232,180,159,232,180,163,229,134,156,228,184,154,232,174,191,233,151,174,229,174,158,230,150,189,230,142,165,229,143,151,232,174,168,232,174,186,233,130,163,228,184,170,229,143,141,233,166,136,229,138,160,229,188,186,229,165,179,230,128,167,232,140,131,229,155,180,230,156,141,229,139,153,228,188,145,233,151,178,228,187,138,230,151,165,229,174,162,230,156,141,232,167,128,231,156,139,229,143,130,229,138,160,231,154,132,232,175,157,228,184,128,231,130,185,228,191,157,232,175,129,229,155,190,228,185,166,230,156,137,230,149,136,230,181,139,232,175,149,231,167,187,229,138,168,230,137,141,232,131,189,229,134,179,229,174,154,232,130,161,231,165,168,228,184,141,230,150,173,233,156,128,230,177,130,228,184,141,229,190,151,229,138,158,230,179,149,228,185,139,233,151,180,233,135,135,231,148,168,232,144,165,233,148,128,230,138,149,232,175,137,231,155,174,230,160,135,231,136,177,230,131,133,230,145,132,229,189,177,230,156,137,228,186,155,232,164,135,232,163,189,230,150,135,229,173,166,230,156,186,228,188,154,230,149,176,229,173,151,232,163,133,228,191,174,232,180,173,231,137,169,229,134,156,230,157,145,229,133,168,233,157,162,231,178,190,229,147,129,229,133,182,229,174,158,228,186,139,230,131,133,230,176,180,229,185,179,230,143,144,231,164,186,228,184,138,229,184,130,232,176,162,232,176,162,230,153,174,233,128,154,230,149,153,229,184,136,228,184,138,228,188,160,231,177,187,229,136,171,230,173,140,230,155,178,230,139,165,230,156,137,229,136,155,230,150,176,233,133,141,228,187,182,229,143,170,232,166,129,230,151,182,228,187,163,232,179,135,232,168,138,232,190,190,229,136,176,228,186,186,231,148,159,232,174,162,233,152,133,232,128,129,229,184,136,229,177,149,231,164,186,229,191,131,231,144,134,232,180,180,229,173,144,231,182,178,231,171,153,228,184,187,233,161,140,232,135,170,231,132,182,231,186,167,229,136,171,231,174,128,229,141,149,230,148,185,233,157,169,233,130,163,228,186,155,230,157,165,232,175,180,230,137,147,229,188,128,228,187,163,231,160,129,229,136,160,233,153,164,232,175,129,229,136,184,232,138,130,231,155,174,233,135,141,231,130,185,230,172,161,230,149,184,229,164,154,229,176,145,232,167,132,229,136,146,232,181,132,233,135,145,230,137,190,229,136,176,228,187,165,229,144,142,229,164,167,229,133,168,228,184,187,233,161,181,230,156,128,228,189,179,229,155,158,231,173,148,229,164,169,228,184,139,228,191,157,233,154,156,231,142,176,228,187,163,230,163,128,230,159,165,230,138,149,231,165,168,229,176,143,230,151,182,230,178,146,230,156,137,230,173,163,229,184,184,231,148,154,232,135,179,228,187,163,231,144,134,231,155,174,229,189,149,229,133,172,229,188,128,229,164,141,229,136,182,233,135,145,232,158,141,229,185,184,231,166,143,231,137,136,230,156,172,229,189,162,230,136,144,229,135,134,229,164,135,232,161,140,230,131,133,229,155,158,229,136,176,230,128,157,230,131,179,230,128,142,230,160,183,229,141,143,232,174,174,232,174,164,232,175,129,230,156,128,229,165,189,228,186,167,231,148,159,230,140,137,231,133,167,230,156,141,232,163,133,229,185,191,228,184,156,229,138,168,230,188,171,233,135,135,232,180,173,230,150,176,230,137,139,231,187,132,229,155,190,233,157,162,230,157,191,229,143,130,232,128,131,230,148,191,230,178,187,229,174,185,230,152,147,229,164,169,229,156,176,229,138,170,229,138,155,228,186,186,228,187,172,229,141,135,231,186,167,233,128,159,229,186,166,228,186,186,231,137,169,232,176,131,230,149,180,230,181,129,232,161,140,233,128,160,230,136,144,230,150,135,229,173,151,233,159,169,229,155,189,232,180,184,230,152,147,229,188,128,229,177,149,231,155,184,233,151,156,232,161,168,231,142,176,229,189,177,232,167,134,229,166,130,230,173,164,231,190,142,229,174,185,229,164,167,229,176,143,230,138,165,233,129,147,230,157,161,230,172,190,229,191,131,230,131,133,232,174,184,229,164,154,230,179,149,232,167,132,229,174,182,229,177,133,228,185,166,229,186,151,232,191,158,230,142,165,231,171,139,229,141,179,228,184,190,230,138,165,230,138,128,229,183,167,229,165,165,232,191,144,231,153,187,229,133,165,228,187,165,230,157,165,231,144,134,232,174,186,228,186,139,228,187,182,232,135,170,231,148,177,228,184,173,229,141,142,229,138,158,229,133,172,229,166,136,229,166,136,231,156,159,230,173,163,228,184,141,233,148,153,229,133,168,230,150,135,229,144,136,229,144,140,228,187,183,229,128,188,229,136,171,228,186,186,231,155,145,231,157,163,229,133,183,228,189,147,228,184,150,231,186,170,229,155,162,233,152,159,229,136,155,228,184,154,230,137,191,230,139,133,229,162,158,233,149,191,230,156,137,228,186,186,228,191,157,230,140,129,229,149,134,229,174,182,231,187,180,228,191,174,229,143,176,230,185,190,229,183,166,229,143,179,232,130,161,228,187,189,231,173,148,230,161,136,229,174,158,233,153,133,231,148,181,228,191,161,231,187,143,231,144,134,231,148,159,229,145,189,229,174,163,228,188,160,228,187,187,229,138,161,230,173,163,229,188,143,231,137,185,232,137,178,228,184,139,230,157,165,229,141,143,228,188,154,229,143,170,232,131,189,229,189,147,231,132,182,233,135,141,230,150,176,229,133,167,229,174,185,230,140,135,229,175,188,232,191,144,232,161,140,230,151,165,229,191,151,232,179,163,229,174,182,232,182,133,232,191,135,229,156,159,229,156,176,230,181,153,230,177,159,230,148,175,228,187,152,230,142,168,229,135,186,231,171,153,233,149,191,230,157,173,229,183,158,230,137,167,232,161,140,229,136,182,233,128,160,228,185,139,228,184,128,230,142,168,229,185,191,231,142,176,229,156,186,230,143,143,232,191,176,229,143,152,229,140,150,228,188,160,231,187,159,230,173,140,230,137,139,228,191,157,233,153,169,232,175,190,231,168,139,229,140,187,231,150,151,231,187,143,232,191,135,232,191,135,229,142,187,228,185,139,229,137,141,230,148,182,229,133,165,229,185,180,229,186,166,230,157,130,229,191,151,231,190,142,228,184,189,230,156,128,233,171,152,231,153,187,233,153,134,230,156,170,230,157,165,229,138,160,229,183,165,229,133,141,232,180,163,230,149,153,231,168,139,231,137,136,229,157,151,232,186,171,228,189,147,233,135,141,229,186,134,229,135,186,229,148,174,230,136,144,230,156,172,229,189,162,229,188,143,229,156,159,232,177,134,229,135,186,229,131,185,228,184,156,230,150,185,233,130,174,231,174,177,229,141,151,228,186,172,230,177,130,232,129,140,229,143,150,229,190,151,232,129,140,228,189,141,231,155,184,228,191,161,233,161,181,233,157,162,229,136,134,233,146,159,231,189,145,233,161,181,231,161,174,229,174,154,229,155,190,228,190,139,231,189,145,229,157,128,231,167,175,230,158,129,233,148,153,232,175,175,231,155,174,231,154,132,229,174,157,232,180,157,230,156,186,229,133,179,233,163,142,233,153,169,230,142,136,230,157,131,231,151,133,230,175,146,229,174,160,231,137,169,233,153,164,228,186,134,232,169,149,232,171,150,231,150,190,231,151,133,229,143,138,230,151,182,230,177,130,232,180,173,231,171,153,231,130,185,229,132,191,231,171,165,230,175,143,229,164,169,228,184,173,229,164,174,232,174,164,232,175,134,230,175,143,228,184,170,229,164,169,230,180,165,229,173,151,228,189,147,229,143,176,231,129,163,231,187,180,230,138,164,230,156,172,233,161,181,228,184,170,230,128,167,229,174,152,230,150,185,229,184,184,232,167,129,231,155,184,230,156,186,230,136,152,231,149,165,229,186,148,229,189,147,229,190,139,229,184,136,230,150,185,228,190,191,230,160,161,229,155,173,232,130,161,229,184,130,230,136,191,229,177,139,230,160,143,231,155,174,229,145,152,229,183,165,229,175,188,232,135,180,231,170,129,231,132,182,233,129,147,229,133,183,230,156,172,231,189,145,231,187,147,229,144,136,230,161,163,230,161,136,229,138,179,229,138,168,229,143,166,229,164,150,231,190,142,229,133,131,229,188,149,232,181,183,230,148,185,229,143,152,231,172,172,229,155,155,228,188,154,232,174,161,232,170,170,230,152,142,233,154,144,231,167,129,229,174,157,229,174,157,232,167,132,232,140,131,230,182,136,232,180,185,229,133,177,229,144,140,229,191,152,232,174,176,228,189,147,231,179,187,229,184,166,230,157,165,229,144,141,229,173,151,231,153,188,232,161,168,229,188,128,230,148,190,229,138,160,231,155,159,229,143,151,229,136,176,228,186,140,230,137,139,229,164,167,233,135,143,230,136,144,228,186,186,230,149,176,233,135,143,229,133,177,228,186,171,229,140,186,229,159,159,229,165,179,229,173,169,229,142,159,229,136,153,230,137,128,229,156,168,231,187,147,230,157,159,233,128,154,228,191,161,232,182,133,231,186,167,233,133,141,231,189,174,229,189,147,230,151,182,228,188,152,231,167,128,230,128,167,230,132,159,230,136,191,228,186,167,233,129,138,230,136,178,229,135,186,229,143,163,230,143,144,228,186,164,229,176,177,228,184,154,228,191,157,229,129,165,231,168,139,229,186,166,229,143,130,230,149,176,228,186,139,228,184,154,230,149,180,228,184,170,229,177,177,228,184,156,230,131,133,230,132,159,231,137,185,230,174,138,229,136,134,233,161,158,230,144,156,229,176,139,229,177,158,228,186,142,233,151,168,230,136,183,232,180,162,229,138,161,229,163,176,233,159,179,229,143,138,229,133,182,232,180,162,231,187,143,229,157,154,230,140,129,229,185,178,233,131,168,230,136,144,231,171,139,229,136,169,231,155,138,232,128,131,232,153,145,230,136,144,233,131,189,229,140,133,232,163,133,231,148,168,230,136,182,230,175,148,232,181,155,230,150,135,230,152,142,230,139,155,229,149,134,229,174,140,230,149,180,231,156,159,230,152,175,231,156,188,231,157,155,228,188,153,228,188,180,229,168,129,230,156,155,233,162,134,229,159,159,229,141,171,231,148,159,228,188,152,230,131,160,232,171,150,229,163,135,229,133,172,229,133,177,232,137,175,229,165,189,229,133,133,229,136,134,231,172,166,229,144,136,233,153,132,228,187,182,231,137,185,231,130,185,228,184,141,229,143,175,232,139,177,230,150,135,232,181,132,228,186,167,230,160,185,230,156,172,230,152,142,230,152,190,229,175,134,231,162,188,229,133,172,228,188,151,230,176,145,230,151,143,230,155,180,229,138,160,228,186,171,229,143,151,229,144,140,229,173,166,229,144,175,229,138,168,233,128,130,229,144,136,229,142,159,230,157,165,233,151,174,231,173,148,230,156,172,230,150,135,231,190,142,233,163,159,231,187,191,232,137,178,231,168,179,229,174,154,231,187,136,228,186,142,231,148,159,231,137,169,228,190,155,230,177,130,230,144,156,231,139,144,229,138,155,233,135,143,228,184,165,233,135,141,230,176,184,232,191,156,229,134,153,231,156,159,230,156,137,233,153,144,231,171,158,228,186,137,229,175,185,232,177,161,232,180,185,231,148,168,228,184,141,229,165,189,231,187,157,229,175,185,229,141,129,229,136,134,228,191,131,232,191,155,231,130,185,232,175,132,229,189,177,233,159,179,228,188,152,229,138,191,228,184,141,229,176,145,230,172,163,232,181,143,229,185,182,228,184,148,230,156,137,231,130,185,230,150,185,229,144,145,229,133,168,230,150,176,228,191,161,231,148,168,232,174,190,230,150,189,229,189,162,232,177,161,232,181,132,230,160,188,231,170,129,231,160,180,233,154,143,231,157,128,233,135,141,229,164,167,228,186,142,230,152,175,230,175,149,228,184,154,230,153,186,232,131,189,229,140,150,229,183,165,229,174,140,231,190,142,229,149,134,229,159,142,231,187,159,228,184,128,229,135,186,231,137,136,230,137,147,233,128,160,231,148,162,229,147,129,230,166,130,229,134,181,231,148,168,228,186,142,228,191,157,231,149,153,229,155,160,231,180,160,228,184,173,229,156,139,229,173,152,229,130,168,232,180,180,229,155,190,230,156,128,230,132,155,233,149,191,230,156,159,229,143,163,228,187,183,231,144,134,232,180,162,229,159,186,229,156,176,229,174,137,230,142,146,230,173,166,230,177,137,233,135,140,233,157,162,229,136,155,229,187,186,229,164,169,231,169,186,233,166,150,229,133,136,229,174,140,229,150,132,233,169,177,229,138,168,228,184,139,233,157,162,228,184,141,229,134,141,232,175,154,228,191,161,230,132,143,228,185,137,233,152,179,229,133,137,232,139,177,229,155,189,230,188,130,228,186,174,229,134,155,228,186,139,231,142,169,229,174,182,231,190,164,228,188,151,229,134,156,230,176,145,229,141,179,229,143,175,229,144,141,231,168,177,229,174,182,229,133,183,229,138,168,231,148,187,230,131,179,229,136,176,230,179,168,230,152,142,229,176,143,229,173,166,230,128,167,232,131,189,232,128,131,231,160,148,231,161,172,228,187,182,232,167,130,231,156,139,230,184,133,230,165,154,230,144,158,231,172,145,233,166,150,233,160,129,233,187,132,233,135,145,233,128,130,231,148,168,230,177,159,232,139,143,231,156,159,229,174,158,228,184,187,231,174,161,233,152,182,230,174,181,232,168,187,229,134,138,231,191,187,232,175,145,230,157,131,229,136,169,229,129,154,229,165,189,228,188,188,228,185,142,233,128,154,232,174,175,230,150,189,229,183,165,231,139,128,230,133,139,228,185,159,232,174,184,231,142,175,228,191,157,229,159,185,229,133,187,230,166,130,229,191,181,229,164,167,229,158,139,230,156,186,231,165,168,231,144,134,232,167,163,229,140,191,229,144,141,99,117,97,110,100,111,101,110,118,105,97,114,109,97,100,114,105,100,98,117,115,99,97,114,105,110,105,99,105,111,116,105,101,109,112,111,112,111,114,113,117,101,99,117,101,110,116,97,101,115,116,97,100,111,112,117,101,100,101,110,106,117,101,103,111,115,99,111,110,116,114,97,101,115,116,195,161,110,110,111,109,98,114,101,116,105,101,110,101,110,112,101,114,102,105,108,109,97,110,101,114,97,97,109,105,103,111,115,99,105,117,100,97,100,99,101,110,116,114,111,97,117,110,113,117,101,112,117,101,100,101,115,100,101,110,116,114,111,112,114,105,109,101,114,112,114,101,99,105,111,115,101,103,195,186,110,98,117,101,110,111,115,118,111,108,118,101,114,112,117,110,116,111,115,115,101,109,97,110,97,104,97,98,195,173,97,97,103,111,115,116,111,110,117,101,118,111,115,117,110,105,100,111,115,99,97,114,108,111,115,101,113,117,105,112,111,110,105,195,177,111,115,109,117,99,104,111,115,97,108,103,117,110,97,99,111,114,114,101,111,105,109,97,103,101,110,112,97,114,116,105,114,97,114,114,105,98,97,109,97,114,195,173,97,104,111,109,98,114,101,101,109,112,108,101,111,118,101,114,100,97,100,99,97,109,98,105,111,109,117,99,104,97,115,102,117,101,114,111,110,112,97,115,97,100,111,108,195,173,110,101,97,112,97,114,101,99,101,110,117,101,118,97,115,99,117,114,115,111,115,101,115,116,97,98,97,113,117,105,101,114,111,108,105,98,114,111,115,99,117,97,110,116,111,97,99,99,101,115,111,109,105,103,117,101,108,118,97,114,105,111,115,99,117,97,116,114,111,116,105,101,110,101,115,103,114,117,112,111,115,115,101,114,195,161,110,101,117,114,111,112,97,109,101,100,105,111,115,102,114,101,110,116,101,97,99,101,114,99,97,100,101,109,195,161,115,111,102,101,114,116,97,99,111,99,104,101,115,109,111,100,101,108,111,105,116,97,108,105,97,108,101,116,114,97,115,97,108,103,195,186,110,99,111,109,112,114,97,99,117,97,108,101,115,101,120,105,115,116,101,99,117,101,114,112,111,115,105,101,110,100,111,112,114,101,110,115,97,108,108,101,103,97,114,118,105,97,106,101,115,100,105,110,101,114,111,109,117,114,99,105,97,112,111,100,114,195,161,112,117,101,115,116,111,100,105,97,114,105,111,112,117,101,98,108,111,113,117,105,101,114,101,109,97,110,117,101,108,112,114,111,112,105,111,99,114,105,115,105,115,99,105,101,114,116,111,115,101,103,117,114,111,109,117,101,114,116,101,102,117,101,110,116,101,99,101,114,114,97,114,103,114,97,110,100,101,101,102,101,99,116,111,112,97,114,116,101,115,109,101,100,105,100,97,112,114,111,112,105,97,111,102,114,101,99,101,116,105,101,114,114,97,101,45,109,97,105,108,118,97,114,105,97,115,102,111,114,109,97,115,102,117,116,117,114,111,111,98,106,101,116,111,115,101,103,117,105,114,114,105,101,115,103,111,110,111,114,109,97,115,109,105,115,109,111,115,195,186,110,105,99,111,99,97,109,105,110,111,115,105,116,105,111,115,114,97,122,195,179,110,100,101,98,105,100,111,112,114,117,101,98,97,116,111,108,101,100,111,116,101,110,195,173,97,106,101,115,195,186,115,101,115,112,101,114,111,99,111,99,105,110,97,111,114,105,103,101,110,116,105,101,110,100,97,99,105,101,110,116,111,99,195,161,100,105,122,104,97,98,108,97,114,115,101,114,195,173,97,108,97,116,105,110,97,102,117,101,114,122,97,101,115,116,105,108,111,103,117,101,114,114,97,101,110,116,114,97,114,195,169,120,105,116,111,108,195,179,112,101,122,97,103,101,110,100,97,118,195,173,100,101,111,101,118,105,116,97,114,112,97,103,105,110,97,109,101,116,114,111,115,106,97,118,105,101,114,112,97,100,114,101,115,102,195,161,99,105,108,99,97,98,101,122,97,195,161,114,101,97,115,115,97,108,105,100,97,101,110,118,195,173,111,106,97,112,195,179,110,97,98,117,115,111,115,98,105,101,110,101,115,116,101,120,116,111,115,108,108,101,118,97,114,112,117,101,100,97,110,102,117,101,114,116,101,99,111,109,195,186,110,99,108,97,115,101,115,104,117,109,97,110,111,116,101,110,105,100,111,98,105,108,98,97,111,117,110,105,100,97,100,101,115,116,195,161,115,101,100,105,116,97,114,99,114,101,97,100,111,208,180,208,187,209,143,209,135,209,130,208,190,208,186,208,176,208,186,208,184,208,187,208,184,209,141,209,130,208,190,208,178,209,129,208,181,208,181,208,179,208,190,208,191,209,128,208,184,209,130,208,176,208,186,208,181,209,137,208,181,209,131,208,182,208,181,208,154,208,176,208,186,208,177,208,181,208,183,208,177,209,139,208,187,208,190,208,189,208,184,208,146,209,129,208,181,208,191,208,190,208,180,208,173,209,130,208,190,209,130,208,190,208,188,209,135,208,181,208,188,208,189,208,181,209,130,208,187,208,181,209,130,209,128,208,176,208,183,208,190,208,189,208,176,208,179,208,180,208,181,208,188,208,189,208,181,208,148,208,187,209,143,208,159,209,128,208,184,208,189,208,176,209,129,208,189,208,184,209,133,209,130,208,181,208,188,208,186,209,130,208,190,208,179,208,190,208,180,208,178,208,190,209,130,209,130,208,176,208,188,208,161,208,168,208,144,208,188,208,176,209,143,208,167,209,130,208,190,208,178,208,176,209,129,208,178,208,176,208,188,208,181,208,188,209,131,208,162,208,176,208,186,208,180,208,178,208,176,208,189,208,176,208,188,209,141,209,130,208,184,209,141,209,130,209,131,208,146,208,176,208,188,209,130,208,181,209,133,208,191,209,128,208,190,209,130,209,131,209,130,208,189,208,176,208,180,208,180,208,189,209,143,208,146,208,190,209,130,209,130,209,128,208,184,208,189,208,181,208,185,208,146,208,176,209,129,208,189,208,184,208,188,209,129,208,176,208,188,209,130,208,190,209,130,209,128,209,131,208,177,208,158,208,189,208,184,208,188,208,184,209,128,208,189,208,181,208,181,208,158,208,158,208,158,208,187,208,184,209,134,209,141,209,130,208,176,208,158,208,189,208,176,208,189,208,181,208,188,208,180,208,190,208,188,208,188,208,190,208,185,208,180,208,178,208,181,208,190,208,189,208,190,209,129,209,131,208,180,224,164,149,224,165,135,224,164,185,224,165,136,224,164,149,224,165,128,224,164,184,224,165,135,224,164,149,224,164,190,224,164,149,224,165,139,224,164,148,224,164,176,224,164,170,224,164,176,224,164,168,224,165,135,224,164,143,224,164,149,224,164,149,224,164,191,224,164,173,224,165,128,224,164,135,224,164,184,224,164,149,224,164,176,224,164,164,224,165,139,224,164,185,224,165,139,224,164,134,224,164,170,224,164,185,224,165,128,224,164,175,224,164,185,224,164,175,224,164,190,224,164,164,224,164,149,224,164,165,224,164,190,106,97,103,114,97,110,224,164,134,224,164,156,224,164,156,224,165,139,224,164,133,224,164,172,224,164,166,224,165,139,224,164,151,224,164,136,224,164,156,224,164,190,224,164,151,224,164,143,224,164,185,224,164,174,224,164,135,224,164,168,224,164,181,224,164,185,224,164,175,224,165,135,224,164,165,224,165,135,224,164,165,224,165,128,224,164,152,224,164,176,224,164,156,224,164,172,224,164,166,224,165,128,224,164,149,224,164,136,224,164,156,224,165,128,224,164,181,224,165,135,224,164,168,224,164,136,224,164,168,224,164,143,224,164,185,224,164,176,224,164,137,224,164,184,224,164,174,224,165,135,224,164,149,224,164,174,224,164,181,224,165,139,224,164,178,224,165,135,224,164,184,224,164,172,224,164,174,224,164,136,224,164,166,224,165,135,224,164,147,224,164,176,224,164,134,224,164,174,224,164,172,224,164,184,224,164,173,224,164,176,224,164,172,224,164,168,224,164,154,224,164,178,224,164,174,224,164,168,224,164,134,224,164,151,224,164,184,224,165,128,224,164,178,224,165,128,216,185,217,132,217,137,216,165,217,132,217,137,217,135,216,176,216,167,216,162,216,174,216,177,216,185,216,175,216,175,216,167,217,132,217,137,217,135,216,176,217,135,216,181,217,136,216,177,216,186,217,138,216,177,217,131,216,167,217,134,217,136,217,132,216,167,216,168,217,138,217,134,216,185,216,177,216,182,216,176,217,132,217,131,217,135,217,134,216,167,217,138,217,136,217,133,217,130,216,167,217,132,216,185,217,132,217,138,216,167,217,134,216,167,217,132,217,131,217,134,216,173,216,170,217,137,217,130,216,168,217,132,217,136,216,173,216,169,216,167,216,174,216,177,217,129,217,130,216,183,216,185,216,168,216,175,216,177,217,131,217,134,216,165,216,176,216,167,217,131,217,133,216,167,216,167,216,173,216,175,216,165,217,132,216,167,217,129,217,138,217,135,216,168,216,185,216,182,217,131,217,138,217,129,216,168,216,173,216,171,217,136,217,133,217,134,217,136,217,135,217,136,216,163,217,134,216,167,216,172,216,175,216,167,217,132,217,135,216,167,216,179,217,132,217,133,216,185,217,134,216,175,217,132,217,138,216,179,216,185,216,168,216,177,216,181,217,132,217,137,217,133,217,134,216,176,216,168,217,135,216,167,216,163,217,134,217,135,217,133,216,171,217,132,217,131,217,134,216,170,216,167,217,132,216,167,216,173,217,138,216,171,217,133,216,181,216,177,216,180,216,177,216,173,216,173,217,136,217,132,217,136,217,129,217,138,216,167,216,176,216,167,217,132,217,131,217,132,217,133,216,177,216,169,216,167,217,134,216,170,216,167,217,132,217,129,216,163,216,168,217,136,216,174,216,167,216,181,216,163,217,134,216,170,216,167,217,134,217,135,216,167,217,132,217,138,216,185,216,182,217,136,217,136,217,130,216,175,216,167,216,168,217,134,216,174,217,138,216,177,216,168,217,134,216,170,217,132,217,131,217,133,216,180,216,167,216,161,217,136,217,135,217,138,216,167,216,168,217,136,217,130,216,181,216,181,217,136,217,133,216,167,216,177,217,130,217,133,216,163,216,173,216,175,217,134,216,173,217,134,216,185,216,175,217,133,216,177,216,163,217,138,216,167,216,173,216,169,217,131,216,170,216,168,216,175,217,136,217,134,217,138,216,172,216,168,217,133,217,134,217,135,216,170,216,173,216,170,216,172,217,135,216,169,216,179,217,134,216,169,217,138,216,170,217,133,217,131,216,177,216,169,216,186,216,178,216,169,217,134,217,129,216,179,216,168,217,138,216,170,217,132,217,132,217,135,217,132,217,134,216,167,216,170,217,132,217,131,217,130,217,132,216,168,217,132,217,133,216,167,216,185,217,134,217,135,216,163,217,136,217,132,216,180,217,138,216,161,217,134,217,136,216,177,216,163,217,133,216,167,217,129,217,138,217,131,216,168,217,131,217,132,216,176,216,167,216,170,216,177,216,170,216,168,216,168,216,163,217,134,217,135,217,133,216,179,216,167,217,134,217,131,216,168,217,138,216,185,217,129,217,130,216,175,216,173,216,179,217,134,217,132,217,135,217,133,216,180,216,185,216,177,216,163,217,135,217,132,216,180,217,135,216,177,217,130,216,183,216,177,216,183,217,132,216,168,112,114,111,102,105,108,101,115,101,114,118,105,99,101,100,101,102,97,117,108,116,104,105,109,115,101,108,102,100,101,116,97,105,108,115,99,111,110,116,101,110,116,115,117,112,112,111,114,116,115,116,97,114,116,101,100,109,101,115,115,97,103,101,115,117,99,99,101,115,115,102,97,115,104,105,111,110,60,116,105,116,108,101,62,99,111,117,110,116,114,121,97,99,99,111,117,110,116,99,114,101,97,116,101,100,115,116,111,114,105,101,115,114,101,115,117,108,116,115,114,117,110,110,105,110,103,112,114,111,99,101,115,115,119,114,105,116,105,110,103,111,98,106,101,99,116,115,118,105,115,105,98,108,101,119,101,108,99,111,109,101,97,114,116,105,99,108,101,117,110,107,110,111,119,110,110,101,116,119,111,114,107,99,111,109,112,97,110,121,100,121,110,97,109,105,99,98,114,111,119,115,101,114,112,114,105,118,97,99,121,112,114,111,98,108,101,109,83,101,114,118,105,99,101,114,101,115,112,101,99,116,100,105,115,112,108,97,121,114,101,113,117,101,115,116,114,101,115,101,114,118,101,119,101,98,115,105,116,101,104,105,115,116,111,114,121,102,114,105,101,110,100,115,111,112,116,105,111,110,115,119,111,114,107,105,110,103,118,101,114,115,105,111,110,109,105,108,108,105,111,110,99,104,97,110,110,101,108,119,105,110,100,111,119,46,97,100,100,114,101,115,115,118,105,115,105,116,101,100,119,101,97,116,104,101,114,99,111,114,114,101,99,116,112,114,111,100,117,99,116,101,100,105,114,101,99,116,102,111,114,119,97,114,100,121,111,117,32,99,97,110,114,101,109,111,118,101,100,115,117,98,106,101,99,116,99,111,110,116,114,111,108,97,114,99,104,105,118,101,99,117,114,114,101,110,116,114,101,97,100,105,110,103,108,105,98,114,97,114,121,108,105,109,105,116,101,100,109,97,110,97,103,101,114,102,117,114,116,104,101,114,115,117,109,109,97,114,121,109,97,99,104,105,110,101,109,105,110,117,116,101,115,112,114,105,118,97,116,101,99,111,110,116,101,120,116,112,114,111,103,114,97,109,115,111,99,105,101,116,121,110,117,109,98,101,114,115,119,114,105,116,116,101,110,101,110,97,98,108,101,100,116,114,105,103,103,101,114,115,111,117,114,99,101,115,108,111,97,100,105,110,103,101,108,101,109,101,110,116,112,97,114,116,110,101,114,102,105,110,97,108,108,121,112,101,114,102,101,99,116,109,101,97,110,105,110,103,115,121,115,116,101,109,115,107,101,101,112,105,110,103,99,117,108,116,117,114,101,38,113,117,111,116,59,44,106,111,117,114,110,97,108,112,114,111,106,101,99,116,115,117,114,102,97,99,101,115,38,113,117,111,116,59,101,120,112,105,114,101,115,114,101,118,105,101,119,115,98,97,108,97,110,99,101,69,110,103,108,105,115,104,67,111,110,116,101,110,116,116,104,114,111,117,103,104,80,108,101,97,115,101,32,111,112,105,110,105,111,110,99,111,110,116,97,99,116,97,118,101,114,97,103,101,112,114,105,109,97,114,121,118,105,108,108,97,103,101,83,112,97,110,105,115,104,103,97,108,108,101,114,121,100,101,99,108,105,110,101,109,101,101,116,105,110,103,109,105,115,115,105,111,110,112,111,112,117,108,97,114,113,117,97,108,105,116,121,109,101,97,115,117,114,101,103,101,110,101,114,97,108,115,112,101,99,105,101,115,115,101,115,115,105,111,110,115,101,99,116,105,111,110,119,114,105,116,101,114,115,99,111,117,110,116,101,114,105,110,105,116,105,97,108,114,101,112,111,114,116,115,102,105,103,117,114,101,115,109,101,109,98,101,114,115,104,111,108,100,105,110,103,100,105,115,112,117,116,101,101,97,114,108,105,101,114,101,120,112,114,101,115,115,100,105,103,105,116,97,108,112,105,99,116,117,114,101,65,110,111,116,104,101,114,109,97,114,114,105,101,100,116,114,97,102,102,105,99,108,101,97,100,105,110,103,99,104,97,110,103,101,100,99,101,110,116,114,97,108,118,105,99,116,111,114,121,105,109,97,103,101,115,47,114,101,97,115,111,110,115,115,116,117,100,105,101,115,102,101,97,116,117,114,101,108,105,115,116,105,110,103,109,117,115,116,32,98,101,115,99,104,111,111,108,115,86,101,114,115,105,111,110,117,115,117,97,108,108,121,101,112,105,115,111,100,101,112,108,97,121,105,110,103,103,114,111,119,105,110,103,111,98,118,105,111,117,115,111,118,101,114,108,97,121,112,114,101,115,101,110,116,97,99,116,105,111,110,115,60,47,117,108,62,13,10,119,114,97,112,112,101,114,97,108,114,101,97,100,121,99,101,114,116,97,105,110,114,101,97,108,105,116,121,115,116,111,114,97,103,101,97,110,111,116,104,101,114,100,101,115,107,116,111,112,111,102,102,101,114,101,100,112,97,116,116,101,114,110,117,110,117,115,117,97,108,68,105,103,105,116,97,108,99,97,112,105,116,97,108,87,101,98,115,105,116,101,102,97,105,108,117,114,101,99,111,110,110,101,99,116,114,101,100,117,99,101,100,65,110,100,114,111,105,100,100,101,99,97,100,101,115,114,101,103,117,108,97,114,32,38,97,109,112,59,32,97,110,105,109,97,108,115,114,101,108,101,97,115,101,65,117,116,111,109,97,116,103,101,116,116,105,110,103,109,101,116,104,111,100,115,110,111,116,104,105,110,103,80,111,112,117,108,97,114,99,97,112,116,105,111,110,108,101,116,116,101,114,115,99,97,112,116,117,114,101,115,99,105,101,110,99,101,108,105,99,101,110,115,101,99,104,97,110,103,101,115,69,110,103,108,97,110,100,61,49,38,97,109,112,59,72,105,115,116,111,114,121,32,61,32,110,101,119,32,67,101,110,116,114,97,108,117,112,100,97,116,101,100,83,112,101,99,105,97,108,78,101,116,119,111,114,107,114,101,113,117,105,114,101,99,111,109,109,101,110,116,119,97,114,110,105,110,103,67,111,108,108,101,103,101,116,111,111,108,98,97,114,114,101,109,97,105,110,115,98,101,99,97,117,115,101,101,108,101,99,116,101,100,68,101,117,116,115,99,104,102,105,110,97,110,99,101,119,111,114,107,101,114,115,113,117,105,99,107,108,121,98,101,116,119,101,101,110,101,120,97,99,116,108,121,115,101,116,116,105,110,103,100,105,115,101,97,115,101,83,111,99,105,101,116,121,119,101,97,112,111,110,115,101,120,104,105,98,105,116,38,108,116,59,33,45,45,67,111,110,116,114,111,108,99,108,97,115,115,101,115,99,111,118,101,114,101,100,111,117,116,108,105,110,101,97,116,116,97,99,107,115,100,101,118,105,99,101,115,40,119,105,110,100,111,119,112,117,114,112,111,115,101,116,105,116,108,101,61,34,77,111,98,105,108,101,32,107,105,108,108,105,110,103,115,104,111,119,105,110,103,73,116,97,108,105,97,110,100,114,111,112,112,101,100,104,101,97,118,105,108,121,101,102,102,101,99,116,115,45,49,39,93,41,59,10,99,111,110,102,105,114,109,67,117,114,114,101,110,116,97,100,118,97,110,99,101,115,104,97,114,105,110,103,111,112,101,110,105,110,103,100,114,97,119,105,110,103,98,105,108,108,105,111,110,111,114,100,101,114,101,100,71,101,114,109,97,110,121,114,101,108,97,116,101,100,60,47,102,111,114,109,62,105,110,99,108,117,100,101,119,104,101,116,104,101,114,100,101,102,105,110,101,100,83,99,105,101,110,99,101,99,97,116,97,108,111,103,65,114,116,105,99,108,101,98,117,116,116,111,110,115,108,97,114,103,101,115,116,117,110,105,102,111,114,109,106,111,117,114,110,101,121,115,105,100,101,98,97,114,67,104,105,99,97,103,111,104,111,108,105,100,97,121,71,101,110,101,114,97,108,112,97,115,115,97,103,101,44,38,113,117,111,116,59,97,110,105,109,97,116,101,102,101,101,108,105,110,103,97,114,114,105,118,101,100,112,97,115,115,105,110,103,110,97,116,117,114,97,108,114,111,117,103,104,108,121,46,10,10,84,104,101,32,98,117,116,32,110,111,116,100,101,110,115,105,116,121,66,114,105,116,97,105,110,67,104,105,110,101,115,101,108,97,99,107,32,111,102,116,114,105,98,117,116,101,73,114,101,108,97,110,100,34,32,100,97,116,97,45,102,97,99,116,111,114,115,114,101,99,101,105,118,101,116,104,97,116,32,105,115,76,105,98,114,97,114,121,104,117,115,98,97,110,100,105,110,32,102,97,99,116,97,102,102,97,105,114,115,67,104,97,114,108,101,115,114,97,100,105,99,97,108,98,114,111,117,103,104,116,102,105,110,100,105,110,103,108,97,110,100,105,110,103,58,108,97,110,103,61,34,114,101,116,117,114,110,32,108,101,97,100,101,114,115,112,108,97,110,110,101,100,112,114,101,109,105,117,109,112,97,99,107,97,103,101,65,109,101,114,105,99,97,69,100,105,116,105,111,110,93,38,113,117,111,116,59,77,101,115,115,97,103,101,110,101,101,100,32,116,111,118,97,108,117,101,61,34,99,111,109,112,108,101,120,108,111,111,107,105,110,103,115,116,97,116,105,111,110,98,101,108,105,101,118,101,115,109,97,108,108,101,114,45,109,111,98,105,108,101,114,101,99,111,114,100,115,119,97,110,116,32,116,111,107,105,110,100,32,111,102,70,105,114,101,102,111,120,121,111,117,32,97,114,101,115,105,109,105,108,97,114,115,116,117,100,105,101,100,109,97,120,105,109,117,109,104,101,97,100,105,110,103,114,97,112,105,100,108,121,99,108,105,109,97,116,101,107,105,110,103,100,111,109,101,109,101,114,103,101,100,97,109,111,117,110,116,115,102,111,117,110,100,101,100,112,105,111,110,101,101,114,102,111,114,109,117,108,97,100,121,110,97,115,116,121,104,111,119,32,116,111,32,83,117,112,112,111,114,116,114,101,118,101,110,117,101,101,99,111,110,111,109,121,82,101,115,117,108,116,115,98,114,111,116,104,101,114,115,111,108,100,105,101,114,108,97,114,103,101,108,121,99,97,108,108,105,110,103,46,38,113,117,111,116,59,65,99,99,111,117,110,116,69,100,119,97,114,100,32,115,101,103,109,101,110,116,82,111,98,101,114,116,32,101,102,102,111,114,116,115,80,97,99,105,102,105,99,108,101,97,114,110,101,100,117,112,32,119,105,116,104,104,101,105,103,104,116,58,119,101,32,104,97,118,101,65,110,103,101,108,101,115,110,97,116,105,111,110,115,95,115,101,97,114,99,104,97,112,112,108,105,101,100,97,99,113,117,105,114,101,109,97,115,115,105,118,101,103,114,97,110,116,101,100,58,32,102,97,108,115,101,116,114,101,97,116,101,100,98,105,103,103,101,115,116,98,101,110,101,102,105,116,100,114,105,118,105,110,103,83,116,117,100,105,101,115,109,105,110,105,109,117,109,112,101,114,104,97,112,115,109,111,114,110,105,110,103,115,101,108,108,105,110,103,105,115,32,117,115,101,100,114,101,118,101,114,115,101,118,97,114,105,97,110,116,32,114,111,108,101,61,34,109,105,115,115,105,110,103,97,99,104,105,101,118,101,112,114,111,109,111,116,101,115,116,117,100,101,110,116,115,111,109,101,111,110,101,101,120,116,114,101,109,101,114,101,115,116,111,114,101,98,111,116,116,111,109,58,101,118,111,108,118,101,100,97,108,108,32,116,104,101,115,105,116,101,109,97,112,101,110,103,108,105,115,104,119,97,121,32,116,111,32,32,65,117,103,117,115,116,115,121,109,98,111,108,115,67,111,109,112,97,110,121,109,97,116,116,101,114,115,109,117,115,105,99,97,108,97,103,97,105,110,115,116,115,101,114,118,105,110,103,125,41,40,41,59,13,10,112,97,121,109,101,110,116,116,114,111,117,98,108,101,99,111,110,99,101,112,116,99,111,109,112,97,114,101,112,97,114,101,110,116,115,112,108,97,121,101,114,115,114,101,103,105,111,110,115,109,111,110,105,116,111,114,32,39,39,84,104,101,32,119,105,110,110,105,110,103,101,120,112,108,111,114,101,97,100,97,112,116,101,100,71,97,108,108,101,114,121,112,114,111,100,117,99,101,97,98,105,108,105,116,121,101,110,104,97,110,99,101,99,97,114,101,101,114,115,41,46,32,84,104,101,32,99,111,108,108,101,99,116,83,101,97,114,99,104,32,97,110,99,105,101,110,116,101,120,105,115,116,101,100,102,111,111,116,101,114,32,104,97,110,100,108,101,114,112,114,105,110,116,101,100,99,111,110,115,111,108,101,69,97,115,116,101,114,110,101,120,112,111,114,116,115,119,105,110,100,111,119,115,67,104,97,110,110,101,108,105,108,108,101,103,97,108,110,101,117,116,114,97,108,115,117,103,103,101,115,116,95,104,101,97,100,101,114,115,105,103,110,105,110,103,46,104,116,109,108,34,62,115,101,116,116,108,101,100,119,101,115,116,101,114,110,99,97,117,115,105,110,103,45,119,101,98,107,105,116,99,108,97,105,109,101,100,74,117,115,116,105,99,101,99,104,97,112,116,101,114,118,105,99,116,105,109,115,84,104,111,109,97,115,32,109,111,122,105,108,108,97,112,114,111,109,105,115,101,112,97,114,116,105,101,115,101,100,105,116,105,111,110,111,117,116,115,105,100,101,58,102,97,108,115,101,44,104,117,110,100,114,101,100,79,108,121,109,112,105,99,95,98,117,116,116,111,110,97,117,116,104,111,114,115,114,101,97,99,104,101,100,99,104,114,111,110,105,99,100,101,109,97,110,100,115,115,101,99,111,110,100,115,112,114,111,116,101,99,116,97,100,111,112,116,101,100,112,114,101,112,97,114,101,110,101,105,116,104,101,114,103,114,101,97,116,108,121,103,114,101,97,116,101,114,111,118,101,114,97,108,108,105,109,112,114,111,118,101,99,111,109,109,97,110,100,115,112,101,99,105,97,108,115,101,97,114,99,104,46,119,111,114,115,104,105,112,102,117,110,100,105,110,103,116,104,111,117,103,104,116,104,105,103,104,101,115,116,105,110,115,116,101,97,100,117,116,105,108,105,116,121,113,117,97,114,116,101,114,67,117,108,116,117,114,101,116,101,115,116,105,110,103,99,108,101,97,114,108,121,101,120,112,111,115,101,100,66,114,111,119,115,101,114,108,105,98,101,114,97,108,125,32,99,97,116,99,104,80,114,111,106,101,99,116,101,120,97,109,112,108,101,104,105,100,101,40,41,59,70,108,111,114,105,100,97,97,110,115,119,101,114,115,97,108,108,111,119,101,100,69,109,112,101,114,111,114,100,101,102,101,110,115,101,115,101,114,105,111,117,115,102,114,101,101,100,111,109,83,101,118,101,114,97,108,45,98,117,116,116,111,110,70,117,114,116,104,101,114,111,117,116,32,111,102,32,33,61,32,110,117,108,108,116,114,97,105,110,101,100,68,101,110,109,97,114,107,118,111,105,100,40,48,41,47,97,108,108,46,106,115,112,114,101,118,101,110,116,82,101,113,117,101,115,116,83,116,101,112,104,101,110,10,10,87,104,101,110,32,111,98,115,101,114,118,101,60,47,104,50,62,13,10,77,111,100,101,114,110,32,112,114,111,118,105,100,101,34,32,97,108,116,61,34,98,111,114,100,101,114,115,46,10,10,70,111,114,32,10,10,77,97,110,121,32,97,114,116,105,115,116,115,112,111,119,101,114,101,100,112,101,114,102,111,114,109,102,105,99,116,105,111,110,116,121,112,101,32,111,102,109,101,100,105,99,97,108,116,105,99,107,101,116,115,111,112,112,111,115,101,100,67,111,117,110,99,105,108,119,105,116,110,101,115,115,106,117,115,116,105,99,101,71,101,111,114,103,101,32,66,101,108,103,105,117,109,46,46,46,60,47,97,62,116,119,105,116,116,101,114,110,111,116,97,98,108,121,119,97,105,116,105,110,103,119,97,114,102,97,114,101,32,79,116,104,101,114,32,114,97,110,107,105,110,103,112,104,114,97,115,101,115,109,101,110,116,105,111,110,115,117,114,118,105,118,101,115,99,104,111,108,97,114,60,47,112,62,13,10,32,67,111,117,110,116,114,121,105,103,110,111,114,101,100,108,111,115,115,32,111,102,106,117,115,116,32,97,115,71,101,111,114,103,105,97,115,116,114,97,110,103,101,60,104,101,97,100,62,60,115,116,111,112,112,101,100,49,39,93,41,59,13,10,105,115,108,97,110,100,115,110,111,116,97,98,108,101,98,111,114,100,101,114,58,108,105,115,116,32,111,102,99,97,114,114,105,101,100,49,48,48,44,48,48,48,60,47,104,51,62,10,32,115,101,118,101,114,97,108,98,101,99,111,109,101,115,115,101,108,101,99,116,32,119,101,100,100,105,110,103,48,48,46,104,116,109,108,109,111,110,97,114,99,104,111,102,102,32,116,104,101,116,101,97,99,104,101,114,104,105,103,104,108,121,32,98,105,111,108,111,103,121,108,105,102,101,32,111,102,111,114,32,101,118,101,110,114,105,115,101,32,111,102,38,114,97,113,117,111,59,112,108,117,115,111,110,101,104,117,110,116,105,110,103,40,116,104,111,117,103,104,68,111,117,103,108,97,115,106,111,105,110,105,110,103,99,105,114,99,108,101,115,70,111,114,32,116,104,101,65,110,99,105,101,110,116,86,105,101,116,110,97,109,118,101,104,105,99,108,101,115,117,99,104,32,97,115,99,114,121,115,116,97,108,118,97,108,117,101,32,61,87,105,110,100,111,119,115,101,110,106,111,121,101,100,97,32,115,109,97,108,108,97,115,115,117,109,101,100,60,97,32,105,100,61,34,102,111,114,101,105,103,110,32,65,108,108,32,114,105,104,111,119,32,116,104,101,68,105,115,112,108,97,121,114,101,116,105,114,101,100,104,111,119,101,118,101,114,104,105,100,100,101,110,59,98,97,116,116,108,101,115,115,101,101,107,105,110,103,99,97,98,105,110,101,116,119,97,115,32,110,111,116,108,111,111,107,32,97,116,99,111,110,100,117,99,116,103,101,116,32,116,104,101,74,97,110,117,97,114,121,104,97,112,112,101,110,115,116,117,114,110,105,110,103,97,58,104,111,118,101,114,79,110,108,105,110,101,32,70,114,101,110,99,104,32,108,97,99,107,105,110,103,116,121,112,105,99,97,108,101,120,116,114,97,99,116,101,110,101,109,105,101,115,101,118,101,110,32,105,102,103,101,110,101,114,97,116,100,101,99,105,100,101,100,97,114,101,32,110,111,116,47,115,101,97,114,99,104,98,101,108,105,101,102,115,45,105,109,97,103,101,58,108,111,99,97,116,101,100,115,116,97,116,105,99,46,108,111,103,105,110,34,62,99,111,110,118,101,114,116,118,105,111,108,101,110,116,101,110,116,101,114,101,100,102,105,114,115,116,34,62,99,105,114,99,117,105,116,70,105,110,108,97,110,100,99,104,101,109,105,115,116,115,104,101,32,119,97,115,49,48,112,120,59,34,62,97,115,32,115,117,99,104,100,105,118,105,100,101,100,60,47,115,112,97,110,62,119,105,108,108,32,98,101,108,105,110,101,32,111,102,97,32,103,114,101,97,116,109,121,115,116,101,114,121,47,105,110,100,101,120,46,102,97,108,108,105,110,103,100,117,101,32,116,111,32,114,97,105,108,119,97,121,99,111,108,108,101,103,101,109,111,110,115,116,101,114,100,101,115,99,101,110,116,105,116,32,119,105,116,104,110,117,99,108,101,97,114,74,101,119,105,115,104,32,112,114,111,116,101,115,116,66,114,105,116,105,115,104,102,108,111,119,101,114,115,112,114,101,100,105,99,116,114,101,102,111,114,109,115,98,117,116,116,111,110,32,119,104,111,32,119,97,115,108,101,99,116,117,114,101,105,110,115,116,97,110,116,115,117,105,99,105,100,101,103,101,110,101,114,105,99,112,101,114,105,111,100,115,109,97,114,107,101,116,115,83,111,99,105,97,108,32,102,105,115,104,105,110,103,99,111,109,98,105,110,101,103,114,97,112,104,105,99,119,105,110,110,101,114,115,60,98,114,32,47,62,60,98,121,32,116,104,101,32,78,97,116,117,114,97,108,80,114,105,118,97,99,121,99,111,111,107,105,101,115,111,117,116,99,111,109,101,114,101,115,111,108,118,101,83,119,101,100,105,115,104,98,114,105,101,102,108,121,80,101,114,115,105,97,110,115,111,32,109,117,99,104,67,101,110,116,117,114,121,100,101,112,105,99,116,115,99,111,108,117,109,110,115,104,111,117,115,105,110,103,115,99,114,105,112,116,115,110,101,120,116,32,116,111,98,101,97,114,105,110,103,109,97,112,112,105,110,103,114,101,118,105,115,101,100,106,81,117,101,114,121,40,45,119,105,100,116,104,58,116,105,116,108,101,34,62,116,111,111,108,116,105,112,83,101,99,116,105,111,110,100,101,115,105,103,110,115,84,117,114,107,105,115,104,121,111,117,110,103,101,114,46,109,97,116,99,104,40,125,41,40,41,59,10,10,98,117,114,110,105,110,103,111,112,101,114,97,116,101,100,101,103,114,101,101,115,115,111,117,114,99,101,61,82,105,99,104,97,114,100,99,108,111,115,101,108,121,112,108,97,115,116,105,99,101,110,116,114,105,101,115,60,47,116,114,62,13,10,99,111,108,111,114,58,35,117,108,32,105,100,61,34,112,111,115,115,101,115,115,114,111,108,108,105,110,103,112,104,121,115,105,99,115,102,97,105,108,105,110,103,101,120,101,99,117,116,101,99,111,110,116,101,115,116,108,105,110,107,32,116,111,68,101,102,97,117,108,116,60,98,114,32,47,62,10,58,32,116,114,117,101,44,99,104,97,114,116,101,114,116,111,117,114,105,115,109,99,108,97,115,115,105,99,112,114,111,99,101,101,100,101,120,112,108,97,105,110,60,47,104,49,62,13,10,111,110,108,105,110,101,46,63,120,109,108,32,118,101,104,101,108,112,105,110,103,100,105,97,109,111,110,100,117,115,101,32,116,104,101,97,105,114,108,105,110,101,101,110,100,32,45,45,62,41,46,97,116,116,114,40,114,101,97,100,101,114,115,104,111,115,116,105,110,103,35,102,102,102,102,102,102,114,101,97,108,105,122,101,86,105,110,99,101,110,116,115,105,103,110,97,108,115,32,115,114,99,61,34,47,80,114,111,100,117,99,116,100,101,115,112,105,116,101,100,105,118,101,114,115,101,116,101,108,108,105,110,103,80,117,98,108,105,99,32,104,101,108,100,32,105,110,74,111,115,101,112,104,32,116,104,101,97,116,114,101,97,102,102,101,99,116,115,60,115,116,121,108,101,62,97,32,108,97,114,103,101,100,111,101,115,110,39,116,108,97,116,101,114,44,32,69,108,101,109,101,110,116,102,97,118,105,99,111,110,99,114,101,97,116,111,114,72,117,110,103,97,114,121,65,105,114,112,111,114,116,115,101,101,32,116,104,101,115,111,32,116,104,97,116,77,105,99,104,97,101,108,83,121,115,116,101,109,115,80,114,111,103,114,97,109,115,44,32,97,110,100,32,32,119,105,100,116,104,61,101,38,113,117,111,116,59,116,114,97,100,105,110,103,108,101,102,116,34,62,10,112,101,114,115,111,110,115,71,111,108,100,101,110,32,65,102,102,97,105,114,115,103,114,97,109,109,97,114,102,111,114,109,105,110,103,100,101,115,116,114,111,121,105,100,101,97,32,111,102,99,97,115,101,32,111,102,111,108,100,101,115,116,32,116,104,105,115,32,105,115,46,115,114,99,32,61,32,99,97,114,116,111,111,110,114,101,103,105,115,116,114,67,111,109,109,111,110,115,77,117,115,108,105,109,115,87,104,97,116,32,105,115,105,110,32,109,97,110,121,109,97,114,107,105,110,103,114,101,118,101,97,108,115,73,110,100,101,101,100,44,101,113,117,97,108,108,121,47,115,104,111,119,95,97,111,117,116,100,111,111,114,101,115,99,97,112,101,40,65,117,115,116,114,105,97,103,101,110,101,116,105,99,115,121,115,116,101,109,44,73,110,32,116,104,101,32,115,105,116,116,105,110,103,72,101,32,97,108,115,111,73,115,108,97,110,100,115,65,99,97,100,101,109,121,10,9,9,60,33,45,45,68,97,110,105,101,108,32,98,105,110,100,105,110,103,98,108,111,99,107,34,62,105,109,112,111,115,101,100,117,116,105,108,105,122,101,65,98,114,97,104,97,109,40,101,120,99,101,112,116,123,119,105,100,116,104,58,112,117,116,116,105,110,103,41,46,104,116,109,108,40,124,124,32,91,93,59,10,68,65,84,65,91,32,42,107,105,116,99,104,101,110,109,111,117,110,116,101,100,97,99,116,117,97,108,32,100,105,97,108,101,99,116,109,97,105,110,108,121,32,95,98,108,97,110,107,39,105,110,115,116,97,108,108,101,120,112,101,114,116,115,105,102,40,116,121,112,101,73,116,32,97,108,115,111,38,99,111,112,121,59,32,34,62,84,101,114,109,115,98,111,114,110,32,105,110,79,112,116,105,111,110,115,101,97,115,116,101,114,110,116,97,108,107,105,110,103,99,111,110,99,101,114,110,103,97,105,110,101,100,32,111,110,103,111,105,110,103,106,117,115,116,105,102,121,99,114,105,116,105,99,115,102,97,99,116,111,114,121,105,116,115,32,111,119,110,97,115,115,97,117,108,116,105,110,118,105,116,101,100,108,97,115,116,105,110,103,104,105,115,32,111,119,110,104,114,101,102,61,34,47,34,32,114,101,108,61,34,100,101,118,101,108,111,112,99,111,110,99,101,114,116,100,105,97,103,114,97,109,100,111,108,108,97,114,115,99,108,117,115,116,101,114,112,104,112,63,105,100,61,97,108,99,111,104,111,108,41,59,125,41,40,41,59,117,115,105,110,103,32,97,62,60,115,112,97,110,62,118,101,115,115,101,108,115,114,101,118,105,118,97,108,65,100,100,114,101,115,115,97,109,97,116,101,117,114,97,110,100,114,111,105,100,97,108,108,101,103,101,100,105,108,108,110,101,115,115,119,97,108,107,105,110,103,99,101,110,116,101,114,115,113,117,97,108,105,102,121,109,97,116,99,104,101,115,117,110,105,102,105,101,100,101,120,116,105,110,99,116,68,101,102,101,110,115,101,100,105,101,100,32,105,110,10,9,60,33,45,45,32,99,117,115,116,111,109,115,108,105,110,107,105,110,103,76,105,116,116,108,101,32,66,111,111,107,32,111,102,101,118,101,110,105,110,103,109,105,110,46,106,115,63,97,114,101,32,116,104,101,107,111,110,116,97,107,116,116,111,100,97,121,39,115,46,104,116,109,108,34,32,116,97,114,103,101,116,61,119,101,97,114,105,110,103,65,108,108,32,82,105,103,59,10,125,41,40,41,59,114,97,105,115,105,110,103,32,65,108,115,111,44,32,99,114,117,99,105,97,108,97,98,111,117,116,34,62,100,101,99,108,97,114,101,45,45,62,10,60,115,99,102,105,114,101,102,111,120,97,115,32,109,117,99,104,97,112,112,108,105,101,115,105,110,100,101,120,44,32,115,44,32,98,117,116,32,116,121,112,101,32,61,32,10,13,10,60,33,45,45,116,111,119,97,114,100,115,82,101,99,111,114,100,115,80,114,105,118,97,116,101,70,111,114,101,105,103,110,80,114,101,109,105,101,114,99,104,111,105,99,101,115,86,105,114,116,117,97,108,114,101,116,117,114,110,115,67,111,109,109,101,110,116,80,111,119,101,114,101,100,105,110,108,105,110,101,59,112,111,118,101,114,116,121,99,104,97,109,98,101,114,76,105,118,105,110,103,32,118,111,108,117,109,101,115,65,110,116,104,111,110,121,108,111,103,105,110,34,32,82,101,108,97,116,101,100,69,99,111,110,111,109,121,114,101,97,99,104,101,115,99,117,116,116,105,110,103,103,114,97,118,105,116,121,108,105,102,101,32,105,110,67,104,97,112,116,101,114,45,115,104,97,100,111,119,78,111,116,97,98,108,101,60,47,116,100,62,13,10,32,114,101,116,117,114,110,115,116,97,100,105,117,109,119,105,100,103,101,116,115,118,97,114,121,105,110,103,116,114,97,118,101,108,115,104,101,108,100,32,98,121,119,104,111,32,97,114,101,119,111,114,107,32,105,110,102,97,99,117,108,116,121,97,110,103,117,108,97,114,119,104,111,32,104,97,100,97,105,114,112,111,114,116,116,111,119,110,32,111,102,10,10,83,111,109,101,32,39,99,108,105,99,107,39,99,104,97,114,103,101,115,107,101,121,119,111,114,100,105,116,32,119,105,108,108,99,105,116,121,32,111,102,40,116,104,105,115,41,59,65,110,100,114,101,119,32,117,110,105,113,117,101,32,99,104,101,99,107,101,100,111,114,32,109,111,114,101,51,48,48,112,120,59,32,114,101,116,117,114,110,59,114,115,105,111,110,61,34,112,108,117,103,105,110,115,119,105,116,104,105,110,32,104,101,114,115,101,108,102,83,116,97,116,105,111,110,70,101,100,101,114,97,108,118,101,110,116,117,114,101,112,117,98,108,105,115,104,115,101,110,116,32,116,111,116,101,110,115,105,111,110,97,99,116,114,101,115,115,99,111,109,101,32,116,111,102,105,110,103,101,114,115,68,117,107,101,32,111,102,112,101,111,112,108,101,44,101,120,112,108,111,105,116,119,104,97,116,32,105,115,104,97,114,109,111,110,121,97,32,109,97,106,111,114,34,58,34,104,116,116,112,105,110,32,104,105,115,32,109,101,110,117,34,62,10,109,111,110,116,104,108,121,111,102,102,105,99,101,114,99,111,117,110,99,105,108,103,97,105,110,105,110,103,101,118,101,110,32,105,110,83,117,109,109,97,114,121,100,97,116,101,32,111,102,108,111,121,97,108,116,121,102,105,116,110,101,115,115,97,110,100,32,119,97,115,101,109,112,101,114,111,114,115,117,112,114,101,109,101,83,101,99,111,110,100,32,104,101,97,114,105,110,103,82,117,115,115,105,97,110,108,111,110,103,101,115,116,65,108,98,101,114,116,97,108,97,116,101,114,97,108,115,101,116,32,111,102,32,115,109,97,108,108,34,62,46,97,112,112,101,110,100,100,111,32,119,105,116,104,102,101,100,101,114,97,108,98,97,110,107,32,111,102,98,101,110,101,97,116,104,68,101,115,112,105,116,101,67,97,112,105,116,97,108,103,114,111,117,110,100,115,41,44,32,97,110,100,32,112,101,114,99,101,110,116,105,116,32,102,114,111,109,99,108,111,115,105,110,103,99,111,110,116,97,105,110,73,110,115,116,101,97,100,102,105,102,116,101,101,110,97,115,32,119,101,108,108,46,121,97,104,111,111,46,114,101,115,112,111,110,100,102,105,103,104,116,101,114,111,98,115,99,117,114,101,114,101,102,108,101,99,116,111,114,103,97,110,105,99,61,32,77,97,116,104,46,101,100,105,116,105,110,103,111,110,108,105,110,101,32,112,97,100,100,105,110,103,97,32,119,104,111,108,101,111,110,101,114,114,111,114,121,101,97,114,32,111,102,101,110,100,32,111,102,32,98,97,114,114,105,101,114,119,104,101,110,32,105,116,104,101,97,100,101,114,32,104,111,109,101,32,111,102,114,101,115,117,109,101,100,114,101,110,97,109,101,100,115,116,114,111,110,103,62,104,101,97,116,105,110,103,114,101,116,97,105,110,115,99,108,111,117,100,102,114,119,97,121,32,111,102,32,77,97,114,99,104,32,49,107,110,111,119,105,110,103,105,110,32,112,97,114,116,66,101,116,119,101,101,110,108,101,115,115,111,110,115,99,108,111,115,101,115,116,118,105,114,116,117,97,108,108,105,110,107,115,34,62,99,114,111,115,115,101,100,69,78,68,32,45,45,62,102,97,109,111,117,115,32,97,119,97,114,100,101,100,76,105,99,101,110,115,101,72,101,97,108,116,104,32,102,97,105,114,108,121,32,119,101,97,108,116,104,121,109,105,110,105,109,97,108,65,102,114,105,99,97,110,99,111,109,112,101,116,101,108,97,98,101,108,34,62,115,105,110,103,105,110,103,102,97,114,109,101,114,115,66,114,97,115,105,108,41,100,105,115,99,117,115,115,114,101,112,108,97,99,101,71,114,101,103,111,114,121,102,111,110,116,32,99,111,112,117,114,115,117,101,100,97,112,112,101,97,114,115,109,97,107,101,32,117,112,114,111,117,110,100,101,100,98,111,116,104,32,111,102,98,108,111,99,107,101,100,115,97,119,32,116,104,101,111,102,102,105,99,101,115,99,111,108,111,117,114,115,105,102,40,100,111,99,117,119,104,101,110,32,104,101,101,110,102,111,114,99,101,112,117,115,104,40,102,117,65,117,103,117,115,116,32,85,84,70,45,56,34,62,70,97,110,116,97,115,121,105,110,32,109,111,115,116,105,110,106,117,114,101,100,85,115,117,97,108,108,121,102,97,114,109,105,110,103,99,108,111,115,117,114,101,111,98,106,101,99,116,32,100,101,102,101,110,99,101,117,115,101,32,111,102,32,77,101,100,105,99,97,108,60,98,111,100,121,62,10,101,118,105,100,101,110,116,98,101,32,117,115,101,100,107,101,121,67,111,100,101,115,105,120,116,101,101,110,73,115,108,97,109,105,99,35,48,48,48,48,48,48,101,110,116,105,114,101,32,119,105,100,101,108,121,32,97,99,116,105,118,101,32,40,116,121,112,101,111,102,111,110,101,32,99,97,110,99,111,108,111,114,32,61,115,112,101,97,107,101,114,101,120,116,101,110,100,115,80,104,121,115,105,99,115,116,101,114,114,97,105,110,60,116,98,111,100,121,62,102,117,110,101,114,97,108,118,105,101,119,105,110,103,109,105,100,100,108,101,32,99,114,105,99,107,101,116,112,114,111,112,104,101,116,115,104,105,102,116,101,100,100,111,99,116,111,114,115,82,117,115,115,101,108,108,32,116,97,114,103,101,116,99,111,109,112,97,99,116,97,108,103,101,98,114,97,115,111,99,105,97,108,45,98,117,108,107,32,111,102,109,97,110,32,97,110,100,60,47,116,100,62,10,32,104,101,32,108,101,102,116,41,46,118,97,108,40,41,102,97,108,115,101,41,59,108,111,103,105,99,97,108,98,97,110,107,105,110,103,104,111,109,101,32,116,111,110,97,109,105,110,103,32,65,114,105,122,111,110,97,99,114,101,100,105,116,115,41,59,10,125,41,59,10,102,111,117,110,100,101,114,105,110,32,116,117,114,110,67,111,108,108,105,110,115,98,101,102,111,114,101,32,66,117,116,32,116,104,101,99,104,97,114,103,101,100,84,105,116,108,101,34,62,67,97,112,116,97,105,110,115,112,101,108,108,101,100,103,111,100,100,101,115,115,84,97,103,32,45,45,62,65,100,100,105,110,103,58,98,117,116,32,119,97,115,82,101,99,101,110,116,32,112,97,116,105,101,110,116,98,97,99,107,32,105,110,61,102,97,108,115,101,38,76,105,110,99,111,108,110,119,101,32,107,110,111,119,67,111,117,110,116,101,114,74,117,100,97,105,115,109,115,99,114,105,112,116,32,97,108,116,101,114,101,100,39,93,41,59,10,32,32,104,97,115,32,116,104,101,117,110,99,108,101,97,114,69,118,101,110,116,39,44,98,111,116,104,32,105,110,110,111,116,32,97,108,108,10,10,60,33,45,45,32,112,108,97,99,105,110,103,104,97,114,100,32,116,111,32,99,101,110,116,101,114,115,111,114,116,32,111,102,99,108,105,101,110,116,115,115,116,114,101,101,116,115,66,101,114,110,97,114,100,97,115,115,101,114,116,115,116,101,110,100,32,116,111,102,97,110,116,97,115,121,100,111,119,110,32,105,110,104,97,114,98,111,117,114,70,114,101,101,100,111,109,106,101,119,101,108,114,121,47,97,98,111,117,116,46,46,115,101,97,114,99,104,108,101,103,101,110,100,115,105,115,32,109,97,100,101,109,111,100,101,114,110,32,111,110,108,121,32,111,110,111,110,108,121,32,116,111,105,109,97,103,101,34,32,108,105,110,101,97,114,32,112,97,105,110,116,101,114,97,110,100,32,110,111,116,114,97,114,101,108,121,32,97,99,114,111,110,121,109,100,101,108,105,118,101,114,115,104,111,114,116,101,114,48,48,38,97,109,112,59,97,115,32,109,97,110,121,119,105,100,116,104,61,34,47,42,32,60,33,91,67,116,105,116,108,101,32,61,111,102,32,116,104,101,32,108,111,119,101,115,116,32,112,105,99,107,101,100,32,101,115,99,97,112,101,100,117,115,101,115,32,111,102,112,101,111,112,108,101,115,32,80,117,98,108,105,99,77,97,116,116,104,101,119,116,97,99,116,105,99,115,100,97,109,97,103,101,100,119,97,121,32,102,111,114,108,97,119,115,32,111,102,101,97,115,121,32,116,111,32,119,105,110,100,111,119,115,116,114,111,110,103,32,32,115,105,109,112,108,101,125,99,97,116,99,104,40,115,101,118,101,110,116,104,105,110,102,111,98,111,120,119,101,110,116,32,116,111,112,97,105,110,116,101,100,99,105,116,105,122,101,110,73,32,100,111,110,39,116,114,101,116,114,101,97,116,46,32,83,111,109,101,32,119,119,46,34,41,59,10,98,111,109,98,105,110,103,109,97,105,108,116,111,58,109,97,100,101,32,105,110,46,32,77,97,110,121,32,99,97,114,114,105,101,115,124,124,123,125,59,119,105,119,111,114,107,32,111,102,115,121,110,111,110,121,109,100,101,102,101,97,116,115,102,97,118,111,114,101,100,111,112,116,105,99,97,108,112,97,103,101,84,114,97,117,110,108,101,115,115,32,115,101,110,100,105,110,103,108,101,102,116,34,62,60,99,111,109,83,99,111,114,65,108,108,32,116,104,101,106,81,117,101,114,121,46,116,111,117,114,105,115,116,67,108,97,115,115,105,99,102,97,108,115,101,34,32,87,105,108,104,101,108,109,115,117,98,117,114,98,115,103,101,110,117,105,110,101,98,105,115,104,111,112,115,46,115,112,108,105,116,40,103,108,111,98,97,108,32,102,111,108,108,111,119,115,98,111,100,121,32,111,102,110,111,109,105,110,97,108,67,111,110,116,97,99,116,115,101,99,117,108,97,114,108,101,102,116,32,116,111,99,104,105,101,102,108,121,45,104,105,100,100,101,110,45,98,97,110,110,101,114,60,47,108,105,62,10,10,46,32,87,104,101,110,32,105,110,32,98,111,116,104,100,105,115,109,105,115,115,69,120,112,108,111,114,101,97,108,119,97,121,115,32,118,105,97,32,116,104,101,115,112,97,195,177,111,108,119,101,108,102,97,114,101,114,117,108,105,110,103,32,97,114,114,97,110,103,101,99,97,112,116,97,105,110,104,105,115,32,115,111,110,114,117,108,101,32,111,102,104,101,32,116,111,111,107,105,116,115,101,108,102,44,61,48,38,97,109,112,59,40,99,97,108,108,101,100,115,97,109,112,108,101,115,116,111,32,109,97,107,101,99,111,109,47,112,97,103,77,97,114,116,105,110,32,75,101,110,110,101,100,121,97,99,99,101,112,116,115,102,117,108,108,32,111,102,104,97,110,100,108,101,100,66,101,115,105,100,101,115,47,47,45,45,62,60,47,97,98,108,101,32,116,111,116,97,114,103,101,116,115,101,115,115,101,110,99,101,104,105,109,32,116,111,32,105,116,115,32,98,121,32,99,111,109,109,111,110,46,109,105,110,101,114,97,108,116,111,32,116,97,107,101,119,97,121,115,32,116,111,115,46,111,114,103,47,108,97,100,118,105,115,101,100,112,101,110,97,108,116,121,115,105,109,112,108,101,58,105,102,32,116,104,101,121,76,101,116,116,101,114,115,97,32,115,104,111,114,116,72,101,114,98,101,114,116,115,116,114,105,107,101,115,32,103,114,111,117,112,115,46,108,101,110,103,116,104,102,108,105,103,104,116,115,111,118,101,114,108,97,112,115,108,111,119,108,121,32,108,101,115,115,101,114,32,115,111,99,105,97,108,32,60,47,112,62,10,9,9,105,116,32,105,110,116,111,114,97,110,107,101,100,32,114,97,116,101,32,111,102,117,108,62,13,10,32,32,97,116,116,101,109,112,116,112,97,105,114,32,111,102,109,97,107,101,32,105,116,75,111,110,116,97,107,116,65,110,116,111,110,105,111,104,97,118,105,110,103,32,114,97,116,105,110,103,115,32,97,99,116,105,118,101,115,116,114,101,97,109,115,116,114,97,112,112,101,100,34,41,46,99,115,115,40,104,111,115,116,105,108,101,108,101,97,100,32,116,111,108,105,116,116,108,101,32,103,114,111,117,112,115,44,80,105,99,116,117,114,101,45,45,62,13,10,13,10,32,114,111,119,115,61,34,32,111,98,106,101,99,116,105,110,118,101,114,115,101,60,102,111,111,116,101,114,67,117,115,116,111,109,86,62,60,92,47,115,99,114,115,111,108,118,105,110,103,67,104,97,109,98,101,114,115,108,97,118,101,114,121,119,111,117,110,100,101,100,119,104,101,114,101,97,115,33,61,32,39,117,110,100,102,111,114,32,97,108,108,112,97,114,116,108,121,32,45,114,105,103,104,116,58,65,114,97,98,105,97,110,98,97,99,107,101,100,32,99,101,110,116,117,114,121,117,110,105,116,32,111,102,109,111,98,105,108,101,45,69,117,114,111,112,101,44,105,115,32,104,111,109,101,114,105,115,107,32,111,102,100,101,115,105,114,101,100,67,108,105,110,116,111,110,99,111,115,116,32,111,102,97,103,101,32,111,102,32,98,101,99,111,109,101,32,110,111,110,101,32,111,102,112,38,113,117,111,116,59,77,105,100,100,108,101,32,101,97,100,39,41,91,48,67,114,105,116,105,99,115,115,116,117,100,105,111,115,62,38,99,111,112,121,59,103,114,111,117,112,34,62,97,115,115,101,109,98,108,109,97,107,105,110,103,32,112,114,101,115,115,101,100,119,105,100,103,101,116,46,112,115,58,34,32,63,32,114,101,98,117,105,108,116,98,121,32,115,111,109,101,70,111,114,109,101,114,32,101,100,105,116,111,114,115,100,101,108,97,121,101,100,67,97,110,111,110,105,99,104,97,100,32,116,104,101,112,117,115,104,105,110,103,99,108,97,115,115,61,34,98,117,116,32,97,114,101,112,97,114,116,105,97,108,66,97,98,121,108,111,110,98,111,116,116,111,109,32,99,97,114,114,105,101,114,67,111,109,109,97,110,100,105,116,115,32,117,115,101,65,115,32,119,105,116,104,99,111,117,114,115,101,115,97,32,116,104,105,114,100,100,101,110,111,116,101,115,97,108,115,111,32,105,110,72,111,117,115,116,111,110,50,48,112,120,59,34,62,97,99,99,117,115,101,100,100,111,117,98,108,101,32,103,111,97,108,32,111,102,70,97,109,111,117,115,32,41,46,98,105,110,100,40,112,114,105,101,115,116,115,32,79,110,108,105,110,101,105,110,32,74,117,108,121,115,116,32,43,32,34,103,99,111,110,115,117,108,116,100,101,99,105,109,97,108,104,101,108,112,102,117,108,114,101,118,105,118,101,100,105,115,32,118,101,114,121,114,39,43,39,105,112,116,108,111,115,105,110,103,32,102,101,109,97,108,101,115,105,115,32,97,108,115,111,115,116,114,105,110,103,115,100,97,121,115,32,111,102,97,114,114,105,118,97,108,102,117,116,117,114,101,32,60,111,98,106,101,99,116,102,111,114,99,105,110,103,83,116,114,105,110,103,40,34,32,47,62,10,9,9,104,101,114,101,32,105,115,101,110,99,111,100,101,100,46,32,32,84,104,101,32,98,97,108,108,111,111,110,100,111,110,101,32,98,121,47,99,111,109,109,111,110,98,103,99,111,108,111,114,108,97,119,32,111,102,32,73,110,100,105,97,110,97,97,118,111,105,100,101,100,98,117,116,32,116,104,101,50,112,120,32,51,112,120,106,113,117,101,114,121,46,97,102,116,101,114,32,97,112,111,108,105,99,121,46,109,101,110,32,97,110,100,102,111,111,116,101,114,45,61,32,116,114,117,101,59,102,111,114,32,117,115,101,115,99,114,101,101,110,46,73,110,100,105,97,110,32,105,109,97,103,101,32,61,102,97,109,105,108,121,44,104,116,116,112,58,47,47,32,38,110,98,115,112,59,100,114,105,118,101,114,115,101,116,101,114,110,97,108,115,97,109,101,32,97,115,110,111,116,105,99,101,100,118,105,101,119,101,114,115,125,41,40,41,59,10,32,105,115,32,109,111,114,101,115,101,97,115,111,110,115,102,111,114,109,101,114,32,116,104,101,32,110,101,119,105,115,32,106,117,115,116,99,111,110,115,101,110,116,32,83,101,97,114,99,104,119,97,115,32,116,104,101,119,104,121,32,116,104,101,115,104,105,112,112,101,100,98,114,62,60,98,114,62,119,105,100,116,104,58,32,104,101,105,103,104,116,61,109,97,100,101,32,111,102,99,117,105,115,105,110,101,105,115,32,116,104,97,116,97,32,118,101,114,121,32,65,100,109,105,114,97,108,32,102,105,120,101,100,59,110,111,114,109,97,108,32,77,105,115,115,105,111,110,80,114,101,115,115,44,32,111,110,116,97,114,105,111,99,104,97,114,115,101,116,116,114,121,32,116,111,32,105,110,118,97,100,101,100,61,34,116,114,117,101,34,115,112,97,99,105,110,103,105,115,32,109,111,115,116,97,32,109,111,114,101,32,116,111,116,97,108,108,121,102,97,108,108,32,111,102,125,41,59,13,10,32,32,105,109,109,101,110,115,101,116,105,109,101,32,105,110,115,101,116,32,111,117,116,115,97,116,105,115,102,121,116,111,32,102,105,110,100,100,111,119,110,32,116,111,108,111,116,32,111,102,32,80,108,97,121,101,114,115,105,110,32,74,117,110,101,113,117,97,110,116,117,109,110,111,116,32,116,104,101,116,105,109,101,32,116,111,100,105,115,116,97,110,116,70,105,110,110,105,115,104,115,114,99,32,61,32,40,115,105,110,103,108,101,32,104,101,108,112,32,111,102,71,101,114,109,97,110,32,108,97,119,32,97,110,100,108,97,98,101,108,101,100,102,111,114,101,115,116,115,99,111,111,107,105,110,103,115,112,97,99,101,34,62,104,101,97,100,101,114,45,119,101,108,108,32,97,115,83,116,97,110,108,101,121,98,114,105,100,103,101,115,47,103,108,111,98,97,108,67,114,111,97,116,105,97,32,65,98,111,117,116,32,91,48,93,59,10,32,32,105,116,44,32,97,110,100,103,114,111,117,112,101,100,98,101,105,110,103,32,97,41,123,116,104,114,111,119,104,101,32,109,97,100,101,108,105,103,104,116,101,114,101,116,104,105,99,97,108,70,70,70,70,70,70,34,98,111,116,116,111,109,34,108,105,107,101,32,97,32,101,109,112,108,111,121,115,108,105,118,101,32,105,110,97,115,32,115,101,101,110,112,114,105,110,116,101,114,109,111,115,116,32,111,102,117,98,45,108,105,110,107,114,101,106,101,99,116,115,97,110,100,32,117,115,101,105,109,97,103,101,34,62,115,117,99,99,101,101,100,102,101,101,100,105,110,103,78,117,99,108,101,97,114,105,110,102,111,114,109,97,116,111,32,104,101,108,112,87,111,109,101,110,39,115,78,101,105,116,104,101,114,77,101,120,105,99,97,110,112,114,111,116,101,105,110,60,116,97,98,108,101,32,98,121,32,109,97,110,121,104,101,97,108,116,104,121,108,97,119,115,117,105,116,100,101,118,105,115,101,100,46,112,117,115,104,40,123,115,101,108,108,101,114,115,115,105,109,112,108,121,32,84,104,114,111,117,103,104,46,99,111,111,107,105,101,32,73,109,97,103,101,40,111,108,100,101,114,34,62,117,115,46,106,115,34,62,32,83,105,110,99,101,32,117,110,105,118,101,114,115,108,97,114,103,101,114,32,111,112,101,110,32,116,111,33,45,45,32,101,110,100,108,105,101,115,32,105,110,39,93,41,59,13,10,32,32,109,97,114,107,101,116,119,104,111,32,105,115,32,40,34,68,79,77,67,111,109,97,110,97,103,101,100,111,110,101,32,102,111,114,116,121,112,101,111,102,32,75,105,110,103,100,111,109,112,114,111,102,105,116,115,112,114,111,112,111,115,101,116,111,32,115,104,111,119,99,101,110,116,101,114,59,109,97,100,101,32,105,116,100,114,101,115,115,101,100,119,101,114,101,32,105,110,109,105,120,116,117,114,101,112,114,101,99,105,115,101,97,114,105,115,105,110,103,115,114,99,32,61,32,39,109,97,107,101,32,97,32,115,101,99,117,114,101,100,66,97,112,116,105,115,116,118,111,116,105,110,103,32,10,9,9,118,97,114,32,77,97,114,99,104,32,50,103,114,101,119,32,117,112,67,108,105,109,97,116,101,46,114,101,109,111,118,101,115,107,105,108,108,101,100,119,97,121,32,116,104,101,60,47,104,101,97,100,62,102,97,99,101,32,111,102,97,99,116,105,110,103,32,114,105,103,104,116,34,62,116,111,32,119,111,114,107,114,101,100,117,99,101,115,104,97,115,32,104,97,100,101,114,101,99,116,101,100,115,104,111,119,40,41,59,97,99,116,105,111,110,61,98,111,111,107,32,111,102,97,110,32,97,114,101,97,61,61,32,34,104,116,116,60,104,101,97,100,101,114,10,60,104,116,109,108,62,99,111,110,102,111,114,109,102,97,99,105,110,103,32,99,111,111,107,105,101,46,114,101,108,121,32,111,110,104,111,115,116,101,100,32,46,99,117,115,116,111,109,104,101,32,119,101,110,116,98,117,116,32,102,111,114,115,112,114,101,97,100,32,70,97,109,105,108,121,32,97,32,109,101,97,110,115,111,117,116,32,116,104,101,102,111,114,117,109,115,46,102,111,111,116,97,103,101,34,62,77,111,98,105,108,67,108,101,109,101,110,116,115,34,32,105,100,61,34,97,115,32,104,105,103,104,105,110,116,101,110,115,101,45,45,62,60,33,45,45,102,101,109,97,108,101,32,105,115,32,115,101,101,110,105,109,112,108,105,101,100,115,101,116,32,116,104,101,97,32,115,116,97,116,101,97,110,100,32,104,105,115,102,97,115,116,101,115,116,98,101,115,105,100,101,115,98,117,116,116,111,110,95,98,111,117,110,100,101,100,34,62,60,105,109,103,32,73,110,102,111,98,111,120,101,118,101,110,116,115,44,97,32,121,111,117,110,103,97,110,100,32,97,114,101,78,97,116,105,118,101,32,99,104,101,97,112,101,114,84,105,109,101,111,117,116,97,110,100,32,104,97,115,101,110,103,105,110,101,115,119,111,110,32,116,104,101,40,109,111,115,116,108,121,114,105,103,104,116,58,32,102,105,110,100,32,97,32,45,98,111,116,116,111,109,80,114,105,110,99,101,32,97,114,101,97,32,111,102,109,111,114,101,32,111,102,115,101,97,114,99,104,95,110,97,116,117,114,101,44,108,101,103,97,108,108,121,112,101,114,105,111,100,44,108,97,110,100,32,111,102,111,114,32,119,105,116,104,105,110,100,117,99,101,100,112,114,111,118,105,110,103,109,105,115,115,105,108,101,108,111,99,97,108,108,121,65,103,97,105,110,115,116,116,104,101,32,119,97,121,107,38,113,117,111,116,59,112,120,59,34,62,13,10,112,117,115,104,101,100,32,97,98,97,110,100,111,110,110,117,109,101,114,97,108,67,101,114,116,97,105,110,73,110,32,116,104,105,115,109,111,114,101,32,105,110,111,114,32,115,111,109,101,110,97,109,101,32,105,115,97,110,100,44,32,105,110,99,114,111,119,110,101,100,73,83,66,78,32,48,45,99,114,101,97,116,101,115,79,99,116,111,98,101,114,109,97,121,32,110,111,116,99,101,110,116,101,114,32,108,97,116,101,32,105,110,68,101,102,101,110,99,101,101,110,97,99,116,101,100,119,105,115,104,32,116,111,98,114,111,97,100,108,121,99,111,111,108,105,110,103,111,110,108,111,97,100,61,105,116,46,32,84,104,101,114,101,99,111,118,101,114,77,101,109,98,101,114,115,104,101,105,103,104,116,32,97,115,115,117,109,101,115,60,104,116,109,108,62,10,112,101,111,112,108,101,46,105,110,32,111,110,101,32,61,119,105,110,100,111,119,102,111,111,116,101,114,95,97,32,103,111,111,100,32,114,101,107,108,97,109,97,111,116,104,101,114,115,44,116,111,32,116,104,105,115,95,99,111,111,107,105,101,112,97,110,101,108,34,62,76,111,110,100,111,110,44,100,101,102,105,110,101,115,99,114,117,115,104,101,100,98,97,112,116,105,115,109,99,111,97,115,116,97,108,115,116,97,116,117,115,32,116,105,116,108,101,34,32,109,111,118,101,32,116,111,108,111,115,116,32,105,110,98,101,116,116,101,114,32,105,109,112,108,105,101,115,114,105,118,97,108,114,121,115,101,114,118,101,114,115,32,83,121,115,116,101,109,80,101,114,104,97,112,115,101,115,32,97,110,100,32,99,111,110,116,101,110,100,102,108,111,119,105,110,103,108,97,115,116,101,100,32,114,105,115,101,32,105,110,71,101,110,101,115,105,115,118,105,101,119,32,111,102,114,105,115,105,110,103,32,115,101,101,109,32,116,111,98,117,116,32,105,110,32,98,97,99,107,105,110,103,104,101,32,119,105,108,108,103,105,118,101,110,32,97,103,105,118,105,110,103,32,99,105,116,105,101,115,46,102,108,111,119,32,111,102,32,76,97,116,101,114,32,97,108,108,32,98,117,116,72,105,103,104,119,97,121,111,110,108,121,32,98,121,115,105,103,110,32,111,102,104,101,32,100,111,101,115,100,105,102,102,101,114,115,98,97,116,116,101,114,121,38,97,109,112,59,108,97,115,105,110,103,108,101,115,116,104,114,101,97,116,115,105,110,116,101,103,101,114,116,97,107,101,32,111,110,114,101,102,117,115,101,100,99,97,108,108,101,100,32,61,85,83,38,97,109,112,83,101,101,32,116,104,101,110,97,116,105,118,101,115,98,121,32,116,104,105,115,115,121,115,116,101,109,46,104,101,97,100,32,111,102,58,104,111,118,101,114,44,108,101,115,98,105,97,110,115,117,114,110,97,109,101,97,110,100,32,97,108,108,99,111,109,109,111,110,47,104,101,97,100,101,114,95,95,112,97,114,97,109,115,72,97,114,118,97,114,100,47,112,105,120,101,108,46,114,101,109,111,118,97,108,115,111,32,108,111,110,103,114,111,108,101,32,111,102,106,111,105,110,116,108,121,115,107,121,115,99,114,97,85,110,105,99,111,100,101,98,114,32,47,62,13,10,65,116,108,97,110,116,97,110,117,99,108,101,117,115,67,111,117,110,116,121,44,112,117,114,101,108,121,32,99,111,117,110,116,34,62,101,97,115,105,108,121,32,98,117,105,108,100,32,97,111,110,99,108,105,99,107,97,32,103,105,118,101,110,112,111,105,110,116,101,114,104,38,113,117,111,116,59,101,118,101,110,116,115,32,101,108,115,101,32,123,10,100,105,116,105,111,110,115,110,111,119,32,116,104,101,44,32,119,105,116,104,32,109,97,110,32,119,104,111,111,114,103,47,87,101,98,111,110,101,32,97,110,100,99,97,118,97,108,114,121,72,101,32,100,105,101,100,115,101,97,116,116,108,101,48,48,44,48,48,48,32,123,119,105,110,100,111,119,104,97,118,101,32,116,111,105,102,40,119,105,110,100,97,110,100,32,105,116,115,115,111,108,101,108,121,32,109,38,113,117,111,116,59,114,101,110,101,119,101,100,68,101,116,114,111,105,116,97,109,111,110,103,115,116,101,105,116,104,101,114,32,116,104,101,109,32,105,110,83,101,110,97,116,111,114,85,115,60,47,97,62,60,75,105,110,103,32,111,102,70,114,97,110,99,105,115,45,112,114,111,100,117,99,104,101,32,117,115,101,100,97,114,116,32,97,110,100,104,105,109,32,97,110,100,117,115,101,100,32,98,121,115,99,111,114,105,110,103,97,116,32,104,111,109,101,116,111,32,104,97,118,101,114,101,108,97,116,101,115,105,98,105,108,105,116,121,102,97,99,116,105,111,110,66,117,102,102,97,108,111,108,105,110,107,34,62,60,119,104,97,116,32,104,101,102,114,101,101,32,116,111,67,105,116,121,32,111,102,99,111,109,101,32,105,110,115,101,99,116,111,114,115,99,111,117,110,116,101,100,111,110,101,32,100,97,121,110,101,114,118,111,117,115,115,113,117,97,114,101,32,125,59,105,102,40,103,111,105,110,32,119,104,97,116,105,109,103,34,32,97,108,105,115,32,111,110,108,121,115,101,97,114,99,104,47,116,117,101,115,100,97,121,108,111,111,115,101,108,121,83,111,108,111,109,111,110,115,101,120,117,97,108,32,45,32,60,97,32,104,114,109,101,100,105,117,109,34,68,79,32,78,79,84,32,70,114,97,110,99,101,44,119,105,116,104,32,97,32,119,97,114,32,97,110,100,115,101,99,111,110,100,32,116,97,107,101,32,97,32,62,13,10,13,10,13,10,109,97,114,107,101,116,46,104,105,103,104,119,97,121,100,111,110,101,32,105,110,99,116,105,118,105,116,121,34,108,97,115,116,34,62,111,98,108,105,103,101,100,114,105,115,101,32,116,111,34,117,110,100,101,102,105,109,97,100,101,32,116,111,32,69,97,114,108,121,32,112,114,97,105,115,101,100,105,110,32,105,116,115,32,102,111,114,32,104,105,115,97,116,104,108,101,116,101,74,117,112,105,116,101,114,89,97,104,111,111,33,32,116,101,114,109,101,100,32,115,111,32,109,97,110,121,114,101,97,108,108,121,32,115,46,32,84,104,101,32,97,32,119,111,109,97,110,63,118,97,108,117,101,61,100,105,114,101,99,116,32,114,105,103,104,116,34,32,98,105,99,121,99,108,101,97,99,105,110,103,61,34,100,97,121,32,97,110,100,115,116,97,116,105,110,103,82,97,116,104,101,114,44,104,105,103,104,101,114,32,79,102,102,105,99,101,32,97,114,101,32,110,111,119,116,105,109,101,115,44,32,119,104,101,110,32,97,32,112,97,121,32,102,111,114,111,110,32,116,104,105,115,45,108,105,110,107,34,62,59,98,111,114,100,101,114,97,114,111,117,110,100,32,97,110,110,117,97,108,32,116,104,101,32,78,101,119,112,117,116,32,116,104,101,46,99,111,109,34,32,116,97,107,105,110,32,116,111,97,32,98,114,105,101,102,40,105,110,32,116,104,101,103,114,111,117,112,115,46,59,32,119,105,100,116,104,101,110,122,121,109,101,115,115,105,109,112,108,101,32,105,110,32,108,97,116,101,123,114,101,116,117,114,110,116,104,101,114,97,112,121,97,32,112,111,105,110,116,98,97,110,110,105,110,103,105,110,107,115,34,62,10,40,41,59,34,32,114,101,97,32,112,108,97,99,101,92,117,48,48,51,67,97,97,98,111,117,116,32,97,116,114,62,13,10,9,9,99,99,111,117,110,116,32,103,105,118,101,115,32,97,60,83,67,82,73,80,84,82,97,105,108,119,97,121,116,104,101,109,101,115,47,116,111,111,108,98,111,120,66,121,73,100,40,34,120,104,117,109,97,110,115,44,119,97,116,99,104,101,115,105,110,32,115,111,109,101,32,105,102,32,40,119,105,99,111,109,105,110,103,32,102,111,114,109,97,116,115,32,85,110,100,101,114,32,98,117,116,32,104,97,115,104,97,110,100,101,100,32,109,97,100,101,32,98,121,116,104,97,110,32,105,110,102,101,97,114,32,111,102,100,101,110,111,116,101,100,47,105,102,114,97,109,101,108,101,102,116,32,105,110,118,111,108,116,97,103,101,105,110,32,101,97,99,104,97,38,113,117,111,116,59,98,97,115,101,32,111,102,73,110,32,109,97,110,121,117,110,100,101,114,103,111,114,101,103,105,109,101,115,97,99,116,105,111,110,32,60,47,112,62,13,10,60,117,115,116,111,109,86,97,59,38,103,116,59,60,47,105,109,112,111,114,116,115,111,114,32,116,104,97,116,109,111,115,116,108,121,32,38,97,109,112,59,114,101,32,115,105,122,101,61,34,60,47,97,62,60,47,104,97,32,99,108,97,115,115,112,97,115,115,105,118,101,72,111,115,116,32,61,32,87,104,101,116,104,101,114,102,101,114,116,105,108,101,86,97,114,105,111,117,115,61,91,93,59,40,102,117,99,97,109,101,114,97,115,47,62,60,47,116,100,62,97,99,116,115,32,97,115,73,110,32,115,111,109,101,62,13,10,13,10,60,33,111,114,103,97,110,105,115,32,60,98,114,32,47,62,66,101,105,106,105,110,103,99,97,116,97,108,195,160,100,101,117,116,115,99,104,101,117,114,111,112,101,117,101,117,115,107,97,114,97,103,97,101,105,108,103,101,115,118,101,110,115,107,97,101,115,112,97,195,177,97,109,101,110,115,97,106,101,117,115,117,97,114,105,111,116,114,97,98,97,106,111,109,195,169,120,105,99,111,112,195,161,103,105,110,97,115,105,101,109,112,114,101,115,105,115,116,101,109,97,111,99,116,117,98,114,101,100,117,114,97,110,116,101,97,195,177,97,100,105,114,101,109,112,114,101,115,97,109,111,109,101,110,116,111,110,117,101,115,116,114,111,112,114,105,109,101,114,97,116,114,97,118,195,169,115,103,114,97,99,105,97,115,110,117,101,115,116,114,97,112,114,111,99,101,115,111,101,115,116,97,100,111,115,99,97,108,105,100,97,100,112,101,114,115,111,110,97,110,195,186,109,101,114,111,97,99,117,101,114,100,111,109,195,186,115,105,99,97,109,105,101,109,98,114,111,111,102,101,114,116,97,115,97,108,103,117,110,111,115,112,97,195,173,115,101,115,101,106,101,109,112,108,111,100,101,114,101,99,104,111,97,100,101,109,195,161,115,112,114,105,118,97,100,111,97,103,114,101,103,97,114,101,110,108,97,99,101,115,112,111,115,105,98,108,101,104,111,116,101,108,101,115,115,101,118,105,108,108,97,112,114,105,109,101,114,111,195,186,108,116,105,109,111,101,118,101,110,116,111,115,97,114,99,104,105,118,111,99,117,108,116,117,114,97,109,117,106,101,114,101,115,101,110,116,114,97,100,97,97,110,117,110,99,105,111,101,109,98,97,114,103,111,109,101,114,99,97,100,111,103,114,97,110,100,101,115,101,115,116,117,100,105,111,109,101,106,111,114,101,115,102,101,98,114,101,114,111,100,105,115,101,195,177,111,116,117,114,105,115,109,111,99,195,179,100,105,103,111,112,111,114,116,97,100,97,101,115,112,97,99,105,111,102,97,109,105,108,105,97,97,110,116,111,110,105,111,112,101,114,109,105,116,101,103,117,97,114,100,97,114,97,108,103,117,110,97,115,112,114,101,99,105,111,115,97,108,103,117,105,101,110,115,101,110,116,105,100,111,118,105,115,105,116,97,115,116,195,173,116,117,108,111,99,111,110,111,99,101,114,115,101,103,117,110,100,111,99,111,110,115,101,106,111,102,114,97,110,99,105,97,109,105,110,117,116,111,115,115,101,103,117,110,100,97,116,101,110,101,109,111,115,101,102,101,99,116,111,115,109,195,161,108,97,103,97,115,101,115,105,195,179,110,114,101,118,105,115,116,97,103,114,97,110,97,100,97,99,111,109,112,114,97,114,105,110,103,114,101,115,111,103,97,114,99,195,173,97,97,99,99,105,195,179,110,101,99,117,97,100,111,114,113,117,105,101,110,101,115,105,110,99,108,117,115,111,100,101,98,101,114,195,161,109,97,116,101,114,105,97,104,111,109,98,114,101,115,109,117,101,115,116,114,97,112,111,100,114,195,173,97,109,97,195,177,97,110,97,195,186,108,116,105,109,97,101,115,116,97,109,111,115,111,102,105,99,105,97,108,116,97,109,98,105,101,110,110,105,110,103,195,186,110,115,97,108,117,100,111,115,112,111,100,101,109,111,115,109,101,106,111,114,97,114,112,111,115,105,116,105,111,110,98,117,115,105,110,101,115,115,104,111,109,101,112,97,103,101,115,101,99,117,114,105,116,121,108,97,110,103,117,97,103,101,115,116,97,110,100,97,114,100,99,97,109,112,97,105,103,110,102,101,97,116,117,114,101,115,99,97,116,101,103,111,114,121,101,120,116,101,114,110,97,108,99,104,105,108,100,114,101,110,114,101,115,101,114,118,101,100,114,101,115,101,97,114,99,104,101,120,99,104,97,110,103,101,102,97,118,111,114,105,116,101,116,101,109,112,108,97,116,101,109,105,108,105,116,97,114,121,105,110,100,117,115,116,114,121,115,101,114,118,105,99,101,115,109,97,116,101,114,105,97,108,112,114,111,100,117,99,116,115,122,45,105,110,100,101,120,58,99,111,109,109,101,110,116,115,115,111,102,116,119,97,114,101,99,111,109,112,108,101,116,101,99,97,108,101,110,100,97,114,112,108,97,116,102,111,114,109,97,114,116,105,99,108,101,115,114,101,113,117,105,114,101,100,109,111,118,101,109,101,110,116,113,117,101,115,116,105,111,110,98,117,105,108,100,105,110,103,112,111,108,105,116,105,99,115,112,111,115,115,105,98,108,101,114,101,108,105,103,105,111,110,112,104,121,115,105,99,97,108,102,101,101,100,98,97,99,107,114,101,103,105,115,116,101,114,112,105,99,116,117,114,101,115,100,105,115,97,98,108,101,100,112,114,111,116,111,99,111,108,97,117,100,105,101,110,99,101,115,101,116,116,105,110,103,115,97,99,116,105,118,105,116,121,101,108,101,109,101,110,116,115,108,101,97,114,110,105,110,103,97,110,121,116,104,105,110,103,97,98,115,116,114,97,99,116,112,114,111,103,114,101,115,115,111,118,101,114,118,105,101,119,109,97,103,97,122,105,110,101,101,99,111,110,111,109,105,99,116,114,97,105,110,105,110,103,112,114,101,115,115,117,114,101,118,97,114,105,111,117,115,32,60,115,116,114,111,110,103,62,112,114,111,112,101,114,116,121,115,104,111,112,112,105,110,103,116,111,103,101,116,104,101,114,97,100,118,97,110,99,101,100,98,101,104,97,118,105,111,114,100,111,119,110,108,111,97,100,102,101,97,116,117,114,101,100,102,111,111,116,98,97,108,108,115,101,108,101,99,116,101,100,76,97,110,103,117,97,103,101,100,105,115,116,97,110,99,101,114,101,109,101,109,98,101,114,116,114,97,99,107,105,110,103,112,97,115,115,119,111,114,100,109,111,100,105,102,105,101,100,115,116,117,100,101,110,116,115,100,105,114,101,99,116,108,121,102,105,103,104,116,105,110,103,110,111,114,116,104,101,114,110,100,97,116,97,98,97,115,101,102,101,115,116,105,118,97,108,98,114,101,97,107,105,110,103,108,111,99,97,116,105,111,110,105,110,116,101,114,110,101,116,100,114,111,112,100,111,119,110,112,114,97,99,116,105,99,101,101,118,105,100,101,110,99,101,102,117,110,99,116,105,111,110,109,97,114,114,105,97,103,101,114,101,115,112,111,110,115,101,112,114,111,98,108,101,109,115,110,101,103,97,116,105,118,101,112,114,111,103,114,97,109,115,97,110,97,108,121,115,105,115,114,101,108,101,97,115,101,100,98,97,110,110,101,114,34,62,112,117,114,99,104,97,115,101,112,111,108,105,99,105,101,115,114,101,103,105,111,110,97,108,99,114,101,97,116,105,118,101,97,114,103,117,109,101,110,116,98,111,111,107,109,97,114,107,114,101,102,101,114,114,101,114,99,104,101,109,105,99,97,108,100,105,118,105,115,105,111,110,99,97,108,108,98,97,99,107,115,101,112,97,114,97,116,101,112,114,111,106,101,99,116,115,99,111,110,102,108,105,99,116,104,97,114,100,119,97,114,101,105,110,116,101,114,101,115,116,100,101,108,105,118,101,114,121,109,111,117,110,116,97,105,110,111,98,116,97,105,110,101,100,61,32,102,97,108,115,101,59,102,111,114,40,118,97,114,32,97,99,99,101,112,116,101,100,99,97,112,97,99,105,116,121,99,111,109,112,117,116,101,114,105,100,101,110,116,105,116,121,97,105,114,99,114,97,102,116,101,109,112,108,111,121,101,100,112,114,111,112,111,115,101,100,100,111,109,101,115,116,105,99,105,110,99,108,117,100,101,115,112,114,111,118,105,100,101,100,104,111,115,112,105,116,97,108,118,101,114,116,105,99,97,108,99,111,108,108,97,112,115,101,97,112,112,114,111,97,99,104,112,97,114,116,110,101,114,115,108,111,103,111,34,62,60,97,100,97,117,103,104,116,101,114,97,117,116,104,111,114,34,32,99,117,108,116,117,114,97,108,102,97,109,105,108,105,101,115,47,105,109,97,103,101,115,47,97,115,115,101,109,98,108,121,112,111,119,101,114,102,117,108,116,101,97,99,104,105,110,103,102,105,110,105,115,104,101,100,100,105,115,116,114,105,99,116,99,114,105,116,105,99,97,108,99,103,105,45,98,105,110,47,112,117,114,112,111,115,101,115,114,101,113,117,105,114,101,115,101,108,101,99,116,105,111,110,98,101,99,111,109,105,110,103,112,114,111,118,105,100,101,115,97,99,97,100,101,109,105,99,101,120,101,114,99,105,115,101,97,99,116,117,97,108,108,121,109,101,100,105,99,105,110,101,99,111,110,115,116,97,110,116,97,99,99,105,100,101,110,116,77,97,103,97,122,105,110,101,100,111,99,117,109,101,110,116,115,116,97,114,116,105,110,103,98,111,116,116,111,109,34,62,111,98,115,101,114,118,101,100,58,32,38,113,117,111,116,59,101,120,116,101,110,100,101,100,112,114,101,118,105,111,117,115,83,111,102,116,119,97,114,101,99,117,115,116,111,109,101,114,100,101,99,105,115,105,111,110,115,116,114,101,110,103,116,104,100,101,116,97,105,108,101,100,115,108,105,103,104,116,108,121,112,108,97,110,110,105,110,103,116,101,120,116,97,114,101,97,99,117,114,114,101,110,99,121,101,118,101,114,121,111,110,101,115,116,114,97,105,103,104,116,116,114,97,110,115,102,101,114,112,111,115,105,116,105,118,101,112,114,111,100,117,99,101,100,104,101,114,105,116,97,103,101,115,104,105,112,112,105,110,103,97,98,115,111,108,117,116,101,114,101,99,101,105,118,101,100,114,101,108,101,118,97,110,116,98,117,116,116,111,110,34,32,118,105,111,108,101,110,99,101,97,110,121,119,104,101,114,101,98,101,110,101,102,105,116,115,108,97,117,110,99,104,101,100,114,101,99,101,110,116,108,121,97,108,108,105,97,110,99,101,102,111,108,108,111,119,101,100,109,117,108,116,105,112,108,101,98,117,108,108,101,116,105,110,105,110,99,108,117,100,101,100,111,99,99,117,114,114,101,100,105,110,116,101,114,110,97,108,36,40,116,104,105,115,41,46,114,101,112,117,98,108,105,99,62,60,116,114,62,60,116,100,99,111,110,103,114,101,115,115,114,101,99,111,114,100,101,100,117,108,116,105,109,97,116,101,115,111,108,117,116,105,111,110,60,117,108,32,105,100,61,34,100,105,115,99,111,118,101,114,72,111,109,101,60,47,97,62,119,101,98,115,105,116,101,115,110,101,116,119,111,114,107,115,97,108,116,104,111,117,103,104,101,110,116,105,114,101,108,121,109,101,109,111,114,105,97,108,109,101,115,115,97,103,101,115,99,111,110,116,105,110,117,101,97,99,116,105,118,101,34,62,115,111,109,101,119,104,97,116,118,105,99,116,111,114,105,97,87,101,115,116,101,114,110,32,32,116,105,116,108,101,61,34,76,111,99,97,116,105,111,110,99,111,110,116,114,97,99,116,118,105,115,105,116,111,114,115,68,111,119,110,108,111,97,100,119,105,116,104,111,117,116,32,114,105,103,104,116,34,62,10,109,101,97,115,117,114,101,115,119,105,100,116,104,32,61,32,118,97,114,105,97,98,108,101,105,110,118,111,108,118,101,100,118,105,114,103,105,110,105,97,110,111,114,109,97,108,108,121,104,97,112,112,101,110,101,100,97,99,99,111,117,110,116,115,115,116,97,110,100,105,110,103,110,97,116,105,111,110,97,108,82,101,103,105,115,116,101,114,112,114,101,112,97,114,101,100,99,111,110,116,114,111,108,115,97,99,99,117,114,97,116,101,98,105,114,116,104,100,97,121,115,116,114,97,116,101,103,121,111,102,102,105,99,105,97,108,103,114,97,112,104,105,99,115,99,114,105,109,105,110,97,108,112,111,115,115,105,98,108,121,99,111,110,115,117,109,101,114,80,101,114,115,111,110,97,108,115,112,101,97,107,105,110,103,118,97,108,105,100,97,116,101,97,99,104,105,101,118,101,100,46,106,112,103,34,32,47,62,109,97,99,104,105,110,101,115,60,47,104,50,62,10,32,32,107,101,121,119,111,114,100,115,102,114,105,101,110,100,108,121,98,114,111,116,104,101,114,115,99,111,109,98,105,110,101,100,111,114,105,103,105,110,97,108,99,111,109,112,111,115,101,100,101,120,112,101,99,116,101,100,97,100,101,113,117,97,116,101,112,97,107,105,115,116,97,110,102,111,108,108,111,119,34,32,118,97,108,117,97,98,108,101,60,47,108,97,98,101,108,62,114,101,108,97,116,105,118,101,98,114,105,110,103,105,110,103,105,110,99,114,101,97,115,101,103,111,118,101,114,110,111,114,112,108,117,103,105,110,115,47,76,105,115,116,32,111,102,32,72,101,97,100,101,114,34,62,34,32,110,97,109,101,61,34,32,40,38,113,117,111,116,59,103,114,97,100,117,97,116,101,60,47,104,101,97,100,62,10,99,111,109,109,101,114,99,101,109,97,108,97,121,115,105,97,100,105,114,101,99,116,111,114,109,97,105,110,116,97,105,110,59,104,101,105,103,104,116,58,115,99,104,101,100,117,108,101,99,104,97,110,103,105,110,103,98,97,99,107,32,116,111,32,99,97,116,104,111,108,105,99,112,97,116,116,101,114,110,115,99,111,108,111,114,58,32,35,103,114,101,97,116,101,115,116,115,117,112,112,108,105,101,115,114,101,108,105,97,98,108,101,60,47,117,108,62,10,9,9,60,115,101,108,101,99,116,32,99,105,116,105,122,101,110,115,99,108,111,116,104,105,110,103,119,97,116,99,104,105,110,103,60,108,105,32,105,100,61,34,115,112,101,99,105,102,105,99,99,97,114,114,121,105,110,103,115,101,110,116,101,110,99,101,60,99,101,110,116,101,114,62,99,111,110,116,114,97,115,116,116,104,105,110,107,105,110,103,99,97,116,99,104,40,101,41,115,111,117,116,104,101,114,110,77,105,99,104,97,101,108,32,109,101,114,99,104,97,110,116,99,97,114,111,117,115,101,108,112,97,100,100,105,110,103,58,105,110,116,101,114,105,111,114,46,115,112,108,105,116,40,34,108,105,122,97,116,105,111,110,79,99,116,111,98,101,114,32,41,123,114,101,116,117,114,110,105,109,112,114,111,118,101,100,45,45,38,103,116,59,10,10,99,111,118,101,114,97,103,101,99,104,97,105,114,109,97,110,46,112,110,103,34,32,47,62,115,117,98,106,101,99,116,115,82,105,99,104,97,114,100,32,119,104,97,116,101,118,101,114,112,114,111,98,97,98,108,121,114,101,99,111,118,101,114,121,98,97,115,101,98,97,108,108,106,117,100,103,109,101,110,116,99,111,110,110,101,99,116,46,46,99,115,115,34,32,47,62,32,119,101,98,115,105,116,101,114,101,112,111,114,116,101,100,100,101,102,97,117,108,116,34,47,62,60,47,97,62,13,10,101,108,101,99,116,114,105,99,115,99,111,116,108,97,110,100,99,114,101,97,116,105,111,110,113,117,97,110,116,105,116,121,46,32,73,83,66,78,32,48,100,105,100,32,110,111,116,32,105,110,115,116,97,110,99,101,45,115,101,97,114,99,104,45,34,32,108,97,110,103,61,34,115,112,101,97,107,101,114,115,67,111,109,112,117,116,101,114,99,111,110,116,97,105,110,115,97,114,99,104,105,118,101,115,109,105,110,105,115,116,101,114,114,101,97,99,116,105,111,110,100,105,115,99,111,117,110,116,73,116,97,108,105,97,110,111,99,114,105,116,101,114,105,97,115,116,114,111,110,103,108,121,58,32,39,104,116,116,112,58,39,115,99,114,105,112,116,39,99,111,118,101,114,105,110,103,111,102,102,101,114,105,110,103,97,112,112,101,97,114,101,100,66,114,105,116,105,115,104,32,105,100,101,110,116,105,102,121,70,97,99,101,98,111,111,107,110,117,109,101,114,111,117,115,118,101,104,105,99,108,101,115,99,111,110,99,101,114,110,115,65,109,101,114,105,99,97,110,104,97,110,100,108,105,110,103,100,105,118,32,105,100,61,34,87,105,108,108,105,97,109,32,112,114,111,118,105,100,101,114,95,99,111,110,116,101,110,116,97,99,99,117,114,97,99,121,115,101,99,116,105,111,110,32,97,110,100,101,114,115,111,110,102,108,101,120,105,98,108,101,67,97,116,101,103,111,114,121,108,97,119,114,101,110,99,101,60,115,99,114,105,112,116,62,108,97,121,111,117,116,61,34,97,112,112,114,111,118,101,100,32,109,97,120,105,109,117,109,104,101,97,100,101,114,34,62,60,47,116,97,98,108,101,62,83,101,114,118,105,99,101,115,104,97,109,105,108,116,111,110,99,117,114,114,101,110,116,32,99,97,110,97,100,105,97,110,99,104,97,110,110,101,108,115,47,116,104,101,109,101,115,47,47,97,114,116,105,99,108,101,111,112,116,105,111,110,97,108,112,111,114,116,117,103,97,108,118,97,108,117,101,61,34,34,105,110,116,101,114,118,97,108,119,105,114,101,108,101,115,115,101,110,116,105,116,108,101,100,97,103,101,110,99,105,101,115,83,101,97,114,99,104,34,32,109,101,97,115,117,114,101,100,116,104,111,117,115,97,110,100,115,112,101,110,100,105,110,103,38,104,101,108,108,105,112,59,110,101,119,32,68,97,116,101,34,32,115,105,122,101,61,34,112,97,103,101,78,97,109,101,109,105,100,100,108,101,34,32,34,32,47,62,60,47,97,62,104,105,100,100,101,110,34,62,115,101,113,117,101,110,99,101,112,101,114,115,111,110,97,108,111,118,101,114,102,108,111,119,111,112,105,110,105,111,110,115,105,108,108,105,110,111,105,115,108,105,110,107,115,34,62,10,9,60,116,105,116,108,101,62,118,101,114,115,105,111,110,115,115,97,116,117,114,100,97,121,116,101,114,109,105,110,97,108,105,116,101,109,112,114,111,112,101,110,103,105,110,101,101,114,115,101,99,116,105,111,110,115,100,101,115,105,103,110,101,114,112,114,111,112,111,115,97,108,61,34,102,97,108,115,101,34,69,115,112,97,195,177,111,108,114,101,108,101,97,115,101,115,115,117,98,109,105,116,34,32,101,114,38,113,117,111,116,59,97,100,100,105,116,105,111,110,115,121,109,112,116,111,109,115,111,114,105,101,110,116,101,100,114,101,115,111,117,114,99,101,114,105,103,104,116,34,62,60,112,108,101,97,115,117,114,101,115,116,97,116,105,111,110,115,104,105,115,116,111,114,121,46,108,101,97,118,105,110,103,32,32,98,111,114,100,101,114,61,99,111,110,116,101,110,116,115,99,101,110,116,101,114,34,62,46,10,10,83,111,109,101,32,100,105,114,101,99,116,101,100,115,117,105,116,97,98,108,101,98,117,108,103,97,114,105,97,46,115,104,111,119,40,41,59,100,101,115,105,103,110,101,100,71,101,110,101,114,97,108,32,99,111,110,99,101,112,116,115,69,120,97,109,112,108,101,115,119,105,108,108,105,97,109,115,79,114,105,103,105,110,97,108,34,62,60,115,112,97,110,62,115,101,97,114,99,104,34,62,111,112,101,114,97,116,111,114,114,101,113,117,101,115,116,115,97,32,38,113,117,111,116,59,97,108,108,111,119,105,110,103,68,111,99,117,109,101,110,116,114,101,118,105,115,105,111,110,46,32,10,10,84,104,101,32,121,111,117,114,115,101,108,102,67,111,110,116,97,99,116,32,109,105,99,104,105,103,97,110,69,110,103,108,105,115,104,32,99,111,108,117,109,98,105,97,112,114,105,111,114,105,116,121,112,114,105,110,116,105,110,103,100,114,105,110,107,105,110,103,102,97,99,105,108,105,116,121,114,101,116,117,114,110,101,100,67,111,110,116,101,110,116,32,111,102,102,105,99,101,114,115,82,117,115,115,105,97,110,32,103,101,110,101,114,97,116,101,45,56,56,53,57,45,49,34,105,110,100,105,99,97,116,101,102,97,109,105,108,105,97,114,32,113,117,97,108,105,116,121,109,97,114,103,105,110,58,48,32,99,111,110,116,101,110,116,118,105,101,119,112,111,114,116,99,111,110,116,97,99,116,115,45,116,105,116,108,101,34,62,112,111,114,116,97,98,108,101,46,108,101,110,103,116,104,32,101,108,105,103,105,98,108,101,105,110,118,111,108,118,101,115,97,116,108,97,110,116,105,99,111,110,108,111,97,100,61,34,100,101,102,97,117,108,116,46,115,117,112,112,108,105,101,100,112,97,121,109,101,110,116,115,103,108,111,115,115,97,114,121,10,10,65,102,116,101,114,32,103,117,105,100,97,110,99,101,60,47,116,100,62,60,116,100,101,110,99,111,100,105,110,103,109,105,100,100,108,101,34,62,99,97,109,101,32,116,111,32,100,105,115,112,108,97,121,115,115,99,111,116,116,105,115,104,106,111,110,97,116,104,97,110,109,97,106,111,114,105,116,121,119,105,100,103,101,116,115,46,99,108,105,110,105,99,97,108,116,104,97,105,108,97,110,100,116,101,97,99,104,101,114,115,60,104,101,97,100,62,10,9,97,102,102,101,99,116,101,100,115,117,112,112,111,114,116,115,112,111,105,110,116,101,114,59,116,111,83,116,114,105,110,103,60,47,115,109,97,108,108,62,111,107,108,97,104,111,109,97,119,105,108,108,32,98,101,32,105,110,118,101,115,116,111,114,48,34,32,97,108,116,61,34,104,111,108,105,100,97,121,115,82,101,115,111,117,114,99,101,108,105,99,101,110,115,101,100,32,40,119,104,105,99,104,32,46,32,65,102,116,101,114,32,99,111,110,115,105,100,101,114,118,105,115,105,116,105,110,103,101,120,112,108,111,114,101,114,112,114,105,109,97,114,121,32,115,101,97,114,99,104,34,32,97,110,100,114,111,105,100,34,113,117,105,99,107,108,121,32,109,101,101,116,105,110,103,115,101,115,116,105,109,97,116,101,59,114,101,116,117,114,110,32,59,99,111,108,111,114,58,35,32,104,101,105,103,104,116,61,97,112,112,114,111,118,97,108,44,32,38,113,117,111,116,59,32,99,104,101,99,107,101,100,46,109,105,110,46,106,115,34,109,97,103,110,101,116,105,99,62,60,47,97,62,60,47,104,102,111,114,101,99,97,115,116,46,32,87,104,105,108,101,32,116,104,117,114,115,100,97,121,100,118,101,114,116,105,115,101,38,101,97,99,117,116,101,59,104,97,115,67,108,97,115,115,101,118,97,108,117,97,116,101,111,114,100,101,114,105,110,103,101,120,105,115,116,105,110,103,112,97,116,105,101,110,116,115,32,79,110,108,105,110,101,32,99,111,108,111,114,97,100,111,79,112,116,105,111,110,115,34,99,97,109,112,98,101,108,108,60,33,45,45,32,101,110,100,60,47,115,112,97,110,62,60,60,98,114,32,47,62,13,10,95,112,111,112,117,112,115,124,115,99,105,101,110,99,101,115,44,38,113,117,111,116,59,32,113,117,97,108,105,116,121,32,87,105,110,100,111,119,115,32,97,115,115,105,103,110,101,100,104,101,105,103,104,116,58,32,60,98,32,99,108,97,115,115,108,101,38,113,117,111,116,59,32,118,97,108,117,101,61,34,32,67,111,109,112,97,110,121,101,120,97,109,112,108,101,115,60,105,102,114,97,109,101,32,98,101,108,105,101,118,101,115,112,114,101,115,101,110,116,115,109,97,114,115,104,97,108,108,112,97,114,116,32,111,102,32,112,114,111,112,101,114,108,121,41,46,10,10,84,104,101,32,116,97,120,111,110,111,109,121,109,117,99,104,32,111,102,32,60,47,115,112,97,110,62,10,34,32,100,97,116,97,45,115,114,116,117,103,117,195,170,115,115,99,114,111,108,108,84,111,32,112,114,111,106,101,99,116,60,104,101,97,100,62,13,10,97,116,116,111,114,110,101,121,101,109,112,104,97,115,105,115,115,112,111,110,115,111,114,115,102,97,110,99,121,98,111,120,119,111,114,108,100,39,115,32,119,105,108,100,108,105,102,101,99,104,101,99,107,101,100,61,115,101,115,115,105,111,110,115,112,114,111,103,114,97,109,109,112,120,59,102,111,110,116,45,32,80,114,111,106,101,99,116,106,111,117,114,110,97,108,115,98,101,108,105,101,118,101,100,118,97,99,97,116,105,111,110,116,104,111,109,112,115,111,110,108,105,103,104,116,105,110,103,97,110,100,32,116,104,101,32,115,112,101,99,105,97,108,32,98,111,114,100,101,114,61,48,99,104,101,99,107,105,110,103,60,47,116,98,111,100,121,62,60,98,117,116,116,111,110,32,67,111,109,112,108,101,116,101,99,108,101,97,114,102,105,120,10,60,104,101,97,100,62,10,97,114,116,105,99,108,101,32,60,115,101,99,116,105,111,110,102,105,110,100,105,110,103,115,114,111,108,101,32,105,110,32,112,111,112,117,108,97,114,32,32,79,99,116,111,98,101,114,119,101,98,115,105,116,101,32,101,120,112,111,115,117,114,101,117,115,101,100,32,116,111,32,32,99,104,97,110,103,101,115,111,112,101,114,97,116,101,100,99,108,105,99,107,105,110,103,101,110,116,101,114,105,110,103,99,111,109,109,97,110,100,115,105,110,102,111,114,109,101,100,32,110,117,109,98,101,114,115,32,32,60,47,100,105,118,62,99,114,101,97,116,105,110,103,111,110,83,117,98,109,105,116,109,97,114,121,108,97,110,100,99,111,108,108,101,103,101,115,97,110,97,108,121,116,105,99,108,105,115,116,105,110,103,115,99,111,110,116,97,99,116,46,108,111,103,103,101,100,73,110,97,100,118,105,115,111,114,121,115,105,98,108,105,110,103,115,99,111,110,116,101,110,116,34,115,38,113,117,111,116,59,41,115,46,32,84,104,105,115,32,112,97,99,107,97,103,101,115,99,104,101,99,107,98,111,120,115,117,103,103,101,115,116,115,112,114,101,103,110,97,110,116,116,111,109,111,114,114,111,119,115,112,97,99,105,110,103,61,105,99,111,110,46,112,110,103,106,97,112,97,110,101,115,101,99,111,100,101,98,97,115,101,98,117,116,116,111,110,34,62,103,97,109,98,108,105,110,103,115,117,99,104,32,97,115,32,44,32,119,104,105,108,101,32,60,47,115,112,97,110,62,32,109,105,115,115,111,117,114,105,115,112,111,114,116,105,110,103,116,111,112,58,49,112,120,32,46,60,47,115,112,97,110,62,116,101,110,115,105,111,110,115,119,105,100,116,104,61,34,50,108,97,122,121,108,111,97,100,110,111,118,101,109,98,101,114,117,115,101,100,32,105,110,32,104,101,105,103,104,116,61,34,99,114,105,112,116,34,62,10,38,110,98,115,112,59,60,47,60,116,114,62,60,116,100,32,104,101,105,103,104,116,58,50,47,112,114,111,100,117,99,116,99,111,117,110,116,114,121,32,105,110,99,108,117,100,101,32,102,111,111,116,101,114,34,32,38,108,116,59,33,45,45,32,116,105,116,108,101,34,62,60,47,106,113,117,101,114,121,46,60,47,102,111,114,109,62,10,40,231,174,128,228,189,147,41,40,231,185,129,233,171,148,41,104,114,118,97,116,115,107,105,105,116,97,108,105,97,110,111,114,111,109,195,162,110,196,131,116,195,188,114,107,195,167,101,216,167,216,177,216,175,217,136,116,97,109,98,105,195,169,110,110,111,116,105,99,105,97,115,109,101,110,115,97,106,101,115,112,101,114,115,111,110,97,115,100,101,114,101,99,104,111,115,110,97,99,105,111,110,97,108,115,101,114,118,105,99,105,111,99,111,110,116,97,99,116,111,117,115,117,97,114,105,111,115,112,114,111,103,114,97,109,97,103,111,98,105,101,114,110,111,101,109,112,114,101,115,97,115,97,110,117,110,99,105,111,115,118,97,108,101,110,99,105,97,99,111,108,111,109,98,105,97,100,101,115,112,117,195,169,115,100,101,112,111,114,116,101,115,112,114,111,121,101,99,116,111,112,114,111,100,117,99,116,111,112,195,186,98,108,105,99,111,110,111,115,111,116,114,111,115,104,105,115,116,111,114,105,97,112,114,101,115,101,110,116,101,109,105,108,108,111,110,101,115,109,101,100,105,97,110,116,101,112,114,101,103,117,110,116,97,97,110,116,101,114,105,111,114,114,101,99,117,114,115,111,115,112,114,111,98,108,101,109,97,115,97,110,116,105,97,103,111,110,117,101,115,116,114,111,115,111,112,105,110,105,195,179,110,105,109,112,114,105,109,105,114,109,105,101,110,116,114,97,115,97,109,195,169,114,105,99,97,118,101,110,100,101,100,111,114,115,111,99,105,101,100,97,100,114,101,115,112,101,99,116,111,114,101,97,108,105,122,97,114,114,101,103,105,115,116,114,111,112,97,108,97,98,114,97,115,105,110,116,101,114,195,169,115,101,110,116,111,110,99,101,115,101,115,112,101,99,105,97,108,109,105,101,109,98,114,111,115,114,101,97,108,105,100,97,100,99,195,179,114,100,111,98,97,122,97,114,97,103,111,122,97,112,195,161,103,105,110,97,115,115,111,99,105,97,108,101,115,98,108,111,113,117,101,97,114,103,101,115,116,105,195,179,110,97,108,113,117,105,108,101,114,115,105,115,116,101,109,97,115,99,105,101,110,99,105,97,115,99,111,109,112,108,101,116,111,118,101,114,115,105,195,179,110,99,111,109,112,108,101,116,97,101,115,116,117,100,105,111,115,112,195,186,98,108,105,99,97,111,98,106,101,116,105,118,111,97,108,105,99,97,110,116,101,98,117,115,99,97,100,111,114,99,97,110,116,105,100,97,100,101,110,116,114,97,100,97,115,97,99,99,105,111,110,101,115,97,114,99,104,105,118,111,115,115,117,112,101,114,105,111,114,109,97,121,111,114,195,173,97,97,108,101,109,97,110,105,97,102,117,110,99,105,195,179,110,195,186,108,116,105,109,111,115,104,97,99,105,101,110,100,111,97,113,117,101,108,108,111,115,101,100,105,99,105,195,179,110,102,101,114,110,97,110,100,111,97,109,98,105,101,110,116,101,102,97,99,101,98,111,111,107,110,117,101,115,116,114,97,115,99,108,105,101,110,116,101,115,112,114,111,99,101,115,111,115,98,97,115,116,97,110,116,101,112,114,101,115,101,110,116,97,114,101,112,111,114,116,97,114,99,111,110,103,114,101,115,111,112,117,98,108,105,99,97,114,99,111,109,101,114,99,105,111,99,111,110,116,114,97,116,111,106,195,179,118,101,110,101,115,100,105,115,116,114,105,116,111,116,195,169,99,110,105,99,97,99,111,110,106,117,110,116,111,101,110,101,114,103,195,173,97,116,114,97,98,97,106,97,114,97,115,116,117,114,105,97,115,114,101,99,105,101,110,116,101,117,116,105,108,105,122,97,114,98,111,108,101,116,195,173,110,115,97,108,118,97,100,111,114,99,111,114,114,101,99,116,97,116,114,97,98,97,106,111,115,112,114,105,109,101,114,111,115,110,101,103,111,99,105,111,115,108,105,98,101,114,116,97,100,100,101,116,97,108,108,101,115,112,97,110,116,97,108,108,97,112,114,195,179,120,105,109,111,97,108,109,101,114,195,173,97,97,110,105,109,97,108,101,115,113,117,105,195,169,110,101,115,99,111,114,97,122,195,179,110,115,101,99,99,105,195,179,110,98,117,115,99,97,110,100,111,111,112,99,105,111,110,101,115,101,120,116,101,114,105,111,114,99,111,110,99,101,112,116,111,116,111,100,97,118,195,173,97,103,97,108,101,114,195,173,97,101,115,99,114,105,98,105,114,109,101,100,105,99,105,110,97,108,105,99,101,110,99,105,97,99,111,110,115,117,108,116,97,97,115,112,101,99,116,111,115,99,114,195,173,116,105,99,97,100,195,179,108,97,114,101,115,106,117,115,116,105,99,105,97,100,101,98,101,114,195,161,110,112,101,114,195,173,111,100,111,110,101,99,101,115,105,116,97,109,97,110,116,101,110,101,114,112,101,113,117,101,195,177,111,114,101,99,105,98,105,100,97,116,114,105,98,117,110,97,108,116,101,110,101,114,105,102,101,99,97,110,99,105,195,179,110,99,97,110,97,114,105,97,115,100,101,115,99,97,114,103,97,100,105,118,101,114,115,111,115,109,97,108,108,111,114,99,97,114,101,113,117,105,101,114,101,116,195,169,99,110,105,99,111,100,101,98,101,114,195,173,97,118,105,118,105,101,110,100,97,102,105,110,97,110,122,97,115,97,100,101,108,97,110,116,101,102,117,110,99,105,111,110,97,99,111,110,115,101,106,111,115,100,105,102,195,173,99,105,108,99,105,117,100,97,100,101,115,97,110,116,105,103,117,97,115,97,118,97,110,122,97,100,97,116,195,169,114,109,105,110,111,117,110,105,100,97,100,101,115,115,195,161,110,99,104,101,122,99,97,109,112,97,195,177,97,115,111,102,116,111,110,105,99,114,101,118,105,115,116,97,115,99,111,110,116,105,101,110,101,115,101,99,116,111,114,101,115,109,111,109,101,110,116,111,115,102,97,99,117,108,116,97,100,99,114,195,169,100,105,116,111,100,105,118,101,114,115,97,115,115,117,112,117,101,115,116,111,102,97,99,116,111,114,101,115,115,101,103,117,110,100,111,115,112,101,113,117,101,195,177,97,208,179,208,190,208,180,208,176,208,181,209,129,208,187,208,184,208,181,209,129,209,130,209,140,208,177,209,139,208,187,208,190,208,177,209,139,209,130,209,140,209,141,209,130,208,190,208,188,208,149,209,129,208,187,208,184,209,130,208,190,208,179,208,190,208,188,208,181,208,189,209,143,208,178,209,129,208,181,209,133,209,141,209,130,208,190,208,185,208,180,208,176,208,182,208,181,208,177,209,139,208,187,208,184,208,179,208,190,208,180,209,131,208,180,208,181,208,189,209,140,209,141,209,130,208,190,209,130,208,177,209,139,208,187,208,176,209,129,208,181,208,177,209,143,208,190,208,180,208,184,208,189,209,129,208,181,208,177,208,181,208,189,208,176,208,180,208,190,209,129,208,176,208,185,209,130,209,132,208,190,209,130,208,190,208,189,208,181,208,179,208,190,209,129,208,178,208,190,208,184,209,129,208,178,208,190,208,185,208,184,208,179,209,128,209,139,209,130,208,190,208,182,208,181,208,178,209,129,208,181,208,188,209,129,208,178,208,190,209,142,208,187,208,184,209,136,209,140,209,141,209,130,208,184,209,133,208,191,208,190,208,186,208,176,208,180,208,189,208,181,208,185,208,180,208,190,208,188,208,176,208,188,208,184,209,128,208,176,208,187,208,184,208,177,208,190,209,130,208,181,208,188,209,131,209,133,208,190,209,130,209,143,208,180,208,178,209,131,209,133,209,129,208,181,209,130,208,184,208,187,209,142,208,180,208,184,208,180,208,181,208,187,208,190,208,188,208,184,209,128,208,181,209,130,208,181,208,177,209,143,209,129,208,178,208,190,208,181,208,178,208,184,208,180,208,181,209,135,208,181,208,179,208,190,209,141,209,130,208,184,208,188,209,129,209,135,208,181,209,130,209,130,208,181,208,188,209,139,209,134,208,181,208,189,209,139,209,129,209,130,208,176,208,187,208,178,208,181,208,180,209,140,209,130,208,181,208,188,208,181,208,178,208,190,208,180,209,139,209,130,208,181,208,177,208,181,208,178,209,139,209,136,208,181,208,189,208,176,208,188,208,184,209,130,208,184,208,191,208,176,209,130,208,190,208,188,209,131,208,191,209,128,208,176,208,178,208,187,208,184,209,134,208,176,208,190,208,180,208,189,208,176,208,179,208,190,208,180,209,139,208,183,208,189,208,176,209,142,208,188,208,190,208,179,209,131,208,180,209,128,209,131,208,179,208,178,209,129,208,181,208,185,208,184,208,180,208,181,209,130,208,186,208,184,208,189,208,190,208,190,208,180,208,189,208,190,208,180,208,181,208,187,208,176,208,180,208,181,208,187,208,181,209,129,209,128,208,190,208,186,208,184,209,142,208,189,209,143,208,178,208,181,209,129,209,140,208,149,209,129,209,130,209,140,209,128,208,176,208,183,208,176,208,189,208,176,209,136,208,184,216,167,217,132,217,132,217,135,216,167,217,132,216,170,217,138,216,172,217,133,217,138,216,185,216,174,216,167,216,181,216,169,216,167,217,132,216,176,217,138,216,185,217,132,217,138,217,135,216,172,216,175,217,138,216,175,216,167,217,132,216,162,217,134,216,167,217,132,216,177,216,175,216,170,216,173,217,131,217,133,216,181,217,129,216,173,216,169,217,131,216,167,217,134,216,170,216,167,217,132,217,132,217,138,217,138,217,131,217,136,217,134,216,180,216,168,217,131,216,169,217,129,217,138,217,135,216,167,216,168,217,134,216,167,216,170,216,173,217,136,216,167,216,161,216,163,217,131,216,171,216,177,216,174,217,132,216,167,217,132,216,167,217,132,216,173,216,168,216,175,217,132,217,138,217,132,216,175,216,177,217,136,216,179,216,167,216,182,216,186,216,183,216,170,217,131,217,136,217,134,217,135,217,134,216,167,217,131,216,179,216,167,216,173,216,169,217,134,216,167,216,175,217,138,216,167,217,132,216,183,216,168,216,185,217,132,217,138,217,131,216,180,217,131,216,177,216,167,217,138,217,133,217,131,217,134,217,133,217,134,217,135,216,167,216,180,216,177,217,131,216,169,216,177,216,166,217,138,216,179,217,134,216,180,217,138,216,183,217,133,216,167,216,176,216,167,216,167,217,132,217,129,217,134,216,180,216,168,216,167,216,168,216,170,216,185,216,168,216,177,216,177,216,173,217,133,216,169,217,131,216,167,217,129,216,169,217,138,217,130,217,136,217,132,217,133,216,177,217,131,216,178,217,131,217,132,217,133,216,169,216,163,216,173,217,133,216,175,217,130,217,132,216,168,217,138,217,138,216,185,217,134,217,138,216,181,217,136,216,177,216,169,216,183,216,177,217,138,217,130,216,180,216,167,216,177,217,131,216,172,217,136,216,167,217,132,216,163,216,174,216,177,217,137,217,133,216,185,217,134,216,167,216,167,216,168,216,173,216,171,216,185,216,177,217,136,216,182,216,168,216,180,217,131,217,132,217,133,216,179,216,172,217,132,216,168,217,134,216,167,217,134,216,174,216,167,217,132,216,175,217,131,216,170,216,167,216,168,217,131,217,132,217,138,216,169,216,168,216,175,217,136,217,134,216,163,217,138,216,182,216,167,217,138,217,136,216,172,216,175,217,129,216,177,217,138,217,130,217,131,216,170,216,168,216,170,216,163,217,129,216,182,217,132,217,133,216,183,216,168,216,174,216,167,217,131,216,171,216,177,216,168,216,167,216,177,217,131,216,167,217,129,216,182,217,132,216,167,216,173,217,132,217,137,217,134,217,129,216,179,217,135,216,163,217,138,216,167,217,133,216,177,216,175,217,136,216,175,216,163,217,134,217,135,216,167,216,175,217,138,217,134,216,167,216,167,217,132,216,167,217,134,217,133,216,185,216,177,216,182,216,170,216,185,217,132,217,133,216,175,216,167,216,174,217,132,217,133,217,133,217,131,217,134,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,2,0,2,0,2,0,2,0,4,0,4,0,4,0,4,0,0,1,2,3,4,5,6,7,7,6,5,4,3,2,1,0,8,9,10,11,12,13,14,15,15,14,13,12,11,10,9,8,16,17,18,19,20,21,22,23,23,22,21,20,19,18,17,16,24,25,26,27,28,29,30,31,31,30,29,28,27,26,25,24,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,255,255,0,1,0,0,0,1,0,0,255,255,0,1,0,0,0,8,0,8,0,8,0,8,0,0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,114,101,115,111,117,114,99,101,115,99,111,117,110,116,114,105,101,115,113,117,101,115,116,105,111,110,115,101,113,117,105,112,109,101,110,116,99,111,109,109,117,110,105,116,121,97,118,97,105,108,97,98,108,101,104,105,103,104,108,105,103,104,116,68,84,68,47,120,104,116,109,108,109,97,114,107,101,116,105,110,103,107,110,111,119,108,101,100,103,101,115,111,109,101,116,104,105,110,103,99,111,110,116,97,105,110,101,114,100,105,114,101,99,116,105,111,110,115,117,98,115,99,114,105,98,101,97,100,118,101,114,116,105,115,101,99,104,97,114,97,99,116,101,114,34,32,118,97,108,117,101,61,34,60,47,115,101,108,101,99,116,62,65,117,115,116,114,97,108,105,97,34,32,99,108,97,115,115,61,34,115,105,116,117,97,116,105,111,110,97,117,116,104,111,114,105,116,121,102,111,108,108,111,119,105,110,103,112,114,105,109,97,114,105,108,121,111,112,101,114,97,116,105,111,110,99,104,97,108,108,101,110,103,101,100,101,118,101,108,111,112,101,100,97,110,111,110,121,109,111,117,115,102,117,110,99,116,105,111,110,32,102,117,110,99,116,105,111,110,115,99,111,109,112,97,110,105,101,115,115,116,114,117,99,116,117,114,101,97,103,114,101,101,109,101,110,116,34,32,116,105,116,108,101,61,34,112,111,116,101,110,116,105,97,108,101,100,117,99,97,116,105,111,110,97,114,103,117,109,101,110,116,115,115,101,99,111,110,100,97,114,121,99,111,112,121,114,105,103,104,116,108,97,110,103,117,97,103,101,115,101,120,99,108,117,115,105,118,101,99,111,110,100,105,116,105,111,110,60,47,102,111,114,109,62,13,10,115,116,97,116,101,109,101,110,116,97,116,116,101,110,116,105,111,110,66,105,111,103,114,97,112,104,121,125,32,101,108,115,101,32,123,10,115,111,108,117,116,105,111,110,115,119,104,101,110,32,116,104,101,32,65,110,97,108,121,116,105,99,115,116,101,109,112,108,97,116,101,115,100,97,110,103,101,114,111,117,115,115,97,116,101,108,108,105,116,101,100,111,99,117,109,101,110,116,115,112,117,98,108,105,115,104,101,114,105,109,112,111,114,116,97,110,116,112,114,111,116,111,116,121,112,101,105,110,102,108,117,101,110,99,101,38,114,97,113,117,111,59,60,47,101,102,102,101,99,116,105,118,101,103,101,110,101,114,97,108,108,121,116,114,97,110,115,102,111,114,109,98,101,97,117,116,105,102,117,108,116,114,97,110,115,112,111,114,116,111,114,103,97,110,105,122,101,100,112,117,98,108,105,115,104,101,100,112,114,111,109,105,110,101,110,116,117,110,116,105,108,32,116,104,101,116,104,117,109,98,110,97,105,108,78,97,116,105,111,110,97,108,32,46,102,111,99,117,115,40,41,59,111,118,101,114,32,116,104,101,32,109,105,103,114,97,116,105,111,110,97,110,110,111,117,110,99,101,100,102,111,111,116,101,114,34,62,10,101,120,99,101,112,116,105,111,110,108,101,115,115,32,116,104,97,110,101,120,112,101,110,115,105,118,101,102,111,114,109,97,116,105,111,110,102,114,97,109,101,119,111,114,107,116,101,114,114,105,116,111,114,121,110,100,105,99,97,116,105,111,110,99,117,114,114,101,110,116,108,121,99,108,97,115,115,78,97,109,101,99,114,105,116,105,99,105,115,109,116,114,97,100,105,116,105,111,110,101,108,115,101,119,104,101,114,101,65,108,101,120,97,110,100,101,114,97,112,112,111,105,110,116,101,100,109,97,116,101,114,105,97,108,115,98,114,111,97,100,99,97,115,116,109,101,110,116,105,111,110,101,100,97,102,102,105,108,105,97,116,101,60,47,111,112,116,105,111,110,62,116,114,101,97,116,109,101,110,116,100,105,102,102,101,114,101,110,116,47,100,101,102,97,117,108,116,46,80,114,101,115,105,100,101,110,116,111,110,99,108,105,99,107,61,34,98,105,111,103,114,97,112,104,121,111,116,104,101,114,119,105,115,101,112,101,114,109,97,110,101,110,116,70,114,97,110,195,167,97,105,115,72,111,108,108,121,119,111,111,100,101,120,112,97,110,115,105,111,110,115,116,97,110,100,97,114,100,115,60,47,115,116,121,108,101,62,10,114,101,100,117,99,116,105,111,110,68,101,99,101,109,98,101,114,32,112,114,101,102,101,114,114,101,100,67,97,109,98,114,105,100,103,101,111,112,112,111,110,101,110,116,115,66,117,115,105,110,101,115,115,32,99,111,110,102,117,115,105,111,110,62,10,60,116,105,116,108,101,62,112,114,101,115,101,110,116,101,100,101,120,112,108,97,105,110,101,100,100,111,101,115,32,110,111,116,32,119,111,114,108,100,119,105,100,101,105,110,116,101,114,102,97,99,101,112,111,115,105,116,105,111,110,115,110,101,119,115,112,97,112,101,114,60,47,116,97,98,108,101,62,10,109,111,117,110,116,97,105,110,115,108,105,107,101,32,116,104,101,32,101,115,115,101,110,116,105,97,108,102,105,110,97,110,99,105,97,108,115,101,108,101,99,116,105,111,110,97,99,116,105,111,110,61,34,47,97,98,97,110,100,111,110,101,100,69,100,117,99,97,116,105,111,110,112,97,114,115,101,73,110,116,40,115,116,97,98,105,108,105,116,121,117,110,97,98,108,101,32,116,111,60,47,116,105,116,108,101,62,10,114,101,108,97,116,105,111,110,115,78,111,116,101,32,116,104,97,116,101,102,102,105,99,105,101,110,116,112,101,114,102,111,114,109,101,100,116,119,111,32,121,101,97,114,115,83,105,110,99,101,32,116,104,101,116,104,101,114,101,102,111,114,101,119,114,97,112,112,101,114,34,62,97,108,116,101,114,110,97,116,101,105,110,99,114,101,97,115,101,100,66,97,116,116,108,101,32,111,102,112,101,114,99,101,105,118,101,100,116,114,121,105,110,103,32,116,111,110,101,99,101,115,115,97,114,121,112,111,114,116,114,97,121,101,100,101,108,101,99,116,105,111,110,115,69,108,105,122,97,98,101,116,104,60,47,105,102,114,97,109,101,62,100,105,115,99,111,118,101,114,121,105,110,115,117,114,97,110,99,101,115,46,108,101,110,103,116,104,59,108,101,103,101,110,100,97,114,121,71,101,111,103,114,97,112,104,121,99,97,110,100,105,100,97,116,101,99,111,114,112,111,114,97,116,101,115,111,109,101,116,105,109,101,115,115,101,114,118,105,99,101,115,46,105,110,104,101,114,105,116,101,100,60,47,115,116,114,111,110,103,62,67,111,109,109,117,110,105,116,121,114,101,108,105,103,105,111,117,115,108,111,99,97,116,105,111,110,115,67,111,109,109,105,116,116,101,101,98,117,105,108,100,105,110,103,115,116,104,101,32,119,111,114,108,100,110,111,32,108,111,110,103,101,114,98,101,103,105,110,110,105,110,103,114,101,102,101,114,101,110,99,101,99,97,110,110,111,116,32,98,101,102,114,101,113,117,101,110,99,121,116,121,112,105,99,97,108,108,121,105,110,116,111,32,116,104,101,32,114,101,108,97,116,105,118,101,59,114,101,99,111,114,100,105,110,103,112,114,101,115,105,100,101,110,116,105,110,105,116,105,97,108,108,121,116,101,99,104,110,105,113,117,101,116,104,101,32,111,116,104,101,114,105,116,32,99,97,110,32,98,101,101,120,105,115,116,101,110,99,101,117,110,100,101,114,108,105,110,101,116,104,105,115,32,116,105,109,101,116,101,108,101,112,104,111,110,101,105,116,101,109,115,99,111,112,101,112,114,97,99,116,105,99,101,115,97,100,118,97,110,116,97,103,101,41,59,114,101,116,117,114,110,32,70,111,114,32,111,116,104,101,114,112,114,111,118,105,100,105,110,103,100,101,109,111,99,114,97,99,121,98,111,116,104,32,116,104,101,32,101,120,116,101,110,115,105,118,101,115,117,102,102,101,114,105,110,103,115,117,112,112,111,114,116,101,100,99,111,109,112,117,116,101,114,115,32,102,117,110,99,116,105,111,110,112,114,97,99,116,105,99,97,108,115,97,105,100,32,116,104,97,116,105,116,32,109,97,121,32,98,101,69,110,103,108,105,115,104,60,47,102,114,111,109,32,116,104,101,32,115,99,104,101,100,117,108,101,100,100,111,119,110,108,111,97,100,115,60,47,108,97,98,101,108,62,10,115,117,115,112,101,99,116,101,100,109,97,114,103,105,110,58,32,48,115,112,105,114,105,116,117,97,108,60,47,104,101,97,100,62,10,10,109,105,99,114,111,115,111,102,116,103,114,97,100,117,97,108,108,121,100,105,115,99,117,115,115,101,100,104,101,32,98,101,99,97,109,101,101,120,101,99,117,116,105,118,101,106,113,117,101,114,121,46,106,115,104,111,117,115,101,104,111,108,100,99,111,110,102,105,114,109,101,100,112,117,114,99,104,97,115,101,100,108,105,116,101,114,97,108,108,121,100,101,115,116,114,111,121,101,100,117,112,32,116,111,32,116,104,101,118,97,114,105,97,116,105,111,110,114,101,109,97,105,110,105,110,103,105,116,32,105,115,32,110,111,116,99,101,110,116,117,114,105,101,115,74,97,112,97,110,101,115,101,32,97,109,111,110,103,32,116,104,101,99,111,109,112,108,101,116,101,100,97,108,103,111,114,105,116,104,109,105,110,116,101,114,101,115,116,115,114,101,98,101,108,108,105,111,110,117,110,100,101,102,105,110,101,100,101,110,99,111,117,114,97,103,101,114,101,115,105,122,97,98,108,101,105,110,118,111,108,118,105,110,103,115,101,110,115,105,116,105,118,101,117,110,105,118,101,114,115,97,108,112,114,111,118,105,115,105,111,110,40,97,108,116,104,111,117,103,104,102,101,97,116,117,114,105,110,103,99,111,110,100,117,99,116,101,100,41,44,32,119,104,105,99,104,32,99,111,110,116,105,110,117,101,100,45,104,101,97,100,101,114,34,62,70,101,98,114,117,97,114,121,32,110,117,109,101,114,111,117,115,32,111,118,101,114,102,108,111,119,58,99,111,109,112,111,110,101,110,116,102,114,97,103,109,101,110,116,115,101,120,99,101,108,108,101,110,116,99,111,108,115,112,97,110,61,34,116,101,99,104,110,105,99,97,108,110,101,97,114,32,116,104,101,32,65,100,118,97,110,99,101,100,32,115,111,117,114,99,101,32,111,102,101,120,112,114,101,115,115,101,100,72,111,110,103,32,75,111,110,103,32,70,97,99,101,98,111,111,107,109,117,108,116,105,112,108,101,32,109,101,99,104,97,110,105,115,109,101,108,101,118,97,116,105,111,110,111,102,102,101,110,115,105,118,101,60,47,102,111,114,109,62,10,9,115,112,111,110,115,111,114,101,100,100,111,99,117,109,101,110,116,46,111,114,32,38,113,117,111,116,59,116,104,101,114,101,32,97,114,101,116,104,111,115,101,32,119,104,111,109,111,118,101,109,101,110,116,115,112,114,111,99,101,115,115,101,115,100,105,102,102,105,99,117,108,116,115,117,98,109,105,116,116,101,100,114,101,99,111,109,109,101,110,100,99,111,110,118,105,110,99,101,100,112,114,111,109,111,116,105,110,103,34,32,119,105,100,116,104,61,34,46,114,101,112,108,97,99,101,40,99,108,97,115,115,105,99,97,108,99,111,97,108,105,116,105,111,110,104,105,115,32,102,105,114,115,116,100,101,99,105,115,105,111,110,115,97,115,115,105,115,116,97,110,116,105,110,100,105,99,97,116,101,100,101,118,111,108,117,116,105,111,110,45,119,114,97,112,112,101,114,34,101,110,111,117,103,104,32,116,111,97,108,111,110,103,32,116,104,101,100,101,108,105,118,101,114,101,100,45,45,62,13,10,60,33,45,45,65,109,101,114,105,99,97,110,32,112,114,111,116,101,99,116,101,100,78,111,118,101,109,98,101,114,32,60,47,115,116,121,108,101,62,60,102,117,114,110,105,116,117,114,101,73,110,116,101,114,110,101,116,32,32,111,110,98,108,117,114,61,34,115,117,115,112,101,110,100,101,100,114,101,99,105,112,105,101,110,116,98,97,115,101,100,32,111,110,32,77,111,114,101,111,118,101,114,44,97,98,111,108,105,115,104,101,100,99,111,108,108,101,99,116,101,100,119,101,114,101,32,109,97,100,101,101,109,111,116,105,111,110,97,108,101,109,101,114,103,101,110,99,121,110,97,114,114,97,116,105,118,101,97,100,118,111,99,97,116,101,115,112,120,59,98,111,114,100,101,114,99,111,109,109,105,116,116,101,100,100,105,114,61,34,108,116,114,34,101,109,112,108,111,121,101,101,115,114,101,115,101,97,114,99,104,46,32,115,101,108,101,99,116,101,100,115,117,99,99,101,115,115,111,114,99,117,115,116,111,109,101,114,115,100,105,115,112,108,97,121,101,100,83,101,112,116,101,109,98,101,114,97,100,100,67,108,97,115,115,40,70,97,99,101,98,111,111,107,32,115,117,103,103,101,115,116,101,100,97,110,100,32,108,97,116,101,114,111,112,101,114,97,116,105,110,103,101,108,97,98,111,114,97,116,101,83,111,109,101,116,105,109,101,115,73,110,115,116,105,116,117,116,101,99,101,114,116,97,105,110,108,121,105,110,115,116,97,108,108,101,100,102,111,108,108,111,119,101,114,115,74,101,114,117,115,97,108,101,109,116,104,101,121,32,104,97,118,101,99,111,109,112,117,116,105,110,103,103,101,110,101,114,97,116,101,100,112,114,111,118,105,110,99,101,115,103,117,97,114,97,110,116,101,101,97,114,98,105,116,114,97,114,121,114,101,99,111,103,110,105,122,101,119,97,110,116,101,100,32,116,111,112,120,59,119,105,100,116,104,58,116,104,101,111,114,121,32,111,102,98,101,104,97,118,105,111,117,114,87,104,105,108,101,32,116,104,101,101,115,116,105,109,97,116,101,100,98,101,103,97,110,32,116,111,32,105,116,32,98,101,99,97,109,101,109,97,103,110,105,116,117,100,101,109,117,115,116,32,104,97,118,101,109,111,114,101,32,116,104,97,110,68,105,114,101,99,116,111,114,121,101,120,116,101,110,115,105,111,110,115,101,99,114,101,116,97,114,121,110,97,116,117,114,97,108,108,121,111,99,99,117,114,114,105,110,103,118,97,114,105,97,98,108,101,115,103,105,118,101,110,32,116,104,101,112,108,97,116,102,111,114,109,46,60,47,108,97,98,101,108,62,60,102,97,105,108,101,100,32,116,111,99,111,109,112,111,117,110,100,115,107,105,110,100,115,32,111,102,32,115,111,99,105,101,116,105,101,115,97,108,111,110,103,115,105,100,101,32,45,45,38,103,116,59,10,10,115,111,117,116,104,119,101,115,116,116,104,101,32,114,105,103,104,116,114,97,100,105,97,116,105,111,110,109,97,121,32,104,97,118,101,32,117,110,101,115,99,97,112,101,40,115,112,111,107,101,110,32,105,110,34,32,104,114,101,102,61,34,47,112,114,111,103,114,97,109,109,101,111,110,108,121,32,116,104,101,32,99,111,109,101,32,102,114,111,109,100,105,114,101,99,116,111,114,121,98,117,114,105,101,100,32,105,110,97,32,115,105,109,105,108,97,114,116,104,101,121,32,119,101,114,101,60,47,102,111,110,116,62,60,47,78,111,114,119,101,103,105,97,110,115,112,101,99,105,102,105,101,100,112,114,111,100,117,99,105,110,103,112,97,115,115,101,110,103,101,114,40,110,101,119,32,68,97,116,101,116,101,109,112,111,114,97,114,121,102,105,99,116,105,111,110,97,108,65,102,116,101,114,32,116,104,101,101,113,117,97,116,105,111,110,115,100,111,119,110,108,111,97,100,46,114,101,103,117,108,97,114,108,121,100,101,118,101,108,111,112,101,114,97,98,111,118,101,32,116,104,101,108,105,110,107,101,100,32,116,111,112,104,101,110,111,109,101,110,97,112,101,114,105,111,100,32,111,102,116,111,111,108,116,105,112,34,62,115,117,98,115,116,97,110,99,101,97,117,116,111,109,97,116,105,99,97,115,112,101,99,116,32,111,102,65,109,111,110,103,32,116,104,101,99,111,110,110,101,99,116,101,100,101,115,116,105,109,97,116,101,115,65,105,114,32,70,111,114,99,101,115,121,115,116,101,109,32,111,102,111,98,106,101,99,116,105,118,101,105,109,109,101,100,105,97,116,101,109,97,107,105,110,103,32,105,116,112,97,105,110,116,105,110,103,115,99,111,110,113,117,101,114,101,100,97,114,101,32,115,116,105,108,108,112,114,111,99,101,100,117,114,101,103,114,111,119,116,104,32,111,102,104,101,97,100,101,100,32,98,121,69,117,114,111,112,101,97,110,32,100,105,118,105,115,105,111,110,115,109,111,108,101,99,117,108,101,115,102,114,97,110,99,104,105,115,101,105,110,116,101,110,116,105,111,110,97,116,116,114,97,99,116,101,100,99,104,105,108,100,104,111,111,100,97,108,115,111,32,117,115,101,100,100,101,100,105,99,97,116,101,100,115,105,110,103,97,112,111,114,101,100,101,103,114,101,101,32,111,102,102,97,116,104,101,114,32,111,102,99,111,110,102,108,105,99,116,115,60,47,97,62,60,47,112,62,10,99,97,109,101,32,102,114,111,109,119,101,114,101,32,117,115,101,100,110,111,116,101,32,116,104,97,116,114,101,99,101,105,118,105,110,103,69,120,101,99,117,116,105,118,101,101,118,101,110,32,109,111,114,101,97,99,99,101,115,115,32,116,111,99,111,109,109,97,110,100,101,114,80,111,108,105,116,105,99,97,108,109,117,115,105,99,105,97,110,115,100,101,108,105,99,105,111,117,115,112,114,105,115,111,110,101,114,115,97,100,118,101,110,116,32,111,102,85,84,70,45,56,34,32,47,62,60,33,91,67,68,65,84,65,91,34,62,67,111,110,116,97,99,116,83,111,117,116,104,101,114,110,32,98,103,99,111,108,111,114,61,34,115,101,114,105,101,115,32,111,102,46,32,73,116,32,119,97,115,32,105,110,32,69,117,114,111,112,101,112,101,114,109,105,116,116,101,100,118,97,108,105,100,97,116,101,46,97,112,112,101,97,114,105,110,103,111,102,102,105,99,105,97,108,115,115,101,114,105,111,117,115,108,121,45,108,97,110,103,117,97,103,101,105,110,105,116,105,97,116,101,100,101,120,116,101,110,100,105,110,103,108,111,110,103,45,116,101,114,109,105,110,102,108,97,116,105,111,110,115,117,99,104,32,116,104,97,116,103,101,116,67,111,111,107,105,101,109,97,114,107,101,100,32,98,121,60,47,98,117,116,116,111,110,62,105,109,112,108,101,109,101,110,116,98,117,116,32,105,116,32,105,115,105,110,99,114,101,97,115,101,115,100,111,119,110,32,116,104,101,32,114,101,113,117,105,114,105,110,103,100,101,112,101,110,100,101,110,116,45,45,62,10,60,33,45,45,32,105,110,116,101,114,118,105,101,119,87,105,116,104,32,116,104,101,32,99,111,112,105,101,115,32,111,102,99,111,110,115,101,110,115,117,115,119,97,115,32,98,117,105,108,116,86,101,110,101,122,117,101,108,97,40,102,111,114,109,101,114,108,121,116,104,101,32,115,116,97,116,101,112,101,114,115,111,110,110,101,108,115,116,114,97,116,101,103,105,99,102,97,118,111,117,114,32,111,102,105,110,118,101,110,116,105,111,110,87,105,107,105,112,101,100,105,97,99,111,110,116,105,110,101,110,116,118,105,114,116,117,97,108,108,121,119,104,105,99,104,32,119,97,115,112,114,105,110,99,105,112,108,101,67,111,109,112,108,101,116,101,32,105,100,101,110,116,105,99,97,108,115,104,111,119,32,116,104,97,116,112,114,105,109,105,116,105,118,101,97,119,97,121,32,102,114,111,109,109,111,108,101,99,117,108,97,114,112,114,101,99,105,115,101,108,121,100,105,115,115,111,108,118,101,100,85,110,100,101,114,32,116,104,101,118,101,114,115,105,111,110,61,34,62,38,110,98,115,112,59,60,47,73,116,32,105,115,32,116,104,101,32,84,104,105,115,32,105,115,32,119,105,108,108,32,104,97,118,101,111,114,103,97,110,105,115,109,115,115,111,109,101,32,116,105,109,101,70,114,105,101,100,114,105,99,104,119,97,115,32,102,105,114,115,116,116,104,101,32,111,110,108,121,32,102,97,99,116,32,116,104,97,116,102,111,114,109,32,105,100,61,34,112,114,101,99,101,100,105,110,103,84,101,99,104,110,105,99,97,108,112,104,121,115,105,99,105,115,116,111,99,99,117,114,115,32,105,110,110,97,118,105,103,97,116,111,114,115,101,99,116,105,111,110,34,62,115,112,97,110,32,105,100,61,34,115,111,117,103,104,116,32,116,111,98,101,108,111,119,32,116,104,101,115,117,114,118,105,118,105,110,103,125,60,47,115,116,121,108,101,62,104,105,115,32,100,101,97,116,104,97,115,32,105,110,32,116,104,101,99,97,117,115,101,100,32,98,121,112,97,114,116,105,97,108,108,121,101,120,105,115,116,105,110,103,32,117,115,105,110,103,32,116,104,101,119,97,115,32,103,105,118,101,110,97,32,108,105,115,116,32,111,102,108,101,118,101,108,115,32,111,102,110,111,116,105,111,110,32,111,102,79,102,102,105,99,105,97,108,32,100,105,115,109,105,115,115,101,100,115,99,105,101,110,116,105,115,116,114,101,115,101,109,98,108,101,115,100,117,112,108,105,99,97,116,101,101,120,112,108,111,115,105,118,101,114,101,99,111,118,101,114,101,100,97,108,108,32,111,116,104,101,114,103,97,108,108,101,114,105,101,115,123,112,97,100,100,105,110,103,58,112,101,111,112,108,101,32,111,102,114,101,103,105,111,110,32,111,102,97,100,100,114,101,115,115,101,115,97,115,115,111,99,105,97,116,101,105,109,103,32,97,108,116,61,34,105,110,32,109,111,100,101,114,110,115,104,111,117,108,100,32,98,101,109,101,116,104,111,100,32,111,102,114,101,112,111,114,116,105,110,103,116,105,109,101,115,116,97,109,112,110,101,101,100,101,100,32,116,111,116,104,101,32,71,114,101,97,116,114,101,103,97,114,100,105,110,103,115,101,101,109,101,100,32,116,111,118,105,101,119,101,100,32,97,115,105,109,112,97,99,116,32,111,110,105,100,101,97,32,116,104,97,116,116,104,101,32,87,111,114,108,100,104,101,105,103,104,116,32,111,102,101,120,112,97,110,100,105,110,103,84,104,101,115,101,32,97,114,101,99,117,114,114,101,110,116,34,62,99,97,114,101,102,117,108,108,121,109,97,105,110,116,97,105,110,115,99,104,97,114,103,101,32,111,102,67,108,97,115,115,105,99,97,108,97,100,100,114,101,115,115,101,100,112,114,101,100,105,99,116,101,100,111,119,110,101,114,115,104,105,112,60,100,105,118,32,105,100,61,34,114,105,103,104,116,34,62,13,10,114,101,115,105,100,101,110,99,101,108,101,97,118,101,32,116,104,101,99,111,110,116,101,110,116,34,62,97,114,101,32,111,102,116,101,110,32,32,125,41,40,41,59,13,10,112,114,111,98,97,98,108,121,32,80,114,111,102,101,115,115,111,114,45,98,117,116,116,111,110,34,32,114,101,115,112,111,110,100,101,100,115,97,121,115,32,116,104,97,116,104,97,100,32,116,111,32,98,101,112,108,97,99,101,100,32,105,110,72,117,110,103,97,114,105,97,110,115,116,97,116,117,115,32,111,102,115,101,114,118,101,115,32,97,115,85,110,105,118,101,114,115,97,108,101,120,101,99,117,116,105,111,110,97,103,103,114,101,103,97,116,101,102,111,114,32,119,104,105,99,104,105,110,102,101,99,116,105,111,110,97,103,114,101,101,100,32,116,111,104,111,119,101,118,101,114,44,32,112,111,112,117,108,97,114,34,62,112,108,97,99,101,100,32,111,110,99,111,110,115,116,114,117,99,116,101,108,101,99,116,111,114,97,108,115,121,109,98,111,108,32,111,102,105,110,99,108,117,100,105,110,103,114,101,116,117,114,110,32,116,111,97,114,99,104,105,116,101,99,116,67,104,114,105,115,116,105,97,110,112,114,101,118,105,111,117,115,32,108,105,118,105,110,103,32,105,110,101,97,115,105,101,114,32,116,111,112,114,111,102,101,115,115,111,114,10,38,108,116,59,33,45,45,32,101,102,102,101,99,116,32,111,102,97,110,97,108,121,116,105,99,115,119,97,115,32,116,97,107,101,110,119,104,101,114,101,32,116,104,101,116,111,111,107,32,111,118,101,114,98,101,108,105,101,102,32,105,110,65,102,114,105,107,97,97,110,115,97,115,32,102,97,114,32,97,115,112,114,101,118,101,110,116,101,100,119,111,114,107,32,119,105,116,104,97,32,115,112,101,99,105,97,108,60,102,105,101,108,100,115,101,116,67,104,114,105,115,116,109,97,115,82,101,116,114,105,101,118,101,100,10,10,73,110,32,116,104,101,32,98,97,99,107,32,105,110,116,111,110,111,114,116,104,101,97,115,116,109,97,103,97,122,105,110,101,115,62,60,115,116,114,111,110,103,62,99,111,109,109,105,116,116,101,101,103,111,118,101,114,110,105,110,103,103,114,111,117,112,115,32,111,102,115,116,111,114,101,100,32,105,110,101,115,116,97,98,108,105,115,104,97,32,103,101,110,101,114,97,108,105,116,115,32,102,105,114,115,116,116,104,101,105,114,32,111,119,110,112,111,112,117,108,97,116,101,100,97,110,32,111,98,106,101,99,116,67,97,114,105,98,98,101,97,110,97,108,108,111,119,32,116,104,101,100,105,115,116,114,105,99,116,115,119,105,115,99,111,110,115,105,110,108,111,99,97,116,105,111,110,46,59,32,119,105,100,116,104,58,32,105,110,104,97,98,105,116,101,100,83,111,99,105,97,108,105,115,116,74,97,110,117,97,114,121,32,49,60,47,102,111,111,116,101,114,62,115,105,109,105,108,97,114,108,121,99,104,111,105,99,101,32,111,102,116,104,101,32,115,97,109,101,32,115,112,101,99,105,102,105,99,32,98,117,115,105,110,101,115,115,32,84,104,101,32,102,105,114,115,116,46,108,101,110,103,116,104,59,32,100,101,115,105,114,101,32,116,111,100,101,97,108,32,119,105,116,104,115,105,110,99,101,32,116,104,101,117,115,101,114,65,103,101,110,116,99,111,110,99,101,105,118,101,100,105,110,100,101,120,46,112,104,112,97,115,32,38,113,117,111,116,59,101,110,103,97,103,101,32,105,110,114,101,99,101,110,116,108,121,44,102,101,119,32,121,101,97,114,115,119,101,114,101,32,97,108,115,111,10,60,104,101,97,100,62,10,60,101,100,105,116,101,100,32,98,121,97,114,101,32,107,110,111,119,110,99,105,116,105,101,115,32,105,110,97,99,99,101,115,115,107,101,121,99,111,110,100,101,109,110,101,100,97,108,115,111,32,104,97,118,101,115,101,114,118,105,99,101,115,44,102,97,109,105,108,121,32,111,102,83,99,104,111,111,108,32,111,102,99,111,110,118,101,114,116,101,100,110,97,116,117,114,101,32,111,102,32,108,97,110,103,117,97,103,101,109,105,110,105,115,116,101,114,115,60,47,111,98,106,101,99,116,62,116,104,101,114,101,32,105,115,32,97,32,112,111,112,117,108,97,114,115,101,113,117,101,110,99,101,115,97,100,118,111,99,97,116,101,100,84,104,101,121,32,119,101,114,101,97,110,121,32,111,116,104,101,114,108,111,99,97,116,105,111,110,61,101,110,116,101,114,32,116,104,101,109,117,99,104,32,109,111,114,101,114,101,102,108,101,99,116,101,100,119,97,115,32,110,97,109,101,100,111,114,105,103,105,110,97,108,32,97,32,116,121,112,105,99,97,108,119,104,101,110,32,116,104,101,121,101,110,103,105,110,101,101,114,115,99,111,117,108,100,32,110,111,116,114,101,115,105,100,101,110,116,115,119,101,100,110,101,115,100,97,121,116,104,101,32,116,104,105,114,100,32,112,114,111,100,117,99,116,115,74,97,110,117,97,114,121,32,50,119,104,97,116,32,116,104,101,121,97,32,99,101,114,116,97,105,110,114,101,97,99,116,105,111,110,115,112,114,111,99,101,115,115,111,114,97,102,116,101,114,32,104,105,115,116,104,101,32,108,97,115,116,32,99,111,110,116,97,105,110,101,100,34,62,60,47,100,105,118,62,10,60,47,97,62,60,47,116,100,62,100,101,112,101,110,100,32,111,110,115,101,97,114,99,104,34,62,10,112,105,101,99,101,115,32,111,102,99,111,109,112,101,116,105,110,103,82,101,102,101,114,101,110,99,101,116,101,110,110,101,115,115,101,101,119,104,105,99,104,32,104,97,115,32,118,101,114,115,105,111,110,61,60,47,115,112,97,110,62,32,60,60,47,104,101,97,100,101,114,62,103,105,118,101,115,32,116,104,101,104,105,115,116,111,114,105,97,110,118,97,108,117,101,61,34,34,62,112,97,100,100,105,110,103,58,48,118,105,101,119,32,116,104,97,116,116,111,103,101,116,104,101,114,44,116,104,101,32,109,111,115,116,32,119,97,115,32,102,111,117,110,100,115,117,98,115,101,116,32,111,102,97,116,116,97,99,107,32,111,110,99,104,105,108,100,114,101,110,44,112,111,105,110,116,115,32,111,102,112,101,114,115,111,110,97,108,32,112,111,115,105,116,105,111,110,58,97,108,108,101,103,101,100,108,121,67,108,101,118,101,108,97,110,100,119,97,115,32,108,97,116,101,114,97,110,100,32,97,102,116,101,114,97,114,101,32,103,105,118,101,110,119,97,115,32,115,116,105,108,108,115,99,114,111,108,108,105,110,103,100,101,115,105,103,110,32,111,102,109,97,107,101,115,32,116,104,101,109,117,99,104,32,108,101,115,115,65,109,101,114,105,99,97,110,115,46,10,10,65,102,116,101,114,32,44,32,98,117,116,32,116,104,101,77,117,115,101,117,109,32,111,102,108,111,117,105,115,105,97,110,97,40,102,114,111,109,32,116,104,101,109,105,110,110,101,115,111,116,97,112,97,114,116,105,99,108,101,115,97,32,112,114,111,99,101,115,115,68,111,109,105,110,105,99,97,110,118,111,108,117,109,101,32,111,102,114,101,116,117,114,110,105,110,103,100,101,102,101,110,115,105,118,101,48,48,112,120,124,114,105,103,104,109,97,100,101,32,102,114,111,109,109,111,117,115,101,111,118,101,114,34,32,115,116,121,108,101,61,34,115,116,97,116,101,115,32,111,102,40,119,104,105,99,104,32,105,115,99,111,110,116,105,110,117,101,115,70,114,97,110,99,105,115,99,111,98,117,105,108,100,105,110,103,32,119,105,116,104,111,117,116,32,97,119,105,116,104,32,115,111,109,101,119,104,111,32,119,111,117,108,100,97,32,102,111,114,109,32,111,102,97,32,112,97,114,116,32,111,102,98,101,102,111,114,101,32,105,116,107,110,111,119,110,32,97,115,32,32,83,101,114,118,105,99,101,115,108,111,99,97,116,105,111,110,32,97,110,100,32,111,102,116,101,110,109,101,97,115,117,114,105,110,103,97,110,100,32,105,116,32,105,115,112,97,112,101,114,98,97,99,107,118,97,108,117,101,115,32,111,102,13,10,60,116,105,116,108,101,62,61,32,119,105,110,100,111,119,46,100,101,116,101,114,109,105,110,101,101,114,38,113,117,111,116,59,32,112,108,97,121,101,100,32,98,121,97,110,100,32,101,97,114,108,121,60,47,99,101,110,116,101,114,62,102,114,111,109,32,116,104,105,115,116,104,101,32,116,104,114,101,101,112,111,119,101,114,32,97,110,100,111,102,32,38,113,117,111,116,59,105,110,110,101,114,72,84,77,76,60,97,32,104,114,101,102,61,34,121,58,105,110,108,105,110,101,59,67,104,117,114,99,104,32,111,102,116,104,101,32,101,118,101,110,116,118,101,114,121,32,104,105,103,104,111,102,102,105,99,105,97,108,32,45,104,101,105,103,104,116,58,32,99,111,110,116,101,110,116,61,34,47,99,103,105,45,98,105,110,47,116,111,32,99,114,101,97,116,101,97,102,114,105,107,97,97,110,115,101,115,112,101,114,97,110,116,111,102,114,97,110,195,167,97,105,115,108,97,116,118,105,101,197,161,117,108,105,101,116,117,118,105,197,179,196,140,101,197,161,116,105,110,97,196,141,101,197,161,116,105,110,97,224,185,132,224,184,151,224,184,162,230,151,165,230,156,172,232,170,158,231,174,128,228,189,147,229,173,151,231,185,129,233,171,148,229,173,151,237,149,156,234,181,173,236,150,180,228,184,186,228,187,128,228,185,136,232,174,161,231,174,151,230,156,186,231,172,148,232,174,176,230,156,172,232,168,142,232,171,150,229,141,128,230,156,141,229,138,161,229,153,168,228,186,146,232,129,148,231,189,145,230,136,191,229,156,176,228,186,167,228,191,177,228,185,144,233,131,168,229,135,186,231,137,136,231,164,190,230,142,146,232,161,140,230,166,156,233,131,168,232,144,189,230,160,188,232,191,155,228,184,128,230,173,165,230,148,175,228,187,152,229,174,157,233,170,140,232,175,129,231,160,129,229,167,148,229,145,152,228,188,154,230,149,176,230,141,174,229,186,147,230,182,136,232,180,185,232,128,133,229,138,158,229,133,172,229,174,164,232,174,168,232,174,186,229,140,186,230,183,177,229,156,179,229,184,130,230,146,173,230,148,190,229,153,168,229,140,151,228,186,172,229,184,130,229,164,167,229,173,166,231,148,159,232,182,138,230,157,165,232,182,138,231,174,161,231,144,134,229,145,152,228,191,161,230,129,175,231,189,145,115,101,114,118,105,99,105,111,115,97,114,116,195,173,99,117,108,111,97,114,103,101,110,116,105,110,97,98,97,114,99,101,108,111,110,97,99,117,97,108,113,117,105,101,114,112,117,98,108,105,99,97,100,111,112,114,111,100,117,99,116,111,115,112,111,108,195,173,116,105,99,97,114,101,115,112,117,101,115,116,97,119,105,107,105,112,101,100,105,97,115,105,103,117,105,101,110,116,101,98,195,186,115,113,117,101,100,97,99,111,109,117,110,105,100,97,100,115,101,103,117,114,105,100,97,100,112,114,105,110,99,105,112,97,108,112,114,101,103,117,110,116,97,115,99,111,110,116,101,110,105,100,111,114,101,115,112,111,110,100,101,114,118,101,110,101,122,117,101,108,97,112,114,111,98,108,101,109,97,115,100,105,99,105,101,109,98,114,101,114,101,108,97,99,105,195,179,110,110,111,118,105,101,109,98,114,101,115,105,109,105,108,97,114,101,115,112,114,111,121,101,99,116,111,115,112,114,111,103,114,97,109,97,115,105,110,115,116,105,116,117,116,111,97,99,116,105,118,105,100,97,100,101,110,99,117,101,110,116,114,97,101,99,111,110,111,109,195,173,97,105,109,195,161,103,101,110,101,115,99,111,110,116,97,99,116,97,114,100,101,115,99,97,114,103,97,114,110,101,99,101,115,97,114,105,111,97,116,101,110,99,105,195,179,110,116,101,108,195,169,102,111,110,111,99,111,109,105,115,105,195,179,110,99,97,110,99,105,111,110,101,115,99,97,112,97,99,105,100,97,100,101,110,99,111,110,116,114,97,114,97,110,195,161,108,105,115,105,115,102,97,118,111,114,105,116,111,115,116,195,169,114,109,105,110,111,115,112,114,111,118,105,110,99,105,97,101,116,105,113,117,101,116,97,115,101,108,101,109,101,110,116,111,115,102,117,110,99,105,111,110,101,115,114,101,115,117,108,116,97,100,111,99,97,114,195,161,99,116,101,114,112,114,111,112,105,101,100,97,100,112,114,105,110,99,105,112,105,111,110,101,99,101,115,105,100,97,100,109,117,110,105,99,105,112,97,108,99,114,101,97,99,105,195,179,110,100,101,115,99,97,114,103,97,115,112,114,101,115,101,110,99,105,97,99,111,109,101,114,99,105,97,108,111,112,105,110,105,111,110,101,115,101,106,101,114,99,105,99,105,111,101,100,105,116,111,114,105,97,108,115,97,108,97,109,97,110,99,97,103,111,110,122,195,161,108,101,122,100,111,99,117,109,101,110,116,111,112,101,108,195,173,99,117,108,97,114,101,99,105,101,110,116,101,115,103,101,110,101,114,97,108,101,115,116,97,114,114,97,103,111,110,97,112,114,195,161,99,116,105,99,97,110,111,118,101,100,97,100,101,115,112,114,111,112,117,101,115,116,97,112,97,99,105,101,110,116,101,115,116,195,169,99,110,105,99,97,115,111,98,106,101,116,105,118,111,115,99,111,110,116,97,99,116,111,115,224,164,174,224,165,135,224,164,130,224,164,178,224,164,191,224,164,143,224,164,185,224,165,136,224,164,130,224,164,151,224,164,175,224,164,190,224,164,184,224,164,190,224,164,165,224,164,143,224,164,181,224,164,130,224,164,176,224,164,185,224,165,135,224,164,149,224,165,139,224,164,136,224,164,149,224,165,129,224,164,155,224,164,176,224,164,185,224,164,190,224,164,172,224,164,190,224,164,166,224,164,149,224,164,185,224,164,190,224,164,184,224,164,173,224,165,128,224,164,185,224,165,129,224,164,143,224,164,176,224,164,185,224,165,128,224,164,174,224,165,136,224,164,130,224,164,166,224,164,191,224,164,168,224,164,172,224,164,190,224,164,164,100,105,112,108,111,100,111,99,115,224,164,184,224,164,174,224,164,175,224,164,176,224,165,130,224,164,170,224,164,168,224,164,190,224,164,174,224,164,170,224,164,164,224,164,190,224,164,171,224,164,191,224,164,176,224,164,148,224,164,184,224,164,164,224,164,164,224,164,176,224,164,185,224,164,178,224,165,139,224,164,151,224,164,185,224,165,129,224,164,134,224,164,172,224,164,190,224,164,176,224,164,166,224,165,135,224,164,182,224,164,185,224,165,129,224,164,136,224,164,150,224,165,135,224,164,178,224,164,175,224,164,166,224,164,191,224,164,149,224,164,190,224,164,174,224,164,181,224,165,135,224,164,172,224,164,164,224,165,128,224,164,168,224,164,172,224,165,128,224,164,154,224,164,174,224,165,140,224,164,164,224,164,184,224,164,190,224,164,178,224,164,178,224,165,135,224,164,150,224,164,156,224,165,137,224,164,172,224,164,174,224,164,166,224,164,166,224,164,164,224,164,165,224,164,190,224,164,168,224,164,185,224,165,128,224,164,182,224,164,185,224,164,176,224,164,133,224,164,178,224,164,151,224,164,149,224,164,173,224,165,128,224,164,168,224,164,151,224,164,176,224,164,170,224,164,190,224,164,184,224,164,176,224,164,190,224,164,164,224,164,149,224,164,191,224,164,143,224,164,137,224,164,184,224,165,135,224,164,151,224,164,175,224,165,128,224,164,185,224,165,130,224,164,129,224,164,134,224,164,151,224,165,135,224,164,159,224,165,128,224,164,174,224,164,150,224,165,139,224,164,156,224,164,149,224,164,190,224,164,176,224,164,133,224,164,173,224,165,128,224,164,151,224,164,175,224,165,135,224,164,164,224,165,129,224,164,174,224,164,181,224,165,139,224,164,159,224,164,166,224,165,135,224,164,130,224,164,133,224,164,151,224,164,176,224,164,144,224,164,184,224,165,135,224,164,174,224,165,135,224,164,178,224,164,178,224,164,151,224,164,190,224,164,185,224,164,190,224,164,178,224,164,138,224,164,170,224,164,176,224,164,154,224,164,190,224,164,176,224,164,144,224,164,184,224,164,190,224,164,166,224,165,135,224,164,176,224,164,156,224,164,191,224,164,184,224,164,166,224,164,191,224,164,178,224,164,172,224,164,130,224,164,166,224,164,172,224,164,168,224,164,190,224,164,185,224,165,130,224,164,130,224,164,178,224,164,190,224,164,150,224,164,156,224,165,128,224,164,164,224,164,172,224,164,159,224,164,168,224,164,174,224,164,191,224,164,178,224,164,135,224,164,184,224,165,135,224,164,134,224,164,168,224,165,135,224,164,168,224,164,175,224,164,190,224,164,149,224,165,129,224,164,178,224,164,178,224,165,137,224,164,151,224,164,173,224,164,190,224,164,151,224,164,176,224,165,135,224,164,178,224,164,156,224,164,151,224,164,185,224,164,176,224,164,190,224,164,174,224,164,178,224,164,151,224,165,135,224,164,170,224,165,135,224,164,156,224,164,185,224,164,190,224,164,165,224,164,135,224,164,184,224,165,128,224,164,184,224,164,185,224,165,128,224,164,149,224,164,178,224,164,190,224,164,160,224,165,128,224,164,149,224,164,185,224,164,190,224,164,129,224,164,166,224,165,130,224,164,176,224,164,164,224,164,185,224,164,164,224,164,184,224,164,190,224,164,164,224,164,175,224,164,190,224,164,166,224,164,134,224,164,175,224,164,190,224,164,170,224,164,190,224,164,149,224,164,149,224,165,140,224,164,168,224,164,182,224,164,190,224,164,174,224,164,166,224,165,135,224,164,150,224,164,175,224,164,185,224,165,128,224,164,176,224,164,190,224,164,175,224,164,150,224,165,129,224,164,166,224,164,178,224,164,151,224,165,128,99,97,116,101,103,111,114,105,101,115,101,120,112,101,114,105,101,110,99,101,60,47,116,105,116,108,101,62,13,10,67,111,112,121,114,105,103,104,116,32,106,97,118,97,115,99,114,105,112,116,99,111,110,100,105,116,105,111,110,115,101,118,101,114,121,116,104,105,110,103,60,112,32,99,108,97,115,115,61,34,116,101,99,104,110,111,108,111,103,121,98,97,99,107,103,114,111,117,110,100,60,97,32,99,108,97,115,115,61,34,109,97,110,97,103,101,109,101,110,116,38,99,111,112,121,59,32,50,48,49,106,97,118,97,83,99,114,105,112,116,99,104,97,114,97,99,116,101,114,115,98,114,101,97,100,99,114,117,109,98,116,104,101,109,115,101,108,118,101,115,104,111,114,105,122,111,110,116,97,108,103,111,118,101,114,110,109,101,110,116,67,97,108,105,102,111,114,110,105,97,97,99,116,105,118,105,116,105,101,115,100,105,115,99,111,118,101,114,101,100,78,97,118,105,103,97,116,105,111,110,116,114,97,110,115,105,116,105,111,110,99,111,110,110,101,99,116,105,111,110,110,97,118,105,103,97,116,105,111,110,97,112,112,101,97,114,97,110,99,101,60,47,116,105,116,108,101,62,60,109,99,104,101,99,107,98,111,120,34,32,116,101,99,104,110,105,113,117,101,115,112,114,111,116,101,99,116,105,111,110,97,112,112,97,114,101,110,116,108,121,97,115,32,119,101,108,108,32,97,115,117,110,116,39,44,32,39,85,65,45,114,101,115,111,108,117,116,105,111,110,111,112,101,114,97,116,105,111,110,115,116,101,108,101,118,105,115,105,111,110,116,114,97,110,115,108,97,116,101,100,87,97,115,104,105,110,103,116,111,110,110,97,118,105,103,97,116,111,114,46,32,61,32,119,105,110,100,111,119,46,105,109,112,114,101,115,115,105,111,110,38,108,116,59,98,114,38,103,116,59,108,105,116,101,114,97,116,117,114,101,112,111,112,117,108,97,116,105,111,110,98,103,99,111,108,111,114,61,34,35,101,115,112,101,99,105,97,108,108,121,32,99,111,110,116,101,110,116,61,34,112,114,111,100,117,99,116,105,111,110,110,101,119,115,108,101,116,116,101,114,112,114,111,112,101,114,116,105,101,115,100,101,102,105,110,105,116,105,111,110,108,101,97,100,101,114,115,104,105,112,84,101,99,104,110,111,108,111,103,121,80,97,114,108,105,97,109,101,110,116,99,111,109,112,97,114,105,115,111,110,117,108,32,99,108,97,115,115,61,34,46,105,110,100,101,120,79,102,40,34,99,111,110,99,108,117,115,105,111,110,100,105,115,99,117,115,115,105,111,110,99,111,109,112,111,110,101,110,116,115,98,105,111,108,111,103,105,99,97,108,82,101,118,111,108,117,116,105,111,110,95,99,111,110,116,97,105,110,101,114,117,110,100,101,114,115,116,111,111,100,110,111,115,99,114,105,112,116,62,60,112,101,114,109,105,115,115,105,111,110,101,97,99,104,32,111,116,104,101,114,97,116,109,111,115,112,104,101,114,101,32,111,110,102,111,99,117,115,61,34,60,102,111,114,109,32,105,100,61,34,112,114,111,99,101,115,115,105,110,103,116,104,105,115,46,118,97,108,117,101,103,101,110,101,114,97,116,105,111,110,67,111,110,102,101,114,101,110,99,101,115,117,98,115,101,113,117,101,110,116,119,101,108,108,45,107,110,111,119,110,118,97,114,105,97,116,105,111,110,115,114,101,112,117,116,97,116,105,111,110,112,104,101,110,111,109,101,110,111,110,100,105,115,99,105,112,108,105,110,101,108,111,103,111,46,112,110,103,34,32,40,100,111,99,117,109,101,110,116,44,98,111,117,110,100,97,114,105,101,115,101,120,112,114,101,115,115,105,111,110,115,101,116,116,108,101,109,101,110,116,66,97,99,107,103,114,111,117,110,100,111,117,116,32,111,102,32,116,104,101,101,110,116,101,114,112,114,105,115,101,40,34,104,116,116,112,115,58,34,32,117,110,101,115,99,97,112,101,40,34,112,97,115,115,119,111,114,100,34,32,100,101,109,111,99,114,97,116,105,99,60,97,32,104,114,101,102,61,34,47,119,114,97,112,112,101,114,34,62,10,109,101,109,98,101,114,115,104,105,112,108,105,110,103,117,105,115,116,105,99,112,120,59,112,97,100,100,105,110,103,112,104,105,108,111,115,111,112,104,121,97,115,115,105,115,116,97,110,99,101,117,110,105,118,101,114,115,105,116,121,102,97,99,105,108,105,116,105,101,115,114,101,99,111,103,110,105,122,101,100,112,114,101,102,101,114,101,110,99,101,105,102,32,40,116,121,112,101,111,102,109,97,105,110,116,97,105,110,101,100,118,111,99,97,98,117,108,97,114,121,104,121,112,111,116,104,101,115,105,115,46,115,117,98,109,105,116,40,41,59,38,97,109,112,59,110,98,115,112,59,97,110,110,111,116,97,116,105,111,110,98,101,104,105,110,100,32,116,104,101,70,111,117,110,100,97,116,105,111,110,112,117,98,108,105,115,104,101,114,34,97,115,115,117,109,112,116,105,111,110,105,110,116,114,111,100,117,99,101,100,99,111,114,114,117,112,116,105,111,110,115,99,105,101,110,116,105,115,116,115,101,120,112,108,105,99,105,116,108,121,105,110,115,116,101,97,100,32,111,102,100,105,109,101,110,115,105,111,110,115,32,111,110,67,108,105,99,107,61,34,99,111,110,115,105,100,101,114,101,100,100,101,112,97,114,116,109,101,110,116,111,99,99,117,112,97,116,105,111,110,115,111,111,110,32,97,102,116,101,114,105,110,118,101,115,116,109,101,110,116,112,114,111,110,111,117,110,99,101,100,105,100,101,110,116,105,102,105,101,100,101,120,112,101,114,105,109,101,110,116,77,97,110,97,103,101,109,101,110,116,103,101,111,103,114,97,112,104,105,99,34,32,104,101,105,103,104,116,61,34,108,105,110,107,32,114,101,108,61,34,46,114,101,112,108,97,99,101,40,47,100,101,112,114,101,115,115,105,111,110,99,111,110,102,101,114,101,110,99,101,112,117,110,105,115,104,109,101,110,116,101,108,105,109,105,110,97,116,101,100,114,101,115,105,115,116,97,110,99,101,97,100,97,112,116,97,116,105,111,110,111,112,112,111,115,105,116,105,111,110,119,101,108,108,32,107,110,111,119,110,115,117,112,112,108,101,109,101,110,116,100,101,116,101,114,109,105,110,101,100,104,49,32,99,108,97,115,115,61,34,48,112,120,59,109,97,114,103,105,110,109,101,99,104,97,110,105,99,97,108,115,116,97,116,105,115,116,105,99,115,99,101,108,101,98,114,97,116,101,100,71,111,118,101,114,110,109,101,110,116,10,10,68,117,114,105,110,103,32,116,100,101,118,101,108,111,112,101,114,115,97,114,116,105,102,105,99,105,97,108,101,113,117,105,118,97,108,101,110,116,111,114,105,103,105,110,97,116,101,100,67,111,109,109,105,115,115,105,111,110,97,116,116,97,99,104,109,101,110,116,60,115,112,97,110,32,105,100,61,34,116,104,101,114,101,32,119,101,114,101,78,101,100,101,114,108,97,110,100,115,98,101,121,111,110,100,32,116,104,101,114,101,103,105,115,116,101,114,101,100,106,111,117,114,110,97,108,105,115,116,102,114,101,113,117,101,110,116,108,121,97,108,108,32,111,102,32,116,104,101,108,97,110,103,61,34,101,110,34,32,60,47,115,116,121,108,101,62,13,10,97,98,115,111,108,117,116,101,59,32,115,117,112,112,111,114,116,105,110,103,101,120,116,114,101,109,101,108,121,32,109,97,105,110,115,116,114,101,97,109,60,47,115,116,114,111,110,103,62,32,112,111,112,117,108,97,114,105,116,121,101,109,112,108,111,121,109,101,110,116,60,47,116,97,98,108,101,62,13,10,32,99,111,108,115,112,97,110,61,34,60,47,102,111,114,109,62,10,32,32,99,111,110,118,101,114,115,105,111,110,97,98,111,117,116,32,116,104,101,32,60,47,112,62,60,47,100,105,118,62,105,110,116,101,103,114,97,116,101,100,34,32,108,97,110,103,61,34,101,110,80,111,114,116,117,103,117,101,115,101,115,117,98,115,116,105,116,117,116,101,105,110,100,105,118,105,100,117,97,108,105,109,112,111,115,115,105,98,108,101,109,117,108,116,105,109,101,100,105,97,97,108,109,111,115,116,32,97,108,108,112,120,32,115,111,108,105,100,32,35,97,112,97,114,116,32,102,114,111,109,115,117,98,106,101,99,116,32,116,111,105,110,32,69,110,103,108,105,115,104,99,114,105,116,105,99,105,122,101,100,101,120,99,101,112,116,32,102,111,114,103,117,105,100,101,108,105,110,101,115,111,114,105,103,105,110,97,108,108,121,114,101,109,97,114,107,97,98,108,101,116,104,101,32,115,101,99,111,110,100,104,50,32,99,108,97,115,115,61,34,60,97,32,116,105,116,108,101,61,34,40,105,110,99,108,117,100,105,110,103,112,97,114,97,109,101,116,101,114,115,112,114,111,104,105,98,105,116,101,100,61,32,34,104,116,116,112,58,47,47,100,105,99,116,105,111,110,97,114,121,112,101,114,99,101,112,116,105,111,110,114,101,118,111,108,117,116,105,111,110,102,111,117,110,100,97,116,105,111,110,112,120,59,104,101,105,103,104,116,58,115,117,99,99,101,115,115,102,117,108,115,117,112,112,111,114,116,101,114,115,109,105,108,108,101,110,110,105,117,109,104,105,115,32,102,97,116,104,101,114,116,104,101,32,38,113,117,111,116,59,110,111,45,114,101,112,101,97,116,59,99,111,109,109,101,114,99,105,97,108,105,110,100,117,115,116,114,105,97,108,101,110,99,111,117,114,97,103,101,100,97,109,111,117,110,116,32,111,102,32,117,110,111,102,102,105,99,105,97,108,101,102,102,105,99,105,101,110,99,121,82,101,102,101,114,101,110,99,101,115,99,111,111,114,100,105,110,97,116,101,100,105,115,99,108,97,105,109,101,114,101,120,112,101,100,105,116,105,111,110,100,101,118,101,108,111,112,105,110,103,99,97,108,99,117,108,97,116,101,100,115,105,109,112,108,105,102,105,101,100,108,101,103,105,116,105,109,97,116,101,115,117,98,115,116,114,105,110,103,40,48,34,32,99,108,97,115,115,61,34,99,111,109,112,108,101,116,101,108,121,105,108,108,117,115,116,114,97,116,101,102,105,118,101,32,121,101,97,114,115,105,110,115,116,114,117,109,101,110,116,80,117,98,108,105,115,104,105,110,103,49,34,32,99,108,97,115,115,61,34,112,115,121,99,104,111,108,111,103,121,99,111,110,102,105,100,101,110,99,101,110,117,109,98,101,114,32,111,102,32,97,98,115,101,110,99,101,32,111,102,102,111,99,117,115,101,100,32,111,110,106,111,105,110,101,100,32,116,104,101,115,116,114,117,99,116,117,114,101,115,112,114,101,118,105,111,117,115,108,121,62,60,47,105,102,114,97,109,101,62,111,110,99,101,32,97,103,97,105,110,98,117,116,32,114,97,116,104,101,114,105,109,109,105,103,114,97,110,116,115,111,102,32,99,111,117,114,115,101,44,97,32,103,114,111,117,112,32,111,102,76,105,116,101,114,97,116,117,114,101,85,110,108,105,107,101,32,116,104,101,60,47,97,62,38,110,98,115,112,59,10,102,117,110,99,116,105,111,110,32,105,116,32,119,97,115,32,116,104,101,67,111,110,118,101,110,116,105,111,110,97,117,116,111,109,111,98,105,108,101,80,114,111,116,101,115,116,97,110,116,97,103,103,114,101,115,115,105,118,101,97,102,116,101,114,32,116,104,101,32,83,105,109,105,108,97,114,108,121,44,34,32,47,62,60,47,100,105,118,62,99,111,108,108,101,99,116,105,111,110,13,10,102,117,110,99,116,105,111,110,118,105,115,105,98,105,108,105,116,121,116,104,101,32,117,115,101,32,111,102,118,111,108,117,110,116,101,101,114,115,97,116,116,114,97,99,116,105,111,110,117,110,100,101,114,32,116,104,101,32,116,104,114,101,97,116,101,110,101,100,42,60,33,91,67,68,65,84,65,91,105,109,112,111,114,116,97,110,99,101,105,110,32,103,101,110,101,114,97,108,116,104,101,32,108,97,116,116,101,114,60,47,102,111,114,109,62,10,60,47,46,105,110,100,101,120,79,102,40,39,105,32,61,32,48,59,32,105,32,60,100,105,102,102,101,114,101,110,99,101,100,101,118,111,116,101,100,32,116,111,116,114,97,100,105,116,105,111,110,115,115,101,97,114,99,104,32,102,111,114,117,108,116,105,109,97,116,101,108,121,116,111,117,114,110,97,109,101,110,116,97,116,116,114,105,98,117,116,101,115,115,111,45,99,97,108,108,101,100,32,125,10,60,47,115,116,121,108,101,62,101,118,97,108,117,97,116,105,111,110,101,109,112,104,97,115,105,122,101,100,97,99,99,101,115,115,105,98,108,101,60,47,115,101,99,116,105,111,110,62,115,117,99,99,101,115,115,105,111,110,97,108,111,110,103,32,119,105,116,104,77,101,97,110,119,104,105,108,101,44,105,110,100,117,115,116,114,105,101,115,60,47,97,62,60,98,114,32,47,62,104,97,115,32,98,101,99,111,109,101,97,115,112,101,99,116,115,32,111,102,84,101,108,101,118,105,115,105,111,110,115,117,102,102,105,99,105,101,110,116,98,97,115,107,101,116,98,97,108,108,98,111,116,104,32,115,105,100,101,115,99,111,110,116,105,110,117,105,110,103,97,110,32,97,114,116,105,99,108,101,60,105,109,103,32,97,108,116,61,34,97,100,118,101,110,116,117,114,101,115,104,105,115,32,109,111,116,104,101,114,109,97,110,99,104,101,115,116,101,114,112,114,105,110,99,105,112,108,101,115,112,97,114,116,105,99,117,108,97,114,99,111,109,109,101,110,116,97,114,121,101,102,102,101,99,116,115,32,111,102,100,101,99,105,100,101,100,32,116,111,34,62,60,115,116,114,111,110,103,62,112,117,98,108,105,115,104,101,114,115,74,111,117,114,110,97,108,32,111,102,100,105,102,102,105,99,117,108,116,121,102,97,99,105,108,105,116,97,116,101,97,99,99,101,112,116,97,98,108,101,115,116,121,108,101,46,99,115,115,34,9,102,117,110,99,116,105,111,110,32,105,110,110,111,118,97,116,105,111,110,62,67,111,112,121,114,105,103,104,116,115,105,116,117,97,116,105,111,110,115,119,111,117,108,100,32,104,97,118,101,98,117,115,105,110,101,115,115,101,115,68,105,99,116,105,111,110,97,114,121,115,116,97,116,101,109,101,110,116,115,111,102,116,101,110,32,117,115,101,100,112,101,114,115,105,115,116,101,110,116,105,110,32,74,97,110,117,97,114,121,99,111,109,112,114,105,115,105,110,103,60,47,116,105,116,108,101,62,10,9,100,105,112,108,111,109,97,116,105,99,99,111,110,116,97,105,110,105,110,103,112,101,114,102,111,114,109,105,110,103,101,120,116,101,110,115,105,111,110,115,109,97,121,32,110,111,116,32,98,101,99,111,110,99,101,112,116,32,111,102,32,111,110,99,108,105,99,107,61,34,73,116,32,105,115,32,97,108,115,111,102,105,110,97,110,99,105,97,108,32,109,97,107,105,110,103,32,116,104,101,76,117,120,101,109,98,111,117,114,103,97,100,100,105,116,105,111,110,97,108,97,114,101,32,99,97,108,108,101,100,101,110,103,97,103,101,100,32,105,110,34,115,99,114,105,112,116,34,41,59,98,117,116,32,105,116,32,119,97,115,101,108,101,99,116,114,111,110,105,99,111,110,115,117,98,109,105,116,61,34,10,60,33,45,45,32,69,110,100,32,101,108,101,99,116,114,105,99,97,108,111,102,102,105,99,105,97,108,108,121,115,117,103,103,101,115,116,105,111,110,116,111,112,32,111,102,32,116,104,101,117,110,108,105,107,101,32,116,104,101,65,117,115,116,114,97,108,105,97,110,79,114,105,103,105,110,97,108,108,121,114,101,102,101,114,101,110,99,101,115,10,60,47,104,101,97,100,62,13,10,114,101,99,111,103,110,105,115,101,100,105,110,105,116,105,97,108,105,122,101,108,105,109,105,116,101,100,32,116,111,65,108,101,120,97,110,100,114,105,97,114,101,116,105,114,101,109,101,110,116,65,100,118,101,110,116,117,114,101,115,102,111,117,114,32,121,101,97,114,115,10,10,38,108,116,59,33,45,45,32,105,110,99,114,101,97,115,105,110,103,100,101,99,111,114,97,116,105,111,110,104,51,32,99,108,97,115,115,61,34,111,114,105,103,105,110,115,32,111,102,111,98,108,105,103,97,116,105,111,110,114,101,103,117,108,97,116,105,111,110,99,108,97,115,115,105,102,105,101,100,40,102,117,110,99,116,105,111,110,40,97,100,118,97,110,116,97,103,101,115,98,101,105,110,103,32,116,104,101,32,104,105,115,116,111,114,105,97,110,115,60,98,97,115,101,32,104,114,101,102,114,101,112,101,97,116,101,100,108,121,119,105,108,108,105,110,103,32,116,111,99,111,109,112,97,114,97,98,108,101,100,101,115,105,103,110,97,116,101,100,110,111,109,105,110,97,116,105,111,110,102,117,110,99,116,105,111,110,97,108,105,110,115,105,100,101,32,116,104,101,114,101,118,101,108,97,116,105,111,110,101,110,100,32,111,102,32,116,104,101,115,32,102,111,114,32,116,104,101,32,97,117,116,104,111,114,105,122,101,100,114,101,102,117,115,101,100,32,116,111,116,97,107,101,32,112,108,97,99,101,97,117,116,111,110,111,109,111,117,115,99,111,109,112,114,111,109,105,115,101,112,111,108,105,116,105,99,97,108,32,114,101,115,116,97,117,114,97,110,116,116,119,111,32,111,102,32,116,104,101,70,101,98,114,117,97,114,121,32,50,113,117,97,108,105,116,121,32,111,102,115,119,102,111,98,106,101,99,116,46,117,110,100,101,114,115,116,97,110,100,110,101,97,114,108,121,32,97,108,108,119,114,105,116,116,101,110,32,98,121,105,110,116,101,114,118,105,101,119,115,34,32,119,105,100,116,104,61,34,49,119,105,116,104,100,114,97,119,97,108,102,108,111,97,116,58,108,101,102,116,105,115,32,117,115,117,97,108,108,121,99,97,110,100,105,100,97,116,101,115,110,101,119,115,112,97,112,101,114,115,109,121,115,116,101,114,105,111,117,115,68,101,112,97,114,116,109,101,110,116,98,101,115,116,32,107,110,111,119,110,112,97,114,108,105,97,109,101,110,116,115,117,112,112,114,101,115,115,101,100,99,111,110,118,101,110,105,101,110,116,114,101,109,101,109,98,101,114,101,100,100,105,102,102,101,114,101,110,116,32,115,121,115,116,101,109,97,116,105,99,104,97,115,32,108,101,100,32,116,111,112,114,111,112,97,103,97,110,100,97,99,111,110,116,114,111,108,108,101,100,105,110,102,108,117,101,110,99,101,115,99,101,114,101,109,111,110,105,97,108,112,114,111,99,108,97,105,109,101,100,80,114,111,116,101,99,116,105,111,110,108,105,32,99,108,97,115,115,61,34,83,99,105,101,110,116,105,102,105,99,99,108,97,115,115,61,34,110,111,45,116,114,97,100,101,109,97,114,107,115,109,111,114,101,32,116,104,97,110,32,119,105,100,101,115,112,114,101,97,100,76,105,98,101,114,97,116,105,111,110,116,111,111,107,32,112,108,97,99,101,100,97,121,32,111,102,32,116,104,101,97,115,32,108,111,110,103,32,97,115,105,109,112,114,105,115,111,110,101,100,65,100,100,105,116,105,111,110,97,108,10,60,104,101,97,100,62,10,60,109,76,97,98,111,114,97,116,111,114,121,78,111,118,101,109,98,101,114,32,50,101,120,99,101,112,116,105,111,110,115,73,110,100,117,115,116,114,105,97,108,118,97,114,105,101,116,121,32,111,102,102,108,111,97,116,58,32,108,101,102,68,117,114,105,110,103,32,116,104,101,97,115,115,101,115,115,109,101,110,116,104,97,118,101,32,98,101,101,110,32,100,101,97,108,115,32,119,105,116,104,83,116,97,116,105,115,116,105,99,115,111,99,99,117,114,114,101,110,99,101,47,117,108,62,60,47,100,105,118,62,99,108,101,97,114,102,105,120,34,62,116,104,101,32,112,117,98,108,105,99,109,97,110,121,32,121,101,97,114,115,119,104,105,99,104,32,119,101,114,101,111,118,101,114,32,116,105,109,101,44,115,121,110,111,110,121,109,111,117,115,99,111,110,116,101,110,116,34,62,10,112,114,101,115,117,109,97,98,108,121,104,105,115,32,102,97,109,105,108,121,117,115,101,114,65,103,101,110,116,46,117,110,101,120,112,101,99,116,101,100,105,110,99,108,117,100,105,110,103,32,99,104,97,108,108,101,110,103,101,100,97,32,109,105,110,111,114,105,116,121,117,110,100,101,102,105,110,101,100,34,98,101,108,111,110,103,115,32,116,111,116,97,107,101,110,32,102,114,111,109,105,110,32,79,99,116,111,98,101,114,112,111,115,105,116,105,111,110,58,32,115,97,105,100,32,116,111,32,98,101,114,101,108,105,103,105,111,117,115,32,70,101,100,101,114,97,116,105,111,110,32,114,111,119,115,112,97,110,61,34,111,110,108,121,32,97,32,102,101,119,109,101,97,110,116,32,116,104,97,116,108,101,100,32,116,111,32,116,104,101,45,45,62,13,10,60,100,105,118,32,60,102,105,101,108,100,115,101,116,62,65,114,99,104,98,105,115,104,111,112,32,99,108,97,115,115,61,34,110,111,98,101,105,110,103,32,117,115,101,100,97,112,112,114,111,97,99,104,101,115,112,114,105,118,105,108,101,103,101,115,110,111,115,99,114,105,112,116,62,10,114,101,115,117,108,116,115,32,105,110,109,97,121,32,98,101,32,116,104,101,69,97,115,116,101,114,32,101,103,103,109,101,99,104,97,110,105,115,109,115,114,101,97,115,111,110,97,98,108,101,80,111,112,117,108,97,116,105,111,110,67,111,108,108,101,99,116,105,111,110,115,101,108,101,99,116,101,100,34,62,110,111,115,99,114,105,112,116,62,13,47,105,110,100,101,120,46,112,104,112,97,114,114,105,118,97,108,32,111,102,45,106,115,115,100,107,39,41,41,59,109,97,110,97,103,101,100,32,116,111,105,110,99,111,109,112,108,101,116,101,99,97,115,117,97,108,116,105,101,115,99,111,109,112,108,101,116,105,111,110,67,104,114,105,115,116,105,97,110,115,83,101,112,116,101,109,98,101,114,32,97,114,105,116,104,109,101,116,105,99,112,114,111,99,101,100,117,114,101,115,109,105,103,104,116,32,104,97,118,101,80,114,111,100,117,99,116,105,111,110,105,116,32,97,112,112,101,97,114,115,80,104,105,108,111,115,111,112,104,121,102,114,105,101,110,100,115,104,105,112,108,101,97,100,105,110,103,32,116,111,103,105,118,105,110,103,32,116,104,101,116,111,119,97,114,100,32,116,104,101,103,117,97,114,97,110,116,101,101,100,100,111,99,117,109,101,110,116,101,100,99,111,108,111,114,58,35,48,48,48,118,105,100,101,111,32,103,97,109,101,99,111,109,109,105,115,115,105,111,110,114,101,102,108,101,99,116,105,110,103,99,104,97,110,103,101,32,116,104,101,97,115,115,111,99,105,97,116,101,100,115,97,110,115,45,115,101,114,105,102,111,110,107,101,121,112,114,101,115,115,59,32,112,97,100,100,105,110,103,58,72,101,32,119,97,115,32,116,104,101,117,110,100,101,114,108,121,105,110,103,116,121,112,105,99,97,108,108,121,32,44,32,97,110,100,32,116,104,101,32,115,114,99,69,108,101,109,101,110,116,115,117,99,99,101,115,115,105,118,101,115,105,110,99,101,32,116,104,101,32,115,104,111,117,108,100,32,98,101,32,110,101,116,119,111,114,107,105,110,103,97,99,99,111,117,110,116,105,110,103,117,115,101,32,111,102,32,116,104,101,108,111,119,101,114,32,116,104,97,110,115,104,111,119,115,32,116,104,97,116,60,47,115,112,97,110,62,10,9,9,99,111,109,112,108,97,105,110,116,115,99,111,110,116,105,110,117,111,117,115,113,117,97,110,116,105,116,105,101,115,97,115,116,114,111,110,111,109,101,114,104,101,32,100,105,100,32,110,111,116,100,117,101,32,116,111,32,105,116,115,97,112,112,108,105,101,100,32,116,111,97,110,32,97,118,101,114,97,103,101,101,102,102,111,114,116,115,32,116,111,116,104,101,32,102,117,116,117,114,101,97,116,116,101,109,112,116,32,116,111,84,104,101,114,101,102,111,114,101,44,99,97,112,97,98,105,108,105,116,121,82,101,112,117,98,108,105,99,97,110,119,97,115,32,102,111,114,109,101,100,69,108,101,99,116,114,111,110,105,99,107,105,108,111,109,101,116,101,114,115,99,104,97,108,108,101,110,103,101,115,112,117,98,108,105,115,104,105,110,103,116,104,101,32,102,111,114,109,101,114,105,110,100,105,103,101,110,111,117,115,100,105,114,101,99,116,105,111,110,115,115,117,98,115,105,100,105,97,114,121,99,111,110,115,112,105,114,97,99,121,100,101,116,97,105,108,115,32,111,102,97,110,100,32,105,110,32,116,104,101,97,102,102,111,114,100,97,98,108,101,115,117,98,115,116,97,110,99,101,115,114,101,97,115,111,110,32,102,111,114,99,111,110,118,101,110,116,105,111,110,105,116,101,109,116,121,112,101,61,34,97,98,115,111,108,117,116,101,108,121,115,117,112,112,111,115,101,100,108,121,114,101,109,97,105,110,101,100,32,97,97,116,116,114,97,99,116,105,118,101,116,114,97,118,101,108,108,105,110,103,115,101,112,97,114,97,116,101,108,121,102,111,99,117,115,101,115,32,111,110,101,108,101,109,101,110,116,97,114,121,97,112,112,108,105,99,97,98,108,101,102,111,117,110,100,32,116,104,97,116,115,116,121,108,101,115,104,101,101,116,109,97,110,117,115,99,114,105,112,116,115,116,97,110,100,115,32,102,111,114,32,110,111,45,114,101,112,101,97,116,40,115,111,109,101,116,105,109,101,115,67,111,109,109,101,114,99,105,97,108,105,110,32,65,109,101,114,105,99,97,117,110,100,101,114,116,97,107,101,110,113,117,97,114,116,101,114,32,111,102,97,110,32,101,120,97,109,112,108,101,112,101,114,115,111,110,97,108,108,121,105,110,100,101,120,46,112,104,112,63,60,47,98,117,116,116,111,110,62,10,112,101,114,99,101,110,116,97,103,101,98,101,115,116,45,107,110,111,119,110,99,114,101,97,116,105,110,103,32,97,34,32,100,105,114,61,34,108,116,114,76,105,101,117,116,101,110,97,110,116,10,60,100,105,118,32,105,100,61,34,116,104,101,121,32,119,111,117,108,100,97,98,105,108,105,116,121,32,111,102,109,97,100,101,32,117,112,32,111,102,110,111,116,101,100,32,116,104,97,116,99,108,101,97,114,32,116,104,97,116,97,114,103,117,101,32,116,104,97,116,116,111,32,97,110,111,116,104,101,114,99,104,105,108,100,114,101,110,39,115,112,117,114,112,111,115,101,32,111,102,102,111,114,109,117,108,97,116,101,100,98,97,115,101,100,32,117,112,111,110,116,104,101,32,114,101,103,105,111,110,115,117,98,106,101,99,116,32,111,102,112,97,115,115,101,110,103,101,114,115,112,111,115,115,101,115,115,105,111,110,46,10,10,73,110,32,116,104,101,32,66,101,102,111,114,101,32,116,104,101,97,102,116,101,114,119,97,114,100,115,99,117,114,114,101,110,116,108,121,32,97,99,114,111,115,115,32,116,104,101,115,99,105,101,110,116,105,102,105,99,99,111,109,109,117,110,105,116,121,46,99,97,112,105,116,97,108,105,115,109,105,110,32,71,101,114,109,97,110,121,114,105,103,104,116,45,119,105,110,103,116,104,101,32,115,121,115,116,101,109,83,111,99,105,101,116,121,32,111,102,112,111,108,105,116,105,99,105,97,110,100,105,114,101,99,116,105,111,110,58,119,101,110,116,32,111,110,32,116,111,114,101,109,111,118,97,108,32,111,102,32,78,101,119,32,89,111,114,107,32,97,112,97,114,116,109,101,110,116,115,105,110,100,105,99,97,116,105,111,110,100,117,114,105,110,103,32,116,104,101,117,110,108,101,115,115,32,116,104,101,104,105,115,116,111,114,105,99,97,108,104,97,100,32,98,101,101,110,32,97,100,101,102,105,110,105,116,105,118,101,105,110,103,114,101,100,105,101,110,116,97,116,116,101,110,100,97,110,99,101,67,101,110,116,101,114,32,102,111,114,112,114,111,109,105,110,101,110,99,101,114,101,97,100,121,83,116,97,116,101,115,116,114,97,116,101,103,105,101,115,98,117,116,32,105,110,32,116,104,101,97,115,32,112,97,114,116,32,111,102,99,111,110,115,116,105,116,117,116,101,99,108,97,105,109,32,116,104,97,116,108,97,98,111,114,97,116,111,114,121,99,111,109,112,97,116,105,98,108,101,102,97,105,108,117,114,101,32,111,102,44,32,115,117,99,104,32,97,115,32,98,101,103,97,110,32,119,105,116,104,117,115,105,110,103,32,116,104,101,32,116,111,32,112,114,111,118,105,100,101,102,101,97,116,117,114,101,32,111,102,102,114,111,109,32,119,104,105,99,104,47,34,32,99,108,97,115,115,61,34,103,101,111,108,111,103,105,99,97,108,115,101,118,101,114,97,108,32,111,102,100,101,108,105,98,101,114,97,116,101,105,109,112,111,114,116,97,110,116,32,104,111,108,100,115,32,116,104,97,116,105,110,103,38,113,117,111,116,59,32,118,97,108,105,103,110,61,116,111,112,116,104,101,32,71,101,114,109,97,110,111,117,116,115,105,100,101,32,111,102,110,101,103,111,116,105,97,116,101,100,104,105,115,32,99,97,114,101,101,114,115,101,112,97,114,97,116,105,111,110,105,100,61,34,115,101,97,114,99,104,119,97,115,32,99,97,108,108,101,100,116,104,101,32,102,111,117,114,116,104,114,101,99,114,101,97,116,105,111,110,111,116,104,101,114,32,116,104,97,110,112,114,101,118,101,110,116,105,111,110,119,104,105,108,101,32,116,104,101,32,101,100,117,99,97,116,105,111,110,44,99,111,110,110,101,99,116,105,110,103,97,99,99,117,114,97,116,101,108,121,119,101,114,101,32,98,117,105,108,116,119,97,115,32,107,105,108,108,101,100,97,103,114,101,101,109,101,110,116,115,109,117,99,104,32,109,111,114,101,32,68,117,101,32,116,111,32,116,104,101,119,105,100,116,104,58,32,49,48,48,115,111,109,101,32,111,116,104,101,114,75,105,110,103,100,111,109,32,111,102,116,104,101,32,101,110,116,105,114,101,102,97,109,111,117,115,32,102,111,114,116,111,32,99,111,110,110,101,99,116,111,98,106,101,99,116,105,118,101,115,116,104,101,32,70,114,101,110,99,104,112,101,111,112,108,101,32,97,110,100,102,101,97,116,117,114,101,100,34,62,105,115,32,115,97,105,100,32,116,111,115,116,114,117,99,116,117,114,97,108,114,101,102,101,114,101,110,100,117,109,109,111,115,116,32,111,102,116,101,110,97,32,115,101,112,97,114,97,116,101,45,62,10,60,100,105,118,32,105,100,32,79,102,102,105,99,105,97,108,32,119,111,114,108,100,119,105,100,101,46,97,114,105,97,45,108,97,98,101,108,116,104,101,32,112,108,97,110,101,116,97,110,100,32,105,116,32,119,97,115,100,34,32,118,97,108,117,101,61,34,108,111,111,107,105,110,103,32,97,116,98,101,110,101,102,105,99,105,97,108,97,114,101,32,105,110,32,116,104,101,109,111,110,105,116,111,114,105,110,103,114,101,112,111,114,116,101,100,108,121,116,104,101,32,109,111,100,101,114,110,119,111,114,107,105,110,103,32,111,110,97,108,108,111,119,101,100,32,116,111,119,104,101,114,101,32,116,104,101,32,105,110,110,111,118,97,116,105,118,101,60,47,97,62,60,47,100,105,118,62,115,111,117,110,100,116,114,97,99,107,115,101,97,114,99,104,70,111,114,109,116,101,110,100,32,116,111,32,98,101,105,110,112,117,116,32,105,100,61,34,111,112,101,110,105,110,103,32,111,102,114,101,115,116,114,105,99,116,101,100,97,100,111,112,116,101,100,32,98,121,97,100,100,114,101,115,115,105,110,103,116,104,101,111,108,111,103,105,97,110,109,101,116,104,111,100,115,32,111,102,118,97,114,105,97,110,116,32,111,102,67,104,114,105,115,116,105,97,110,32,118,101,114,121,32,108,97,114,103,101,97,117,116,111,109,111,116,105,118,101,98,121,32,102,97,114,32,116,104,101,114,97,110,103,101,32,102,114,111,109,112,117,114,115,117,105,116,32,111,102,102,111,108,108,111,119,32,116,104,101,98,114,111,117,103,104,116,32,116,111,105,110,32,69,110,103,108,97,110,100,97,103,114,101,101,32,116,104,97,116,97,99,99,117,115,101,100,32,111,102,99,111,109,101,115,32,102,114,111,109,112,114,101,118,101,110,116,105,110,103,100,105,118,32,115,116,121,108,101,61,104,105,115,32,111,114,32,104,101,114,116,114,101,109,101,110,100,111,117,115,102,114,101,101,100,111,109,32,111,102,99,111,110,99,101,114,110,105,110,103,48,32,49,101,109,32,49,101,109,59,66,97,115,107,101,116,98,97,108,108,47,115,116,121,108,101,46,99,115,115,97,110,32,101,97,114,108,105,101,114,101,118,101,110,32,97,102,116,101,114,47,34,32,116,105,116,108,101,61,34,46,99,111,109,47,105,110,100,101,120,116,97,107,105,110,103,32,116,104,101,112,105,116,116,115,98,117,114,103,104,99,111,110,116,101,110,116,34,62,13,60,115,99,114,105,112,116,62,40,102,116,117,114,110,101,100,32,111,117,116,104,97,118,105,110,103,32,116,104,101,60,47,115,112,97,110,62,13,10,32,111,99,99,97,115,105,111,110,97,108,98,101,99,97,117,115,101,32,105,116,115,116,97,114,116,101,100,32,116,111,112,104,121,115,105,99,97,108,108,121,62,60,47,100,105,118,62,10,32,32,99,114,101,97,116,101,100,32,98,121,67,117,114,114,101,110,116,108,121,44,32,98,103,99,111,108,111,114,61,34,116,97,98,105,110,100,101,120,61,34,100,105,115,97,115,116,114,111,117,115,65,110,97,108,121,116,105,99,115,32,97,108,115,111,32,104,97,115,32,97,62,60,100,105,118,32,105,100,61,34,60,47,115,116,121,108,101,62,10,60,99,97,108,108,101,100,32,102,111,114,115,105,110,103,101,114,32,97,110,100,46,115,114,99,32,61,32,34,47,47,118,105,111,108,97,116,105,111,110,115,116,104,105,115,32,112,111,105,110,116,99,111,110,115,116,97,110,116,108,121,105,115,32,108,111,99,97,116,101,100,114,101,99,111,114,100,105,110,103,115,100,32,102,114,111,109,32,116,104,101,110,101,100,101,114,108,97,110,100,115,112,111,114,116,117,103,117,195,170,115,215,162,215,145,215,168,215,153,215,170,217,129,216,167,216,177,216,179,219,140,100,101,115,97,114,114,111,108,108,111,99,111,109,101,110,116,97,114,105,111,101,100,117,99,97,99,105,195,179,110,115,101,112,116,105,101,109,98,114,101,114,101,103,105,115,116,114,97,100,111,100,105,114,101,99,99,105,195,179,110,117,98,105,99,97,99,105,195,179,110,112,117,98,108,105,99,105,100,97,100,114,101,115,112,117,101,115,116,97,115,114,101,115,117,108,116,97,100,111,115,105,109,112,111,114,116,97,110,116,101,114,101,115,101,114,118,97,100,111,115,97,114,116,195,173,99,117,108,111,115,100,105,102,101,114,101,110,116,101,115,115,105,103,117,105,101,110,116,101,115,114,101,112,195,186,98,108,105,99,97,115,105,116,117,97,99,105,195,179,110,109,105,110,105,115,116,101,114,105,111,112,114,105,118,97,99,105,100,97,100,100,105,114,101,99,116,111,114,105,111,102,111,114,109,97,99,105,195,179,110,112,111,98,108,97,99,105,195,179,110,112,114,101,115,105,100,101,110,116,101,99,111,110,116,101,110,105,100,111,115,97,99,99,101,115,111,114,105,111,115,116,101,99,104,110,111,114,97,116,105,112,101,114,115,111,110,97,108,101,115,99,97,116,101,103,111,114,195,173,97,101,115,112,101,99,105,97,108,101,115,100,105,115,112,111,110,105,98,108,101,97,99,116,117,97,108,105,100,97,100,114,101,102,101,114,101,110,99,105,97,118,97,108,108,97,100,111,108,105,100,98,105,98,108,105,111,116,101,99,97,114,101,108,97,99,105,111,110,101,115,99,97,108,101,110,100,97,114,105,111,112,111,108,195,173,116,105,99,97,115,97,110,116,101,114,105,111,114,101,115,100,111,99,117,109,101,110,116,111,115,110,97,116,117,114,97,108,101,122,97,109,97,116,101,114,105,97,108,101,115,100,105,102,101,114,101,110,99,105,97,101,99,111,110,195,179,109,105,99,97,116,114,97,110,115,112,111,114,116,101,114,111,100,114,195,173,103,117,101,122,112,97,114,116,105,99,105,112,97,114,101,110,99,117,101,110,116,114,97,110,100,105,115,99,117,115,105,195,179,110,101,115,116,114,117,99,116,117,114,97,102,117,110,100,97,99,105,195,179,110,102,114,101,99,117,101,110,116,101,115,112,101,114,109,97,110,101,110,116,101,116,111,116,97,108,109,101,110,116,101,208,188,208,190,208,182,208,189,208,190,208,177,209,131,208,180,208,181,209,130,208,188,208,190,208,182,208,181,209,130,208,178,209,128,208,181,208,188,209,143,209,130,208,176,208,186,208,182,208,181,209,135,209,130,208,190,208,177,209,139,208,177,208,190,208,187,208,181,208,181,208,190,209,135,208,181,208,189,209,140,209,141,209,130,208,190,208,179,208,190,208,186,208,190,208,179,208,180,208,176,208,191,208,190,209,129,208,187,208,181,208,178,209,129,208,181,208,179,208,190,209,129,208,176,208,185,209,130,208,181,209,135,208,181,209,128,208,181,208,183,208,188,208,190,208,179,209,131,209,130,209,129,208,176,208,185,209,130,208,176,208,182,208,184,208,183,208,189,208,184,208,188,208,181,208,182,208,180,209,131,208,177,209,131,208,180,209,131,209,130,208,159,208,190,208,184,209,129,208,186,208,183,208,180,208,181,209,129,209,140,208,178,208,184,208,180,208,181,208,190,209,129,208,178,209,143,208,183,208,184,208,189,209,131,208,182,208,189,208,190,209,129,208,178,208,190,208,181,208,185,208,187,209,142,208,180,208,181,208,185,208,191,208,190,209,128,208,189,208,190,208,188,208,189,208,190,208,179,208,190,208,180,208,181,209,130,208,181,208,185,209,129,208,178,208,190,208,184,209,133,208,191,209,128,208,176,208,178,208,176,209,130,208,176,208,186,208,190,208,185,208,188,208,181,209,129,209,130,208,190,208,184,208,188,208,181,208,181,209,130,208,182,208,184,208,183,208,189,209,140,208,190,208,180,208,189,208,190,208,185,208,187,209,131,209,135,209,136,208,181,208,191,208,181,209,128,208,181,208,180,209,135,208,176,209,129,209,130,208,184,209,135,208,176,209,129,209,130,209,140,209,128,208,176,208,177,208,190,209,130,208,189,208,190,208,178,209,139,209,133,208,191,209,128,208,176,208,178,208,190,209,129,208,190,208,177,208,190,208,185,208,191,208,190,209,130,208,190,208,188,208,188,208,181,208,189,208,181,208,181,209,135,208,184,209,129,208,187,208,181,208,189,208,190,208,178,209,139,208,181,209,131,209,129,208,187,209,131,208,179,208,190,208,186,208,190,208,187,208,190,208,189,208,176,208,183,208,176,208,180,209,130,208,176,208,186,208,190,208,181,209,130,208,190,208,179,208,180,208,176,208,191,208,190,209,135,209,130,208,184,208,159,208,190,209,129,208,187,208,181,209,130,208,176,208,186,208,184,208,181,208,189,208,190,208,178,209,139,208,185,209,129,209,130,208,190,208,184,209,130,209,130,208,176,208,186,208,184,209,133,209,129,209,128,208,176,208,183,209,131,208,161,208,176,208,189,208,186,209,130,209,132,208,190,209,128,209,131,208,188,208,154,208,190,208,179,208,180,208,176,208,186,208,189,208,184,208,179,208,184,209,129,208,187,208,190,208,178,208,176,208,189,208,176,209,136,208,181,208,185,208,189,208,176,208,185,209,130,208,184,209,129,208,178,208,190,208,184,208,188,209,129,208,178,209,143,208,183,209,140,208,187,209,142,208,177,208,190,208,185,209,135,208,176,209,129,209,130,208,190,209,129,209,128,208,181,208,180,208,184,208,154,209,128,208,190,208,188,208,181,208,164,208,190,209,128,209,131,208,188,209,128,209,139,208,189,208,186,208,181,209,129,209,130,208,176,208,187,208,184,208,191,208,190,208,184,209,129,208,186,209,130,209,139,209,129,209,143,209,135,208,188,208,181,209,129,209,143,209,134,209,134,208,181,208,189,209,130,209,128,209,130,209,128,209,131,208,180,208,176,209,129,208,176,208,188,209,139,209,133,209,128,209,139,208,189,208,186,208,176,208,157,208,190,208,178,209,139,208,185,209,135,208,176,209,129,208,190,208,178,208,188,208,181,209,129,209,130,208,176,209,132,208,184,208,187,209,140,208,188,208,188,208,176,209,128,209,130,208,176,209,129,209,130,209,128,208,176,208,189,208,188,208,181,209,129,209,130,208,181,209,130,208,181,208,186,209,129,209,130,208,189,208,176,209,136,208,184,209,133,208,188,208,184,208,189,209,131,209,130,208,184,208,188,208,181,208,189,208,184,208,184,208,188,208,181,209,142,209,130,208,189,208,190,208,188,208,181,209,128,208,179,208,190,209,128,208,190,208,180,209,129,208,176,208,188,208,190,208,188,209,141,209,130,208,190,208,188,209,131,208,186,208,190,208,189,209,134,208,181,209,129,208,178,208,190,208,181,208,188,208,186,208,176,208,186,208,190,208,185,208,144,209,128,209,133,208,184,208,178,217,133,217,134,216,170,216,175,217,137,216,165,216,177,216,179,216,167,217,132,216,177,216,179,216,167,217,132,216,169,216,167,217,132,216,185,216,167,217,133,217,131,216,170,216,168,217,135,216,167,216,168,216,177,216,167,217,133,216,172,216,167,217,132,217,138,217,136,217,133,216,167,217,132,216,181,217,136,216,177,216,172,216,175,217,138,216,175,216,169,216,167,217,132,216,185,216,182,217,136,216,165,216,182,216,167,217,129,216,169,216,167,217,132,217,130,216,179,217,133,216,167,217,132,216,185,216,167,216,168,216,170,216,173,217,133,217,138,217,132,217,133,217,132,217,129,216,167,216,170,217,133,217,132,216,170,217,130,217,137,216,170,216,185,216,175,217,138,217,132,216,167,217,132,216,180,216,185,216,177,216,163,216,174,216,168,216,167,216,177,216,170,216,183,217,136,217,138,216,177,216,185,217,132,217,138,217,131,217,133,216,165,216,177,217,129,216,167,217,130,216,183,217,132,216,168,216,167,216,170,216,167,217,132,217,132,216,186,216,169,216,170,216,177,216,170,217,138,216,168,216,167,217,132,217,134,216,167,216,179,216,167,217,132,216,180,217,138,216,174,217,133,217,134,216,170,216,175,217,138,216,167,217,132,216,185,216,177,216,168,216,167,217,132,217,130,216,181,216,181,216,167,217,129,217,132,216,167,217,133,216,185,217,132,217,138,217,135,216,167,216,170,216,173,216,175,217,138,216,171,216,167,217,132,217,132,217,135,217,133,216,167,217,132,216,185,217,133,217,132,217,133,217,131,216,170,216,168,216,169,217,138,217,133,217,131,217,134,217,131,216,167,217,132,216,183,217,129,217,132,217,129,217,138,216,175,217,138,217,136,216,165,216,175,216,167,216,177,216,169,216,170,216,167,216,177,217,138,216,174,216,167,217,132,216,181,216,173,216,169,216,170,216,179,216,172,217,138,217,132,216,167,217,132,217,136,217,130,216,170,216,185,217,134,216,175,217,133,216,167,217,133,216,175,217,138,217,134,216,169,216,170,216,181,217,133,217,138,217,133,216,163,216,177,216,180,217,138,217,129,216,167,217,132,216,176,217,138,217,134,216,185,216,177,216,168,217,138,216,169,216,168,217,136,216,167,216,168,216,169,216,163,217,132,216,185,216,167,216,168,216,167,217,132,216,179,217,129,216,177,217,133,216,180,216,167,217,131,217,132,216,170,216,185,216,167,217,132,217,137,216,167,217,132,216,163,217,136,217,132,216,167,217,132,216,179,217,134,216,169,216,172,216,167,217,133,216,185,216,169,216,167,217,132,216,181,216,173,217,129,216,167,217,132,216,175,217,138,217,134,217,131,217,132,217,133,216,167,216,170,216,167,217,132,216,174,216,167,216,181,216,167,217,132,217,133,217,132,217,129,216,163,216,185,216,182,216,167,216,161,217,131,216,170,216,167,216,168,216,169,216,167,217,132,216,174,217,138,216,177,216,177,216,179,216,167,216,166,217,132,216,167,217,132,217,130,217,132,216,168,216,167,217,132,216,163,216,175,216,168,217,133,217,130,216,167,216,183,216,185,217,133,216,177,216,167,216,179,217,132,217,133,217,134,216,183,217,130,216,169,216,167,217,132,217,131,216,170,216,168,216,167,217,132,216,177,216,172,217,132,216,167,216,180,216,170,216,177,217,131,216,167,217,132,217,130,216,175,217,133,217,138,216,185,216,183,217,138,217,131,115,66,121,84,97,103,78,97,109,101,40,46,106,112,103,34,32,97,108,116,61,34,49,112,120,32,115,111,108,105,100,32,35,46,103,105,102,34,32,97,108,116,61,34,116,114,97,110,115,112,97,114,101,110,116,105,110,102,111,114,109,97,116,105,111,110,97,112,112,108,105,99,97,116,105,111,110,34,32,111,110,99,108,105,99,107,61,34,101,115,116,97,98,108,105,115,104,101,100,97,100,118,101,114,116,105,115,105,110,103,46,112,110,103,34,32,97,108,116,61,34,101,110,118,105,114,111,110,109,101,110,116,112,101,114,102,111,114,109,97,110,99,101,97,112,112,114,111,112,114,105,97,116,101,38,97,109,112,59,109,100,97,115,104,59,105,109,109,101,100,105,97,116,101,108,121,60,47,115,116,114,111,110,103,62,60,47,114,97,116,104,101,114,32,116,104,97,110,116,101,109,112,101,114,97,116,117,114,101,100,101,118,101,108,111,112,109,101,110,116,99,111,109,112,101,116,105,116,105,111,110,112,108,97,99,101,104,111,108,100,101,114,118,105,115,105,98,105,108,105,116,121,58,99,111,112,121,114,105,103,104,116,34,62,48,34,32,104,101,105,103,104,116,61,34,101,118,101,110,32,116,104,111,117,103,104,114,101,112,108,97,99,101,109,101,110,116,100,101,115,116,105,110,97,116,105,111,110,67,111,114,112,111,114,97,116,105,111,110,60,117,108,32,99,108,97,115,115,61,34,65,115,115,111,99,105,97,116,105,111,110,105,110,100,105,118,105,100,117,97,108,115,112,101,114,115,112,101,99,116,105,118,101,115,101,116,84,105,109,101,111,117,116,40,117,114,108,40,104,116,116,112,58,47,47,109,97,116,104,101,109,97,116,105,99,115,109,97,114,103,105,110,45,116,111,112,58,101,118,101,110,116,117,97,108,108,121,32,100,101,115,99,114,105,112,116,105,111,110,41,32,110,111,45,114,101,112,101,97,116,99,111,108,108,101,99,116,105,111,110,115,46,74,80,71,124,116,104,117,109,98,124,112,97,114,116,105,99,105,112,97,116,101,47,104,101,97,100,62,60,98,111,100,121,102,108,111,97,116,58,108,101,102,116,59,60,108,105,32,99,108,97,115,115,61,34,104,117,110,100,114,101,100,115,32,111,102,10,10,72,111,119,101,118,101,114,44,32,99,111,109,112,111,115,105,116,105,111,110,99,108,101,97,114,58,98,111,116,104,59,99,111,111,112,101,114,97,116,105,111,110,119,105,116,104,105,110,32,116,104,101,32,108,97,98,101,108,32,102,111,114,61,34,98,111,114,100,101,114,45,116,111,112,58,78,101,119,32,90,101,97,108,97,110,100,114,101,99,111,109,109,101,110,100,101,100,112,104,111,116,111,103,114,97,112,104,121,105,110,116,101,114,101,115,116,105,110,103,38,108,116,59,115,117,112,38,103,116,59,99,111,110,116,114,111,118,101,114,115,121,78,101,116,104,101,114,108,97,110,100,115,97,108,116,101,114,110,97,116,105,118,101,109,97,120,108,101,110,103,116,104,61,34,115,119,105,116,122,101,114,108,97,110,100,68,101,118,101,108,111,112,109,101,110,116,101,115,115,101,110,116,105,97,108,108,121,10,10,65,108,116,104,111,117,103,104,32,60,47,116,101,120,116,97,114,101,97,62,116,104,117,110,100,101,114,98,105,114,100,114,101,112,114,101,115,101,110,116,101,100,38,97,109,112,59,110,100,97,115,104,59,115,112,101,99,117,108,97,116,105,111,110,99,111,109,109,117,110,105,116,105,101,115,108,101,103,105,115,108,97,116,105,111,110,101,108,101,99,116,114,111,110,105,99,115,10,9,60,100,105,118,32,105,100,61,34,105,108,108,117,115,116,114,97,116,101,100,101,110,103,105,110,101,101,114,105,110,103,116,101,114,114,105,116,111,114,105,101,115,97,117,116,104,111,114,105,116,105,101,115,100,105,115,116,114,105,98,117,116,101,100,54,34,32,104,101,105,103,104,116,61,34,115,97,110,115,45,115,101,114,105,102,59,99,97,112,97,98,108,101,32,111,102,32,100,105,115,97,112,112,101,97,114,101,100,105,110,116,101,114,97,99,116,105,118,101,108,111,111,107,105,110,103,32,102,111,114,105,116,32,119,111,117,108,100,32,98,101,65,102,103,104,97,110,105,115,116,97,110,119,97,115,32,99,114,101,97,116,101,100,77,97,116,104,46,102,108,111,111,114,40,115,117,114,114,111,117,110,100,105,110,103,99,97,110,32,97,108,115,111,32,98,101,111,98,115,101,114,118,97,116,105,111,110,109,97,105,110,116,101,110,97,110,99,101,101,110,99,111,117,110,116,101,114,101,100,60,104,50,32,99,108,97,115,115,61,34,109,111,114,101,32,114,101,99,101,110,116,105,116,32,104,97,115,32,98,101,101,110,105,110,118,97,115,105,111,110,32,111,102,41,46,103,101,116,84,105,109,101,40,41,102,117,110,100,97,109,101,110,116,97,108,68,101,115,112,105,116,101,32,116,104,101,34,62,60,100,105,118,32,105,100,61,34,105,110,115,112,105,114,97,116,105,111,110,101,120,97,109,105,110,97,116,105,111,110,112,114,101,112,97,114,97,116,105,111,110,101,120,112,108,97,110,97,116,105,111,110,60,105,110,112,117,116,32,105,100,61,34,60,47,97,62,60,47,115,112,97,110,62,118,101,114,115,105,111,110,115,32,111,102,105,110,115,116,114,117,109,101,110,116,115,98,101,102,111,114,101,32,116,104,101,32,32,61,32,39,104,116,116,112,58,47,47,68,101,115,99,114,105,112,116,105,111,110,114,101,108,97,116,105,118,101,108,121,32,46,115,117,98,115,116,114,105,110,103,40,101,97,99,104,32,111,102,32,116,104,101,101,120,112,101,114,105,109,101,110,116,115,105,110,102,108,117,101,110,116,105,97,108,105,110,116,101,103,114,97,116,105,111,110,109,97,110,121,32,112,101,111,112,108,101,100,117,101,32,116,111,32,116,104,101,32,99,111,109,98,105,110,97,116,105,111,110,100,111,32,110,111,116,32,104,97,118,101,77,105,100,100,108,101,32,69,97,115,116,60,110,111,115,99,114,105,112,116,62,60,99,111,112,121,114,105,103,104,116,34,32,112,101,114,104,97,112,115,32,116,104,101,105,110,115,116,105,116,117,116,105,111,110,105,110,32,68,101,99,101,109,98,101,114,97,114,114,97,110,103,101,109,101,110,116,109,111,115,116,32,102,97,109,111,117,115,112,101,114,115,111,110,97,108,105,116,121,99,114,101,97,116,105,111,110,32,111,102,108,105,109,105,116,97,116,105,111,110,115,101,120,99,108,117,115,105,118,101,108,121,115,111,118,101,114,101,105,103,110,116,121,45,99,111,110,116,101,110,116,34,62,10,60,116,100,32,99,108,97,115,115,61,34,117,110,100,101,114,103,114,111,117,110,100,112,97,114,97,108,108,101,108,32,116,111,100,111,99,116,114,105,110,101,32,111,102,111,99,99,117,112,105,101,100,32,98,121,116,101,114,109,105,110,111,108,111,103,121,82,101,110,97,105,115,115,97,110,99,101,97,32,110,117,109,98,101,114,32,111,102,115,117,112,112,111,114,116,32,102,111,114,101,120,112,108,111,114,97,116,105,111,110,114,101,99,111,103,110,105,116,105,111,110,112,114,101,100,101,99,101,115,115,111,114,60,105,109,103,32,115,114,99,61,34,47,60,104,49,32,99,108,97,115,115,61,34,112,117,98,108,105,99,97,116,105,111,110,109,97,121,32,97,108,115,111,32,98,101,115,112,101,99,105,97,108,105,122,101,100,60,47,102,105,101,108,100,115,101,116,62,112,114,111,103,114,101,115,115,105,118,101,109,105,108,108,105,111,110,115,32,111,102,115,116,97,116,101,115,32,116,104,97,116,101,110,102,111,114,99,101,109,101,110,116,97,114,111,117,110,100,32,116,104,101,32,111,110,101,32,97,110,111,116,104,101,114,46,112,97,114,101,110,116,78,111,100,101,97,103,114,105,99,117,108,116,117,114,101,65,108,116,101,114,110,97,116,105,118,101,114,101,115,101,97,114,99,104,101,114,115,116,111,119,97,114,100,115,32,116,104,101,77,111,115,116,32,111,102,32,116,104,101,109,97,110,121,32,111,116,104,101,114,32,40,101,115,112,101,99,105,97,108,108,121,60,116,100,32,119,105,100,116,104,61,34,59,119,105,100,116,104,58,49,48,48,37,105,110,100,101,112,101,110,100,101,110,116,60,104,51,32,99,108,97,115,115,61,34,32,111,110,99,104,97,110,103,101,61,34,41,46,97,100,100,67,108,97,115,115,40,105,110,116,101,114,97,99,116,105,111,110,79,110,101,32,111,102,32,116,104,101,32,100,97,117,103,104,116,101,114,32,111,102,97,99,99,101,115,115,111,114,105,101,115,98,114,97,110,99,104,101,115,32,111,102,13,10,60,100,105,118,32,105,100,61,34,116,104,101,32,108,97,114,103,101,115,116,100,101,99,108,97,114,97,116,105,111,110,114,101,103,117,108,97,116,105,111,110,115,73,110,102,111,114,109,97,116,105,111,110,116,114,97,110,115,108,97,116,105,111,110,100,111,99,117,109,101,110,116,97,114,121,105,110,32,111,114,100,101,114,32,116,111,34,62,10,60,104,101,97,100,62,10,60,34,32,104,101,105,103,104,116,61,34,49,97,99,114,111,115,115,32,116,104,101,32,111,114,105,101,110,116,97,116,105,111,110,41,59,60,47,115,99,114,105,112,116,62,105,109,112,108,101,109,101,110,116,101,100,99,97,110,32,98,101,32,115,101,101,110,116,104,101,114,101,32,119,97,115,32,97,100,101,109,111,110,115,116,114,97,116,101,99,111,110,116,97,105,110,101,114,34,62,99,111,110,110,101,99,116,105,111,110,115,116,104,101,32,66,114,105,116,105,115,104,119,97,115,32,119,114,105,116,116,101,110,33,105,109,112,111,114,116,97,110,116,59,112,120,59,32,109,97,114,103,105,110,45,102,111,108,108,111,119,101,100,32,98,121,97,98,105,108,105,116,121,32,116,111,32,99,111,109,112,108,105,99,97,116,101,100,100,117,114,105,110,103,32,116,104,101,32,105,109,109,105,103,114,97,116,105,111,110,97,108,115,111,32,99,97,108,108,101,100,60,104,52,32,99,108,97,115,115,61,34,100,105,115,116,105,110,99,116,105,111,110,114,101,112,108,97,99,101,100,32,98,121,103,111,118,101,114,110,109,101,110,116,115,108,111,99,97,116,105,111,110,32,111,102,105,110,32,78,111,118,101,109,98,101,114,119,104,101,116,104,101,114,32,116,104,101,60,47,112,62,10,60,47,100,105,118,62,97,99,113,117,105,115,105,116,105,111,110,99,97,108,108,101,100,32,116,104,101,32,112,101,114,115,101,99,117,116,105,111,110,100,101,115,105,103,110,97,116,105,111,110,123,102,111,110,116,45,115,105,122,101,58,97,112,112,101,97,114,101,100,32,105,110,105,110,118,101,115,116,105,103,97,116,101,101,120,112,101,114,105,101,110,99,101,100,109,111,115,116,32,108,105,107,101,108,121,119,105,100,101,108,121,32,117,115,101,100,100,105,115,99,117,115,115,105,111,110,115,112,114,101,115,101,110,99,101,32,111,102,32,40,100,111,99,117,109,101,110,116,46,101,120,116,101,110,115,105,118,101,108,121,73,116,32,104,97,115,32,98,101,101,110,105,116,32,100,111,101,115,32,110,111,116,99,111,110,116,114,97,114,121,32,116,111,105,110,104,97,98,105,116,97,110,116,115,105,109,112,114,111,118,101,109,101,110,116,115,99,104,111,108,97,114,115,104,105,112,99,111,110,115,117,109,112,116,105,111,110,105,110,115,116,114,117,99,116,105,111,110,102,111,114,32,101,120,97,109,112,108,101,111,110,101,32,111,114,32,109,111,114,101,112,120,59,32,112,97,100,100,105,110,103,116,104,101,32,99,117,114,114,101,110,116,97,32,115,101,114,105,101,115,32,111,102,97,114,101,32,117,115,117,97,108,108,121,114,111,108,101,32,105,110,32,116,104,101,112,114,101,118,105,111,117,115,108,121,32,100,101,114,105,118,97,116,105,118,101,115,101,118,105,100,101,110,99,101,32,111,102,101,120,112,101,114,105,101,110,99,101,115,99,111,108,111,114,115,99,104,101,109,101,115,116,97,116,101,100,32,116,104,97,116,99,101,114,116,105,102,105,99,97,116,101,60,47,97,62,60,47,100,105,118,62,10,32,115,101,108,101,99,116,101,100,61,34,104,105,103,104,32,115,99,104,111,111,108,114,101,115,112,111,110,115,101,32,116,111,99,111,109,102,111,114,116,97,98,108,101,97,100,111,112,116,105,111,110,32,111,102,116,104,114,101,101,32,121,101,97,114,115,116,104,101,32,99,111,117,110,116,114,121,105,110,32,70,101,98,114,117,97,114,121,115,111,32,116,104,97,116,32,116,104,101,112,101,111,112,108,101,32,119,104,111,32,112,114,111,118,105,100,101,100,32,98,121,60,112,97,114,97,109,32,110,97,109,101,97,102,102,101,99,116,101,100,32,98,121,105,110,32,116,101,114,109,115,32,111,102,97,112,112,111,105,110,116,109,101,110,116,73,83,79,45,56,56,53,57,45,49,34,119,97,115,32,98,111,114,110,32,105,110,104,105,115,116,111,114,105,99,97,108,32,114,101,103,97,114,100,101,100,32,97,115,109,101,97,115,117,114,101,109,101,110,116,105,115,32,98,97,115,101,100,32,111,110,32,97,110,100,32,111,116,104,101,114,32,58,32,102,117,110,99,116,105,111,110,40,115,105,103,110,105,102,105,99,97,110,116,99,101,108,101,98,114,97,116,105,111,110,116,114,97,110,115,109,105,116,116,101,100,47,106,115,47,106,113,117,101,114,121,46,105,115,32,107,110,111,119,110,32,97,115,116,104,101,111,114,101,116,105,99,97,108,32,116,97,98,105,110,100,101,120,61,34,105,116,32,99,111,117,108,100,32,98,101,60,110,111,115,99,114,105,112,116,62,10,104,97,118,105,110,103,32,98,101,101,110,13,10,60,104,101,97,100,62,13,10,60,32,38,113,117,111,116,59,84,104,101,32,99,111,109,112,105,108,97,116,105,111,110,104,101,32,104,97,100,32,98,101,101,110,112,114,111,100,117,99,101,100,32,98,121,112,104,105,108,111,115,111,112,104,101,114,99,111,110,115,116,114,117,99,116,101,100,105,110,116,101,110,100,101,100,32,116,111,97,109,111,110,103,32,111,116,104,101,114,99,111,109,112,97,114,101,100,32,116,111,116,111,32,115,97,121,32,116,104,97,116,69,110,103,105,110,101,101,114,105,110,103,97,32,100,105,102,102,101,114,101,110,116,114,101,102,101,114,114,101,100,32,116,111,100,105,102,102,101,114,101,110,99,101,115,98,101,108,105,101,102,32,116,104,97,116,112,104,111,116,111,103,114,97,112,104,115,105,100,101,110,116,105,102,121,105,110,103,72,105,115,116,111,114,121,32,111,102,32,82,101,112,117,98,108,105,99,32,111,102,110,101,99,101,115,115,97,114,105,108,121,112,114,111,98,97,98,105,108,105,116,121,116,101,99,104,110,105,99,97,108,108,121,108,101,97,118,105,110,103,32,116,104,101,115,112,101,99,116,97,99,117,108,97,114,102,114,97,99,116,105,111,110,32,111,102,101,108,101,99,116,114,105,99,105,116,121,104,101,97,100,32,111,102,32,116,104,101,114,101,115,116,97,117,114,97,110,116,115,112,97,114,116,110,101,114,115,104,105,112,101,109,112,104,97,115,105,115,32,111,110,109,111,115,116,32,114,101,99,101,110,116,115,104,97,114,101,32,119,105,116,104,32,115,97,121,105,110,103,32,116,104,97,116,102,105,108,108,101,100,32,119,105,116,104,100,101,115,105,103,110,101,100,32,116,111,105,116,32,105,115,32,111,102,116,101,110,34,62,60,47,105,102,114,97,109,101,62,97,115,32,102,111,108,108,111,119,115,58,109,101,114,103,101,100,32,119,105,116,104,116,104,114,111,117,103,104,32,116,104,101,99,111,109,109,101,114,99,105,97,108,32,112,111,105,110,116,101,100,32,111,117,116,111,112,112,111,114,116,117,110,105,116,121,118,105,101,119,32,111,102,32,116,104,101,114,101,113,117,105,114,101,109,101,110,116,100,105,118,105,115,105,111,110,32,111,102,112,114,111,103,114,97,109,109,105,110,103,104,101,32,114,101,99,101,105,118,101,100,115,101,116,73,110,116,101,114,118,97,108,34,62,60,47,115,112,97,110,62,60,47,105,110,32,78,101,119,32,89,111,114,107,97,100,100,105,116,105,111,110,97,108,32,99,111,109,112,114,101,115,115,105,111,110,10,10,60,100,105,118,32,105,100,61,34,105,110,99,111,114,112,111,114,97,116,101,59,60,47,115,99,114,105,112,116,62,60,97,116,116,97,99,104,69,118,101,110,116,98,101,99,97,109,101,32,116,104,101,32,34,32,116,97,114,103,101,116,61,34,95,99,97,114,114,105,101,100,32,111,117,116,83,111,109,101,32,111,102,32,116,104,101,115,99,105,101,110,99,101,32,97,110,100,116,104,101,32,116,105,109,101,32,111,102,67,111,110,116,97,105,110,101,114,34,62,109,97,105,110,116,97,105,110,105,110,103,67,104,114,105,115,116,111,112,104,101,114,77,117,99,104,32,111,102,32,116,104,101,119,114,105,116,105,110,103,115,32,111,102,34,32,104,101,105,103,104,116,61,34,50,115,105,122,101,32,111,102,32,116,104,101,118,101,114,115,105,111,110,32,111,102,32,109,105,120,116,117,114,101,32,111,102,32,98,101,116,119,101,101,110,32,116,104,101,69,120,97,109,112,108,101,115,32,111,102,101,100,117,99,97,116,105,111,110,97,108,99,111,109,112,101,116,105,116,105,118,101,32,111,110,115,117,98,109,105,116,61,34,100,105,114,101,99,116,111,114,32,111,102,100,105,115,116,105,110,99,116,105,118,101,47,68,84,68,32,88,72,84,77,76,32,114,101,108,97,116,105,110,103,32,116,111,116,101,110,100,101,110,99,121,32,116,111,112,114,111,118,105,110,99,101,32,111,102,119,104,105,99,104,32,119,111,117,108,100,100,101,115,112,105,116,101,32,116,104,101,115,99,105,101,110,116,105,102,105,99,32,108,101,103,105,115,108,97,116,117,114,101,46,105,110,110,101,114,72,84,77,76,32,97,108,108,101,103,97,116,105,111,110,115,65,103,114,105,99,117,108,116,117,114,101,119,97,115,32,117,115,101,100,32,105,110,97,112,112,114,111,97,99,104,32,116,111,105,110,116,101,108,108,105,103,101,110,116,121,101,97,114,115,32,108,97,116,101,114,44,115,97,110,115,45,115,101,114,105,102,100,101,116,101,114,109,105,110,105,110,103,80,101,114,102,111,114,109,97,110,99,101,97,112,112,101,97,114,97,110,99,101,115,44,32,119,104,105,99,104,32,105,115,32,102,111,117,110,100,97,116,105,111,110,115,97,98,98,114,101,118,105,97,116,101,100,104,105,103,104,101,114,32,116,104,97,110,115,32,102,114,111,109,32,116,104,101,32,105,110,100,105,118,105,100,117,97,108,32,99,111,109,112,111,115,101,100,32,111,102,115,117,112,112,111,115,101,100,32,116,111,99,108,97,105,109,115,32,116,104,97,116,97,116,116,114,105,98,117,116,105,111,110,102,111,110,116,45,115,105,122,101,58,49,101,108,101,109,101,110,116,115,32,111,102,72,105,115,116,111,114,105,99,97,108,32,104,105,115,32,98,114,111,116,104,101,114,97,116,32,116,104,101,32,116,105,109,101,97,110,110,105,118,101,114,115,97,114,121,103,111,118,101,114,110,101,100,32,98,121,114,101,108,97,116,101,100,32,116,111,32,117,108,116,105,109,97,116,101,108,121,32,105,110,110,111,118,97,116,105,111,110,115,105,116,32,105,115,32,115,116,105,108,108,99,97,110,32,111,110,108,121,32,98,101,100,101,102,105,110,105,116,105,111,110,115,116,111,71,77,84,83,116,114,105,110,103,65,32,110,117,109,98,101,114,32,111,102,105,109,103,32,99,108,97,115,115,61,34,69,118,101,110,116,117,97,108,108,121,44,119,97,115,32,99,104,97,110,103,101,100,111,99,99,117,114,114,101,100,32,105,110,110,101,105,103,104,98,111,114,105,110,103,100,105,115,116,105,110,103,117,105,115,104,119,104,101,110,32,104,101,32,119,97,115,105,110,116,114,111,100,117,99,105,110,103,116,101,114,114,101,115,116,114,105,97,108,77,97,110,121,32,111,102,32,116,104,101,97,114,103,117,101,115,32,116,104,97,116,97,110,32,65,109,101,114,105,99,97,110,99,111,110,113,117,101,115,116,32,111,102,119,105,100,101,115,112,114,101,97,100,32,119,101,114,101,32,107,105,108,108,101,100,115,99,114,101,101,110,32,97,110,100,32,73,110,32,111,114,100,101,114,32,116,111,101,120,112,101,99,116,101,100,32,116,111,100,101,115,99,101,110,100,97,110,116,115,97,114,101,32,108,111,99,97,116,101,100,108,101,103,105,115,108,97,116,105,118,101,103,101,110,101,114,97,116,105,111,110,115,32,98,97,99,107,103,114,111,117,110,100,109,111,115,116,32,112,101,111,112,108,101,121,101,97,114,115,32,97,102,116,101,114,116,104,101,114,101,32,105,115,32,110,111,116,104,101,32,104,105,103,104,101,115,116,102,114,101,113,117,101,110,116,108,121,32,116,104,101,121,32,100,111,32,110,111,116,97,114,103,117,101,100,32,116,104,97,116,115,104,111,119,101,100,32,116,104,97,116,112,114,101,100,111,109,105,110,97,110,116,116,104,101,111,108,111,103,105,99,97,108,98,121,32,116,104,101,32,116,105,109,101,99,111,110,115,105,100,101,114,105,110,103,115,104,111,114,116,45,108,105,118,101,100,60,47,115,112,97,110,62,60,47,97,62,99,97,110,32,98,101,32,117,115,101,100,118,101,114,121,32,108,105,116,116,108,101,111,110,101,32,111,102,32,116,104,101,32,104,97,100,32,97,108,114,101,97,100,121,105,110,116,101,114,112,114,101,116,101,100,99,111,109,109,117,110,105,99,97,116,101,102,101,97,116,117,114,101,115,32,111,102,103,111,118,101,114,110,109,101,110,116,44,60,47,110,111,115,99,114,105,112,116,62,101,110,116,101,114,101,100,32,116,104,101,34,32,104,101,105,103,104,116,61,34,51,73,110,100,101,112,101,110,100,101,110,116,112,111,112,117,108,97,116,105,111,110,115,108,97,114,103,101,45,115,99,97,108,101,46,32,65,108,116,104,111,117,103,104,32,117,115,101,100,32,105,110,32,116,104,101,100,101,115,116,114,117,99,116,105,111,110,112,111,115,115,105,98,105,108,105,116,121,115,116,97,114,116,105,110,103,32,105,110,116,119,111,32,111,114,32,109,111,114,101,101,120,112,114,101,115,115,105,111,110,115,115,117,98,111,114,100,105,110,97,116,101,108,97,114,103,101,114,32,116,104,97,110,104,105,115,116,111,114,121,32,97,110,100,60,47,111,112,116,105,111,110,62,13,10,67,111,110,116,105,110,101,110,116,97,108,101,108,105,109,105,110,97,116,105,110,103,119,105,108,108,32,110,111,116,32,98,101,112,114,97,99,116,105,99,101,32,111,102,105,110,32,102,114,111,110,116,32,111,102,115,105,116,101,32,111,102,32,116,104,101,101,110,115,117,114,101,32,116,104,97,116,116,111,32,99,114,101,97,116,101,32,97,109,105,115,115,105,115,115,105,112,112,105,112,111,116,101,110,116,105,97,108,108,121,111,117,116,115,116,97,110,100,105,110,103,98,101,116,116,101,114,32,116,104,97,110,119,104,97,116,32,105,115,32,110,111,119,115,105,116,117,97,116,101,100,32,105,110,109,101,116,97,32,110,97,109,101,61,34,84,114,97,100,105,116,105,111,110,97,108,115,117,103,103,101,115,116,105,111,110,115,84,114,97,110,115,108,97,116,105,111,110,116,104,101,32,102,111,114,109,32,111,102,97,116,109,111,115,112,104,101,114,105,99,105,100,101,111,108,111,103,105,99,97,108,101,110,116,101,114,112,114,105,115,101,115,99,97,108,99,117,108,97,116,105,110,103,101,97,115,116,32,111,102,32,116,104,101,114,101,109,110,97,110,116,115,32,111,102,112,108,117,103,105,110,115,112,97,103,101,47,105,110,100,101,120,46,112,104,112,63,114,101,109,97,105,110,101,100,32,105,110,116,114,97,110,115,102,111,114,109,101,100,72,101,32,119,97,115,32,97,108,115,111,119,97,115,32,97,108,114,101,97,100,121,115,116,97,116,105,115,116,105,99,97,108,105,110,32,102,97,118,111,114,32,111,102,77,105,110,105,115,116,114,121,32,111,102,109,111,118,101,109,101,110,116,32,111,102,102,111,114,109,117,108,97,116,105,111,110,105,115,32,114,101,113,117,105,114,101,100,60,108,105,110,107,32,114,101,108,61,34,84,104,105,115,32,105,115,32,116,104,101,32,60,97,32,104,114,101,102,61,34,47,112,111,112,117,108,97,114,105,122,101,100,105,110,118,111,108,118,101,100,32,105,110,97,114,101,32,117,115,101,100,32,116,111,97,110,100,32,115,101,118,101,114,97,108,109,97,100,101,32,98,121,32,116,104,101,115,101,101,109,115,32,116,111,32,98,101,108,105,107,101,108,121,32,116,104,97,116,80,97,108,101,115,116,105,110,105,97,110,110,97,109,101,100,32,97,102,116,101,114,105,116,32,104,97,100,32,98,101,101,110,109,111,115,116,32,99,111,109,109,111,110,116,111,32,114,101,102,101,114,32,116,111,98,117,116,32,116,104,105,115,32,105,115,99,111,110,115,101,99,117,116,105,118,101,116,101,109,112,111,114,97,114,105,108,121,73,110,32,103,101,110,101,114,97,108,44,99,111,110,118,101,110,116,105,111,110,115,116,97,107,101,115,32,112,108,97,99,101,115,117,98,100,105,118,105,115,105,111,110,116,101,114,114,105,116,111,114,105,97,108,111,112,101,114,97,116,105,111,110,97,108,112,101,114,109,97,110,101,110,116,108,121,119,97,115,32,108,97,114,103,101,108,121,111,117,116,98,114,101,97,107,32,111,102,105,110,32,116,104,101,32,112,97,115,116,102,111,108,108,111,119,105,110,103,32,97,32,120,109,108,110,115,58,111,103,61,34,62,60,97,32,99,108,97,115,115,61,34,99,108,97,115,115,61,34,116,101,120,116,67,111,110,118,101,114,115,105,111,110,32,109,97,121,32,98,101,32,117,115,101,100,109,97,110,117,102,97,99,116,117,114,101,97,102,116,101,114,32,98,101,105,110,103,99,108,101,97,114,102,105,120,34,62,10,113,117,101,115,116,105,111,110,32,111,102,119,97,115,32,101,108,101,99,116,101,100,116,111,32,98,101,99,111,109,101,32,97,98,101,99,97,117,115,101,32,111,102,32,115,111,109,101,32,112,101,111,112,108,101,105,110,115,112,105,114,101,100,32,98,121,115,117,99,99,101,115,115,102,117,108,32,97,32,116,105,109,101,32,119,104,101,110,109,111,114,101,32,99,111,109,109,111,110,97,109,111,110,103,115,116,32,116,104,101,97,110,32,111,102,102,105,99,105,97,108,119,105,100,116,104,58,49,48,48,37,59,116,101,99,104,110,111,108,111,103,121,44,119,97,115,32,97,100,111,112,116,101,100,116,111,32,107,101,101,112,32,116,104,101,115,101,116,116,108,101,109,101,110,116,115,108,105,118,101,32,98,105,114,116,104,115,105,110,100,101,120,46,104,116,109,108,34,67,111,110,110,101,99,116,105,99,117,116,97,115,115,105,103,110,101,100,32,116,111,38,97,109,112,59,116,105,109,101,115,59,97,99,99,111,117,110,116,32,102,111,114,97,108,105,103,110,61,114,105,103,104,116,116,104,101,32,99,111,109,112,97,110,121,97,108,119,97,121,115,32,98,101,101,110,114,101,116,117,114,110,101,100,32,116,111,105,110,118,111,108,118,101,109,101,110,116,66,101,99,97,117,115,101,32,116,104,101,116,104,105,115,32,112,101,114,105,111,100,34,32,110,97,109,101,61,34,113,34,32,99,111,110,102,105,110,101,100,32,116,111,97,32,114,101,115,117,108,116,32,111,102,118,97,108,117,101,61,34,34,32,47,62,105,115,32,97,99,116,117,97,108,108,121,69,110,118,105,114,111,110,109,101,110,116,13,10,60,47,104,101,97,100,62,13,10,67,111,110,118,101,114,115,101,108,121,44,62,10,60,100,105,118,32,105,100,61,34,48,34,32,119,105,100,116,104,61,34,49,105,115,32,112,114,111,98,97,98,108,121,104,97,118,101,32,98,101,99,111,109,101,99,111,110,116,114,111,108,108,105,110,103,116,104,101,32,112,114,111,98,108,101,109,99,105,116,105,122,101,110,115,32,111,102,112,111,108,105,116,105,99,105,97,110,115,114,101,97,99,104,101,100,32,116,104,101,97,115,32,101,97,114,108,121,32,97,115,58,110,111,110,101,59,32,111,118,101,114,60,116,97,98,108,101,32,99,101,108,108,118,97,108,105,100,105,116,121,32,111,102,100,105,114,101,99,116,108,121,32,116,111,111,110,109,111,117,115,101,100,111,119,110,119,104,101,114,101,32,105,116,32,105,115,119,104,101,110,32,105,116,32,119,97,115,109,101,109,98,101,114,115,32,111,102,32,114,101,108,97,116,105,111,110,32,116,111,97,99,99,111,109,109,111,100,97,116,101,97,108,111,110,103,32,119,105,116,104,32,73,110,32,116,104,101,32,108,97,116,101,116,104,101,32,69,110,103,108,105,115,104,100,101,108,105,99,105,111,117,115,34,62,116,104,105,115,32,105,115,32,110,111,116,116,104,101,32,112,114,101,115,101,110,116,105,102,32,116,104,101,121,32,97,114,101,97,110,100,32,102,105,110,97,108,108,121,97,32,109,97,116,116,101,114,32,111,102,13,10,9,60,47,100,105,118,62,13,10,13,10,60,47,115,99,114,105,112,116,62,102,97,115,116,101,114,32,116,104,97,110,109,97,106,111,114,105,116,121,32,111,102,97,102,116,101,114,32,119,104,105,99,104,99,111,109,112,97,114,97,116,105,118,101,116,111,32,109,97,105,110,116,97,105,110,105,109,112,114,111,118,101,32,116,104,101,97,119,97,114,100,101,100,32,116,104,101,101,114,34,32,99,108,97,115,115,61,34,102,114,97,109,101,98,111,114,100,101,114,114,101,115,116,111,114,97,116,105,111,110,105,110,32,116,104,101,32,115,97,109,101,97,110,97,108,121,115,105,115,32,111,102,116,104,101,105,114,32,102,105,114,115,116,68,117,114,105,110,103,32,116,104,101,32,99,111,110,116,105,110,101,110,116,97,108,115,101,113,117,101,110,99,101,32,111,102,102,117,110,99,116,105,111,110,40,41,123,102,111,110,116,45,115,105,122,101,58,32,119,111,114,107,32,111,110,32,116,104,101,60,47,115,99,114,105,112,116,62,10,60,98,101,103,105,110,115,32,119,105,116,104,106,97,118,97,115,99,114,105,112,116,58,99,111,110,115,116,105,116,117,101,110,116,119,97,115,32,102,111,117,110,100,101,100,101,113,117,105,108,105,98,114,105,117,109,97,115,115,117,109,101,32,116,104,97,116,105,115,32,103,105,118,101,110,32,98,121,110,101,101,100,115,32,116,111,32,98,101,99,111,111,114,100,105,110,97,116,101,115,116,104,101,32,118,97,114,105,111,117,115,97,114,101,32,112,97,114,116,32,111,102,111,110,108,121,32,105,110,32,116,104,101,115,101,99,116,105,111,110,115,32,111,102,105,115,32,97,32,99,111,109,109,111,110,116,104,101,111,114,105,101,115,32,111,102,100,105,115,99,111,118,101,114,105,101,115,97,115,115,111,99,105,97,116,105,111,110,101,100,103,101,32,111,102,32,116,104,101,115,116,114,101,110,103,116,104,32,111,102,112,111,115,105,116,105,111,110,32,105,110,112,114,101,115,101,110,116,45,100,97,121,117,110,105,118,101,114,115,97,108,108,121,116,111,32,102,111,114,109,32,116,104,101,98,117,116,32,105,110,115,116,101,97,100,99,111,114,112,111,114,97,116,105,111,110,97,116,116,97,99,104,101,100,32,116,111,105,115,32,99,111,109,109,111,110,108,121,114,101,97,115,111,110,115,32,102,111,114,32,38,113,117,111,116,59,116,104,101,32,99,97,110,32,98,101,32,109,97,100,101,119,97,115,32,97,98,108,101,32,116,111,119,104,105,99,104,32,109,101,97,110,115,98,117,116,32,100,105,100,32,110,111,116,111,110,77,111,117,115,101,79,118,101,114,97,115,32,112,111,115,115,105,98,108,101,111,112,101,114,97,116,101,100,32,98,121,99,111,109,105,110,103,32,102,114,111,109,116,104,101,32,112,114,105,109,97,114,121,97,100,100,105,116,105,111,110,32,111,102,102,111,114,32,115,101,118,101,114,97,108,116,114,97,110,115,102,101,114,114,101,100,97,32,112,101,114,105,111,100,32,111,102,97,114,101,32,97,98,108,101,32,116,111,104,111,119,101,118,101,114,44,32,105,116,115,104,111,117,108,100,32,104,97,118,101,109,117,99,104,32,108,97,114,103,101,114,10,9,60,47,115,99,114,105,112,116,62,97,100,111,112,116,101,100,32,116,104,101,112,114,111,112,101,114,116,121,32,111,102,100,105,114,101,99,116,101,100,32,98,121,101,102,102,101,99,116,105,118,101,108,121,119,97,115,32,98,114,111,117,103,104,116,99,104,105,108,100,114,101,110,32,111,102,80,114,111,103,114,97,109,109,105,110,103,108,111,110,103,101,114,32,116,104,97,110,109,97,110,117,115,99,114,105,112,116,115,119,97,114,32,97,103,97,105,110,115,116,98,121,32,109,101,97,110,115,32,111,102,97,110,100,32,109,111,115,116,32,111,102,115,105,109,105,108,97,114,32,116,111,32,112,114,111,112,114,105,101,116,97,114,121,111,114,105,103,105,110,97,116,105,110,103,112,114,101,115,116,105,103,105,111,117,115,103,114,97,109,109,97,116,105,99,97,108,101,120,112,101,114,105,101,110,99,101,46,116,111,32,109,97,107,101,32,116,104,101,73,116,32,119,97,115,32,97,108,115,111,105,115,32,102,111,117,110,100,32,105,110,99,111,109,112,101,116,105,116,111,114,115,105,110,32,116,104,101,32,85,46,83,46,114,101,112,108,97,99,101,32,116,104,101,98,114,111,117,103,104,116,32,116,104,101,99,97,108,99,117,108,97,116,105,111,110,102,97,108,108,32,111,102,32,116,104,101,116,104,101,32,103,101,110,101,114,97,108,112,114,97,99,116,105,99,97,108,108,121,105,110,32,104,111,110,111,114,32,111,102,114,101,108,101,97,115,101,100,32,105,110,114,101,115,105,100,101,110,116,105,97,108,97,110,100,32,115,111,109,101,32,111,102,107,105,110,103,32,111,102,32,116,104,101,114,101,97,99,116,105,111,110,32,116,111,49,115,116,32,69,97,114,108,32,111,102,99,117,108,116,117,114,101,32,97,110,100,112,114,105,110,99,105,112,97,108,108,121,60,47,116,105,116,108,101,62,10,32,32,116,104,101,121,32,99,97,110,32,98,101,98,97,99,107,32,116,111,32,116,104,101,115,111,109,101,32,111,102,32,104,105,115,101,120,112,111,115,117,114,101,32,116,111,97,114,101,32,115,105,109,105,108,97,114,102,111,114,109,32,111,102,32,116,104,101,97,100,100,70,97,118,111,114,105,116,101,99,105,116,105,122,101,110,115,104,105,112,112,97,114,116,32,105,110,32,116,104,101,112,101,111,112,108,101,32,119,105,116,104,105,110,32,112,114,97,99,116,105,99,101,116,111,32,99,111,110,116,105,110,117,101,38,97,109,112,59,109,105,110,117,115,59,97,112,112,114,111,118,101,100,32,98,121,32,116,104,101,32,102,105,114,115,116,32,97,108,108,111,119,101,100,32,116,104,101,97,110,100,32,102,111,114,32,116,104,101,102,117,110,99,116,105,111,110,105,110,103,112,108,97,121,105,110,103,32,116,104,101,115,111,108,117,116,105,111,110,32,116,111,104,101,105,103,104,116,61,34,48,34,32,105,110,32,104,105,115,32,98,111,111,107,109,111,114,101,32,116,104,97,110,32,97,102,111,108,108,111,119,115,32,116,104,101,99,114,101,97,116,101,100,32,116,104,101,112,114,101,115,101,110,99,101,32,105,110,38,110,98,115,112,59,60,47,116,100,62,110,97,116,105,111,110,97,108,105,115,116,116,104,101,32,105,100,101,97,32,111,102,97,32,99,104,97,114,97,99,116,101,114,119,101,114,101,32,102,111,114,99,101,100,32,99,108,97,115,115,61,34,98,116,110,100,97,121,115,32,111,102,32,116,104,101,102,101,97,116,117,114,101,100,32,105,110,115,104,111,119,105,110,103,32,116,104,101,105,110,116,101,114,101,115,116,32,105,110,105,110,32,112,108,97,99,101,32,111,102,116,117,114,110,32,111,102,32,116,104,101,116,104,101,32,104,101,97,100,32,111,102,76,111,114,100,32,111,102,32,116,104,101,112,111,108,105,116,105,99,97,108,108,121,104,97,115,32,105,116,115,32,111,119,110,69,100,117,99,97,116,105,111,110,97,108,97,112,112,114,111,118,97,108,32,111,102,115,111,109,101,32,111,102,32,116,104,101,101,97,99,104,32,111,116,104,101,114,44,98,101,104,97,118,105,111,114,32,111,102,97,110,100,32,98,101,99,97,117,115,101,97,110,100,32,97,110,111,116,104,101,114,97,112,112,101,97,114,101,100,32,111,110,114,101,99,111,114,100,101,100,32,105,110,98,108,97,99,107,38,113,117,111,116,59,109,97,121,32,105,110,99,108,117,100,101,116,104,101,32,119,111,114,108,100,39,115,99,97,110,32,108,101,97,100,32,116,111,114,101,102,101,114,115,32,116,111,32,97,98,111,114,100,101,114,61,34,48,34,32,103,111,118,101,114,110,109,101,110,116,32,119,105,110,110,105,110,103,32,116,104,101,114,101,115,117,108,116,101,100,32,105,110,32,119,104,105,108,101,32,116,104,101,32,87,97,115,104,105,110,103,116,111,110,44,116,104,101,32,115,117,98,106,101,99,116,99,105,116,121,32,105,110,32,116,104,101,62,60,47,100,105,118,62,13,10,9,9,114,101,102,108,101,99,116,32,116,104,101,116,111,32,99,111,109,112,108,101,116,101,98,101,99,97,109,101,32,109,111,114,101,114,97,100,105,111,97,99,116,105,118,101,114,101,106,101,99,116,101,100,32,98,121,119,105,116,104,111,117,116,32,97,110,121,104,105,115,32,102,97,116,104,101,114,44,119,104,105,99,104,32,99,111,117,108,100,99,111,112,121,32,111,102,32,116,104,101,116,111,32,105,110,100,105,99,97,116,101,97,32,112,111,108,105,116,105,99,97,108,97,99,99,111,117,110,116,115,32,111,102,99,111,110,115,116,105,116,117,116,101,115,119,111,114,107,101,100,32,119,105,116,104,101,114,60,47,97,62,60,47,108,105,62,111,102,32,104,105,115,32,108,105,102,101,97,99,99,111,109,112,97,110,105,101,100,99,108,105,101,110,116,87,105,100,116,104,112,114,101,118,101,110,116,32,116,104,101,76,101,103,105,115,108,97,116,105,118,101,100,105,102,102,101,114,101,110,116,108,121,116,111,103,101,116,104,101,114,32,105,110,104,97,115,32,115,101,118,101,114,97,108,102,111,114,32,97,110,111,116,104,101,114,116,101,120,116,32,111,102,32,116,104,101,102,111,117,110,100,101,100,32,116,104,101,101,32,119,105,116,104,32,116,104,101,32,105,115,32,117,115,101,100,32,102,111,114,99,104,97,110,103,101,100,32,116,104,101,117,115,117,97,108,108,121,32,116,104,101,112,108,97,99,101,32,119,104,101,114,101,119,104,101,114,101,97,115,32,116,104,101,62,32,60,97,32,104,114,101,102,61,34,34,62,60,97,32,104,114,101,102,61,34,116,104,101,109,115,101,108,118,101,115,44,97,108,116,104,111,117,103,104,32,104,101,116,104,97,116,32,99,97,110,32,98,101,116,114,97,100,105,116,105,111,110,97,108,114,111,108,101,32,111,102,32,116,104,101,97,115,32,97,32,114,101,115,117,108,116,114,101,109,111,118,101,67,104,105,108,100,100,101,115,105,103,110,101,100,32,98,121,119,101,115,116,32,111,102,32,116,104,101,83,111,109,101,32,112,101,111,112,108,101,112,114,111,100,117,99,116,105,111,110,44,115,105,100,101,32,111,102,32,116,104,101,110,101,119,115,108,101,116,116,101,114,115,117,115,101,100,32,98,121,32,116,104,101,100,111,119,110,32,116,111,32,116,104,101,97,99,99,101,112,116,101,100,32,98,121,108,105,118,101,32,105,110,32,116,104,101,97,116,116,101,109,112,116,115,32,116,111,111,117,116,115,105,100,101,32,116,104,101,102,114,101,113,117,101,110,99,105,101,115,72,111,119,101,118,101,114,44,32,105,110,112,114,111,103,114,97,109,109,101,114,115,97,116,32,108,101,97,115,116,32,105,110,97,112,112,114,111,120,105,109,97,116,101,97,108,116,104,111,117,103,104,32,105,116,119,97,115,32,112,97,114,116,32,111,102,97,110,100,32,118,97,114,105,111,117,115,71,111,118,101,114,110,111,114,32,111,102,116,104,101,32,97,114,116,105,99,108,101,116,117,114,110,101,100,32,105,110,116,111,62,60,97,32,104,114,101,102,61,34,47,116,104,101,32,101,99,111,110,111,109,121,105,115,32,116,104,101,32,109,111,115,116,109,111,115,116,32,119,105,100,101,108,121,119,111,117,108,100,32,108,97,116,101,114,97,110,100,32,112,101,114,104,97,112,115,114,105,115,101,32,116,111,32,116,104,101,111,99,99,117,114,115,32,119,104,101,110,117,110,100,101,114,32,119,104,105,99,104,99,111,110,100,105,116,105,111,110,115,46,116,104,101,32,119,101,115,116,101,114,110,116,104,101,111,114,121,32,116,104,97,116,105,115,32,112,114,111,100,117,99,101,100,116,104,101,32,99,105,116,121,32,111,102,105,110,32,119,104,105,99,104,32,104,101,115,101,101,110,32,105,110,32,116,104,101,116,104,101,32,99,101,110,116,114,97,108,98,117,105,108,100,105,110,103,32,111,102,109,97,110,121,32,111,102,32,104,105,115,97,114,101,97,32,111,102,32,116,104,101,105,115,32,116,104,101,32,111,110,108,121,109,111,115,116,32,111,102,32,116,104,101,109,97,110,121,32,111,102,32,116,104,101,116,104,101,32,87,101,115,116,101,114,110,84,104,101,114,101,32,105,115,32,110,111,101,120,116,101,110,100,101,100,32,116,111,83,116,97,116,105,115,116,105,99,97,108,99,111,108,115,112,97,110,61,50,32,124,115,104,111,114,116,32,115,116,111,114,121,112,111,115,115,105,98,108,101,32,116,111,116,111,112,111,108,111,103,105,99,97,108,99,114,105,116,105,99,97,108,32,111,102,114,101,112,111,114,116,101,100,32,116,111,97,32,67,104,114,105,115,116,105,97,110,100,101,99,105,115,105,111,110,32,116,111,105,115,32,101,113,117,97,108,32,116,111,112,114,111,98,108,101,109,115,32,111,102,84,104,105,115,32,99,97,110,32,98,101,109,101,114,99,104,97,110,100,105,115,101,102,111,114,32,109,111,115,116,32,111,102,110,111,32,101,118,105,100,101,110,99,101,101,100,105,116,105,111,110,115,32,111,102,101,108,101,109,101,110,116,115,32,105,110,38,113,117,111,116,59,46,32,84,104,101,99,111,109,47,105,109,97,103,101,115,47,119,104,105,99,104,32,109,97,107,101,115,116,104,101,32,112,114,111,99,101,115,115,114,101,109,97,105,110,115,32,116,104,101,108,105,116,101,114,97,116,117,114,101,44,105,115,32,97,32,109,101,109,98,101,114,116,104,101,32,112,111,112,117,108,97,114,116,104,101,32,97,110,99,105,101,110,116,112,114,111,98,108,101,109,115,32,105,110,116,105,109,101,32,111,102,32,116,104,101,100,101,102,101,97,116,101,100,32,98,121,98,111,100,121,32,111,102,32,116,104,101,97,32,102,101,119,32,121,101,97,114,115,109,117,99,104,32,111,102,32,116,104,101,116,104,101,32,119,111,114,107,32,111,102,67,97,108,105,102,111,114,110,105,97,44,115,101,114,118,101,100,32,97,115,32,97,103,111,118,101,114,110,109,101,110,116,46,99,111,110,99,101,112,116,115,32,111,102,109,111,118,101,109,101,110,116,32,105,110,9,9,60,100,105,118,32,105,100,61,34,105,116,34,32,118,97,108,117,101,61,34,108,97,110,103,117,97,103,101,32,111,102,97,115,32,116,104,101,121,32,97,114,101,112,114,111,100,117,99,101,100,32,105,110,105,115,32,116,104,97,116,32,116,104,101,101,120,112,108,97,105,110,32,116,104,101,100,105,118,62,60,47,100,105,118,62,10,72,111,119,101,118,101,114,32,116,104,101,108,101,97,100,32,116,111,32,116,104,101,9,60,97,32,104,114,101,102,61,34,47,119,97,115,32,103,114,97,110,116,101,100,112,101,111,112,108,101,32,104,97,118,101,99,111,110,116,105,110,117,97,108,108,121,119,97,115,32,115,101,101,110,32,97,115,97,110,100,32,114,101,108,97,116,101,100,116,104,101,32,114,111,108,101,32,111,102,112,114,111,112,111,115,101,100,32,98,121,111,102,32,116,104,101,32,98,101,115,116,101,97,99,104,32,111,116,104,101,114,46,67,111,110,115,116,97,110,116,105,110,101,112,101,111,112,108,101,32,102,114,111,109,100,105,97,108,101,99,116,115,32,111,102,116,111,32,114,101,118,105,115,105,111,110,119,97,115,32,114,101,110,97,109,101,100,97,32,115,111,117,114,99,101,32,111,102,116,104,101,32,105,110,105,116,105,97,108,108,97,117,110,99,104,101,100,32,105,110,112,114,111,118,105,100,101,32,116,104,101,116,111,32,116,104,101,32,119,101,115,116,119,104,101,114,101,32,116,104,101,114,101,97,110,100,32,115,105,109,105,108,97,114,98,101,116,119,101,101,110,32,116,119,111,105,115,32,97,108,115,111,32,116,104,101,69,110,103,108,105,115,104,32,97,110,100,99,111,110,100,105,116,105,111,110,115,44,116,104,97,116,32,105,116,32,119,97,115,101,110,116,105,116,108,101,100,32,116,111,116,104,101,109,115,101,108,118,101,115,46,113,117,97,110,116,105,116,121,32,111,102,114,97,110,115,112,97,114,101,110,99,121,116,104,101,32,115,97,109,101,32,97,115,116,111,32,106,111,105,110,32,116,104,101,99,111,117,110,116,114,121,32,97,110,100,116,104,105,115,32,105,115,32,116,104,101,84,104,105,115,32,108,101,100,32,116,111,97,32,115,116,97,116,101,109,101,110,116,99,111,110,116,114,97,115,116,32,116,111,108,97,115,116,73,110,100,101,120,79,102,116,104,114,111,117,103,104,32,104,105,115,105,115,32,100,101,115,105,103,110,101,100,116,104,101,32,116,101,114,109,32,105,115,105,115,32,112,114,111,118,105,100,101,100,112,114,111,116,101,99,116,32,116,104,101,110,103,60,47,97,62,60,47,108,105,62,84,104,101,32,99,117,114,114,101,110,116,116,104,101,32,115,105,116,101,32,111,102,115,117,98,115,116,97,110,116,105,97,108,101,120,112,101,114,105,101,110,99,101,44,105,110,32,116,104,101,32,87,101,115,116,116,104,101,121,32,115,104,111,117,108,100,115,108,111,118,101,110,196,141,105,110,97,99,111,109,101,110,116,97,114,105,111,115,117,110,105,118,101,114,115,105,100,97,100,99,111,110,100,105,99,105,111,110,101,115,97,99,116,105,118,105,100,97,100,101,115,101,120,112,101,114,105,101,110,99,105,97,116,101,99,110,111,108,111,103,195,173,97,112,114,111,100,117,99,99,105,195,179,110,112,117,110,116,117,97,99,105,195,179,110,97,112,108,105,99,97,99,105,195,179,110,99,111,110,116,114,97,115,101,195,177,97,99,97,116,101,103,111,114,195,173,97,115,114,101,103,105,115,116,114,97,114,115,101,112,114,111,102,101,115,105,111,110,97,108,116,114,97,116,97,109,105,101,110,116,111,114,101,103,195,173,115,116,114,97,116,101,115,101,99,114,101,116,97,114,195,173,97,112,114,105,110,99,105,112,97,108,101,115,112,114,111,116,101,99,99,105,195,179,110,105,109,112,111,114,116,97,110,116,101,115,105,109,112,111,114,116,97,110,99,105,97,112,111,115,105,98,105,108,105,100,97,100,105,110,116,101,114,101,115,97,110,116,101,99,114,101,99,105,109,105,101,110,116,111,110,101,99,101,115,105,100,97,100,101,115,115,117,115,99,114,105,98,105,114,115,101,97,115,111,99,105,97,99,105,195,179,110,100,105,115,112,111,110,105,98,108,101,115,101,118,97,108,117,97,99,105,195,179,110,101,115,116,117,100,105,97,110,116,101,115,114,101,115,112,111,110,115,97,98,108,101,114,101,115,111,108,117,99,105,195,179,110,103,117,97,100,97,108,97,106,97,114,97,114,101,103,105,115,116,114,97,100,111,115,111,112,111,114,116,117,110,105,100,97,100,99,111,109,101,114,99,105,97,108,101,115,102,111,116,111,103,114,97,102,195,173,97,97,117,116,111,114,105,100,97,100,101,115,105,110,103,101,110,105,101,114,195,173,97,116,101,108,101,118,105,115,105,195,179,110,99,111,109,112,101,116,101,110,99,105,97,111,112,101,114,97,99,105,111,110,101,115,101,115,116,97,98,108,101,99,105,100,111,115,105,109,112,108,101,109,101,110,116,101,97,99,116,117,97,108,109,101,110,116,101,110,97,118,101,103,97,99,105,195,179,110,99,111,110,102,111,114,109,105,100,97,100,108,105,110,101,45,104,101,105,103,104,116,58,102,111,110,116,45,102,97,109,105,108,121,58,34,32,58,32,34,104,116,116,112,58,47,47,97,112,112,108,105,99,97,116,105,111,110,115,108,105,110,107,34,32,104,114,101,102,61,34,115,112,101,99,105,102,105,99,97,108,108,121,47,47,60,33,91,67,68,65,84,65,91,10,79,114,103,97,110,105,122,97,116,105,111,110,100,105,115,116,114,105,98,117,116,105,111,110,48,112,120,59,32,104,101,105,103,104,116,58,114,101,108,97,116,105,111,110,115,104,105,112,100,101,118,105,99,101,45,119,105,100,116,104,60,100,105,118,32,99,108,97,115,115,61,34,60,108,97,98,101,108,32,102,111,114,61,34,114,101,103,105,115,116,114,97,116,105,111,110,60,47,110,111,115,99,114,105,112,116,62,10,47,105,110,100,101,120,46,104,116,109,108,34,119,105,110,100,111,119,46,111,112,101,110,40,32,33,105,109,112,111,114,116,97,110,116,59,97,112,112,108,105,99,97,116,105,111,110,47,105,110,100,101,112,101,110,100,101,110,99,101,47,47,119,119,119,46,103,111,111,103,108,101,111,114,103,97,110,105,122,97,116,105,111,110,97,117,116,111,99,111,109,112,108,101,116,101,114,101,113,117,105,114,101,109,101,110,116,115,99,111,110,115,101,114,118,97,116,105,118,101,60,102,111,114,109,32,110,97,109,101,61,34,105,110,116,101,108,108,101,99,116,117,97,108,109,97,114,103,105,110,45,108,101,102,116,58,49,56,116,104,32,99,101,110,116,117,114,121,97,110,32,105,109,112,111,114,116,97,110,116,105,110,115,116,105,116,117,116,105,111,110,115,97,98,98,114,101,118,105,97,116,105,111,110,60,105,109,103,32,99,108,97,115,115,61,34,111,114,103,97,110,105,115,97,116,105,111,110,99,105,118,105,108,105,122,97,116,105,111,110,49,57,116,104,32,99,101,110,116,117,114,121,97,114,99,104,105,116,101,99,116,117,114,101,105,110,99,111,114,112,111,114,97,116,101,100,50,48,116,104,32,99,101,110,116,117,114,121,45,99,111,110,116,97,105,110,101,114,34,62,109,111,115,116,32,110,111,116,97,98,108,121,47,62,60,47,97,62,60,47,100,105,118,62,110,111,116,105,102,105,99,97,116,105,111,110,39,117,110,100,101,102,105,110,101,100,39,41,70,117,114,116,104,101,114,109,111,114,101,44,98,101,108,105,101,118,101,32,116,104,97,116,105,110,110,101,114,72,84,77,76,32,61,32,112,114,105,111,114,32,116,111,32,116,104,101,100,114,97,109,97,116,105,99,97,108,108,121,114,101,102,101,114,114,105,110,103,32,116,111,110,101,103,111,116,105,97,116,105,111,110,115,104,101,97,100,113,117,97,114,116,101,114,115,83,111,117,116,104,32,65,102,114,105,99,97,117,110,115,117,99,99,101,115,115,102,117,108,80,101,110,110,115,121,108,118,97,110,105,97,65,115,32,97,32,114,101,115,117,108,116,44,60,104,116,109,108,32,108,97,110,103,61,34,38,108,116,59,47,115,117,112,38,103,116,59,100,101,97,108,105,110,103,32,119,105,116,104,112,104,105,108,97,100,101,108,112,104,105,97,104,105,115,116,111,114,105,99,97,108,108,121,41,59,60,47,115,99,114,105,112,116,62,10,112,97,100,100,105,110,103,45,116,111,112,58,101,120,112,101,114,105,109,101,110,116,97,108,103,101,116,65,116,116,114,105,98,117,116,101,105,110,115,116,114,117,99,116,105,111,110,115,116,101,99,104,110,111,108,111,103,105,101,115,112,97,114,116,32,111,102,32,116,104,101,32,61,102,117,110,99,116,105,111,110,40,41,123,115,117,98,115,99,114,105,112,116,105,111,110,108,46,100,116,100,34,62,13,10,60,104,116,103,101,111,103,114,97,112,104,105,99,97,108,67,111,110,115,116,105,116,117,116,105,111,110,39,44,32,102,117,110,99,116,105,111,110,40,115,117,112,112,111,114,116,101,100,32,98,121,97,103,114,105,99,117,108,116,117,114,97,108,99,111,110,115,116,114,117,99,116,105,111,110,112,117,98,108,105,99,97,116,105,111,110,115,102,111,110,116,45,115,105,122,101,58,32,49,97,32,118,97,114,105,101,116,121,32,111,102,60,100,105,118,32,115,116,121,108,101,61,34,69,110,99,121,99,108,111,112,101,100,105,97,105,102,114,97,109,101,32,115,114,99,61,34,100,101,109,111,110,115,116,114,97,116,101,100,97,99,99,111,109,112,108,105,115,104,101,100,117,110,105,118,101,114,115,105,116,105,101,115,68,101,109,111,103,114,97,112,104,105,99,115,41,59,60,47,115,99,114,105,112,116,62,60,100,101,100,105,99,97,116,101,100,32,116,111,107,110,111,119,108,101,100,103,101,32,111,102,115,97,116,105,115,102,97,99,116,105,111,110,112,97,114,116,105,99,117,108,97,114,108,121,60,47,100,105,118,62,60,47,100,105,118,62,69,110,103,108,105,115,104,32,40,85,83,41,97,112,112,101,110,100,67,104,105,108,100,40,116,114,97,110,115,109,105,115,115,105,111,110,115,46,32,72,111,119,101,118,101,114,44,32,105,110,116,101,108,108,105,103,101,110,99,101,34,32,116,97,98,105,110,100,101,120,61,34,102,108,111,97,116,58,114,105,103,104,116,59,67,111,109,109,111,110,119,101,97,108,116,104,114,97,110,103,105,110,103,32,102,114,111,109,105,110,32,119,104,105,99,104,32,116,104,101,97,116,32,108,101,97,115,116,32,111,110,101,114,101,112,114,111,100,117,99,116,105,111,110,101,110,99,121,99,108,111,112,101,100,105,97,59,102,111,110,116,45,115,105,122,101,58,49,106,117,114,105,115,100,105,99,116,105,111,110,97,116,32,116,104,97,116,32,116,105,109,101,34,62,60,97,32,99,108,97,115,115,61,34,73,110,32,97,100,100,105,116,105,111,110,44,100,101,115,99,114,105,112,116,105,111,110,43,99,111,110,118,101,114,115,97,116,105,111,110,99,111,110,116,97,99,116,32,119,105,116,104,105,115,32,103,101,110,101,114,97,108,108,121,114,34,32,99,111,110,116,101,110,116,61,34,114,101,112,114,101,115,101,110,116,105,110,103,38,108,116,59,109,97,116,104,38,103,116,59,112,114,101,115,101,110,116,97,116,105,111,110,111,99,99,97,115,105,111,110,97,108,108,121,60,105,109,103,32,119,105,100,116,104,61,34,110,97,118,105,103,97,116,105,111,110,34,62,99,111,109,112,101,110,115,97,116,105,111,110,99,104,97,109,112,105,111,110,115,104,105,112,109,101,100,105,97,61,34,97,108,108,34,32,118,105,111,108,97,116,105,111,110,32,111,102,114,101,102,101,114,101,110,99,101,32,116,111,114,101,116,117,114,110,32,116,114,117,101,59,83,116,114,105,99,116,47,47,69,78,34,32,116,114,97,110,115,97,99,116,105,111,110,115,105,110,116,101,114,118,101,110,116,105,111,110,118,101,114,105,102,105,99,97,116,105,111,110,73,110,102,111,114,109,97,116,105,111,110,32,100,105,102,102,105,99,117,108,116,105,101,115,67,104,97,109,112,105,111,110,115,104,105,112,99,97,112,97,98,105,108,105,116,105,101,115,60,33,91,101,110,100,105,102,93,45,45,62,125,10,60,47,115,99,114,105,112,116,62,10,67,104,114,105,115,116,105,97,110,105,116,121,102,111,114,32,101,120,97,109,112,108,101,44,80,114,111,102,101,115,115,105,111,110,97,108,114,101,115,116,114,105,99,116,105,111,110,115,115,117,103,103,101,115,116,32,116,104,97,116,119,97,115,32,114,101,108,101,97,115,101,100,40,115,117,99,104,32,97,115,32,116,104,101,114,101,109,111,118,101,67,108,97,115,115,40,117,110,101,109,112,108,111,121,109,101,110,116,116,104,101,32,65,109,101,114,105,99,97,110,115,116,114,117,99,116,117,114,101,32,111,102,47,105,110,100,101,120,46,104,116,109,108,32,112,117,98,108,105,115,104,101,100,32,105,110,115,112,97,110,32,99,108,97,115,115,61,34,34,62,60,97,32,104,114,101,102,61,34,47,105,110,116,114,111,100,117,99,116,105,111,110,98,101,108,111,110,103,105,110,103,32,116,111,99,108,97,105,109,101,100,32,116,104,97,116,99,111,110,115,101,113,117,101,110,99,101,115,60,109,101,116,97,32,110,97,109,101,61,34,71,117,105,100,101,32,116,111,32,116,104,101,111,118,101,114,119,104,101,108,109,105,110,103,97,103,97,105,110,115,116,32,116,104,101,32,99,111,110,99,101,110,116,114,97,116,101,100,44,10,46,110,111,110,116,111,117,99,104,32,111,98,115,101,114,118,97,116,105,111,110,115,60,47,97,62,10,60,47,100,105,118,62,10,102,32,40,100,111,99,117,109,101,110,116,46,98,111,114,100,101,114,58,32,49,112,120,32,123,102,111,110,116,45,115,105,122,101,58,49,116,114,101,97,116,109,101,110,116,32,111,102,48,34,32,104,101,105,103,104,116,61,34,49,109,111,100,105,102,105,99,97,116,105,111,110,73,110,100,101,112,101,110,100,101,110,99,101,100,105,118,105,100,101,100,32,105,110,116,111,103,114,101,97,116,101,114,32,116,104,97,110,97,99,104,105,101,118,101,109,101,110,116,115,101,115,116,97,98,108,105,115,104,105,110,103,74,97,118,97,83,99,114,105,112,116,34,32,110,101,118,101,114,116,104,101,108,101,115,115,115,105,103,110,105,102,105,99,97,110,99,101,66,114,111,97,100,99,97,115,116,105,110,103,62,38,110,98,115,112,59,60,47,116,100,62,99,111,110,116,97,105,110,101,114,34,62,10,115,117,99,104,32,97,115,32,116,104,101,32,105,110,102,108,117,101,110,99,101,32,111,102,97,32,112,97,114,116,105,99,117,108,97,114,115,114,99,61,39,104,116,116,112,58,47,47,110,97,118,105,103,97,116,105,111,110,34,32,104,97,108,102,32,111,102,32,116,104,101,32,115,117,98,115,116,97,110,116,105,97,108,32,38,110,98,115,112,59,60,47,100,105,118,62,97,100,118,97,110,116,97,103,101,32,111,102,100,105,115,99,111,118,101,114,121,32,111,102,102,117,110,100,97,109,101,110,116,97,108,32,109,101,116,114,111,112,111,108,105,116,97,110,116,104,101,32,111,112,112,111,115,105,116,101,34,32,120,109,108,58,108,97,110,103,61,34,100,101,108,105,98,101,114,97,116,101,108,121,97,108,105,103,110,61,99,101,110,116,101,114,101,118,111,108,117,116,105,111,110,32,111,102,112,114,101,115,101,114,118,97,116,105,111,110,105,109,112,114,111,118,101,109,101,110,116,115,98,101,103,105,110,110,105,110,103,32,105,110,74,101,115,117,115,32,67,104,114,105,115,116,80,117,98,108,105,99,97,116,105,111,110,115,100,105,115,97,103,114,101,101,109,101,110,116,116,101,120,116,45,97,108,105,103,110,58,114,44,32,102,117,110,99,116,105,111,110,40,41,115,105,109,105,108,97,114,105,116,105,101,115,98,111,100,121,62,60,47,104,116,109,108,62,105,115,32,99,117,114,114,101,110,116,108,121,97,108,112,104,97,98,101,116,105,99,97,108,105,115,32,115,111,109,101,116,105,109,101,115,116,121,112,101,61,34,105,109,97,103,101,47,109,97,110,121,32,111,102,32,116,104,101,32,102,108,111,119,58,104,105,100,100,101,110,59,97,118,97,105,108,97,98,108,101,32,105,110,100,101,115,99,114,105,98,101,32,116,104,101,101,120,105,115,116,101,110,99,101,32,111,102,97,108,108,32,111,118,101,114,32,116,104,101,116,104,101,32,73,110,116,101,114,110,101,116,9,60,117,108,32,99,108,97,115,115,61,34,105,110,115,116,97,108,108,97,116,105,111,110,110,101,105,103,104,98,111,114,104,111,111,100,97,114,109,101,100,32,102,111,114,99,101,115,114,101,100,117,99,105,110,103,32,116,104,101,99,111,110,116,105,110,117,101,115,32,116,111,78,111,110,101,116,104,101,108,101,115,115,44,116,101,109,112,101,114,97,116,117,114,101,115,10,9,9,60,97,32,104,114,101,102,61,34,99,108,111,115,101,32,116,111,32,116,104,101,101,120,97,109,112,108,101,115,32,111,102,32,105,115,32,97,98,111,117,116,32,116,104,101,40,115,101,101,32,98,101,108,111,119,41,46,34,32,105,100,61,34,115,101,97,114,99,104,112,114,111,102,101,115,115,105,111,110,97,108,105,115,32,97,118,97,105,108,97,98,108,101,116,104,101,32,111,102,102,105,99,105,97,108,9,9,60,47,115,99,114,105,112,116,62,10,10,9,9,60,100,105,118,32,105,100,61,34,97,99,99,101,108,101,114,97,116,105,111,110,116,104,114,111,117,103,104,32,116,104,101,32,72,97,108,108,32,111,102,32,70,97,109,101,100,101,115,99,114,105,112,116,105,111,110,115,116,114,97,110,115,108,97,116,105,111,110,115,105,110,116,101,114,102,101,114,101,110,99,101,32,116,121,112,101,61,39,116,101,120,116,47,114,101,99,101,110,116,32,121,101,97,114,115,105,110,32,116,104,101,32,119,111,114,108,100,118,101,114,121,32,112,111,112,117,108,97,114,123,98,97,99,107,103,114,111,117,110,100,58,116,114,97,100,105,116,105,111,110,97,108,32,115,111,109,101,32,111,102,32,116,104,101,32,99,111,110,110,101,99,116,101,100,32,116,111,101,120,112,108,111,105,116,97,116,105,111,110,101,109,101,114,103,101,110,99,101,32,111,102,99,111,110,115,116,105,116,117,116,105,111,110,65,32,72,105,115,116,111,114,121,32,111,102,115,105,103,110,105,102,105,99,97,110,116,32,109,97,110,117,102,97,99,116,117,114,101,100,101,120,112,101,99,116,97,116,105,111,110,115,62,60,110,111,115,99,114,105,112,116,62,60,99,97,110,32,98,101,32,102,111,117,110,100,98,101,99,97,117,115,101,32,116,104,101,32,104,97,115,32,110,111,116,32,98,101,101,110,110,101,105,103,104,98,111,117,114,105,110,103,119,105,116,104,111,117,116,32,116,104,101,32,97,100,100,101,100,32,116,111,32,116,104,101,9,60,108,105,32,99,108,97,115,115,61,34,105,110,115,116,114,117,109,101,110,116,97,108,83,111,118,105,101,116,32,85,110,105,111,110,97,99,107,110,111,119,108,101,100,103,101,100,119,104,105,99,104,32,99,97,110,32,98,101,110,97,109,101,32,102,111,114,32,116,104,101,97,116,116,101,110,116,105,111,110,32,116,111,97,116,116,101,109,112,116,115,32,116,111,32,100,101,118,101,108,111,112,109,101,110,116,115,73,110,32,102,97,99,116,44,32,116,104,101,60,108,105,32,99,108,97,115,115,61,34,97,105,109,112,108,105,99,97,116,105,111,110,115,115,117,105,116,97,98,108,101,32,102,111,114,109,117,99,104,32,111,102,32,116,104,101,32,99,111,108,111,110,105,122,97,116,105,111,110,112,114,101,115,105,100,101,110,116,105,97,108,99,97,110,99,101,108,66,117,98,98,108,101,32,73,110,102,111,114,109,97,116,105,111,110,109,111,115,116,32,111,102,32,116,104,101,32,105,115,32,100,101,115,99,114,105,98,101,100,114,101,115,116,32,111,102,32,116,104,101,32,109,111,114,101,32,111,114,32,108,101,115,115,105,110,32,83,101,112,116,101,109,98,101,114,73,110,116,101,108,108,105,103,101,110,99,101,115,114,99,61,34,104,116,116,112,58,47,47,112,120,59,32,104,101,105,103,104,116,58,32,97,118,97,105,108,97,98,108,101,32,116,111,109,97,110,117,102,97,99,116,117,114,101,114,104,117,109,97,110,32,114,105,103,104,116,115,108,105,110,107,32,104,114,101,102,61,34,47,97,118,97,105,108,97,98,105,108,105,116,121,112,114,111,112,111,114,116,105,111,110,97,108,111,117,116,115,105,100,101,32,116,104,101,32,97,115,116,114,111,110,111,109,105,99,97,108,104,117,109,97,110,32,98,101,105,110,103,115,110,97,109,101,32,111,102,32,116,104,101,32,97,114,101,32,102,111,117,110,100,32,105,110,97,114,101,32,98,97,115,101,100,32,111,110,115,109,97,108,108,101,114,32,116,104,97,110,97,32,112,101,114,115,111,110,32,119,104,111,101,120,112,97,110,115,105,111,110,32,111,102,97,114,103,117,105,110,103,32,116,104,97,116,110,111,119,32,107,110,111,119,110,32,97,115,73,110,32,116,104,101,32,101,97,114,108,121,105,110,116,101,114,109,101,100,105,97,116,101,100,101,114,105,118,101,100,32,102,114,111,109,83,99,97,110,100,105,110,97,118,105,97,110,60,47,97,62,60,47,100,105,118,62,13,10,99,111,110,115,105,100,101,114,32,116,104,101,97,110,32,101,115,116,105,109,97,116,101,100,116,104,101,32,78,97,116,105,111,110,97,108,60,100,105,118,32,105,100,61,34,112,97,103,114,101,115,117,108,116,105,110,103,32,105,110,99,111,109,109,105,115,115,105,111,110,101,100,97,110,97,108,111,103,111,117,115,32,116,111,97,114,101,32,114,101,113,117,105,114,101,100,47,117,108,62,10,60,47,100,105,118,62,10,119,97,115,32,98,97,115,101,100,32,111,110,97,110,100,32,98,101,99,97,109,101,32,97,38,110,98,115,112,59,38,110,98,115,112,59,116,34,32,118,97,108,117,101,61,34,34,32,119,97,115,32,99,97,112,116,117,114,101,100,110,111,32,109,111,114,101,32,116,104,97,110,114,101,115,112,101,99,116,105,118,101,108,121,99,111,110,116,105,110,117,101,32,116,111,32,62,13,10,60,104,101,97,100,62,13,10,60,119,101,114,101,32,99,114,101,97,116,101,100,109,111,114,101,32,103,101,110,101,114,97,108,105,110,102,111,114,109,97,116,105,111,110,32,117,115,101,100,32,102,111,114,32,116,104,101,105,110,100,101,112,101,110,100,101,110,116,32,116,104,101,32,73,109,112,101,114,105,97,108,99,111,109,112,111,110,101,110,116,32,111,102,116,111,32,116,104,101,32,110,111,114,116,104,105,110,99,108,117,100,101,32,116,104,101,32,67,111,110,115,116,114,117,99,116,105,111,110,115,105,100,101,32,111,102,32,116,104,101,32,119,111,117,108,100,32,110,111,116,32,98,101,102,111,114,32,105,110,115,116,97,110,99,101,105,110,118,101,110,116,105,111,110,32,111,102,109,111,114,101,32,99,111,109,112,108,101,120,99,111,108,108,101,99,116,105,118,101,108,121,98,97,99,107,103,114,111,117,110,100,58,32,116,101,120,116,45,97,108,105,103,110,58,32,105,116,115,32,111,114,105,103,105,110,97,108,105,110,116,111,32,97,99,99,111,117,110,116,116,104,105,115,32,112,114,111,99,101,115,115,97,110,32,101,120,116,101,110,115,105,118,101,104,111,119,101,118,101,114,44,32,116,104,101,116,104,101,121,32,97,114,101,32,110,111,116,114,101,106,101,99,116,101,100,32,116,104,101,99,114,105,116,105,99,105,115,109,32,111,102,100,117,114,105,110,103,32,119,104,105,99,104,112,114,111,98,97,98,108,121,32,116,104,101,116,104,105,115,32,97,114,116,105,99,108,101,40,102,117,110,99,116,105,111,110,40,41,123,73,116,32,115,104,111,117,108,100,32,98,101,97,110,32,97,103,114,101,101,109,101,110,116,97,99,99,105,100,101,110,116,97,108,108,121,100,105,102,102,101,114,115,32,102,114,111,109,65,114,99,104,105,116,101,99,116,117,114,101,98,101,116,116,101,114,32,107,110,111,119,110,97,114,114,97,110,103,101,109,101,110,116,115,105,110,102,108,117,101,110,99,101,32,111,110,97,116,116,101,110,100,101,100,32,116,104,101,105,100,101,110,116,105,99,97,108,32,116,111,115,111,117,116,104,32,111,102,32,116,104,101,112,97,115,115,32,116,104,114,111,117,103,104,120,109,108,34,32,116,105,116,108,101,61,34,119,101,105,103,104,116,58,98,111,108,100,59,99,114,101,97,116,105,110,103,32,116,104,101,100,105,115,112,108,97,121,58,110,111,110,101,114,101,112,108,97,99,101,100,32,116,104,101,60,105,109,103,32,115,114,99,61,34,47,105,104,116,116,112,115,58,47,47,119,119,119,46,87,111,114,108,100,32,87,97,114,32,73,73,116,101,115,116,105,109,111,110,105,97,108,115,102,111,117,110,100,32,105,110,32,116,104,101,114,101,113,117,105,114,101,100,32,116,111,32,97,110,100,32,116,104,97,116,32,116,104,101,98,101,116,119,101,101,110,32,116,104,101,32,119,97,115,32,100,101,115,105,103,110,101,100,99,111,110,115,105,115,116,115,32,111,102,32,99,111,110,115,105,100,101,114,97,98,108,121,112,117,98,108,105,115,104,101,100,32,98,121,116,104,101,32,108,97,110,103,117,97,103,101,67,111,110,115,101,114,118,97,116,105,111,110,99,111,110,115,105,115,116,101,100,32,111,102,114,101,102,101,114,32,116,111,32,116,104,101,98,97,99,107,32,116,111,32,116,104,101,32,99,115,115,34,32,109,101,100,105,97,61,34,80,101,111,112,108,101,32,102,114,111,109,32,97,118,97,105,108,97,98,108,101,32,111,110,112,114,111,118,101,100,32,116,111,32,98,101,115,117,103,103,101,115,116,105,111,110,115,34,119,97,115,32,107,110,111,119,110,32,97,115,118,97,114,105,101,116,105,101,115,32,111,102,108,105,107,101,108,121,32,116,111,32,98,101,99,111,109,112,114,105,115,101,100,32,111,102,115,117,112,112,111,114,116,32,116,104,101,32,104,97,110,100,115,32,111,102,32,116,104,101,99,111,117,112,108,101,100,32,119,105,116,104,99,111,110,110,101,99,116,32,97,110,100,32,98,111,114,100,101,114,58,110,111,110,101,59,112,101,114,102,111,114,109,97,110,99,101,115,98,101,102,111,114,101,32,98,101,105,110,103,108,97,116,101,114,32,98,101,99,97,109,101,99,97,108,99,117,108,97,116,105,111,110,115,111,102,116,101,110,32,99,97,108,108,101,100,114,101,115,105,100,101,110,116,115,32,111,102,109,101,97,110,105,110,103,32,116,104,97,116,62,60,108,105,32,99,108,97,115,115,61,34,101,118,105,100,101,110,99,101,32,102,111,114,101,120,112,108,97,110,97,116,105,111,110,115,101,110,118,105,114,111,110,109,101,110,116,115,34,62,60,47,97,62,60,47,100,105,118,62,119,104,105,99,104,32,97,108,108,111,119,115,73,110,116,114,111,100,117,99,116,105,111,110,100,101,118,101,108,111,112,101,100,32,98,121,97,32,119,105,100,101,32,114,97,110,103,101,111,110,32,98,101,104,97,108,102,32,111,102,118,97,108,105,103,110,61,34,116,111,112,34,112,114,105,110,99,105,112,108,101,32,111,102,97,116,32,116,104,101,32,116,105,109,101,44,60,47,110,111,115,99,114,105,112,116,62,13,115,97,105,100,32,116,111,32,104,97,118,101,105,110,32,116,104,101,32,102,105,114,115,116,119,104,105,108,101,32,111,116,104,101,114,115,104,121,112,111,116,104,101,116,105,99,97,108,112,104,105,108,111,115,111,112,104,101,114,115,112,111,119,101,114,32,111,102,32,116,104,101,99,111,110,116,97,105,110,101,100,32,105,110,112,101,114,102,111,114,109,101,100,32,98,121,105,110,97,98,105,108,105,116,121,32,116,111,119,101,114,101,32,119,114,105,116,116,101,110,115,112,97,110,32,115,116,121,108,101,61,34,105,110,112,117,116,32,110,97,109,101,61,34,116,104,101,32,113,117,101,115,116,105,111,110,105,110,116,101,110,100,101,100,32,102,111,114,114,101,106,101,99,116,105,111,110,32,111,102,105,109,112,108,105,101,115,32,116,104,97,116,105,110,118,101,110,116,101,100,32,116,104,101,116,104,101,32,115,116,97,110,100,97,114,100,119,97,115,32,112,114,111,98,97,98,108,121,108,105,110,107,32,98,101,116,119,101,101,110,112,114,111,102,101,115,115,111,114,32,111,102,105,110,116,101,114,97,99,116,105,111,110,115,99,104,97,110,103,105,110,103,32,116,104,101,73,110,100,105,97,110,32,79,99,101,97,110,32,99,108,97,115,115,61,34,108,97,115,116,119,111,114,107,105,110,103,32,119,105,116,104,39,104,116,116,112,58,47,47,119,119,119,46,121,101,97,114,115,32,98,101,102,111,114,101,84,104,105,115,32,119,97,115,32,116,104,101,114,101,99,114,101,97,116,105,111,110,97,108,101,110,116,101,114,105,110,103,32,116,104,101,109,101,97,115,117,114,101,109,101,110,116,115,97,110,32,101,120,116,114,101,109,101,108,121,118,97,108,117,101,32,111,102,32,116,104,101,115,116,97,114,116,32,111,102,32,116,104,101,10,60,47,115,99,114,105,112,116,62,10,10,97,110,32,101,102,102,111,114,116,32,116,111,105,110,99,114,101,97,115,101,32,116,104,101,116,111,32,116,104,101,32,115,111,117,116,104,115,112,97,99,105,110,103,61,34,48,34,62,115,117,102,102,105,99,105,101,110,116,108,121,116,104,101,32,69,117,114,111,112,101,97,110,99,111,110,118,101,114,116,101,100,32,116,111,99,108,101,97,114,84,105,109,101,111,117,116,100,105,100,32,110,111,116,32,104,97,118,101,99,111,110,115,101,113,117,101,110,116,108,121,102,111,114,32,116,104,101,32,110,101,120,116,101,120,116,101,110,115,105,111,110,32,111,102,101,99,111,110,111,109,105,99,32,97,110,100,97,108,116,104,111,117,103,104,32,116,104,101,97,114,101,32,112,114,111,100,117,99,101,100,97,110,100,32,119,105,116,104,32,116,104,101,105,110,115,117,102,102,105,99,105,101,110,116,103,105,118,101,110,32,98,121,32,116,104,101,115,116,97,116,105,110,103,32,116,104,97,116,101,120,112,101,110,100,105,116,117,114,101,115,60,47,115,112,97,110,62,60,47,97,62,10,116,104,111,117,103,104,116,32,116,104,97,116,111,110,32,116,104,101,32,98,97,115,105,115,99,101,108,108,112,97,100,100,105,110,103,61,105,109,97,103,101,32,111,102,32,116,104,101,114,101,116,117,114,110,105,110,103,32,116,111,105,110,102,111,114,109,97,116,105,111,110,44,115,101,112,97,114,97,116,101,100,32,98,121,97,115,115,97,115,115,105,110,97,116,101,100,115,34,32,99,111,110,116,101,110,116,61,34,97,117,116,104,111,114,105,116,121,32,111,102,110,111,114,116,104,119,101,115,116,101,114,110,60,47,100,105,118,62,10,60,100,105,118,32,34,62,60,47,100,105,118,62,13,10,32,32,99,111,110,115,117,108,116,97,116,105,111,110,99,111,109,109,117,110,105,116,121,32,111,102,116,104,101,32,110,97,116,105,111,110,97,108,105,116,32,115,104,111,117,108,100,32,98,101,112,97,114,116,105,99,105,112,97,110,116,115,32,97,108,105,103,110,61,34,108,101,102,116,116,104,101,32,103,114,101,97,116,101,115,116,115,101,108,101,99,116,105,111,110,32,111,102,115,117,112,101,114,110,97,116,117,114,97,108,100,101,112,101,110,100,101,110,116,32,111,110,105,115,32,109,101,110,116,105,111,110,101,100,97,108,108,111,119,105,110,103,32,116,104,101,119,97,115,32,105,110,118,101,110,116,101,100,97,99,99,111,109,112,97,110,121,105,110,103,104,105,115,32,112,101,114,115,111,110,97,108,97,118,97,105,108,97,98,108,101,32,97,116,115,116,117,100,121,32,111,102,32,116,104,101,111,110,32,116,104,101,32,111,116,104,101,114,101,120,101,99,117,116,105,111,110,32,111,102,72,117,109,97,110,32,82,105,103,104,116,115,116,101,114,109,115,32,111,102,32,116,104,101,97,115,115,111,99,105,97,116,105,111,110,115,114,101,115,101,97,114,99,104,32,97,110,100,115,117,99,99,101,101,100,101,100,32,98,121,100,101,102,101,97,116,101,100,32,116,104,101,97,110,100,32,102,114,111,109,32,116,104,101,98,117,116,32,116,104,101,121,32,97,114,101,99,111,109,109,97,110,100,101,114,32,111,102,115,116,97,116,101,32,111,102,32,116,104,101,121,101,97,114,115,32,111,102,32,97,103,101,116,104,101,32,115,116,117,100,121,32,111,102,60,117,108,32,99,108,97,115,115,61,34,115,112,108,97,99,101,32,105,110,32,116,104,101,119,104,101,114,101,32,104,101,32,119,97,115,60,108,105,32,99,108,97,115,115,61,34,102,116,104,101,114,101,32,97,114,101,32,110,111,119,104,105,99,104,32,98,101,99,97,109,101,104,101,32,112,117,98,108,105,115,104,101,100,101,120,112,114,101,115,115,101,100,32,105,110,116,111,32,119,104,105,99,104,32,116,104,101,99,111,109,109,105,115,115,105,111,110,101,114,102,111,110,116,45,119,101,105,103,104,116,58,116,101,114,114,105,116,111,114,121,32,111,102,101,120,116,101,110,115,105,111,110,115,34,62,82,111,109,97,110,32,69,109,112,105,114,101,101,113,117,97,108,32,116,111,32,116,104,101,73,110,32,99,111,110,116,114,97,115,116,44,104,111,119,101,118,101,114,44,32,97,110,100,105,115,32,116,121,112,105,99,97,108,108,121,97,110,100,32,104,105,115,32,119,105,102,101,40,97,108,115,111,32,99,97,108,108,101,100,62,60,117,108,32,99,108,97,115,115,61,34,101,102,102,101,99,116,105,118,101,108,121,32,101,118,111,108,118,101,100,32,105,110,116,111,115,101,101,109,32,116,111,32,104,97,118,101,119,104,105,99,104,32,105,115,32,116,104,101,116,104,101,114,101,32,119,97,115,32,110,111,97,110,32,101,120,99,101,108,108,101,110,116,97,108,108,32,111,102,32,116,104,101,115,101,100,101,115,99,114,105,98,101,100,32,98,121,73,110,32,112,114,97,99,116,105,99,101,44,98,114,111,97,100,99,97,115,116,105,110,103,99,104,97,114,103,101,100,32,119,105,116,104,114,101,102,108,101,99,116,101,100,32,105,110,115,117,98,106,101,99,116,101,100,32,116,111,109,105,108,105,116,97,114,121,32,97,110,100,116,111,32,116,104,101,32,112,111,105,110,116,101,99,111,110,111,109,105,99,97,108,108,121,115,101,116,84,97,114,103,101,116,105,110,103,97,114,101,32,97,99,116,117,97,108,108,121,118,105,99,116,111,114,121,32,111,118,101,114,40,41,59,60,47,115,99,114,105,112,116,62,99,111,110,116,105,110,117,111,117,115,108,121,114,101,113,117,105,114,101,100,32,102,111,114,101,118,111,108,117,116,105,111,110,97,114,121,97,110,32,101,102,102,101,99,116,105,118,101,110,111,114,116,104,32,111,102,32,116,104,101,44,32,119,104,105,99,104,32,119,97,115,32,102,114,111,110,116,32,111,102,32,116,104,101,111,114,32,111,116,104,101,114,119,105,115,101,115,111,109,101,32,102,111,114,109,32,111,102,104,97,100,32,110,111,116,32,98,101,101,110,103,101,110,101,114,97,116,101,100,32,98,121,105,110,102,111,114,109,97,116,105,111,110,46,112,101,114,109,105,116,116,101,100,32,116,111,105,110,99,108,117,100,101,115,32,116,104,101,100,101,118,101,108,111,112,109,101,110,116,44,101,110,116,101,114,101,100,32,105,110,116,111,116,104,101,32,112,114,101,118,105,111,117,115,99,111,110,115,105,115,116,101,110,116,108,121,97,114,101,32,107,110,111,119,110,32,97,115,116,104,101,32,102,105,101,108,100,32,111,102,116,104,105,115,32,116,121,112,101,32,111,102,103,105,118,101,110,32,116,111,32,116,104,101,116,104,101,32,116,105,116,108,101,32,111,102,99,111,110,116,97,105,110,115,32,116,104,101,105,110,115,116,97,110,99,101,115,32,111,102,105,110,32,116,104,101,32,110,111,114,116,104,100,117,101,32,116,111,32,116,104,101,105,114,97,114,101,32,100,101,115,105,103,110,101,100,99,111,114,112,111,114,97,116,105,111,110,115,119,97,115,32,116,104,97,116,32,116,104,101,111,110,101,32,111,102,32,116,104,101,115,101,109,111,114,101,32,112,111,112,117,108,97,114,115,117,99,99,101,101,100,101,100,32,105,110,115,117,112,112,111,114,116,32,102,114,111,109,105,110,32,100,105,102,102,101,114,101,110,116,100,111,109,105,110,97,116,101,100,32,98,121,100,101,115,105,103,110,101,100,32,102,111,114,111,119,110,101,114,115,104,105,112,32,111,102,97,110,100,32,112,111,115,115,105,98,108,121,115,116,97,110,100,97,114,100,105,122,101,100,114,101,115,112,111,110,115,101,84,101,120,116,119,97,115,32,105,110,116,101,110,100,101,100,114,101,99,101,105,118,101,100,32,116,104,101,97,115,115,117,109,101,100,32,116,104,97,116,97,114,101,97,115,32,111,102,32,116,104,101,112,114,105,109,97,114,105,108,121,32,105,110,116,104,101,32,98,97,115,105,115,32,111,102,105,110,32,116,104,101,32,115,101,110,115,101,97,99,99,111,117,110,116,115,32,102,111,114,100,101,115,116,114,111,121,101,100,32,98,121,97,116,32,108,101,97,115,116,32,116,119,111,119,97,115,32,100,101,99,108,97,114,101,100,99,111,117,108,100,32,110,111,116,32,98,101,83,101,99,114,101,116,97,114,121,32,111,102,97,112,112,101,97,114,32,116,111,32,98,101,109,97,114,103,105,110,45,116,111,112,58,49,47,94,92,115,43,124,92,115,43,36,47,103,101,41,123,116,104,114,111,119,32,101,125,59,116,104,101,32,115,116,97,114,116,32,111,102,116,119,111,32,115,101,112,97,114,97,116,101,108,97,110,103,117,97,103,101,32,97,110,100,119,104,111,32,104,97,100,32,98,101,101,110,111,112,101,114,97,116,105,111,110,32,111,102,100,101,97,116,104,32,111,102,32,116,104,101,114,101,97,108,32,110,117,109,98,101,114,115,9,60,108,105,110,107,32,114,101,108,61,34,112,114,111,118,105,100,101,100,32,116,104,101,116,104,101,32,115,116,111,114,121,32,111,102,99,111,109,112,101,116,105,116,105,111,110,115,101,110,103,108,105,115,104,32,40,85,75,41,101,110,103,108,105,115,104,32,40,85,83,41,208,156,208,190,208,189,208,179,208,190,208,187,208,161,209,128,208,191,209,129,208,186,208,184,209,129,209,128,208,191,209,129,208,186,208,184,209,129,209,128,208,191,209,129,208,186,208,190,217,132,216,185,216,177,216,168,217,138,216,169,230,173,163,233,171,148,228,184,173,230,150,135,231,174,128,228,189,147,228,184,173,230,150,135,231,185,129,228,189,147,228,184,173,230,150,135,230,156,137,233,153,144,229,133,172,229,143,184,228,186,186,230,176,145,230,148,191,229,186,156,233,152,191,233,135,140,229,183,180,229,183,180,231,164,190,228,188,154,228,184,187,228,185,137,230,147,141,228,189,156,231,179,187,231,187,159,230,148,191,231,173,150,230,179,149,232,167,132,105,110,102,111,114,109,97,99,105,195,179,110,104,101,114,114,97,109,105,101,110,116,97,115,101,108,101,99,116,114,195,179,110,105,99,111,100,101,115,99,114,105,112,99,105,195,179,110,99,108,97,115,105,102,105,99,97,100,111,115,99,111,110,111,99,105,109,105,101,110,116,111,112,117,98,108,105,99,97,99,105,195,179,110,114,101,108,97,99,105,111,110,97,100,97,115,105,110,102,111,114,109,195,161,116,105,99,97,114,101,108,97,99,105,111,110,97,100,111,115,100,101,112,97,114,116,97,109,101,110,116,111,116,114,97,98,97,106,97,100,111,114,101,115,100,105,114,101,99,116,97,109,101,110,116,101,97,121,117,110,116,97,109,105,101,110,116,111,109,101,114,99,97,100,111,76,105,98,114,101,99,111,110,116,195,161,99,116,101,110,111,115,104,97,98,105,116,97,99,105,111,110,101,115,99,117,109,112,108,105,109,105,101,110,116,111,114,101,115,116,97,117,114,97,110,116,101,115,100,105,115,112,111,115,105,99,105,195,179,110,99,111,110,115,101,99,117,101,110,99,105,97,101,108,101,99,116,114,195,179,110,105,99,97,97,112,108,105,99,97,99,105,111,110,101,115,100,101,115,99,111,110,101,99,116,97,100,111,105,110,115,116,97,108,97,99,105,195,179,110,114,101,97,108,105,122,97,99,105,195,179,110,117,116,105,108,105,122,97,99,105,195,179,110,101,110,99,105,99,108,111,112,101,100,105,97,101,110,102,101,114,109,101,100,97,100,101,115,105,110,115,116,114,117,109,101,110,116,111,115,101,120,112,101,114,105,101,110,99,105,97,115,105,110,115,116,105,116,117,99,105,195,179,110,112,97,114,116,105,99,117,108,97,114,101,115,115,117,98,99,97,116,101,103,111,114,105,97,209,130,208,190,208,187,209,140,208,186,208,190,208,160,208,190,209,129,209,129,208,184,208,184,209,128,208,176,208,177,208,190,209,130,209,139,208,177,208,190,208,187,209,140,209,136,208,181,208,191,209,128,208,190,209,129,209,130,208,190,208,188,208,190,208,182,208,181,209,130,208,181,208,180,209,128,209,131,208,179,208,184,209,133,209,129,208,187,209,131,209,135,208,176,208,181,209,129,208,181,208,185,209,135,208,176,209,129,208,178,209,129,208,181,208,179,208,180,208,176,208,160,208,190,209,129,209,129,208,184,209,143,208,156,208,190,209,129,208,186,208,178,208,181,208,180,209,128,209,131,208,179,208,184,208,181,208,179,208,190,209,128,208,190,208,180,208,176,208,178,208,190,208,191,209,128,208,190,209,129,208,180,208,176,208,189,208,189,209,139,209,133,208,180,208,190,208,187,208,182,208,189,209,139,208,184,208,188,208,181,208,189,208,189,208,190,208,156,208,190,209,129,208,186,208,178,209,139,209,128,209,131,208,177,208,187,208,181,208,185,208,156,208,190,209,129,208,186,208,178,208,176,209,129,209,130,209,128,208,176,208,189,209,139,208,189,208,184,209,135,208,181,208,179,208,190,209,128,208,176,208,177,208,190,209,130,208,181,208,180,208,190,208,187,208,182,208,181,208,189,209,131,209,129,208,187,209,131,208,179,208,184,209,130,208,181,208,191,208,181,209,128,209,140,208,158,208,180,208,189,208,176,208,186,208,190,208,191,208,190,209,130,208,190,208,188,209,131,209,128,208,176,208,177,208,190,209,130,209,131,208,176,208,191,209,128,208,181,208,187,209,143,208,178,208,190,208,190,208,177,209,137,208,181,208,190,208,180,208,189,208,190,208,179,208,190,209,129,208,178,208,190,208,181,208,179,208,190,209,129,209,130,208,176,209,130,209,140,208,184,208,180,209,128,209,131,208,179,208,190,208,185,209,132,208,190,209,128,209,131,208,188,208,181,209,133,208,190,209,128,208,190,209,136,208,190,208,191,209,128,208,190,209,130,208,184,208,178,209,129,209,129,209,139,208,187,208,186,208,176,208,186,208,176,208,182,208,180,209,139,208,185,208,178,208,187,208,176,209,129,209,130,208,184,208,179,209,128,209,131,208,191,208,191,209,139,208,178,208,188,208,181,209,129,209,130,208,181,209,128,208,176,208,177,208,190,209,130,208,176,209,129,208,186,208,176,208,183,208,176,208,187,208,191,208,181,209,128,208,178,209,139,208,185,208,180,208,181,208,187,208,176,209,130,209,140,208,180,208,181,208,189,209,140,208,179,208,184,208,191,208,181,209,128,208,184,208,190,208,180,208,177,208,184,208,183,208,189,208,181,209,129,208,190,209,129,208,189,208,190,208,178,208,181,208,188,208,190,208,188,208,181,208,189,209,130,208,186,209,131,208,191,208,184,209,130,209,140,208,180,208,190,208,187,208,182,208,189,208,176,209,128,208,176,208,188,208,186,208,176,209,133,208,189,208,176,209,135,208,176,208,187,208,190,208,160,208,176,208,177,208,190,209,130,208,176,208,162,208,190,208,187,209,140,208,186,208,190,209,129,208,190,208,178,209,129,208,181,208,188,208,178,209,130,208,190,209,128,208,190,208,185,208,189,208,176,209,135,208,176,208,187,208,176,209,129,208,191,208,184,209,129,208,190,208,186,209,129,208,187,209,131,208,182,208,177,209,139,209,129,208,184,209,129,209,130,208,181,208,188,208,191,208,181,209,135,208,176,209,130,208,184,208,189,208,190,208,178,208,190,208,179,208,190,208,191,208,190,208,188,208,190,209,137,208,184,209,129,208,176,208,185,209,130,208,190,208,178,208,191,208,190,209,135,208,181,208,188,209,131,208,191,208,190,208,188,208,190,209,137,209,140,208,180,208,190,208,187,208,182,208,189,208,190,209,129,209,129,209,139,208,187,208,186,208,184,208,177,209,139,209,129,209,130,209,128,208,190,208,180,208,176,208,189,208,189,209,139,208,181,208,188,208,189,208,190,208,179,208,184,208,181,208,191,209,128,208,190,208,181,208,186,209,130,208,161,208,181,208,185,209,135,208,176,209,129,208,188,208,190,208,180,208,181,208,187,208,184,209,130,208,176,208,186,208,190,208,179,208,190,208,190,208,189,208,187,208,176,208,185,208,189,208,179,208,190,209,128,208,190,208,180,208,181,208,178,208,181,209,128,209,129,208,184,209,143,209,129,209,130,209,128,208,176,208,189,208,181,209,132,208,184,208,187,209,140,208,188,209,139,209,131,209,128,208,190,208,178,208,189,209,143,209,128,208,176,208,183,208,189,209,139,209,133,208,184,209,129,208,186,208,176,209,130,209,140,208,189,208,181,208,180,208,181,208,187,209,142,209,143,208,189,208,178,208,176,209,128,209,143,208,188,208,181,208,189,209,140,209,136,208,181,208,188,208,189,208,190,208,179,208,184,209,133,208,180,208,176,208,189,208,189,208,190,208,185,208,183,208,189,208,176,209,135,208,184,209,130,208,189,208,181,208,187,209,140,208,183,209,143,209,132,208,190,209,128,209,131,208,188,208,176,208,162,208,181,208,191,208,181,209,128,209,140,208,188,208,181,209,129,209,143,209,134,208,176,208,183,208,176,209,137,208,184,209,130,209,139,208,155,209,131,209,135,209,136,208,184,208,181,224,164,168,224,164,185,224,165,128,224,164,130,224,164,149,224,164,176,224,164,168,224,165,135,224,164,133,224,164,170,224,164,168,224,165,135,224,164,149,224,164,191,224,164,175,224,164,190,224,164,149,224,164,176,224,165,135,224,164,130,224,164,133,224,164,168,224,165,141,224,164,175,224,164,149,224,165,141,224,164,175,224,164,190,224,164,151,224,164,190,224,164,135,224,164,161,224,164,172,224,164,190,224,164,176,224,165,135,224,164,149,224,164,191,224,164,184,224,165,128,224,164,166,224,164,191,224,164,175,224,164,190,224,164,170,224,164,185,224,164,178,224,165,135,224,164,184,224,164,191,224,164,130,224,164,185,224,164,173,224,164,190,224,164,176,224,164,164,224,164,133,224,164,170,224,164,168,224,165,128,224,164,181,224,164,190,224,164,178,224,165,135,224,164,184,224,165,135,224,164,181,224,164,190,224,164,149,224,164,176,224,164,164,224,165,135,224,164,174,224,165,135,224,164,176,224,165,135,224,164,185,224,165,139,224,164,168,224,165,135,224,164,184,224,164,149,224,164,164,224,165,135,224,164,172,224,164,185,224,165,129,224,164,164,224,164,184,224,164,190,224,164,135,224,164,159,224,164,185,224,165,139,224,164,151,224,164,190,224,164,156,224,164,190,224,164,168,224,165,135,224,164,174,224,164,191,224,164,168,224,164,159,224,164,149,224,164,176,224,164,164,224,164,190,224,164,149,224,164,176,224,164,168,224,164,190,224,164,137,224,164,168,224,164,149,224,165,135,224,164,175,224,164,185,224,164,190,224,164,129,224,164,184,224,164,172,224,164,184,224,165,135,224,164,173,224,164,190,224,164,183,224,164,190,224,164,134,224,164,170,224,164,149,224,165,135,224,164,178,224,164,191,224,164,175,224,165,135,224,164,182,224,165,129,224,164,176,224,165,130,224,164,135,224,164,184,224,164,149,224,165,135,224,164,152,224,164,130,224,164,159,224,165,135,224,164,174,224,165,135,224,164,176,224,165,128,224,164,184,224,164,149,224,164,164,224,164,190,224,164,174,224,165,135,224,164,176,224,164,190,224,164,178,224,165,135,224,164,149,224,164,176,224,164,133,224,164,167,224,164,191,224,164,149,224,164,133,224,164,170,224,164,168,224,164,190,224,164,184,224,164,174,224,164,190,224,164,156,224,164,174,224,165,129,224,164,157,224,165,135,224,164,149,224,164,190,224,164,176,224,164,163,224,164,185,224,165,139,224,164,164,224,164,190,224,164,149,224,164,161,224,164,188,224,165,128,224,164,175,224,164,185,224,164,190,224,164,130,224,164,185,224,165,139,224,164,159,224,164,178,224,164,182,224,164,172,224,165,141,224,164,166,224,164,178,224,164,191,224,164,175,224,164,190,224,164,156,224,165,128,224,164,181,224,164,168,224,164,156,224,164,190,224,164,164,224,164,190,224,164,149,224,165,136,224,164,184,224,165,135,224,164,134,224,164,170,224,164,149,224,164,190,224,164,181,224,164,190,224,164,178,224,165,128,224,164,166,224,165,135,224,164,168,224,165,135,224,164,170,224,165,130,224,164,176,224,165,128,224,164,170,224,164,190,224,164,168,224,165,128,224,164,137,224,164,184,224,164,149,224,165,135,224,164,185,224,165,139,224,164,151,224,165,128,224,164,172,224,165,136,224,164,160,224,164,149,224,164,134,224,164,170,224,164,149,224,165,128,224,164,181,224,164,176,224,165,141,224,164,183,224,164,151,224,164,190,224,164,130,224,164,181,224,164,134,224,164,170,224,164,149,224,165,139,224,164,156,224,164,191,224,164,178,224,164,190,224,164,156,224,164,190,224,164,168,224,164,190,224,164,184,224,164,185,224,164,174,224,164,164,224,164,185,224,164,174,224,165,135,224,164,130,224,164,137,224,164,168,224,164,149,224,165,128,224,164,175,224,164,190,224,164,185,224,165,130,224,164,166,224,164,176,224,165,141,224,164,156,224,164,184,224,165,130,224,164,154,224,165,128,224,164,170,224,164,184,224,164,130,224,164,166,224,164,184,224,164,181,224,164,190,224,164,178,224,164,185,224,165,139,224,164,168,224,164,190,224,164,185,224,165,139,224,164,164,224,165,128,224,164,156,224,165,136,224,164,184,224,165,135,224,164,181,224,164,190,224,164,170,224,164,184,224,164,156,224,164,168,224,164,164,224,164,190,224,164,168,224,165,135,224,164,164,224,164,190,224,164,156,224,164,190,224,164,176,224,165,128,224,164,152,224,164,190,224,164,175,224,164,178,224,164,156,224,164,191,224,164,178,224,165,135,224,164,168,224,165,128,224,164,154,224,165,135,224,164,156,224,164,190,224,164,130,224,164,154,224,164,170,224,164,164,224,165,141,224,164,176,224,164,151,224,165,130,224,164,151,224,164,178,224,164,156,224,164,190,224,164,164,224,165,135,224,164,172,224,164,190,224,164,185,224,164,176,224,164,134,224,164,170,224,164,168,224,165,135,224,164,181,224,164,190,224,164,185,224,164,168,224,164,135,224,164,184,224,164,149,224,164,190,224,164,184,224,165,129,224,164,172,224,164,185,224,164,176,224,164,185,224,164,168,224,165,135,224,164,135,224,164,184,224,164,184,224,165,135,224,164,184,224,164,185,224,164,191,224,164,164,224,164,172,224,164,161,224,164,188,224,165,135,224,164,152,224,164,159,224,164,168,224,164,190,224,164,164,224,164,178,224,164,190,224,164,182,224,164,170,224,164,190,224,164,130,224,164,154,224,164,182,224,165,141,224,164,176,224,165,128,224,164,172,224,164,161,224,164,188,224,165,128,224,164,185,224,165,139,224,164,164,224,165,135,224,164,184,224,164,190,224,164,136,224,164,159,224,164,182,224,164,190,224,164,175,224,164,166,224,164,184,224,164,149,224,164,164,224,165,128,224,164,156,224,164,190,224,164,164,224,165,128,224,164,181,224,164,190,224,164,178,224,164,190,224,164,185,224,164,156,224,164,190,224,164,176,224,164,170,224,164,159,224,164,168,224,164,190,224,164,176,224,164,150,224,164,168,224,165,135,224,164,184,224,164,161,224,164,188,224,164,149,224,164,174,224,164,191,224,164,178,224,164,190,224,164,137,224,164,184,224,164,149,224,165,128,224,164,149,224,165,135,224,164,181,224,164,178,224,164,178,224,164,151,224,164,164,224,164,190,224,164,150,224,164,190,224,164,168,224,164,190,224,164,133,224,164,176,224,165,141,224,164,165,224,164,156,224,164,185,224,164,190,224,164,130,224,164,166,224,165,135,224,164,150,224,164,190,224,164,170,224,164,185,224,164,178,224,165,128,224,164,168,224,164,191,224,164,175,224,164,174,224,164,172,224,164,191,224,164,168,224,164,190,224,164,172,224,165,136,224,164,130,224,164,149,224,164,149,224,164,185,224,165,128,224,164,130,224,164,149,224,164,185,224,164,168,224,164,190,224,164,166,224,165,135,224,164,164,224,164,190,224,164,185,224,164,174,224,164,178,224,165,135,224,164,149,224,164,190,224,164,171,224,165,128,224,164,156,224,164,172,224,164,149,224,164,191,224,164,164,224,165,129,224,164,176,224,164,164,224,164,174,224,164,190,224,164,130,224,164,151,224,164,181,224,164,185,224,165,128,224,164,130,224,164,176,224,165,139,224,164,156,224,164,188,224,164,174,224,164,191,224,164,178,224,165,128,224,164,134,224,164,176,224,165,139,224,164,170,224,164,184,224,165,135,224,164,168,224,164,190,224,164,175,224,164,190,224,164,166,224,164,181,224,164,178,224,165,135,224,164,168,224,165,135,224,164,150,224,164,190,224,164,164,224,164,190,224,164,149,224,164,176,224,165,128,224,164,172,224,164,137,224,164,168,224,164,149,224,164,190,224,164,156,224,164,181,224,164,190,224,164,172,224,164,170,224,165,130,224,164,176,224,164,190,224,164,172,224,164,161,224,164,188,224,164,190,224,164,184,224,165,140,224,164,166,224,164,190,224,164,182,224,165,135,224,164,175,224,164,176,224,164,149,224,164,191,224,164,175,224,165,135,224,164,149,224,164,185,224,164,190,224,164,130,224,164,133,224,164,149,224,164,184,224,164,176,224,164,172,224,164,168,224,164,190,224,164,143,224,164,181,224,164,185,224,164,190,224,164,130,224,164,184,224,165,141,224,164,165,224,164,178,224,164,174,224,164,191,224,164,178,224,165,135,224,164,178,224,165,135,224,164,150,224,164,149,224,164,181,224,164,191,224,164,183,224,164,175,224,164,149,224,165,141,224,164,176,224,164,130,224,164,184,224,164,174,224,165,130,224,164,185,224,164,165,224,164,190,224,164,168,224,164,190,216,170,216,179,216,170,216,183,217,138,216,185,217,133,216,180,216,167,216,177,217,131,216,169,216,168,217,136,216,167,216,179,216,183,216,169,216,167,217,132,216,181,217,129,216,173,216,169,217,133,217,136,216,167,216,182,217,138,216,185,216,167,217,132,216,174,216,167,216,181,216,169,216,167,217,132,217,133,216,178,217,138,216,175,216,167,217,132,216,185,216,167,217,133,216,169,216,167,217,132,217,131,216,167,216,170,216,168,216,167,217,132,216,177,216,175,217,136,216,175,216,168,216,177,217,134,216,167,217,133,216,172,216,167,217,132,216,175,217,136,217,132,216,169,216,167,217,132,216,185,216,167,217,132,217,133,216,167,217,132,217,133,217,136,217,130,216,185,216,167,217,132,216,185,216,177,216,168,217,138,216,167,217,132,216,179,216,177,217,138,216,185,216,167,217,132,216,172,217,136,216,167,217,132,216,167,217,132,216,176,217,135,216,167,216,168,216,167,217,132,216,173,217,138,216,167,216,169,216,167,217,132,216,173,217,130,217,136,217,130,216,167,217,132,217,131,216,177,217,138,217,133,216,167,217,132,216,185,216,177,216,167,217,130,217,133,216,173,217,129,217,136,216,184,216,169,216,167,217,132,216,171,216,167,217,134,217,138,217,133,216,180,216,167,217,135,216,175,216,169,216,167,217,132,217,133,216,177,216,163,216,169,216,167,217,132,217,130,216,177,216,162,217,134,216,167,217,132,216,180,216,168,216,167,216,168,216,167,217,132,216,173,217,136,216,167,216,177,216,167,217,132,216,172,216,175,217,138,216,175,216,167,217,132,216,163,216,179,216,177,216,169,216,167,217,132,216,185,217,132,217,136,217,133,217,133,216,172,217,133,217,136,216,185,216,169,216,167,217,132,216,177,216,173,217,133,217,134,216,167,217,132,217,134,217,130,216,167,216,183,217,129,217,132,216,179,216,183,217,138,217,134,216,167,217,132,217,131,217,136,217,138,216,170,216,167,217,132,216,175,217,134,217,138,216,167,216,168,216,177,217,131,216,167,216,170,217,135,216,167,217,132,216,177,217,138,216,167,216,182,216,170,216,173,217,138,216,167,216,170,217,138,216,168,216,170,217,136,217,130,217,138,216,170,216,167,217,132,216,163,217,136,217,132,217,137,216,167,217,132,216,168,216,177,217,138,216,175,216,167,217,132,217,131,217,132,216,167,217,133,216,167,217,132,216,177,216,167,216,168,216,183,216,167,217,132,216,180,216,174,216,181,217,138,216,179,217,138,216,167,216,177,216,167,216,170,216,167,217,132,216,171,216,167,217,132,216,171,216,167,217,132,216,181,217,132,216,167,216,169,216,167,217,132,216,173,216,175,217,138,216,171,216,167,217,132,216,178,217,136,216,167,216,177,216,167,217,132,216,174,217,132,217,138,216,172,216,167,217,132,216,172,217,133,217,138,216,185,216,167,217,132,216,185,216,167,217,133,217,135,216,167,217,132,216,172,217,133,216,167,217,132,216,167,217,132,216,179,216,167,216,185,216,169,217,133,216,180,216,167,217,135,216,175,217,135,216,167,217,132,216,177,216,166,217,138,216,179,216,167,217,132,216,175,216,174,217,136,217,132,216,167,217,132,217,129,217,134,217,138,216,169,216,167,217,132,217,131,216,170,216,167,216,168,216,167,217,132,216,175,217,136,216,177,217,138,216,167,217,132,216,175,216,177,217,136,216,179,216,167,216,179,216,170,216,186,216,177,217,130,216,170,216,181,216,167,217,133,217,138,217,133,216,167,217,132,216,168,217,134,216,167,216,170,216,167,217,132,216,185,216,184,217,138,217,133,101,110,116,101,114,116,97,105,110,109,101,110,116,117,110,100,101,114,115,116,97,110,100,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,46,106,112,103,34,32,119,105,100,116,104,61,34,99,111,110,102,105,103,117,114,97,116,105,111,110,46,112,110,103,34,32,119,105,100,116,104,61,34,60,98,111,100,121,32,99,108,97,115,115,61,34,77,97,116,104,46,114,97,110,100,111,109,40,41,99,111,110,116,101,109,112,111,114,97,114,121,32,85,110,105,116,101,100,32,83,116,97,116,101,115,99,105,114,99,117,109,115,116,97,110,99,101,115,46,97,112,112,101,110,100,67,104,105,108,100,40,111,114,103,97,110,105,122,97,116,105,111,110,115,60,115,112,97,110,32,99,108,97,115,115,61,34,34,62,60,105,109,103,32,115,114,99,61,34,47,100,105,115,116,105,110,103,117,105,115,104,101,100,116,104,111,117,115,97,110,100,115,32,111,102,32,99,111,109,109,117,110,105,99,97,116,105,111,110,99,108,101,97,114,34,62,60,47,100,105,118,62,105,110,118,101,115,116,105,103,97,116,105,111,110,102,97,118,105,99,111,110,46,105,99,111,34,32,109,97,114,103,105,110,45,114,105,103,104,116,58,98,97,115,101,100,32,111,110,32,116,104,101,32,77,97,115,115,97,99,104,117,115,101,116,116,115,116,97,98,108,101,32,98,111,114,100,101,114,61,105,110,116,101,114,110,97,116,105,111,110,97,108,97,108,115,111,32,107,110,111,119,110,32,97,115,112,114,111,110,117,110,99,105,97,116,105,111,110,98,97,99,107,103,114,111,117,110,100,58,35,102,112,97,100,100,105,110,103,45,108,101,102,116,58,70,111,114,32,101,120,97,109,112,108,101,44,32,109,105,115,99,101,108,108,97,110,101,111,117,115,38,108,116,59,47,109,97,116,104,38,103,116,59,112,115,121,99,104,111,108,111,103,105,99,97,108,105,110,32,112,97,114,116,105,99,117,108,97,114,101,97,114,99,104,34,32,116,121,112,101,61,34,102,111,114,109,32,109,101,116,104,111,100,61,34,97,115,32,111,112,112,111,115,101,100,32,116,111,83,117,112,114,101,109,101,32,67,111,117,114,116,111,99,99,97,115,105,111,110,97,108,108,121,32,65,100,100,105,116,105,111,110,97,108,108,121,44,78,111,114,116,104,32,65,109,101,114,105,99,97,112,120,59,98,97,99,107,103,114,111,117,110,100,111,112,112,111,114,116,117,110,105,116,105,101,115,69,110,116,101,114,116,97,105,110,109,101,110,116,46,116,111,76,111,119,101,114,67,97,115,101,40,109,97,110,117,102,97,99,116,117,114,105,110,103,112,114,111,102,101,115,115,105,111,110,97,108,32,99,111,109,98,105,110,101,100,32,119,105,116,104,70,111,114,32,105,110,115,116,97,110,99,101,44,99,111,110,115,105,115,116,105,110,103,32,111,102,34,32,109,97,120,108,101,110,103,116,104,61,34,114,101,116,117,114,110,32,102,97,108,115,101,59,99,111,110,115,99,105,111,117,115,110,101,115,115,77,101,100,105,116,101,114,114,97,110,101,97,110,101,120,116,114,97,111,114,100,105,110,97,114,121,97,115,115,97,115,115,105,110,97,116,105,111,110,115,117,98,115,101,113,117,101,110,116,108,121,32,98,117,116,116,111,110,32,116,121,112,101,61,34,116,104,101,32,110,117,109,98,101,114,32,111,102,116,104,101,32,111,114,105,103,105,110,97,108,32,99,111,109,112,114,101,104,101,110,115,105,118,101,114,101,102,101,114,115,32,116,111,32,116,104,101,60,47,117,108,62,10,60,47,100,105,118,62,10,112,104,105,108,111,115,111,112,104,105,99,97,108,108,111,99,97,116,105,111,110,46,104,114,101,102,119,97,115,32,112,117,98,108,105,115,104,101,100,83,97,110,32,70,114,97,110,99,105,115,99,111,40,102,117,110,99,116,105,111,110,40,41,123,10,60,100,105,118,32,105,100,61,34,109,97,105,110,115,111,112,104,105,115,116,105,99,97,116,101,100,109,97,116,104,101,109,97,116,105,99,97,108,32,47,104,101,97,100,62,13,10,60,98,111,100,121,115,117,103,103,101,115,116,115,32,116,104,97,116,100,111,99,117,109,101,110,116,97,116,105,111,110,99,111,110,99,101,110,116,114,97,116,105,111,110,114,101,108,97,116,105,111,110,115,104,105,112,115,109,97,121,32,104,97,118,101,32,98,101,101,110,40,102,111,114,32,101,120,97,109,112,108,101,44,84,104,105,115,32,97,114,116,105,99,108,101,32,105,110,32,115,111,109,101,32,99,97,115,101,115,112,97,114,116,115,32,111,102,32,116,104,101,32,100,101,102,105,110,105,116,105,111,110,32,111,102,71,114,101,97,116,32,66,114,105,116,97,105,110,32,99,101,108,108,112,97,100,100,105,110,103,61,101,113,117,105,118,97,108,101,110,116,32,116,111,112,108,97,99,101,104,111,108,100,101,114,61,34,59,32,102,111,110,116,45,115,105,122,101,58,32,106,117,115,116,105,102,105,99,97,116,105,111,110,98,101,108,105,101,118,101,100,32,116,104,97,116,115,117,102,102,101,114,101,100,32,102,114,111,109,97,116,116,101,109,112,116,101,100,32,116,111,32,108,101,97,100,101,114,32,111,102,32,116,104,101,99,114,105,112,116,34,32,115,114,99,61,34,47,40,102,117,110,99,116,105,111,110,40,41,32,123,97,114,101,32,97,118,97,105,108,97,98,108,101,10,9,60,108,105,110,107,32,114,101,108,61,34,32,115,114,99,61,39,104,116,116,112,58,47,47,105,110,116,101,114,101,115,116,101,100,32,105,110,99,111,110,118,101,110,116,105,111,110,97,108,32,34,32,97,108,116,61,34,34,32,47,62,60,47,97,114,101,32,103,101,110,101,114,97,108,108,121,104,97,115,32,97,108,115,111,32,98,101,101,110,109,111,115,116,32,112,111,112,117,108,97,114,32,99,111,114,114,101,115,112,111,110,100,105,110,103,99,114,101,100,105,116,101,100,32,119,105,116,104,116,121,108,101,61,34,98,111,114,100,101,114,58,60,47,97,62,60,47,115,112,97,110,62,60,47,46,103,105,102,34,32,119,105,100,116,104,61,34,60,105,102,114,97,109,101,32,115,114,99,61,34,116,97,98,108,101,32,99,108,97,115,115,61,34,105,110,108,105,110,101,45,98,108,111,99,107,59,97,99,99,111,114,100,105,110,103,32,116,111,32,116,111,103,101,116,104,101,114,32,119,105,116,104,97,112,112,114,111,120,105,109,97,116,101,108,121,112,97,114,108,105,97,109,101,110,116,97,114,121,109,111,114,101,32,97,110,100,32,109,111,114,101,100,105,115,112,108,97,121,58,110,111,110,101,59,116,114,97,100,105,116,105,111,110,97,108,108,121,112,114,101,100,111,109,105,110,97,110,116,108,121,38,110,98,115,112,59,124,38,110,98,115,112,59,38,110,98,115,112,59,60,47,115,112,97,110,62,32,99,101,108,108,115,112,97,99,105,110,103,61,60,105,110,112,117,116,32,110,97,109,101,61,34,111,114,34,32,99,111,110,116,101,110,116,61,34,99,111,110,116,114,111,118,101,114,115,105,97,108,112,114,111,112,101,114,116,121,61,34,111,103,58,47,120,45,115,104,111,99,107,119,97,118,101,45,100,101,109,111,110,115,116,114,97,116,105,111,110,115,117,114,114,111,117,110,100,101,100,32,98,121,78,101,118,101,114,116,104,101,108,101,115,115,44,119,97,115,32,116,104,101,32,102,105,114,115,116,99,111,110,115,105,100,101,114,97,98,108,101,32,65,108,116,104,111,117,103,104,32,116,104,101,32,99,111,108,108,97,98,111,114,97,116,105,111,110,115,104,111,117,108,100,32,110,111,116,32,98,101,112,114,111,112,111,114,116,105,111,110,32,111,102,60,115,112,97,110,32,115,116,121,108,101,61,34,107,110,111,119,110,32,97,115,32,116,104,101,32,115,104,111,114,116,108,121,32,97,102,116,101,114,102,111,114,32,105,110,115,116,97,110,99,101,44,100,101,115,99,114,105,98,101,100,32,97,115,32,47,104,101,97,100,62,10,60,98,111,100,121,32,115,116,97,114,116,105,110,103,32,119,105,116,104,105,110,99,114,101,97,115,105,110,103,108,121,32,116,104,101,32,102,97,99,116,32,116,104,97,116,100,105,115,99,117,115,115,105,111,110,32,111,102,109,105,100,100,108,101,32,111,102,32,116,104,101,97,110,32,105,110,100,105,118,105,100,117,97,108,100,105,102,102,105,99,117,108,116,32,116,111,32,112,111,105,110,116,32,111,102,32,118,105,101,119,104,111,109,111,115,101,120,117,97,108,105,116,121,97,99,99,101,112,116,97,110,99,101,32,111,102,60,47,115,112,97,110,62,60,47,100,105,118,62,109,97,110,117,102,97,99,116,117,114,101,114,115,111,114,105,103,105,110,32,111,102,32,116,104,101,99,111,109,109,111,110,108,121,32,117,115,101,100,105,109,112,111,114,116,97,110,99,101,32,111,102,100,101,110,111,109,105,110,97,116,105,111,110,115,98,97,99,107,103,114,111,117,110,100,58,32,35,108,101,110,103,116,104,32,111,102,32,116,104,101,100,101,116,101,114,109,105,110,97,116,105,111,110,97,32,115,105,103,110,105,102,105,99,97,110,116,34,32,98,111,114,100,101,114,61,34,48,34,62,114,101,118,111,108,117,116,105,111,110,97,114,121,112,114,105,110,99,105,112,108,101,115,32,111,102,105,115,32,99,111,110,115,105,100,101,114,101,100,119,97,115,32,100,101,118,101,108,111,112,101,100,73,110,100,111,45,69,117,114,111,112,101,97,110,118,117,108,110,101,114,97,98,108,101,32,116,111,112,114,111,112,111,110,101,110,116,115,32,111,102,97,114,101,32,115,111,109,101,116,105,109,101,115,99,108,111,115,101,114,32,116,111,32,116,104,101,78,101,119,32,89,111,114,107,32,67,105,116,121,32,110,97,109,101,61,34,115,101,97,114,99,104,97,116,116,114,105,98,117,116,101,100,32,116,111,99,111,117,114,115,101,32,111,102,32,116,104,101,109,97,116,104,101,109,97,116,105,99,105,97,110,98,121,32,116,104,101,32,101,110,100,32,111,102,97,116,32,116,104,101,32,101,110,100,32,111,102,34,32,98,111,114,100,101,114,61,34,48,34,32,116,101,99,104,110,111,108,111,103,105,99,97,108,46,114,101,109,111,118,101,67,108,97,115,115,40,98,114,97,110,99,104,32,111,102,32,116,104,101,101,118,105,100,101,110,99,101,32,116,104,97,116,33,91,101,110,100,105,102,93,45,45,62,13,10,73,110,115,116,105,116,117,116,101,32,111,102,32,105,110,116,111,32,97,32,115,105,110,103,108,101,114,101,115,112,101,99,116,105,118,101,108,121,46,97,110,100,32,116,104,101,114,101,102,111,114,101,112,114,111,112,101,114,116,105,101,115,32,111,102,105,115,32,108,111,99,97,116,101,100,32,105,110,115,111,109,101,32,111,102,32,119,104,105,99,104,84,104,101,114,101,32,105,115,32,97,108,115,111,99,111,110,116,105,110,117,101,100,32,116,111,32,97,112,112,101,97,114,97,110,99,101,32,111,102,32,38,97,109,112,59,110,100,97,115,104,59,32,100,101,115,99,114,105,98,101,115,32,116,104,101,99,111,110,115,105,100,101,114,97,116,105,111,110,97,117,116,104,111,114,32,111,102,32,116,104,101,105,110,100,101,112,101,110,100,101,110,116,108,121,101,113,117,105,112,112,101,100,32,119,105,116,104,100,111,101,115,32,110,111,116,32,104,97,118,101,60,47,97,62,60,97,32,104,114,101,102,61,34,99,111,110,102,117,115,101,100,32,119,105,116,104,60,108,105,110,107,32,104,114,101,102,61,34,47,97,116,32,116,104,101,32,97,103,101,32,111,102,97,112,112,101,97,114,32,105,110,32,116,104,101,84,104,101,115,101,32,105,110,99,108,117,100,101,114,101,103,97,114,100,108,101,115,115,32,111,102,99,111,117,108,100,32,98,101,32,117,115,101,100,32,115,116,121,108,101,61,38,113,117,111,116,59,115,101,118,101,114,97,108,32,116,105,109,101,115,114,101,112,114,101,115,101,110,116,32,116,104,101,98,111,100,121,62,10,60,47,104,116,109,108,62,116,104,111,117,103,104,116,32,116,111,32,98,101,112,111,112,117,108,97,116,105,111,110,32,111,102,112,111,115,115,105,98,105,108,105,116,105,101,115,112,101,114,99,101,110,116,97,103,101,32,111,102,97,99,99,101,115,115,32,116,111,32,116,104,101,97,110,32,97,116,116,101,109,112,116,32,116,111,112,114,111,100,117,99,116,105,111,110,32,111,102,106,113,117,101,114,121,47,106,113,117,101,114,121,116,119,111,32,100,105,102,102,101,114,101,110,116,98,101,108,111,110,103,32,116,111,32,116,104,101,101,115,116,97,98,108,105,115,104,109,101,110,116,114,101,112,108,97,99,105,110,103,32,116,104,101,100,101,115,99,114,105,112,116,105,111,110,34,32,100,101,116,101,114,109,105,110,101,32,116,104,101,97,118,97,105,108,97,98,108,101,32,102,111,114,65,99,99,111,114,100,105,110,103,32,116,111,32,119,105,100,101,32,114,97,110,103,101,32,111,102,9,60,100,105,118,32,99,108,97,115,115,61,34,109,111,114,101,32,99,111,109,109,111,110,108,121,111,114,103,97,110,105,115,97,116,105,111,110,115,102,117,110,99,116,105,111,110,97,108,105,116,121,119,97,115,32,99,111,109,112,108,101,116,101,100,32,38,97,109,112,59,109,100,97,115,104,59,32,112,97,114,116,105,99,105,112,97,116,105,111,110,116,104,101,32,99,104,97,114,97,99,116,101,114,97,110,32,97,100,100,105,116,105,111,110,97,108,97,112,112,101,97,114,115,32,116,111,32,98,101,102,97,99,116,32,116,104,97,116,32,116,104,101,97,110,32,101,120,97,109,112,108,101,32,111,102,115,105,103,110,105,102,105,99,97,110,116,108,121,111,110,109,111,117,115,101,111,118,101,114,61,34,98,101,99,97,117,115,101,32,116,104,101,121,32,97,115,121,110,99,32,61,32,116,114,117,101,59,112,114,111,98,108,101,109,115,32,119,105,116,104,115,101,101,109,115,32,116,111,32,104,97,118,101,116,104,101,32,114,101,115,117,108,116,32,111,102,32,115,114,99,61,34,104,116,116,112,58,47,47,102,97,109,105,108,105,97,114,32,119,105,116,104,112,111,115,115,101,115,115,105,111,110,32,111,102,102,117,110,99,116,105,111,110,32,40,41,32,123,116,111,111,107,32,112,108,97,99,101,32,105,110,97,110,100,32,115,111,109,101,116,105,109,101,115,115,117,98,115,116,97,110,116,105,97,108,108,121,60,115,112,97,110,62,60,47,115,112,97,110,62,105,115,32,111,102,116,101,110,32,117,115,101,100,105,110,32,97,110,32,97,116,116,101,109,112,116,103,114,101,97,116,32,100,101,97,108,32,111,102,69,110,118,105,114,111,110,109,101,110,116,97,108,115,117,99,99,101,115,115,102,117,108,108,121,32,118,105,114,116,117,97,108,108,121,32,97,108,108,50,48,116,104,32,99,101,110,116,117,114,121,44,112,114,111,102,101,115,115,105,111,110,97,108,115,110,101,99,101,115,115,97,114,121,32,116,111,32,100,101,116,101,114,109,105,110,101,100,32,98,121,99,111,109,112,97,116,105,98,105,108,105,116,121,98,101,99,97,117,115,101,32,105,116,32,105,115,68,105,99,116,105,111,110,97,114,121,32,111,102,109,111,100,105,102,105,99,97,116,105,111,110,115,84,104,101,32,102,111,108,108,111,119,105,110,103,109,97,121,32,114,101,102,101,114,32,116,111,58,67,111,110,115,101,113,117,101,110,116,108,121,44,73,110,116,101,114,110,97,116,105,111,110,97,108,97,108,116,104,111,117,103,104,32,115,111,109,101,116,104,97,116,32,119,111,117,108,100,32,98,101,119,111,114,108,100,39,115,32,102,105,114,115,116,99,108,97,115,115,105,102,105,101,100,32,97,115,98,111,116,116,111,109,32,111,102,32,116,104,101,40,112,97,114,116,105,99,117,108,97,114,108,121,97,108,105,103,110,61,34,108,101,102,116,34,32,109,111,115,116,32,99,111,109,109,111,110,108,121,98,97,115,105,115,32,102,111,114,32,116,104,101,102,111,117,110,100,97,116,105,111,110,32,111,102,99,111,110,116,114,105,98,117,116,105,111,110,115,112,111,112,117,108,97,114,105,116,121,32,111,102,99,101,110,116,101,114,32,111,102,32,116,104,101,116,111,32,114,101,100,117,99,101,32,116,104,101,106,117,114,105,115,100,105,99,116,105,111,110,115,97,112,112,114,111,120,105,109,97,116,105,111,110,32,111,110,109,111,117,115,101,111,117,116,61,34,78,101,119,32,84,101,115,116,97,109,101,110,116,99,111,108,108,101,99,116,105,111,110,32,111,102,60,47,115,112,97,110,62,60,47,97,62,60,47,105,110,32,116,104,101,32,85,110,105,116,101,100,102,105,108,109,32,100,105,114,101,99,116,111,114,45,115,116,114,105,99,116,46,100,116,100,34,62,104,97,115,32,98,101,101,110,32,117,115,101,100,114,101,116,117,114,110,32,116,111,32,116,104,101,97,108,116,104,111,117,103,104,32,116,104,105,115,99,104,97,110,103,101,32,105,110,32,116,104,101,115,101,118,101,114,97,108,32,111,116,104,101,114,98,117,116,32,116,104,101,114,101,32,97,114,101,117,110,112,114,101,99,101,100,101,110,116,101,100,105,115,32,115,105,109,105,108,97,114,32,116,111,101,115,112,101,99,105,97,108,108,121,32,105,110,119,101,105,103,104,116,58,32,98,111,108,100,59,105,115,32,99,97,108,108,101,100,32,116,104,101,99,111,109,112,117,116,97,116,105,111,110,97,108,105,110,100,105,99,97,116,101,32,116,104,97,116,114,101,115,116,114,105,99,116,101,100,32,116,111,9,60,109,101,116,97,32,110,97,109,101,61,34,97,114,101,32,116,121,112,105,99,97,108,108,121,99,111,110,102,108,105,99,116,32,119,105,116,104,72,111,119,101,118,101,114,44,32,116,104,101,32,65,110,32,101,120,97,109,112,108,101,32,111,102,99,111,109,112,97,114,101,100,32,119,105,116,104,113,117,97,110,116,105,116,105,101,115,32,111,102,114,97,116,104,101,114,32,116,104,97,110,32,97,99,111,110,115,116,101,108,108,97,116,105,111,110,110,101,99,101,115,115,97,114,121,32,102,111,114,114,101,112,111,114,116,101,100,32,116,104,97,116,115,112,101,99,105,102,105,99,97,116,105,111,110,112,111,108,105,116,105,99,97,108,32,97,110,100,38,110,98,115,112,59,38,110,98,115,112,59,60,114,101,102,101,114,101,110,99,101,115,32,116,111,116,104,101,32,115,97,109,101,32,121,101,97,114,71,111,118,101,114,110,109,101,110,116,32,111,102,103,101,110,101,114,97,116,105,111,110,32,111,102,104,97,118,101,32,110,111,116,32,98,101,101,110,115,101,118,101,114,97,108,32,121,101,97,114,115,99,111,109,109,105,116,109,101,110,116,32,116,111,9,9,60,117,108,32,99,108,97,115,115,61,34,118,105,115,117,97,108,105,122,97,116,105,111,110,49,57,116,104,32,99,101,110,116,117,114,121,44,112,114,97,99,116,105,116,105,111,110,101,114,115,116,104,97,116,32,104,101,32,119,111,117,108,100,97,110,100,32,99,111,110,116,105,110,117,101,100,111,99,99,117,112,97,116,105,111,110,32,111,102,105,115,32,100,101,102,105,110,101,100,32,97,115,99,101,110,116,114,101,32,111,102,32,116,104,101,116,104,101,32,97,109,111,117,110,116,32,111,102,62,60,100,105,118,32,115,116,121,108,101,61,34,101,113,117,105,118,97,108,101,110,116,32,111,102,100,105,102,102,101,114,101,110,116,105,97,116,101,98,114,111,117,103,104,116,32,97,98,111,117,116,109,97,114,103,105,110,45,108,101,102,116,58,32,97,117,116,111,109,97,116,105,99,97,108,108,121,116,104,111,117,103,104,116,32,111,102,32,97,115,83,111,109,101,32,111,102,32,116,104,101,115,101,10,60,100,105,118,32,99,108,97,115,115,61,34,105,110,112,117,116,32,99,108,97,115,115,61,34,114,101,112,108,97,99,101,100,32,119,105,116,104,105,115,32,111,110,101,32,111,102,32,116,104,101,101,100,117,99,97,116,105,111,110,32,97,110,100,105,110,102,108,117,101,110,99,101,100,32,98,121,114,101,112,117,116,97,116,105,111,110,32,97,115,10,60,109,101,116,97,32,110,97,109,101,61,34,97,99,99,111,109,109,111,100,97,116,105,111,110,60,47,100,105,118,62,10,60,47,100,105,118,62,108,97,114,103,101,32,112,97,114,116,32,111,102,73,110,115,116,105,116,117,116,101,32,102,111,114,116,104,101,32,115,111,45,99,97,108,108,101,100,32,97,103,97,105,110,115,116,32,116,104,101,32,73,110,32,116,104,105,115,32,99,97,115,101,44,119,97,115,32,97,112,112,111,105,110,116,101,100,99,108,97,105,109,101,100,32,116,111,32,98,101,72,111,119,101,118,101,114,44,32,116,104,105,115,68,101,112,97,114,116,109,101,110,116,32,111,102,116,104,101,32,114,101,109,97,105,110,105,110,103,101,102,102,101,99,116,32,111,110,32,116,104,101,112,97,114,116,105,99,117,108,97,114,108,121,32,100,101,97,108,32,119,105,116,104,32,116,104,101,10,60,100,105,118,32,115,116,121,108,101,61,34,97,108,109,111,115,116,32,97,108,119,97,121,115,97,114,101,32,99,117,114,114,101,110,116,108,121,101,120,112,114,101,115,115,105,111,110,32,111,102,112,104,105,108,111,115,111,112,104,121,32,111,102,102,111,114,32,109,111,114,101,32,116,104,97,110,99,105,118,105,108,105,122,97,116,105,111,110,115,111,110,32,116,104,101,32,105,115,108,97,110,100,115,101,108,101,99,116,101,100,73,110,100,101,120,99,97,110,32,114,101,115,117,108,116,32,105,110,34,32,118,97,108,117,101,61,34,34,32,47,62,116,104,101,32,115,116,114,117,99,116,117,114,101,32,47,62,60,47,97,62,60,47,100,105,118,62,77,97,110,121,32,111,102,32,116,104,101,115,101,99,97,117,115,101,100,32,98,121,32,116,104,101,111,102,32,116,104,101,32,85,110,105,116,101,100,115,112,97,110,32,99,108,97,115,115,61,34,109,99,97,110,32,98,101,32,116,114,97,99,101,100,105,115,32,114,101,108,97,116,101,100,32,116,111,98,101,99,97,109,101,32,111,110,101,32,111,102,105,115,32,102,114,101,113,117,101,110,116,108,121,108,105,118,105,110,103,32,105,110,32,116,104,101,116,104,101,111,114,101,116,105,99,97,108,108,121,70,111,108,108,111,119,105,110,103,32,116,104,101,82,101,118,111,108,117,116,105,111,110,97,114,121,103,111,118,101,114,110,109,101,110,116,32,105,110,105,115,32,100,101,116,101,114,109,105,110,101,100,116,104,101,32,112,111,108,105,116,105,99,97,108,105,110,116,114,111,100,117,99,101,100,32,105,110,115,117,102,102,105,99,105,101,110,116,32,116,111,100,101,115,99,114,105,112,116,105,111,110,34,62,115,104,111,114,116,32,115,116,111,114,105,101,115,115,101,112,97,114,97,116,105,111,110,32,111,102,97,115,32,116,111,32,119,104,101,116,104,101,114,107,110,111,119,110,32,102,111,114,32,105,116,115,119,97,115,32,105,110,105,116,105,97,108,108,121,100,105,115,112,108,97,121,58,98,108,111,99,107,105,115,32,97,110,32,101,120,97,109,112,108,101,116,104,101,32,112,114,105,110,99,105,112,97,108,99,111,110,115,105,115,116,115,32,111,102,32,97,114,101,99,111,103,110,105,122,101,100,32,97,115,47,98,111,100,121,62,60,47,104,116,109,108,62,97,32,115,117,98,115,116,97,110,116,105,97,108,114,101,99,111,110,115,116,114,117,99,116,101,100,104,101,97,100,32,111,102,32,115,116,97,116,101,114,101,115,105,115,116,97,110,99,101,32,116,111,117,110,100,101,114,103,114,97,100,117,97,116,101,84,104,101,114,101,32,97,114,101,32,116,119,111,103,114,97,118,105,116,97,116,105,111,110,97,108,97,114,101,32,100,101,115,99,114,105,98,101,100,105,110,116,101,110,116,105,111,110,97,108,108,121,115,101,114,118,101,100,32,97,115,32,116,104,101,99,108,97,115,115,61,34,104,101,97,100,101,114,111,112,112,111,115,105,116,105,111,110,32,116,111,102,117,110,100,97,109,101,110,116,97,108,108,121,100,111,109,105,110,97,116,101,100,32,116,104,101,97,110,100,32,116,104,101,32,111,116,104,101,114,97,108,108,105,97,110,99,101,32,119,105,116,104,119,97,115,32,102,111,114,99,101,100,32,116,111,114,101,115,112,101,99,116,105,118,101,108,121,44,97,110,100,32,112,111,108,105,116,105,99,97,108,105,110,32,115,117,112,112,111,114,116,32,111,102,112,101,111,112,108,101,32,105,110,32,116,104,101,50,48,116,104,32,99,101,110,116,117,114,121,46,97,110,100,32,112,117,98,108,105,115,104,101,100,108,111,97,100,67,104,97,114,116,98,101,97,116,116,111,32,117,110,100,101,114,115,116,97,110,100,109,101,109,98,101,114,32,115,116,97,116,101,115,101,110,118,105,114,111,110,109,101,110,116,97,108,102,105,114,115,116,32,104,97,108,102,32,111,102,99,111,117,110,116,114,105,101,115,32,97,110,100,97,114,99,104,105,116,101,99,116,117,114,97,108,98,101,32,99,111,110,115,105,100,101,114,101,100,99,104,97,114,97,99,116,101,114,105,122,101,100,99,108,101,97,114,73,110,116,101,114,118,97,108,97,117,116,104,111,114,105,116,97,116,105,118,101,70,101,100,101,114,97,116,105,111,110,32,111,102,119,97,115,32,115,117,99,99,101,101,100,101,100,97,110,100,32,116,104,101,114,101,32,97,114,101,97,32,99,111,110,115,101,113,117,101,110,99,101,116,104,101,32,80,114,101,115,105,100,101,110,116,97,108,115,111,32,105,110,99,108,117,100,101,100,102,114,101,101,32,115,111,102,116,119,97,114,101,115,117,99,99,101,115,115,105,111,110,32,111,102,100,101,118,101,108,111,112,101,100,32,116,104,101,119,97,115,32,100,101,115,116,114,111,121,101,100,97,119,97,121,32,102,114,111,109,32,116,104,101,59,10,60,47,115,99,114,105,112,116,62,10,60,97,108,116,104,111,117,103,104,32,116,104,101,121,102,111,108,108,111,119,101,100,32,98,121,32,97,109,111,114,101,32,112,111,119,101,114,102,117,108,114,101,115,117,108,116,101,100,32,105,110,32,97,85,110,105,118,101,114,115,105,116,121,32,111,102,72,111,119,101,118,101,114,44,32,109,97,110,121,116,104,101,32,112,114,101,115,105,100,101,110,116,72,111,119,101,118,101,114,44,32,115,111,109,101,105,115,32,116,104,111,117,103,104,116,32,116,111,117,110,116,105,108,32,116,104,101,32,101,110,100,119,97,115,32,97,110,110,111,117,110,99,101,100,97,114,101,32,105,109,112,111,114,116,97,110,116,97,108,115,111,32,105,110,99,108,117,100,101,115,62,60,105,110,112,117,116,32,116,121,112,101,61,116,104,101,32,99,101,110,116,101,114,32,111,102,32,68,79,32,78,79,84,32,65,76,84,69,82,117,115,101,100,32,116,111,32,114,101,102,101,114,116,104,101,109,101,115,47,63,115,111,114,116,61,116,104,97,116,32,104,97,100,32,98,101,101,110,116,104,101,32,98,97,115,105,115,32,102,111,114,104,97,115,32,100,101,118,101,108,111,112,101,100,105,110,32,116,104,101,32,115,117,109,109,101,114,99,111,109,112,97,114,97,116,105,118,101,108,121,100,101,115,99,114,105,98,101,100,32,116,104,101,115,117,99,104,32,97,115,32,116,104,111,115,101,116,104,101,32,114,101,115,117,108,116,105,110,103,105,115,32,105,109,112,111,115,115,105,98,108,101,118,97,114,105,111,117,115,32,111,116,104,101,114,83,111,117,116,104,32,65,102,114,105,99,97,110,104,97,118,101,32,116,104,101,32,115,97,109,101,101,102,102,101,99,116,105,118,101,110,101,115,115,105,110,32,119,104,105,99,104,32,99,97,115,101,59,32,116,101,120,116,45,97,108,105,103,110,58,115,116,114,117,99,116,117,114,101,32,97,110,100,59,32,98,97,99,107,103,114,111,117,110,100,58,114,101,103,97,114,100,105,110,103,32,116,104,101,115,117,112,112,111,114,116,101,100,32,116,104,101,105,115,32,97,108,115,111,32,107,110,111,119,110,115,116,121,108,101,61,34,109,97,114,103,105,110,105,110,99,108,117,100,105,110,103,32,116,104,101,98,97,104,97,115,97,32,77,101,108,97,121,117,110,111,114,115,107,32,98,111,107,109,195,165,108,110,111,114,115,107,32,110,121,110,111,114,115,107,115,108,111,118,101,110,197,161,196,141,105,110,97,105,110,116,101,114,110,97,99,105,111,110,97,108,99,97,108,105,102,105,99,97,99,105,195,179,110,99,111,109,117,110,105,99,97,99,105,195,179,110,99,111,110,115,116,114,117,99,99,105,195,179,110,34,62,60,100,105,118,32,99,108,97,115,115,61,34,100,105,115,97,109,98,105,103,117,97,116,105,111,110,68,111,109,97,105,110,78,97,109,101,39,44,32,39,97,100,109,105,110,105,115,116,114,97,116,105,111,110,115,105,109,117,108,116,97,110,101,111,117,115,108,121,116,114,97,110,115,112,111,114,116,97,116,105,111,110,73,110,116,101,114,110,97,116,105,111,110,97,108,32,109,97,114,103,105,110,45,98,111,116,116,111,109,58,114,101,115,112,111,110,115,105,98,105,108,105,116,121,60,33,91,101,110,100,105,102,93,45,45,62,10,60,47,62,60,109,101,116,97,32,110,97,109,101,61,34,105,109,112,108,101,109,101,110,116,97,116,105,111,110,105,110,102,114,97,115,116,114,117,99,116,117,114,101,114,101,112,114,101,115,101,110,116,97,116,105,111,110,98,111,114,100,101,114,45,98,111,116,116,111,109,58,60,47,104,101,97,100,62,10,60,98,111,100,121,62,61,104,116,116,112,37,51,65,37,50,70,37,50,70,60,102,111,114,109,32,109,101,116,104,111,100,61,34,109,101,116,104,111,100,61,34,112,111,115,116,34,32,47,102,97,118,105,99,111,110,46,105,99,111,34,32,125,41,59,10,60,47,115,99,114,105,112,116,62,10,46,115,101,116,65,116,116,114,105,98,117,116,101,40,65,100,109,105,110,105,115,116,114,97,116,105,111,110,61,32,110,101,119,32,65,114,114,97,121,40,41,59,60,33,91,101,110,100,105,102,93,45,45,62,13,10,100,105,115,112,108,97,121,58,98,108,111,99,107,59,85,110,102,111,114,116,117,110,97,116,101,108,121,44,34,62,38,110,98,115,112,59,60,47,100,105,118,62,47,102,97,118,105,99,111,110,46,105,99,111,34,62,61,39,115,116,121,108,101,115,104,101,101,116,39,32,105,100,101,110,116,105,102,105,99,97,116,105,111,110,44,32,102,111,114,32,101,120,97,109,112,108,101,44,60,108,105,62,60,97,32,104,114,101,102,61,34,47,97,110,32,97,108,116,101,114,110,97,116,105,118,101,97,115,32,97,32,114,101,115,117,108,116,32,111,102,112,116,34,62,60,47,115,99,114,105,112,116,62,10,116,121,112,101,61,34,115,117,98,109,105,116,34,32,10,40,102,117,110,99,116,105,111,110,40,41,32,123,114,101,99,111,109,109,101,110,100,97,116,105,111,110,102,111,114,109,32,97,99,116,105,111,110,61,34,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,114,101,99,111,110,115,116,114,117,99,116,105,111,110,46,115,116,121,108,101,46,100,105,115,112,108,97,121,32,65,99,99,111,114,100,105,110,103,32,116,111,32,104,105,100,100,101,110,34,32,110,97,109,101,61,34,97,108,111,110,103,32,119,105,116,104,32,116,104,101,100,111,99,117,109,101,110,116,46,98,111,100,121,46,97,112,112,114,111,120,105,109,97,116,101,108,121,32,67,111,109,109,117,110,105,99,97,116,105,111,110,115,112,111,115,116,34,32,97,99,116,105,111,110,61,34,109,101,97,110,105,110,103,32,38,113,117,111,116,59,45,45,60,33,91,101,110,100,105,102,93,45,45,62,80,114,105,109,101,32,77,105,110,105,115,116,101,114,99,104,97,114,97,99,116,101,114,105,115,116,105,99,60,47,97,62,32,60,97,32,99,108,97,115,115,61,116,104,101,32,104,105,115,116,111,114,121,32,111,102,32,111,110,109,111,117,115,101,111,118,101,114,61,34,116,104,101,32,103,111,118,101,114,110,109,101,110,116,104,114,101,102,61,34,104,116,116,112,115,58,47,47,119,97,115,32,111,114,105,103,105,110,97,108,108,121,119,97,115,32,105,110,116,114,111,100,117,99,101,100,99,108,97,115,115,105,102,105,99,97,116,105,111,110,114,101,112,114,101,115,101,110,116,97,116,105,118,101,97,114,101,32,99,111,110,115,105,100,101,114,101,100,60,33,91,101,110,100,105,102,93,45,45,62,10,10,100,101,112,101,110,100,115,32,111,110,32,116,104,101,85,110,105,118,101,114,115,105,116,121,32,111,102,32,105,110,32,99,111,110,116,114,97,115,116,32,116,111,32,112,108,97,99,101,104,111,108,100,101,114,61,34,105,110,32,116,104,101,32,99,97,115,101,32,111,102,105,110,116,101,114,110,97,116,105,111,110,97,108,32,99,111,110,115,116,105,116,117,116,105,111,110,97,108,115,116,121,108,101,61,34,98,111,114,100,101,114,45,58,32,102,117,110,99,116,105,111,110,40,41,32,123,66,101,99,97,117,115,101,32,111,102,32,116,104,101,45,115,116,114,105,99,116,46,100,116,100,34,62,10,60,116,97,98,108,101,32,99,108,97,115,115,61,34,97,99,99,111,109,112,97,110,105,101,100,32,98,121,97,99,99,111,117,110,116,32,111,102,32,116,104,101,60,115,99,114,105,112,116,32,115,114,99,61,34,47,110,97,116,117,114,101,32,111,102,32,116,104,101,32,116,104,101,32,112,101,111,112,108,101,32,105,110,32,105,110,32,97,100,100,105,116,105,111,110,32,116,111,115,41,59,32,106,115,46,105,100,32,61,32,105,100,34,32,119,105,100,116,104,61,34,49,48,48,37,34,114,101,103,97,114,100,105,110,103,32,116,104,101,32,82,111,109,97,110,32,67,97,116,104,111,108,105,99,97,110,32,105,110,100,101,112,101,110,100,101,110,116,102,111,108,108,111,119,105,110,103,32,116,104,101,32,46,103,105,102,34,32,119,105,100,116,104,61,34,49,116,104,101,32,102,111,108,108,111,119,105,110,103,32,100,105,115,99,114,105,109,105,110,97,116,105,111,110,97,114,99,104,97,101,111,108,111,103,105,99,97,108,112,114,105,109,101,32,109,105,110,105,115,116,101,114,46,106,115,34,62,60,47,115,99,114,105,112,116,62,99,111,109,98,105,110,97,116,105,111,110,32,111,102,32,109,97,114,103,105,110,119,105,100,116,104,61,34,99,114,101,97,116,101,69,108,101,109,101,110,116,40,119,46,97,116,116,97,99,104,69,118,101,110,116,40,60,47,97,62,60,47,116,100,62,60,47,116,114,62,115,114,99,61,34,104,116,116,112,115,58,47,47,97,73,110,32,112,97,114,116,105,99,117,108,97,114,44,32,97,108,105,103,110,61,34,108,101,102,116,34,32,67,122,101,99,104,32,82,101,112,117,98,108,105,99,85,110,105,116,101,100,32,75,105,110,103,100,111,109,99,111,114,114,101,115,112,111,110,100,101,110,99,101,99,111,110,99,108,117,100,101,100,32,116,104,97,116,46,104,116,109,108,34,32,116,105,116,108,101,61,34,40,102,117,110,99,116,105,111,110,32,40,41,32,123,99,111,109,101,115,32,102,114,111,109,32,116,104,101,97,112,112,108,105,99,97,116,105,111,110,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,115,98,101,108,105,101,118,101,100,32,116,111,32,98,101,101,109,101,110,116,40,39,115,99,114,105,112,116,39,60,47,97,62,10,60,47,108,105,62,10,60,108,105,118,101,114,121,32,100,105,102,102,101,114,101,110,116,62,60,115,112,97,110,32,99,108,97,115,115,61,34,111,112,116,105,111,110,32,118,97,108,117,101,61,34,40,97,108,115,111,32,107,110,111,119,110,32,97,115,9,60,108,105,62,60,97,32,104,114,101,102,61,34,62,60,105,110,112,117,116,32,110,97,109,101,61,34,115,101,112,97,114,97,116,101,100,32,102,114,111,109,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,118,97,108,105,103,110,61,34,116,111,112,34,62,102,111,117,110,100,101,114,32,111,102,32,116,104,101,97,116,116,101,109,112,116,105,110,103,32,116,111,32,99,97,114,98,111,110,32,100,105,111,120,105,100,101,10,10,60,100,105,118,32,99,108,97,115,115,61,34,99,108,97,115,115,61,34,115,101,97,114,99,104,45,47,98,111,100,121,62,10,60,47,104,116,109,108,62,111,112,112,111,114,116,117,110,105,116,121,32,116,111,99,111,109,109,117,110,105,99,97,116,105,111,110,115,60,47,104,101,97,100,62,13,10,60,98,111,100,121,32,115,116,121,108,101,61,34,119,105,100,116,104,58,84,105,225,186,191,110,103,32,86,105,225,187,135,116,99,104,97,110,103,101,115,32,105,110,32,116,104,101,98,111,114,100,101,114,45,99,111,108,111,114,58,35,48,34,32,98,111,114,100,101,114,61,34,48,34,32,60,47,115,112,97,110,62,60,47,100,105,118,62,60,119,97,115,32,100,105,115,99,111,118,101,114,101,100,34,32,116,121,112,101,61,34,116,101,120,116,34,32,41,59,10,60,47,115,99,114,105,112,116,62,10,10,68,101,112,97,114,116,109,101,110,116,32,111,102,32,101,99,99,108,101,115,105,97,115,116,105,99,97,108,116,104,101,114,101,32,104,97,115,32,98,101,101,110,114,101,115,117,108,116,105,110,103,32,102,114,111,109,60,47,98,111,100,121,62,60,47,104,116,109,108,62,104,97,115,32,110,101,118,101,114,32,98,101,101,110,116,104,101,32,102,105,114,115,116,32,116,105,109,101,105,110,32,114,101,115,112,111,110,115,101,32,116,111,97,117,116,111,109,97,116,105,99,97,108,108,121,32,60,47,100,105,118,62,10,10,60,100,105,118,32,105,119,97,115,32,99,111,110,115,105,100,101,114,101,100,112,101,114,99,101,110,116,32,111,102,32,116,104,101,34,32,47,62,60,47,97,62,60,47,100,105,118,62,99,111,108,108,101,99,116,105,111,110,32,111,102,32,100,101,115,99,101,110,100,101,100,32,102,114,111,109,115,101,99,116,105,111,110,32,111,102,32,116,104,101,97,99,99,101,112,116,45,99,104,97,114,115,101,116,116,111,32,98,101,32,99,111,110,102,117,115,101,100,109,101,109,98,101,114,32,111,102,32,116,104,101,32,112,97,100,100,105,110,103,45,114,105,103,104,116,58,116,114,97,110,115,108,97,116,105,111,110,32,111,102,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,104,114,101,102,61,39,104,116,116,112,58,47,47,119,104,101,116,104,101,114,32,111,114,32,110,111,116,84,104,101,114,101,32,97,114,101,32,97,108,115,111,116,104,101,114,101,32,97,114,101,32,109,97,110,121,97,32,115,109,97,108,108,32,110,117,109,98,101,114,111,116,104,101,114,32,112,97,114,116,115,32,111,102,105,109,112,111,115,115,105,98,108,101,32,116,111,32,32,99,108,97,115,115,61,34,98,117,116,116,111,110,108,111,99,97,116,101,100,32,105,110,32,116,104,101,46,32,72,111,119,101,118,101,114,44,32,116,104,101,97,110,100,32,101,118,101,110,116,117,97,108,108,121,65,116,32,116,104,101,32,101,110,100,32,111,102,32,98,101,99,97,117,115,101,32,111,102,32,105,116,115,114,101,112,114,101,115,101,110,116,115,32,116,104,101,60,102,111,114,109,32,97,99,116,105,111,110,61,34,32,109,101,116,104,111,100,61,34,112,111,115,116,34,105,116,32,105,115,32,112,111,115,115,105,98,108,101,109,111,114,101,32,108,105,107,101,108,121,32,116,111,97,110,32,105,110,99,114,101,97,115,101,32,105,110,104,97,118,101,32,97,108,115,111,32,98,101,101,110,99,111,114,114,101,115,112,111,110,100,115,32,116,111,97,110,110,111,117,110,99,101,100,32,116,104,97,116,97,108,105,103,110,61,34,114,105,103,104,116,34,62,109,97,110,121,32,99,111,117,110,116,114,105,101,115,102,111,114,32,109,97,110,121,32,121,101,97,114,115,101,97,114,108,105,101,115,116,32,107,110,111,119,110,98,101,99,97,117,115,101,32,105,116,32,119,97,115,112,116,34,62,60,47,115,99,114,105,112,116,62,13,32,118,97,108,105,103,110,61,34,116,111,112,34,32,105,110,104,97,98,105,116,97,110,116,115,32,111,102,102,111,108,108,111,119,105,110,103,32,121,101,97,114,13,10,60,100,105,118,32,99,108,97,115,115,61,34,109,105,108,108,105,111,110,32,112,101,111,112,108,101,99,111,110,116,114,111,118,101,114,115,105,97,108,32,99,111,110,99,101,114,110,105,110,103,32,116,104,101,97,114,103,117,101,32,116,104,97,116,32,116,104,101,103,111,118,101,114,110,109,101,110,116,32,97,110,100,97,32,114,101,102,101,114,101,110,99,101,32,116,111,116,114,97,110,115,102,101,114,114,101,100,32,116,111,100,101,115,99,114,105,98,105,110,103,32,116,104,101,32,115,116,121,108,101,61,34,99,111,108,111,114,58,97,108,116,104,111,117,103,104,32,116,104,101,114,101,98,101,115,116,32,107,110,111,119,110,32,102,111,114,115,117,98,109,105,116,34,32,110,97,109,101,61,34,109,117,108,116,105,112,108,105,99,97,116,105,111,110,109,111,114,101,32,116,104,97,110,32,111,110,101,32,114,101,99,111,103,110,105,116,105,111,110,32,111,102,67,111,117,110,99,105,108,32,111,102,32,116,104,101,101,100,105,116,105,111,110,32,111,102,32,116,104,101,32,32,60,109,101,116,97,32,110,97,109,101,61,34,69,110,116,101,114,116,97,105,110,109,101,110,116,32,97,119,97,121,32,102,114,111,109,32,116,104,101,32,59,109,97,114,103,105,110,45,114,105,103,104,116,58,97,116,32,116,104,101,32,116,105,109,101,32,111,102,105,110,118,101,115,116,105,103,97,116,105,111,110,115,99,111,110,110,101,99,116,101,100,32,119,105,116,104,97,110,100,32,109,97,110,121,32,111,116,104,101,114,97,108,116,104,111,117,103,104,32,105,116,32,105,115,98,101,103,105,110,110,105,110,103,32,119,105,116,104,32,60,115,112,97,110,32,99,108,97,115,115,61,34,100,101,115,99,101,110,100,97,110,116,115,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,105,32,97,108,105,103,110,61,34,114,105,103,104,116,34,60,47,104,101,97,100,62,10,60,98,111,100,121,32,97,115,112,101,99,116,115,32,111,102,32,116,104,101,104,97,115,32,115,105,110,99,101,32,98,101,101,110,69,117,114,111,112,101,97,110,32,85,110,105,111,110,114,101,109,105,110,105,115,99,101,110,116,32,111,102,109,111,114,101,32,100,105,102,102,105,99,117,108,116,86,105,99,101,32,80,114,101,115,105,100,101,110,116,99,111,109,112,111,115,105,116,105,111,110,32,111,102,112,97,115,115,101,100,32,116,104,114,111,117,103,104,109,111,114,101,32,105,109,112,111,114,116,97,110,116,102,111,110,116,45,115,105,122,101,58,49,49,112,120,101,120,112,108,97,110,97,116,105,111,110,32,111,102,116,104,101,32,99,111,110,99,101,112,116,32,111,102,119,114,105,116,116,101,110,32,105,110,32,116,104,101,9,60,115,112,97,110,32,99,108,97,115,115,61,34,105,115,32,111,110,101,32,111,102,32,116,104,101,32,114,101,115,101,109,98,108,97,110,99,101,32,116,111,111,110,32,116,104,101,32,103,114,111,117,110,100,115,119,104,105,99,104,32,99,111,110,116,97,105,110,115,105,110,99,108,117,100,105,110,103,32,116,104,101,32,100,101,102,105,110,101,100,32,98,121,32,116,104,101,112,117,98,108,105,99,97,116,105,111,110,32,111,102,109,101,97,110,115,32,116,104,97,116,32,116,104,101,111,117,116,115,105,100,101,32,111,102,32,116,104,101,115,117,112,112,111,114,116,32,111,102,32,116,104,101,60,105,110,112,117,116,32,99,108,97,115,115,61,34,60,115,112,97,110,32,99,108,97,115,115,61,34,116,40,77,97,116,104,46,114,97,110,100,111,109,40,41,109,111,115,116,32,112,114,111,109,105,110,101,110,116,100,101,115,99,114,105,112,116,105,111,110,32,111,102,67,111,110,115,116,97,110,116,105,110,111,112,108,101,119,101,114,101,32,112,117,98,108,105,115,104,101,100,60,100,105,118,32,99,108,97,115,115,61,34,115,101,97,112,112,101,97,114,115,32,105,110,32,116,104,101,49,34,32,104,101,105,103,104,116,61,34,49,34,32,109,111,115,116,32,105,109,112,111,114,116,97,110,116,119,104,105,99,104,32,105,110,99,108,117,100,101,115,119,104,105,99,104,32,104,97,100,32,98,101,101,110,100,101,115,116,114,117,99,116,105,111,110,32,111,102,116,104,101,32,112,111,112,117,108,97,116,105,111,110,10,9,60,100,105,118,32,99,108,97,115,115,61,34,112,111,115,115,105,98,105,108,105,116,121,32,111,102,115,111,109,101,116,105,109,101,115,32,117,115,101,100,97,112,112,101,97,114,32,116,111,32,104,97,118,101,115,117,99,99,101,115,115,32,111,102,32,116,104,101,105,110,116,101,110,100,101,100,32,116,111,32,98,101,112,114,101,115,101,110,116,32,105,110,32,116,104,101,115,116,121,108,101,61,34,99,108,101,97,114,58,98,13,10,60,47,115,99,114,105,112,116,62,13,10,60,119,97,115,32,102,111,117,110,100,101,100,32,105,110,105,110,116,101,114,118,105,101,119,32,119,105,116,104,95,105,100,34,32,99,111,110,116,101,110,116,61,34,99,97,112,105,116,97,108,32,111,102,32,116,104,101,13,10,60,108,105,110,107,32,114,101,108,61,34,115,114,101,108,101,97,115,101,32,111,102,32,116,104,101,112,111,105,110,116,32,111,117,116,32,116,104,97,116,120,77,76,72,116,116,112,82,101,113,117,101,115,116,97,110,100,32,115,117,98,115,101,113,117,101,110,116,115,101,99,111,110,100,32,108,97,114,103,101,115,116,118,101,114,121,32,105,109,112,111,114,116,97,110,116,115,112,101,99,105,102,105,99,97,116,105,111,110,115,115,117,114,102,97,99,101,32,111,102,32,116,104,101,97,112,112,108,105,101,100,32,116,111,32,116,104,101,102,111,114,101,105,103,110,32,112,111,108,105,99,121,95,115,101,116,68,111,109,97,105,110,78,97,109,101,101,115,116,97,98,108,105,115,104,101,100,32,105,110,105,115,32,98,101,108,105,101,118,101,100,32,116,111,73,110,32,97,100,100,105,116,105,111,110,32,116,111,109,101,97,110,105,110,103,32,111,102,32,116,104,101,105,115,32,110,97,109,101,100,32,97,102,116,101,114,116,111,32,112,114,111,116,101,99,116,32,116,104,101,105,115,32,114,101,112,114,101,115,101,110,116,101,100,68,101,99,108,97,114,97,116,105,111,110,32,111,102,109,111,114,101,32,101,102,102,105,99,105,101,110,116,67,108,97,115,115,105,102,105,99,97,116,105,111,110,111,116,104,101,114,32,102,111,114,109,115,32,111,102,104,101,32,114,101,116,117,114,110,101,100,32,116,111,60,115,112,97,110,32,99,108,97,115,115,61,34,99,112,101,114,102,111,114,109,97,110,99,101,32,111,102,40,102,117,110,99,116,105,111,110,40,41,32,123,13,105,102,32,97,110,100,32,111,110,108,121,32,105,102,114,101,103,105,111,110,115,32,111,102,32,116,104,101,108,101,97,100,105,110,103,32,116,111,32,116,104,101,114,101,108,97,116,105,111,110,115,32,119,105,116,104,85,110,105,116,101,100,32,78,97,116,105,111,110,115,115,116,121,108,101,61,34,104,101,105,103,104,116,58,111,116,104,101,114,32,116,104,97,110,32,116,104,101,121,112,101,34,32,99,111,110,116,101,110,116,61,34,65,115,115,111,99,105,97,116,105,111,110,32,111,102,10,60,47,104,101,97,100,62,10,60,98,111,100,121,108,111,99,97,116,101,100,32,111,110,32,116,104,101,105,115,32,114,101,102,101,114,114,101,100,32,116,111,40,105,110,99,108,117,100,105,110,103,32,116,104,101,99,111,110,99,101,110,116,114,97,116,105,111,110,115,116,104,101,32,105,110,100,105,118,105,100,117,97,108,97,109,111,110,103,32,116,104,101,32,109,111,115,116,116,104,97,110,32,97,110,121,32,111,116,104,101,114,47,62,10,60,108,105,110,107,32,114,101,108,61,34,32,114,101,116,117,114,110,32,102,97,108,115,101,59,116,104,101,32,112,117,114,112,111,115,101,32,111,102,116,104,101,32,97,98,105,108,105,116,121,32,116,111,59,99,111,108,111,114,58,35,102,102,102,125,10,46,10,60,115,112,97,110,32,99,108,97,115,115,61,34,116,104,101,32,115,117,98,106,101,99,116,32,111,102,100,101,102,105,110,105,116,105,111,110,115,32,111,102,62,13,10,60,108,105,110,107,32,114,101,108,61,34,99,108,97,105,109,32,116,104,97,116,32,116,104,101,104,97,118,101,32,100,101,118,101,108,111,112,101,100,60,116,97,98,108,101,32,119,105,100,116,104,61,34,99,101,108,101,98,114,97,116,105,111,110,32,111,102,70,111,108,108,111,119,105,110,103,32,116,104,101,32,116,111,32,100,105,115,116,105,110,103,117,105,115,104,60,115,112,97,110,32,99,108,97,115,115,61,34,98,116,97,107,101,115,32,112,108,97,99,101,32,105,110,117,110,100,101,114,32,116,104,101,32,110,97,109,101,110,111,116,101,100,32,116,104,97,116,32,116,104,101,62,60,33,91,101,110,100,105,102,93,45,45,62,10,115,116,121,108,101,61,34,109,97,114,103,105,110,45,105,110,115,116,101,97,100,32,111,102,32,116,104,101,105,110,116,114,111,100,117,99,101,100,32,116,104,101,116,104,101,32,112,114,111,99,101,115,115,32,111,102,105,110,99,114,101,97,115,105,110,103,32,116,104,101,100,105,102,102,101,114,101,110,99,101,115,32,105,110,101,115,116,105,109,97,116,101,100,32,116,104,97,116,101,115,112,101,99,105,97,108,108,121,32,116,104,101,47,100,105,118,62,60,100,105,118,32,105,100,61,34,119,97,115,32,101,118,101,110,116,117,97,108,108,121,116,104,114,111,117,103,104,111,117,116,32,104,105,115,116,104,101,32,100,105,102,102,101,114,101,110,99,101,115,111,109,101,116,104,105,110,103,32,116,104,97,116,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,105,103,110,105,102,105,99,97,110,116,108,121,32,62,60,47,115,99,114,105,112,116,62,13,10,13,10,101,110,118,105,114,111,110,109,101,110,116,97,108,32,116,111,32,112,114,101,118,101,110,116,32,116,104,101,104,97,118,101,32,98,101,101,110,32,117,115,101,100,101,115,112,101,99,105,97,108,108,121,32,102,111,114,117,110,100,101,114,115,116,97,110,100,32,116,104,101,105,115,32,101,115,115,101,110,116,105,97,108,108,121,119,101,114,101,32,116,104,101,32,102,105,114,115,116,105,115,32,116,104,101,32,108,97,114,103,101,115,116,104,97,118,101,32,98,101,101,110,32,109,97,100,101,34,32,115,114,99,61,34,104,116,116,112,58,47,47,105,110,116,101,114,112,114,101,116,101,100,32,97,115,115,101,99,111,110,100,32,104,97,108,102,32,111,102,99,114,111,108,108,105,110,103,61,34,110,111,34,32,105,115,32,99,111,109,112,111,115,101,100,32,111,102,73,73,44,32,72,111,108,121,32,82,111,109,97,110,105,115,32,101,120,112,101,99,116,101,100,32,116,111,104,97,118,101,32,116,104,101,105,114,32,111,119,110,100,101,102,105,110,101,100,32,97,115,32,116,104,101,116,114,97,100,105,116,105,111,110,97,108,108,121,32,104,97,118,101,32,100,105,102,102,101,114,101,110,116,97,114,101,32,111,102,116,101,110,32,117,115,101,100,116,111,32,101,110,115,117,114,101,32,116,104,97,116,97,103,114,101,101,109,101,110,116,32,119,105,116,104,99,111,110,116,97,105,110,105,110,103,32,116,104,101,97,114,101,32,102,114,101,113,117,101,110,116,108,121,105,110,102,111,114,109,97,116,105,111,110,32,111,110,101,120,97,109,112,108,101,32,105,115,32,116,104,101,114,101,115,117,108,116,105,110,103,32,105,110,32,97,60,47,97,62,60,47,108,105,62,60,47,117,108,62,32,99,108,97,115,115,61,34,102,111,111,116,101,114,97,110,100,32,101,115,112,101,99,105,97,108,108,121,116,121,112,101,61,34,98,117,116,116,111,110,34,32,60,47,115,112,97,110,62,60,47,115,112,97,110,62,119,104,105,99,104,32,105,110,99,108,117,100,101,100,62,10,60,109,101,116,97,32,110,97,109,101,61,34,99,111,110,115,105,100,101,114,101,100,32,116,104,101,99,97,114,114,105,101,100,32,111,117,116,32,98,121,72,111,119,101,118,101,114,44,32,105,116,32,105,115,98,101,99,97,109,101,32,112,97,114,116,32,111,102,105,110,32,114,101,108,97,116,105,111,110,32,116,111,112,111,112,117,108,97,114,32,105,110,32,116,104,101,116,104,101,32,99,97,112,105,116,97,108,32,111,102,119,97,115,32,111,102,102,105,99,105,97,108,108,121,119,104,105,99,104,32,104,97,115,32,98,101,101,110,116,104,101,32,72,105,115,116,111,114,121,32,111,102,97,108,116,101,114,110,97,116,105,118,101,32,116,111,100,105,102,102,101,114,101,110,116,32,102,114,111,109,116,111,32,115,117,112,112,111,114,116,32,116,104,101,115,117,103,103,101,115,116,101,100,32,116,104,97,116,105,110,32,116,104,101,32,112,114,111,99,101,115,115,32,32,60,100,105,118,32,99,108,97,115,115,61,34,116,104,101,32,102,111,117,110,100,97,116,105,111,110,98,101,99,97,117,115,101,32,111,102,32,104,105,115,99,111,110,99,101,114,110,101,100,32,119,105,116,104,116,104,101,32,117,110,105,118,101,114,115,105,116,121,111,112,112,111,115,101,100,32,116,111,32,116,104,101,116,104,101,32,99,111,110,116,101,120,116,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,112,116,101,120,116,34,32,110,97,109,101,61,34,113,34,9,9,60,100,105,118,32,99,108,97,115,115,61,34,116,104,101,32,115,99,105,101,110,116,105,102,105,99,114,101,112,114,101,115,101,110,116,101,100,32,98,121,109,97,116,104,101,109,97,116,105,99,105,97,110,115,101,108,101,99,116,101,100,32,98,121,32,116,104,101,116,104,97,116,32,104,97,118,101,32,98,101,101,110,62,60,100,105,118,32,99,108,97,115,115,61,34,99,100,105,118,32,105,100,61,34,104,101,97,100,101,114,105,110,32,112,97,114,116,105,99,117,108,97,114,44,99,111,110,118,101,114,116,101,100,32,105,110,116,111,41,59,10,60,47,115,99,114,105,112,116,62,10,60,112,104,105,108,111,115,111,112,104,105,99,97,108,32,115,114,112,115,107,111,104,114,118,97,116,115,107,105,116,105,225,186,191,110,103,32,86,105,225,187,135,116,208,160,209,131,209,129,209,129,208,186,208,184,208,185,209,128,209,131,209,129,209,129,208,186,208,184,208,185,105,110,118,101,115,116,105,103,97,99,105,195,179,110,112,97,114,116,105,99,105,112,97,99,105,195,179,110,208,186,208,190,209,130,208,190,209,128,209,139,208,181,208,190,208,177,208,187,208,176,209,129,209,130,208,184,208,186,208,190,209,130,208,190,209,128,209,139,208,185,209,135,208,181,208,187,208,190,208,178,208,181,208,186,209,129,208,184,209,129,209,130,208,181,208,188,209,139,208,157,208,190,208,178,208,190,209,129,209,130,208,184,208,186,208,190,209,130,208,190,209,128,209,139,209,133,208,190,208,177,208,187,208,176,209,129,209,130,209,140,208,178,209,128,208,181,208,188,208,181,208,189,208,184,208,186,208,190,209,130,208,190,209,128,208,176,209,143,209,129,208,181,208,179,208,190,208,180,208,189,209,143,209,129,208,186,208,176,209,135,208,176,209,130,209,140,208,189,208,190,208,178,208,190,209,129,209,130,208,184,208,163,208,186,209,128,208,176,208,184,208,189,209,139,208,178,208,190,208,191,209,128,208,190,209,129,209,139,208,186,208,190,209,130,208,190,209,128,208,190,208,185,209,129,208,180,208,181,208,187,208,176,209,130,209,140,208,191,208,190,208,188,208,190,209,137,209,140,209,142,209,129,209,128,208,181,208,180,209,129,209,130,208,178,208,190,208,177,209,128,208,176,208,183,208,190,208,188,209,129,209,130,208,190,209,128,208,190,208,189,209,139,209,131,209,135,208,176,209,129,209,130,208,184,208,181,209,130,208,181,209,135,208,181,208,189,208,184,208,181,208,147,208,187,208,176,208,178,208,189,208,176,209,143,208,184,209,129,209,130,208,190,209,128,208,184,208,184,209,129,208,184,209,129,209,130,208,181,208,188,208,176,209,128,208,181,209,136,208,181,208,189,208,184,209,143,208,161,208,186,208,176,209,135,208,176,209,130,209,140,208,191,208,190,209,141,209,130,208,190,208,188,209,131,209,129,208,187,208,181,208,180,209,131,208,181,209,130,209,129,208,186,208,176,208,183,208,176,209,130,209,140,209,130,208,190,208,178,208,176,209,128,208,190,208,178,208,186,208,190,208,189,208,181,209,135,208,189,208,190,209,128,208,181,209,136,208,181,208,189,208,184,208,181,208,186,208,190,209,130,208,190,209,128,208,190,208,181,208,190,209,128,208,179,208,176,208,189,208,190,208,178,208,186,208,190,209,130,208,190,209,128,208,190,208,188,208,160,208,181,208,186,208,187,208,176,208,188,208,176,216,167,217,132,217,133,217,134,216,170,216,175,217,137,217,133,217,134,216,170,216,175,217,138,216,167,216,170,216,167,217,132,217,133,217,136,216,182,217,136,216,185,216,167,217,132,216,168,216,177,216,167,217,133,216,172,216,167,217,132,217,133,217,136,216,167,217,130,216,185,216,167,217,132,216,177,216,179,216,167,216,166,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,216,167,217,132,216,163,216,185,216,182,216,167,216,161,216,167,217,132,216,177,217,138,216,167,216,182,216,169,216,167,217,132,216,170,216,181,217,133,217,138,217,133,216,167,217,132,216,167,216,185,216,182,216,167,216,161,216,167,217,132,217,134,216,170,216,167,216,166,216,172,216,167,217,132,216,163,217,132,216,185,216,167,216,168,216,167,217,132,216,170,216,179,216,172,217,138,217,132,216,167,217,132,216,163,217,130,216,179,216,167,217,133,216,167,217,132,216,182,216,186,216,183,216,167,216,170,216,167,217,132,217,129,217,138,216,175,217,138,217,136,216,167,217,132,216,170,216,177,216,173,217,138,216,168,216,167,217,132,216,172,216,175,217,138,216,175,216,169,216,167,217,132,216,170,216,185,217,132,217,138,217,133,216,167,217,132,216,163,216,174,216,168,216,167,216,177,216,167,217,132,216,167,217,129,217,132,216,167,217,133,216,167,217,132,216,163,217,129,217,132,216,167,217,133,216,167,217,132,216,170,216,167,216,177,217,138,216,174,216,167,217,132,216,170,217,130,217,134,217,138,216,169,216,167,217,132,216,167,217,132,216,185,216,167,216,168,216,167,217,132,216,174,217,136,216,167,216,183,216,177,216,167,217,132,217,133,216,172,216,170,217,133,216,185,216,167,217,132,216,175,217,138,217,131,217,136,216,177,216,167,217,132,216,179,217,138,216,167,216,173,216,169,216,185,216,168,216,175,216,167,217,132,217,132,217,135,216,167,217,132,216,170,216,177,216,168,217,138,216,169,216,167,217,132,216,177,217,136,216,167,216,168,216,183,216,167,217,132,216,163,216,175,216,168,217,138,216,169,216,167,217,132,216,167,216,174,216,168,216,167,216,177,216,167,217,132,217,133,216,170,216,173,216,175,216,169,216,167,217,132,216,167,216,186,216,167,217,134,217,138,99,117,114,115,111,114,58,112,111,105,110,116,101,114,59,60,47,116,105,116,108,101,62,10,60,109,101,116,97,32,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,34,62,60,115,112,97,110,32,99,108,97,115,115,61,34,109,101,109,98,101,114,115,32,111,102,32,116,104,101,32,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,47,97,62,32,124,32,60,97,32,104,114,101,102,61,34,60,33,100,111,99,116,121,112,101,32,104,116,109,108,62,109,101,100,105,97,61,34,115,99,114,101,101,110,34,32,60,111,112,116,105,111,110,32,118,97,108,117,101,61,34,102,97,118,105,99,111,110,46,105,99,111,34,32,47,62,10,9,9,60,100,105,118,32,99,108,97,115,115,61,34,99,104,97,114,97,99,116,101,114,105,115,116,105,99,115,34,32,109,101,116,104,111,100,61,34,103,101,116,34,32,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,112,97,100,100,105,110,103,45,98,111,116,116,111,109,58,114,101,112,114,101,115,101,110,116,97,116,105,118,101,115,115,117,98,109,105,116,34,32,118,97,108,117,101,61,34,97,108,105,103,110,61,34,99,101,110,116,101,114,34,32,116,104,114,111,117,103,104,111,117,116,32,116,104,101,32,115,99,105,101,110,99,101,32,102,105,99,116,105,111,110,10,32,32,60,100,105,118,32,99,108,97,115,115,61,34,115,117,98,109,105,116,34,32,99,108,97,115,115,61,34,111,110,101,32,111,102,32,116,104,101,32,109,111,115,116,32,118,97,108,105,103,110,61,34,116,111,112,34,62,60,119,97,115,32,101,115,116,97,98,108,105,115,104,101,100,41,59,13,10,60,47,115,99,114,105,112,116,62,13,10,114,101,116,117,114,110,32,102,97,108,115,101,59,34,62,41,46,115,116,121,108,101,46,100,105,115,112,108,97,121,98,101,99,97,117,115,101,32,111,102,32,116,104,101,32,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,60,102,111,114,109,32,97,99,116,105,111,110,61,34,47,125,98,111,100,121,123,109,97,114,103,105,110,58,48,59,69,110,99,121,99,108,111,112,101,100,105,97,32,111,102,118,101,114,115,105,111,110,32,111,102,32,116,104,101,32,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,110,97,109,101,34,32,99,111,110,116,101,110,116,61,34,60,47,100,105,118,62,10,60,47,100,105,118,62,10,10,97,100,109,105,110,105,115,116,114,97,116,105,118,101,32,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,104,105,115,116,111,114,121,32,111,102,32,116,104,101,32,34,62,60,105,110,112,117,116,32,116,121,112,101,61,34,112,111,114,116,105,111,110,32,111,102,32,116,104,101,32,97,115,32,112,97,114,116,32,111,102,32,116,104,101,32,38,110,98,115,112,59,60,97,32,104,114,101,102,61,34,111,116,104,101,114,32,99,111,117,110,116,114,105,101,115,34,62,10,60,100,105,118,32,99,108,97,115,115,61,34,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,73,110,32,111,116,104,101,114,32,119,111,114,100,115,44,100,105,115,112,108,97,121,58,32,98,108,111,99,107,59,99,111,110,116,114,111,108,32,111,102,32,116,104,101,32,105,110,116,114,111,100,117,99,116,105,111,110,32,111,102,47,62,10,60,109,101,116,97,32,110,97,109,101,61,34,97,115,32,119,101,108,108,32,97,115,32,116,104,101,32,105,110,32,114,101,99,101,110,116,32,121,101,97,114,115,13,10,9,60,100,105,118,32,99,108,97,115,115,61,34,60,47,100,105,118,62,10,9,60,47,100,105,118,62,10,105,110,115,112,105,114,101,100,32,98,121,32,116,104,101,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,99,111,109,112,97,116,105,98,108,101,32,119,105,116,104,98,101,99,97,109,101,32,107,110,111,119,110,32,97,115,32,115,116,121,108,101,61,34,109,97,114,103,105,110,58,46,106,115,34,62,60,47,115,99,114,105,112,116,62,60,32,73,110,116,101,114,110,97,116,105,111,110,97,108,32,116,104,101,114,101,32,104,97,118,101,32,98,101,101,110,71,101,114,109,97,110,32,108,97,110,103,117,97,103,101,32,115,116,121,108,101,61,34,99,111,108,111,114,58,35,67,111,109,109,117,110,105,115,116,32,80,97,114,116,121,99,111,110,115,105,115,116,101,110,116,32,119,105,116,104,98,111,114,100,101,114,61,34,48,34,32,99,101,108,108,32,109,97,114,103,105,110,104,101,105,103,104,116,61,34,116,104,101,32,109,97,106,111,114,105,116,121,32,111,102,34,32,97,108,105,103,110,61,34,99,101,110,116,101,114,114,101,108,97,116,101,100,32,116,111,32,116,104,101,32,109,97,110,121,32,100,105,102,102,101,114,101,110,116,32,79,114,116,104,111,100,111,120,32,67,104,117,114,99,104,115,105,109,105,108,97,114,32,116,111,32,116,104,101,32,47,62,10,60,108,105,110,107,32,114,101,108,61,34,115,119,97,115,32,111,110,101,32,111,102,32,116,104,101,32,117,110,116,105,108,32,104,105,115,32,100,101,97,116,104,125,41,40,41,59,10,60,47,115,99,114,105,112,116,62,111,116,104,101,114,32,108,97,110,103,117,97,103,101,115,99,111,109,112,97,114,101,100,32,116,111,32,116,104,101,112,111,114,116,105,111,110,115,32,111,102,32,116,104,101,116,104,101,32,78,101,116,104,101,114,108,97,110,100,115,116,104,101,32,109,111,115,116,32,99,111,109,109,111,110,98,97,99,107,103,114,111,117,110,100,58,117,114,108,40,97,114,103,117,101,100,32,116,104,97,116,32,116,104,101,115,99,114,111,108,108,105,110,103,61,34,110,111,34,32,105,110,99,108,117,100,101,100,32,105,110,32,116,104,101,78,111,114,116,104,32,65,109,101,114,105,99,97,110,32,116,104,101,32,110,97,109,101,32,111,102,32,116,104,101,105,110,116,101,114,112,114,101,116,97,116,105,111,110,115,116,104,101,32,116,114,97,100,105,116,105,111,110,97,108,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,102,114,101,113,117,101,110,116,108,121,32,117,115,101,100,97,32,99,111,108,108,101,99,116,105,111,110,32,111,102,118,101,114,121,32,115,105,109,105,108,97,114,32,116,111,115,117,114,114,111,117,110,100,105,110,103,32,116,104,101,101,120,97,109,112,108,101,32,111,102,32,116,104,105,115,97,108,105,103,110,61,34,99,101,110,116,101,114,34,62,119,111,117,108,100,32,104,97,118,101,32,98,101,101,110,105,109,97,103,101,95,99,97,112,116,105,111,110,32,61,97,116,116,97,99,104,101,100,32,116,111,32,116,104,101,115,117,103,103,101,115,116,105,110,103,32,116,104,97,116,105,110,32,116,104,101,32,102,111,114,109,32,111,102,32,105,110,118,111,108,118,101,100,32,105,110,32,116,104,101,105,115,32,100,101,114,105,118,101,100,32,102,114,111,109,110,97,109,101,100,32,97,102,116,101,114,32,116,104,101,73,110,116,114,111,100,117,99,116,105,111,110,32,116,111,114,101,115,116,114,105,99,116,105,111,110,115,32,111,110,32,115,116,121,108,101,61,34,119,105,100,116,104,58,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,116,104,101,32,99,114,101,97,116,105,111,110,32,111,102,109,111,115,116,32,105,109,112,111,114,116,97,110,116,32,105,110,102,111,114,109,97,116,105,111,110,32,97,110,100,114,101,115,117,108,116,101,100,32,105,110,32,116,104,101,99,111,108,108,97,112,115,101,32,111,102,32,116,104,101,84,104,105,115,32,109,101,97,110,115,32,116,104,97,116,101,108,101,109,101,110,116,115,32,111,102,32,116,104,101,119,97,115,32,114,101,112,108,97,99,101,100,32,98,121,97,110,97,108,121,115,105,115,32,111,102,32,116,104,101,105,110,115,112,105,114,97,116,105,111,110,32,102,111,114,114,101,103,97,114,100,101,100,32,97,115,32,116,104,101,109,111,115,116,32,115,117,99,99,101,115,115,102,117,108,107,110,111,119,110,32,97,115,32,38,113,117,111,116,59,97,32,99,111,109,112,114,101,104,101,110,115,105,118,101,72,105,115,116,111,114,121,32,111,102,32,116,104,101,32,119,101,114,101,32,99,111,110,115,105,100,101,114,101,100,114,101,116,117,114,110,101,100,32,116,111,32,116,104,101,97,114,101,32,114,101,102,101,114,114,101,100,32,116,111,85,110,115,111,117,114,99,101,100,32,105,109,97,103,101,62,10,9,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,115,105,115,116,115,32,111,102,32,116,104,101,115,116,111,112,80,114,111,112,97,103,97,116,105,111,110,105,110,116,101,114,101,115,116,32,105,110,32,116,104,101,97,118,97,105,108,97,98,105,108,105,116,121,32,111,102,97,112,112,101,97,114,115,32,116,111,32,104,97,118,101,101,108,101,99,116,114,111,109,97,103,110,101,116,105,99,101,110,97,98,108,101,83,101,114,118,105,99,101,115,40,102,117,110,99,116,105,111,110,32,111,102,32,116,104,101,73,116,32,105,115,32,105,109,112,111,114,116,97,110,116,60,47,115,99,114,105,112,116,62,60,47,100,105,118,62,102,117,110,99,116,105,111,110,40,41,123,118,97,114,32,114,101,108,97,116,105,118,101,32,116,111,32,116,104,101,97,115,32,97,32,114,101,115,117,108,116,32,111,102,32,116,104,101,32,112,111,115,105,116,105,111,110,32,111,102,70,111,114,32,101,120,97,109,112,108,101,44,32,105,110,32,109,101,116,104,111,100,61,34,112,111,115,116,34,32,119,97,115,32,102,111,108,108,111,119,101,100,32,98,121,38,97,109,112,59,109,100,97,115,104,59,32,116,104,101,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,117,108,62,60,47,100,105,118,62,60,47,100,105,118,62,97,102,116,101,114,32,116,104,101,32,100,101,97,116,104,119,105,116,104,32,114,101,115,112,101,99,116,32,116,111,115,116,121,108,101,61,34,112,97,100,100,105,110,103,58,105,115,32,112,97,114,116,105,99,117,108,97,114,108,121,100,105,115,112,108,97,121,58,105,110,108,105,110,101,59,32,116,121,112,101,61,34,115,117,98,109,105,116,34,32,105,115,32,100,105,118,105,100,101,100,32,105,110,116,111,228,184,173,230,150,135,32,40,231,174,128,228,189,147,41,114,101,115,112,111,110,115,97,98,105,108,105,100,97,100,97,100,109,105,110,105,115,116,114,97,99,105,195,179,110,105,110,116,101,114,110,97,99,105,111,110,97,108,101,115,99,111,114,114,101,115,112,111,110,100,105,101,110,116,101,224,164,137,224,164,170,224,164,175,224,165,139,224,164,151,224,164,170,224,165,130,224,164,176,224,165,141,224,164,181,224,164,185,224,164,174,224,164,190,224,164,176,224,165,135,224,164,178,224,165,139,224,164,151,224,165,139,224,164,130,224,164,154,224,165,129,224,164,168,224,164,190,224,164,181,224,164,178,224,165,135,224,164,149,224,164,191,224,164,168,224,164,184,224,164,176,224,164,149,224,164,190,224,164,176,224,164,170,224,165,129,224,164,178,224,164,191,224,164,184,224,164,150,224,165,139,224,164,156,224,165,135,224,164,130,224,164,154,224,164,190,224,164,185,224,164,191,224,164,143,224,164,173,224,165,135,224,164,156,224,165,135,224,164,130,224,164,182,224,164,190,224,164,174,224,164,191,224,164,178,224,164,185,224,164,174,224,164,190,224,164,176,224,165,128,224,164,156,224,164,190,224,164,151,224,164,176,224,164,163,224,164,172,224,164,168,224,164,190,224,164,168,224,165,135,224,164,149,224,165,129,224,164,174,224,164,190,224,164,176,224,164,172,224,165,141,224,164,178,224,165,137,224,164,151,224,164,174,224,164,190,224,164,178,224,164,191,224,164,149,224,164,174,224,164,185,224,164,191,224,164,178,224,164,190,224,164,170,224,165,131,224,164,183,224,165,141,224,164,160,224,164,172,224,164,162,224,164,188,224,164,164,224,165,135,224,164,173,224,164,190,224,164,156,224,164,170,224,164,190,224,164,149,224,165,141,224,164,178,224,164,191,224,164,149,224,164,159,224,165,141,224,164,176,224,165,135,224,164,168,224,164,150,224,164,191,224,164,178,224,164,190,224,164,171,224,164,166,224,165,140,224,164,176,224,164,190,224,164,168,224,164,174,224,164,190,224,164,174,224,164,178,224,165,135,224,164,174,224,164,164,224,164,166,224,164,190,224,164,168,224,164,172,224,164,190,224,164,156,224,164,190,224,164,176,224,164,181,224,164,191,224,164,149,224,164,190,224,164,184,224,164,149,224,165,141,224,164,175,224,165,139,224,164,130,224,164,154,224,164,190,224,164,185,224,164,164,224,165,135,224,164,170,224,164,185,224,165,129,224,164,129,224,164,154,224,164,172,224,164,164,224,164,190,224,164,175,224,164,190,224,164,184,224,164,130,224,164,181,224,164,190,224,164,166,224,164,166,224,165,135,224,164,150,224,164,168,224,165,135,224,164,170,224,164,191,224,164,155,224,164,178,224,165,135,224,164,181,224,164,191,224,164,182,224,165,135,224,164,183,224,164,176,224,164,190,224,164,156,224,165,141,224,164,175,224,164,137,224,164,164,224,165,141,224,164,164,224,164,176,224,164,174,224,165,129,224,164,130,224,164,172,224,164,136,224,164,166,224,165,139,224,164,168,224,165,139,224,164,130,224,164,137,224,164,170,224,164,149,224,164,176,224,164,163,224,164,170,224,164,162,224,164,188,224,165,135,224,164,130,224,164,184,224,165,141,224,164,165,224,164,191,224,164,164,224,164,171,224,164,191,224,164,178,224,165,141,224,164,174,224,164,174,224,165,129,224,164,150,224,165,141,224,164,175,224,164,133,224,164,154,224,165,141,224,164,155,224,164,190,224,164,155,224,165,130,224,164,159,224,164,164,224,165,128,224,164,184,224,164,130,224,164,151,224,165,128,224,164,164,224,164,156,224,164,190,224,164,143,224,164,151,224,164,190,224,164,181,224,164,191,224,164,173,224,164,190,224,164,151,224,164,152,224,164,163,224,165,141,224,164,159,224,165,135,224,164,166,224,165,130,224,164,184,224,164,176,224,165,135,224,164,166,224,164,191,224,164,168,224,165,139,224,164,130,224,164,185,224,164,164,224,165,141,224,164,175,224,164,190,224,164,184,224,165,135,224,164,149,224,165,141,224,164,184,224,164,151,224,164,190,224,164,130,224,164,167,224,165,128,224,164,181,224,164,191,224,164,182,224,165,141,224,164,181,224,164,176,224,164,190,224,164,164,224,165,135,224,164,130,224,164,166,224,165,136,224,164,159,224,165,141,224,164,184,224,164,168,224,164,149,224,165,141,224,164,182,224,164,190,224,164,184,224,164,190,224,164,174,224,164,168,224,165,135,224,164,133,224,164,166,224,164,190,224,164,178,224,164,164,224,164,172,224,164,191,224,164,156,224,164,178,224,165,128,224,164,170,224,165,129,224,164,176,224,165,130,224,164,183,224,164,185,224,164,191,224,164,130,224,164,166,224,165,128,224,164,174,224,164,191,224,164,164,224,165,141,224,164,176,224,164,149,224,164,181,224,164,191,224,164,164,224,164,190,224,164,176,224,165,129,224,164,170,224,164,175,224,165,135,224,164,184,224,165,141,224,164,165,224,164,190,224,164,168,224,164,149,224,164,176,224,165,139,224,164,161,224,164,188,224,164,174,224,165,129,224,164,149,224,165,141,224,164,164,224,164,175,224,165,139,224,164,156,224,164,168,224,164,190,224,164,149,224,165,131,224,164,170,224,164,175,224,164,190,224,164,170,224,165,139,224,164,184,224,165,141,224,164,159,224,164,152,224,164,176,224,165,135,224,164,178,224,165,130,224,164,149,224,164,190,224,164,176,224,165,141,224,164,175,224,164,181,224,164,191,224,164,154,224,164,190,224,164,176,224,164,184,224,165,130,224,164,154,224,164,168,224,164,190,224,164,174,224,165,130,224,164,178,224,165,141,224,164,175,224,164,166,224,165,135,224,164,150,224,165,135,224,164,130,224,164,185,224,164,174,224,165,135,224,164,182,224,164,190,224,164,184,224,165,141,224,164,149,224,165,130,224,164,178,224,164,174,224,165,136,224,164,130,224,164,168,224,165,135,224,164,164,224,165,136,224,164,175,224,164,190,224,164,176,224,164,156,224,164,191,224,164,184,224,164,149,224,165,135,114,115,115,43,120,109,108,34,32,116,105,116,108,101,61,34,45,116,121,112,101,34,32,99,111,110,116,101,110,116,61,34,116,105,116,108,101,34,32,99,111,110,116,101,110,116,61,34,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,101,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,60,34,32,109,101,116,104,111,100,61,34,112,111,115,116,34,32,60,47,115,112,97,110,62,60,47,97,62,60,47,108,105,62,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,116,47,106,113,117,101,114,121,46,109,105,110,46,106,115,34,62,46,99,108,105,99,107,40,102,117,110,99,116,105,111,110,40,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,125,41,40,41,59,10,60,47,115,99,114,105,112,116,62,10,60,47,115,112,97,110,62,60,97,32,104,114,101,102,61,34,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,41,59,32,114,101,116,117,114,110,32,102,97,108,115,101,59,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,115,99,114,111,108,108,105,110,103,61,34,110,111,34,32,98,111,114,100,101,114,45,99,111,108,108,97,112,115,101,58,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,66,97,104,97,115,97,32,73,110,100,111,110,101,115,105,97,69,110,103,108,105,115,104,32,108,97,110,103,117,97,103,101,60,116,101,120,116,32,120,109,108,58,115,112,97,99,101,61,46,103,105,102,34,32,98,111,114,100,101,114,61,34,48,34,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,111,118,101,114,102,108,111,119,58,104,105,100,100,101,110,59,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,115,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,47,102,97,118,105,99,111,110,46,105,99,111,34,32,47,62,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,34,32,115,116,121,108,101,61,34,119,105,100,116,104,58,49,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,83,116,97,116,101,32,85,110,105,118,101,114,115,105,116,121,116,101,120,116,45,97,108,105,103,110,58,108,101,102,116,59,10,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,44,32,105,110,99,108,117,100,105,110,103,32,116,104,101,32,97,114,111,117,110,100,32,116,104,101,32,119,111,114,108,100,41,59,13,10,60,47,115,99,114,105,112,116,62,13,10,60,34,32,115,116,121,108,101,61,34,104,101,105,103,104,116,58,59,111,118,101,114,102,108,111,119,58,104,105,100,100,101,110,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,97,110,32,105,110,116,101,114,110,97,116,105,111,110,97,108,97,32,109,101,109,98,101,114,32,111,102,32,116,104,101,32,111,110,101,32,111,102,32,116,104,101,32,102,105,114,115,116,99,97,110,32,98,101,32,102,111,117,110,100,32,105,110,32,60,47,100,105,118,62,10,9,9,60,47,100,105,118,62,10,100,105,115,112,108,97,121,58,32,110,111,110,101,59,34,62,34,32,47,62,10,60,108,105,110,107,32,114,101,108,61,34,10,32,32,40,102,117,110,99,116,105,111,110,40,41,32,123,116,104,101,32,49,53,116,104,32,99,101,110,116,117,114,121,46,112,114,101,118,101,110,116,68,101,102,97,117,108,116,40,108,97,114,103,101,32,110,117,109,98,101,114,32,111,102,32,66,121,122,97,110,116,105,110,101,32,69,109,112,105,114,101,46,106,112,103,124,116,104,117,109,98,124,108,101,102,116,124,118,97,115,116,32,109,97,106,111,114,105,116,121,32,111,102,109,97,106,111,114,105,116,121,32,111,102,32,116,104,101,32,32,97,108,105,103,110,61,34,99,101,110,116,101,114,34,62,85,110,105,118,101,114,115,105,116,121,32,80,114,101,115,115,100,111,109,105,110,97,116,101,100,32,98,121,32,116,104,101,83,101,99,111,110,100,32,87,111,114,108,100,32,87,97,114,100,105,115,116,114,105,98,117,116,105,111,110,32,111,102,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,116,104,101,32,114,101,115,116,32,111,102,32,116,104,101,32,99,104,97,114,97,99,116,101,114,105,122,101,100,32,98,121,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,62,100,101,114,105,118,101,115,32,102,114,111,109,32,116,104,101,114,97,116,104,101,114,32,116,104,97,110,32,116,104,101,32,97,32,99,111,109,98,105,110,97,116,105,111,110,32,111,102,115,116,121,108,101,61,34,119,105,100,116,104,58,49,48,48,69,110,103,108,105,115,104,45,115,112,101,97,107,105,110,103,99,111,109,112,117,116,101,114,32,115,99,105,101,110,99,101,98,111,114,100,101,114,61,34,48,34,32,97,108,116,61,34,116,104,101,32,101,120,105,115,116,101,110,99,101,32,111,102,68,101,109,111,99,114,97,116,105,99,32,80,97,114,116,121,34,32,115,116,121,108,101,61,34,109,97,114,103,105,110,45,70,111,114,32,116,104,105,115,32,114,101,97,115,111,110,44,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,9,115,66,121,84,97,103,78,97,109,101,40,115,41,91,48,93,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,60,46,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,108,105,110,107,32,114,101,108,61,34,105,99,111,110,34,32,39,32,97,108,116,61,39,39,32,99,108,97,115,115,61,39,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,118,101,114,115,105,111,110,115,32,111,102,32,116,104,101,32,60,47,97,62,60,47,100,105,118,62,60,47,100,105,118,62,47,112,97,103,101,62,10,32,32,60,112,97,103,101,62,10,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,116,98,101,99,97,109,101,32,116,104,101,32,102,105,114,115,116,98,97,104,97,115,97,32,73,110,100,111,110,101,115,105,97,101,110,103,108,105,115,104,32,40,115,105,109,112,108,101,41,206,149,206,187,206,187,206,183,206,189,206,185,206,186,206,172,209,133,209,128,208,178,208,176,209,130,209,129,208,186,208,184,208,186,208,190,208,188,208,191,208,176,208,189,208,184,208,184,209,143,208,178,208,187,209,143,208,181,209,130,209,129,209,143,208,148,208,190,208,177,208,176,208,178,208,184,209,130,209,140,209,135,208,181,208,187,208,190,208,178,208,181,208,186,208,176,209,128,208,176,208,183,208,178,208,184,209,130,208,184,209,143,208,152,208,189,209,130,208,181,209,128,208,189,208,181,209,130,208,158,209,130,208,178,208,181,209,130,208,184,209,130,209,140,208,189,208,176,208,191,209,128,208,184,208,188,208,181,209,128,208,184,208,189,209,130,208,181,209,128,208,189,208,181,209,130,208,186,208,190,209,130,208,190,209,128,208,190,208,179,208,190,209,129,209,130,209,128,208,176,208,189,208,184,209,134,209,139,208,186,208,176,209,135,208,181,209,129,209,130,208,178,208,181,209,131,209,129,208,187,208,190,208,178,208,184,209,143,209,133,208,191,209,128,208,190,208,177,208,187,208,181,208,188,209,139,208,191,208,190,208,187,209,131,209,135,208,184,209,130,209,140,209,143,208,178,208,187,209,143,209,142,209,130,209,129,209,143,208,189,208,176,208,184,208,177,208,190,208,187,208,181,208,181,208,186,208,190,208,188,208,191,208,176,208,189,208,184,209,143,208,178,208,189,208,184,208,188,208,176,208,189,208,184,208,181,209,129,209,128,208,181,208,180,209,129,209,130,208,178,208,176,216,167,217,132,217,133,217,136,216,167,216,182,217,138,216,185,216,167,217,132,216,177,216,166,217,138,216,179,217,138,216,169,216,167,217,132,216,167,217,134,216,170,217,130,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,217,131,216,167,217,132,216,179,217,138,216,167,216,177,216,167,216,170,216,167,217,132,217,133,217,131,216,170,217,136,216,168,216,169,216,167,217,132,216,179,216,185,217,136,216,175,217,138,216,169,216,167,216,173,216,181,216,167,216,166,217,138,216,167,216,170,216,167,217,132,216,185,216,167,217,132,217,133,217,138,216,169,216,167,217,132,216,181,217,136,216,170,217,138,216,167,216,170,216,167,217,132,216,167,217,134,216,170,216,177,217,134,216,170,216,167,217,132,216,170,216,181,216,167,217,133,217,138,217,133,216,167,217,132,216,165,216,179,217,132,216,167,217,133,217,138,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,169,216,167,217,132,217,133,216,177,216,166,217,138,216,167,216,170,114,111,98,111,116,115,34,32,99,111,110,116,101,110,116,61,34,60,100,105,118,32,105,100,61,34,102,111,111,116,101,114,34,62,116,104,101,32,85,110,105,116,101,100,32,83,116,97,116,101,115,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,46,106,112,103,124,114,105,103,104,116,124,116,104,117,109,98,124,46,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,60,108,111,99,97,116,105,111,110,46,112,114,111,116,111,99,111,108,102,114,97,109,101,98,111,114,100,101,114,61,34,48,34,32,115,34,32,47,62,10,60,109,101,116,97,32,110,97,109,101,61,34,60,47,97,62,60,47,100,105,118,62,60,47,100,105,118,62,60,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,38,113,117,111,116,59,32,97,110,100,32,38,113,117,111,116,59,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,109,97,114,103,105,110,58,48,59,112,97,100,100,105,110,103,58,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,32,80,114,101,115,105,100,101,110,116,32,111,102,32,116,104,101,32,116,119,101,110,116,105,101,116,104,32,99,101,110,116,117,114,121,101,118,105,115,105,111,110,62,10,32,32,60,47,112,97,103,101,73,110,116,101,114,110,101,116,32,69,120,112,108,111,114,101,114,97,46,97,115,121,110,99,32,61,32,116,114,117,101,59,13,10,105,110,102,111,114,109,97,116,105,111,110,32,97,98,111,117,116,60,100,105,118,32,105,100,61,34,104,101,97,100,101,114,34,62,34,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,60,97,32,104,114,101,102,61,34,104,116,116,112,115,58,47,47,60,100,105,118,32,105,100,61,34,99,111,110,116,101,110,116,34,60,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,60,100,101,114,105,118,101,100,32,102,114,111,109,32,116,104,101,32,60,105,109,103,32,115,114,99,61,39,104,116,116,112,58,47,47,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,10,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,115,116,121,108,101,61,34,102,111,110,116,45,115,105,122,101,58,115,99,114,105,112,116,32,108,97,110,103,117,97,103,101,61,34,65,114,105,97,108,44,32,72,101,108,118,101,116,105,99,97,44,60,47,97,62,60,115,112,97,110,32,99,108,97,115,115,61,34,60,47,115,99,114,105,112,116,62,60,115,99,114,105,112,116,32,112,111,108,105,116,105,99,97,108,32,112,97,114,116,105,101,115,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,60,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,111,102,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,39,60,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,10,98,101,103,105,110,110,105,110,103,32,111,102,32,116,104,101,32,114,101,118,101,97,108,101,100,32,116,104,97,116,32,116,104,101,116,101,108,101,118,105,115,105,111,110,32,115,101,114,105,101,115,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,62,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,99,108,97,105,109,105,110,103,32,116,104,97,116,32,116,104,101,104,116,116,112,37,51,65,37,50,70,37,50,70,119,119,119,46,109,97,110,105,102,101,115,116,97,116,105,111,110,115,32,111,102,80,114,105,109,101,32,77,105,110,105,115,116,101,114,32,111,102,105,110,102,108,117,101,110,99,101,100,32,98,121,32,116,104,101,99,108,97,115,115,61,34,99,108,101,97,114,102,105,120,34,62,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,13,10,116,104,114,101,101,45,100,105,109,101,110,115,105,111,110,97,108,67,104,117,114,99,104,32,111,102,32,69,110,103,108,97,110,100,111,102,32,78,111,114,116,104,32,67,97,114,111,108,105,110,97,115,113,117,97,114,101,32,107,105,108,111,109,101,116,114,101,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,100,105,115,116,105,110,99,116,32,102,114,111,109,32,116,104,101,99,111,109,109,111,110,108,121,32,107,110,111,119,110,32,97,115,80,104,111,110,101,116,105,99,32,65,108,112,104,97,98,101,116,100,101,99,108,97,114,101,100,32,116,104,97,116,32,116,104,101,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,66,101,110,106,97,109,105,110,32,70,114,97,110,107,108,105,110,114,111,108,101,45,112,108,97,121,105,110,103,32,103,97,109,101,116,104,101,32,85,110,105,118,101,114,115,105,116,121,32,111,102,105,110,32,87,101,115,116,101,114,110,32,69,117,114,111,112,101,112,101,114,115,111,110,97,108,32,99,111,109,112,117,116,101,114,80,114,111,106,101,99,116,32,71,117,116,101,110,98,101,114,103,114,101,103,97,114,100,108,101,115,115,32,111,102,32,116,104,101,104,97,115,32,98,101,101,110,32,112,114,111,112,111,115,101,100,116,111,103,101,116,104,101,114,32,119,105,116,104,32,116,104,101,62,60,47,108,105,62,60,108,105,32,99,108,97,115,115,61,34,105,110,32,115,111,109,101,32,99,111,117,110,116,114,105,101,115,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,111,102,32,116,104,101,32,112,111,112,117,108,97,116,105,111,110,111,102,102,105,99,105,97,108,32,108,97,110,103,117,97,103,101,60,105,109,103,32,115,114,99,61,34,105,109,97,103,101,115,47,105,100,101,110,116,105,102,105,101,100,32,98,121,32,116,104,101,110,97,116,117,114,97,108,32,114,101,115,111,117,114,99,101,115,99,108,97,115,115,105,102,105,99,97,116,105,111,110,32,111,102,99,97,110,32,98,101,32,99,111,110,115,105,100,101,114,101,100,113,117,97,110,116,117,109,32,109,101,99,104,97,110,105,99,115,78,101,118,101,114,116,104,101,108,101,115,115,44,32,116,104,101,109,105,108,108,105,111,110,32,121,101,97,114,115,32,97,103,111,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,206,149,206,187,206,187,206,183,206,189,206,185,206,186,206,172,10,116,97,107,101,32,97,100,118,97,110,116,97,103,101,32,111,102,97,110,100,44,32,97,99,99,111,114,100,105,110,103,32,116,111,97,116,116,114,105,98,117,116,101,100,32,116,111,32,116,104,101,77,105,99,114,111,115,111,102,116,32,87,105,110,100,111,119,115,116,104,101,32,102,105,114,115,116,32,99,101,110,116,117,114,121,117,110,100,101,114,32,116,104,101,32,99,111,110,116,114,111,108,100,105,118,32,99,108,97,115,115,61,34,104,101,97,100,101,114,115,104,111,114,116,108,121,32,97,102,116,101,114,32,116,104,101,110,111,116,97,98,108,101,32,101,120,99,101,112,116,105,111,110,116,101,110,115,32,111,102,32,116,104,111,117,115,97,110,100,115,115,101,118,101,114,97,108,32,100,105,102,102,101,114,101,110,116,97,114,111,117,110,100,32,116,104,101,32,119,111,114,108,100,46,114,101,97,99,104,105,110,103,32,109,105,108,105,116,97,114,121,105,115,111,108,97,116,101,100,32,102,114,111,109,32,116,104,101,111,112,112,111,115,105,116,105,111,110,32,116,111,32,116,104,101,116,104,101,32,79,108,100,32,84,101,115,116,97,109,101,110,116,65,102,114,105,99,97,110,32,65,109,101,114,105,99,97,110,115,105,110,115,101,114,116,101,100,32,105,110,116,111,32,116,104,101,115,101,112,97,114,97,116,101,32,102,114,111,109,32,116,104,101,109,101,116,114,111,112,111,108,105,116,97,110,32,97,114,101,97,109,97,107,101,115,32,105,116,32,112,111,115,115,105,98,108,101,97,99,107,110,111,119,108,101,100,103,101,100,32,116,104,97,116,97,114,103,117,97,98,108,121,32,116,104,101,32,109,111,115,116,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,10,116,104,101,32,73,110,116,101,114,110,97,116,105,111,110,97,108,65,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,99,111,105,110,99,105,100,101,32,119,105,116,104,32,116,104,101,116,119,111,45,116,104,105,114,100,115,32,111,102,32,116,104,101,68,117,114,105,110,103,32,116,104,105,115,32,116,105,109,101,44,100,117,114,105,110,103,32,116,104,101,32,112,101,114,105,111,100,97,110,110,111,117,110,99,101,100,32,116,104,97,116,32,104,101,116,104,101,32,105,110,116,101,114,110,97,116,105,111,110,97,108,97,110,100,32,109,111,114,101,32,114,101,99,101,110,116,108,121,98,101,108,105,101,118,101,100,32,116,104,97,116,32,116,104,101,99,111,110,115,99,105,111,117,115,110,101,115,115,32,97,110,100,102,111,114,109,101,114,108,121,32,107,110,111,119,110,32,97,115,115,117,114,114,111,117,110,100,101,100,32,98,121,32,116,104,101,102,105,114,115,116,32,97,112,112,101,97,114,101,100,32,105,110,111,99,99,97,115,105,111,110,97,108,108,121,32,117,115,101,100,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,116,101,120,116,45,97,108,105,103,110,58,99,101,110,116,101,114,59,106,97,120,47,108,105,98,115,47,106,113,117,101,114,121,47,49,46,98,97,99,107,103,114,111,117,110,100,45,99,111,108,111,114,58,35,116,121,112,101,61,34,97,112,112,108,105,99,97,116,105,111,110,47,97,110,103,117,97,103,101,34,32,99,111,110,116,101,110,116,61,34,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,80,114,105,118,97,99,121,32,80,111,108,105,99,121,60,47,97,62,101,40,34,37,51,67,115,99,114,105,112,116,32,115,114,99,61,39,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,79,110,32,116,104,101,32,111,116,104,101,114,32,104,97,110,100,44,46,106,112,103,124,116,104,117,109,98,124,114,105,103,104,116,124,50,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,34,60,100,105,118,32,115,116,121,108,101,61,34,102,108,111,97,116,58,110,105,110,101,116,101,101,110,116,104,32,99,101,110,116,117,114,121,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,115,59,116,101,120,116,45,97,108,105,103,110,58,99,101,110,116,101,114,102,111,110,116,45,119,101,105,103,104,116,58,32,98,111,108,100,59,32,65,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,32,98,101,116,119,101,101,110,34,32,102,114,97,109,101,98,111,114,100,101,114,61,34,48,34,32,34,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,108,105,110,107,32,104,114,101,102,61,34,104,116,116,112,58,47,47,104,116,109,108,52,47,108,111,111,115,101,46,100,116,100,34,62,10,100,117,114,105,110,103,32,116,104,105,115,32,112,101,114,105,111,100,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,99,108,111,115,101,108,121,32,114,101,108,97,116,101,100,32,116,111,102,111,114,32,116,104,101,32,102,105,114,115,116,32,116,105,109,101,59,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,60,115,112,97,110,32,115,116,121,108,101,61,34,102,111,110,116,45,111,110,114,101,97,100,121,115,116,97,116,101,99,104,97,110,103,101,9,60,100,105,118,32,99,108,97,115,115,61,34,99,108,101,97,114,100,111,99,117,109,101,110,116,46,108,111,99,97,116,105,111,110,46,32,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,101,32,97,32,119,105,100,101,32,118,97,114,105,101,116,121,32,111,102,32,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,13,10,60,38,110,98,115,112,59,38,110,98,115,112,59,38,110,98,115,112,59,34,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,115,116,121,108,101,61,34,102,108,111,97,116,58,108,101,102,116,59,99,111,110,99,101,114,110,101,100,32,119,105,116,104,32,116,104,101,61,104,116,116,112,37,51,65,37,50,70,37,50,70,119,119,119,46,105,110,32,112,111,112,117,108,97,114,32,99,117,108,116,117,114,101,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,105,116,32,105,115,32,112,111,115,115,105,98,108,101,32,116,111,32,72,97,114,118,97,114,100,32,85,110,105,118,101,114,115,105,116,121,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34,47,116,104,101,32,109,97,105,110,32,99,104,97,114,97,99,116,101,114,79,120,102,111,114,100,32,85,110,105,118,101,114,115,105,116,121,32,32,110,97,109,101,61,34,107,101,121,119,111,114,100,115,34,32,99,115,116,121,108,101,61,34,116,101,120,116,45,97,108,105,103,110,58,116,104,101,32,85,110,105,116,101,100,32,75,105,110,103,100,111,109,102,101,100,101,114,97,108,32,103,111,118,101,114,110,109,101,110,116,60,100,105,118,32,115,116,121,108,101,61,34,109,97,114,103,105,110,32,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,100,101,115,99,114,105,112,116,105,111,110,32,111,102,32,116,104,101,60,100,105,118,32,99,108,97,115,115,61,34,104,101,97,100,101,114,46,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,100,101,115,116,114,117,99,116,105,111,110,32,111,102,32,116,104,101,115,108,105,103,104,116,108,121,32,100,105,102,102,101,114,101,110,116,105,110,32,97,99,99,111,114,100,97,110,99,101,32,119,105,116,104,116,101,108,101,99,111,109,109,117,110,105,99,97,116,105,111,110,115,105,110,100,105,99,97,116,101,115,32,116,104,97,116,32,116,104,101,115,104,111,114,116,108,121,32,116,104,101,114,101,97,102,116,101,114,101,115,112,101,99,105,97,108,108,121,32,105,110,32,116,104,101,32,69,117,114,111,112,101,97,110,32,99,111,117,110,116,114,105,101,115,72,111,119,101,118,101,114,44,32,116,104,101,114,101,32,97,114,101,115,114,99,61,34,104,116,116,112,58,47,47,115,116,97,116,105,99,115,117,103,103,101,115,116,101,100,32,116,104,97,116,32,116,104,101,34,32,115,114,99,61,34,104,116,116,112,58,47,47,119,119,119,46,97,32,108,97,114,103,101,32,110,117,109,98,101,114,32,111,102,32,84,101,108,101,99,111,109,109,117,110,105,99,97,116,105,111,110,115,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,32,116,72,111,108,121,32,82,111,109,97,110,32,69,109,112,101,114,111,114,97,108,109,111,115,116,32,101,120,99,108,117,115,105,118,101,108,121,34,32,98,111,114,100,101,114,61,34,48,34,32,97,108,116,61,34,83,101,99,114,101,116,97,114,121,32,111,102,32,83,116,97,116,101,99,117,108,109,105,110,97,116,105,110,103,32,105,110,32,116,104,101,67,73,65,32,87,111,114,108,100,32,70,97,99,116,98,111,111,107,116,104,101,32,109,111,115,116,32,105,109,112,111,114,116,97,110,116,97,110,110,105,118,101,114,115,97,114,121,32,111,102,32,116,104,101,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,60,108,105,62,60,101,109,62,60,97,32,104,114,101,102,61,34,47,116,104,101,32,65,116,108,97,110,116,105,99,32,79,99,101,97,110,115,116,114,105,99,116,108,121,32,115,112,101,97,107,105,110,103,44,115,104,111,114,116,108,121,32,98,101,102,111,114,101,32,116,104,101,100,105,102,102,101,114,101,110,116,32,116,121,112,101,115,32,111,102,116,104,101,32,79,116,116,111,109,97,110,32,69,109,112,105,114,101,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,65,110,32,73,110,116,114,111,100,117,99,116,105,111,110,32,116,111,99,111,110,115,101,113,117,101,110,99,101,32,111,102,32,116,104,101,100,101,112,97,114,116,117,114,101,32,102,114,111,109,32,116,104,101,67,111,110,102,101,100,101,114,97,116,101,32,83,116,97,116,101,115,105,110,100,105,103,101,110,111,117,115,32,112,101,111,112,108,101,115,80,114,111,99,101,101,100,105,110,103,115,32,111,102,32,116,104,101,105,110,102,111,114,109,97,116,105,111,110,32,111,110,32,116,104,101,116,104,101,111,114,105,101,115,32,104,97,118,101,32,98,101,101,110,105,110,118,111,108,118,101,109,101,110,116,32,105,110,32,116,104,101,100,105,118,105,100,101,100,32,105,110,116,111,32,116,104,114,101,101,97,100,106,97,99,101,110,116,32,99,111,117,110,116,114,105,101,115,105,115,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,100,105,115,115,111,108,117,116,105,111,110,32,111,102,32,116,104,101,99,111,108,108,97,98,111,114,97,116,105,111,110,32,119,105,116,104,119,105,100,101,108,121,32,114,101,103,97,114,100,101,100,32,97,115,104,105,115,32,99,111,110,116,101,109,112,111,114,97,114,105,101,115,102,111,117,110,100,105,110,103,32,109,101,109,98,101,114,32,111,102,68,111,109,105,110,105,99,97,110,32,82,101,112,117,98,108,105,99,103,101,110,101,114,97,108,108,121,32,97,99,99,101,112,116,101,100,116,104,101,32,112,111,115,115,105,98,105,108,105,116,121,32,111,102,97,114,101,32,97,108,115,111,32,97,118,97,105,108,97,98,108,101,117,110,100,101,114,32,99,111,110,115,116,114,117,99,116,105,111,110,114,101,115,116,111,114,97,116,105,111,110,32,111,102,32,116,104,101,116,104,101,32,103,101,110,101,114,97,108,32,112,117,98,108,105,99,105,115,32,97,108,109,111,115,116,32,101,110,116,105,114,101,108,121,112,97,115,115,101,115,32,116,104,114,111,117,103,104,32,116,104,101,104,97,115,32,98,101,101,110,32,115,117,103,103,101,115,116,101,100,99,111,109,112,117,116,101,114,32,97,110,100,32,118,105,100,101,111,71,101,114,109,97,110,105,99,32,108,97,110,103,117,97,103,101,115,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,116,32,102,114,111,109,32,116,104,101,115,104,111,114,116,108,121,32,97,102,116,101,114,119,97,114,100,115,104,114,101,102,61,34,104,116,116,112,115,58,47,47,119,119,119,46,114,101,99,101,110,116,32,100,101,118,101,108,111,112,109,101,110,116,66,111,97,114,100,32,111,102,32,68,105,114,101,99,116,111,114,115,60,100,105,118,32,99,108,97,115,115,61,34,115,101,97,114,99,104,124,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,73,110,32,112,97,114,116,105,99,117,108,97,114,44,32,116,104,101,77,117,108,116,105,112,108,101,32,102,111,111,116,110,111,116,101,115,111,114,32,111,116,104,101,114,32,115,117,98,115,116,97,110,99,101,116,104,111,117,115,97,110,100,115,32,111,102,32,121,101,97,114,115,116,114,97,110,115,108,97,116,105,111,110,32,111,102,32,116,104,101,60,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,13,10,60,97,32,104,114,101,102,61,34,105,110,100,101,120,46,112,104,112,119,97,115,32,101,115,116,97,98,108,105,115,104,101,100,32,105,110,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,112,97,114,116,105,99,105,112,97,116,101,32,105,110,32,116,104,101,97,32,115,116,114,111,110,103,32,105,110,102,108,117,101,110,99,101,115,116,121,108,101,61,34,109,97,114,103,105,110,45,116,111,112,58,114,101,112,114,101,115,101,110,116,101,100,32,98,121,32,116,104,101,103,114,97,100,117,97,116,101,100,32,102,114,111,109,32,116,104,101,84,114,97,100,105,116,105,111,110,97,108,108,121,44,32,116,104,101,69,108,101,109,101,110,116,40,34,115,99,114,105,112,116,34,41,59,72,111,119,101,118,101,114,44,32,115,105,110,99,101,32,116,104,101,47,100,105,118,62,10,60,47,100,105,118,62,10,60,100,105,118,32,108,101,102,116,59,32,109,97,114,103,105,110,45,108,101,102,116,58,112,114,111,116,101,99,116,105,111,110,32,97,103,97,105,110,115,116,48,59,32,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,85,110,102,111,114,116,117,110,97,116,101,108,121,44,32,116,104,101,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,32,99,108,97,115,115,61,34,99,108,101,97,114,102,105,120,34,62,60,100,105,118,32,99,108,97,115,115,61,34,102,111,111,116,101,114,9,9,60,47,100,105,118,62,10,9,9,60,47,100,105,118,62,10,116,104,101,32,109,111,116,105,111,110,32,112,105,99,116,117,114,101,208,145,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,208,177,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,208,164,208,181,208,180,208,181,209,128,208,176,209,134,208,184,208,184,208,189,208,181,209,129,208,186,208,190,208,187,209,140,208,186,208,190,209,129,208,190,208,190,208,177,209,137,208,181,208,189,208,184,208,181,209,129,208,190,208,190,208,177,209,137,208,181,208,189,208,184,209,143,208,191,209,128,208,190,208,179,209,128,208,176,208,188,208,188,209,139,208,158,209,130,208,191,209,128,208,176,208,178,208,184,209,130,209,140,208,177,208,181,209,129,208,191,208,187,208,176,209,130,208,189,208,190,208,188,208,176,209,130,208,181,209,128,208,184,208,176,208,187,209,139,208,191,208,190,208,183,208,178,208,190,208,187,209,143,208,181,209,130,208,191,208,190,209,129,208,187,208,181,208,180,208,189,208,184,208,181,209,128,208,176,208,183,208,187,208,184,209,135,208,189,209,139,209,133,208,191,209,128,208,190,208,180,209,131,208,186,209,134,208,184,208,184,208,191,209,128,208,190,208,179,209,128,208,176,208,188,208,188,208,176,208,191,208,190,208,187,208,189,208,190,209,129,209,130,209,140,209,142,208,189,208,176,209,133,208,190,208,180,208,184,209,130,209,129,209,143,208,184,208,183,208,177,209,128,208,176,208,189,208,189,208,190,208,181,208,189,208,176,209,129,208,181,208,187,208,181,208,189,208,184,209,143,208,184,208,183,208,188,208,181,208,189,208,181,208,189,208,184,209,143,208,186,208,176,209,130,208,181,208,179,208,190,209,128,208,184,208,184,208,144,208,187,208,181,208,186,209,129,208,176,208,189,208,180,209,128,224,164,166,224,165,141,224,164,181,224,164,190,224,164,176,224,164,190,224,164,174,224,165,136,224,164,168,224,165,129,224,164,133,224,164,178,224,164,170,224,165,141,224,164,176,224,164,166,224,164,190,224,164,168,224,164,173,224,164,190,224,164,176,224,164,164,224,165,128,224,164,175,224,164,133,224,164,168,224,165,129,224,164,166,224,165,135,224,164,182,224,164,185,224,164,191,224,164,168,224,165,141,224,164,166,224,165,128,224,164,135,224,164,130,224,164,161,224,164,191,224,164,175,224,164,190,224,164,166,224,164,191,224,164,178,224,165,141,224,164,178,224,165,128,224,164,133,224,164,167,224,164,191,224,164,149,224,164,190,224,164,176,224,164,181,224,165,128,224,164,161,224,164,191,224,164,175,224,165,139,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,165,135,224,164,184,224,164,174,224,164,190,224,164,154,224,164,190,224,164,176,224,164,156,224,164,130,224,164,149,224,165,141,224,164,182,224,164,168,224,164,166,224,165,129,224,164,168,224,164,191,224,164,175,224,164,190,224,164,170,224,165,141,224,164,176,224,164,175,224,165,139,224,164,151,224,164,133,224,164,168,224,165,129,224,164,184,224,164,190,224,164,176,224,164,145,224,164,168,224,164,178,224,164,190,224,164,135,224,164,168,224,164,170,224,164,190,224,164,176,224,165,141,224,164,159,224,165,128,224,164,182,224,164,176,224,165,141,224,164,164,224,165,139,224,164,130,224,164,178,224,165,139,224,164,149,224,164,184,224,164,173,224,164,190,224,164,171,224,164,188,224,165,141,224,164,178,224,165,136,224,164,182,224,164,182,224,164,176,224,165,141,224,164,164,224,165,135,224,164,130,224,164,170,224,165,141,224,164,176,224,164,166,224,165,135,224,164,182,224,164,170,224,165,141,224,164,178,224,165,135,224,164,175,224,164,176,224,164,149,224,165,135,224,164,130,224,164,166,224,165,141,224,164,176,224,164,184,224,165,141,224,164,165,224,164,191,224,164,164,224,164,191,224,164,137,224,164,164,224,165,141,224,164,170,224,164,190,224,164,166,224,164,137,224,164,168,224,165,141,224,164,185,224,165,135,224,164,130,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,164,190,224,164,175,224,164,190,224,164,164,224,165,141,224,164,176,224,164,190,224,164,156,224,165,141,224,164,175,224,164,190,224,164,166,224,164,190,224,164,170,224,165,129,224,164,176,224,164,190,224,164,168,224,165,135,224,164,156,224,165,139,224,164,161,224,164,188,224,165,135,224,164,130,224,164,133,224,164,168,224,165,129,224,164,181,224,164,190,224,164,166,224,164,182,224,165,141,224,164,176,224,165,135,224,164,163,224,165,128,224,164,182,224,164,191,224,164,149,224,165,141,224,164,183,224,164,190,224,164,184,224,164,176,224,164,149,224,164,190,224,164,176,224,165,128,224,164,184,224,164,130,224,164,151,224,165,141,224,164,176,224,164,185,224,164,170,224,164,176,224,164,191,224,164,163,224,164,190,224,164,174,224,164,172,224,165,141,224,164,176,224,164,190,224,164,130,224,164,161,224,164,172,224,164,154,224,165,141,224,164,154,224,165,139,224,164,130,224,164,137,224,164,170,224,164,178,224,164,172,224,165,141,224,164,167,224,164,174,224,164,130,224,164,164,224,165,141,224,164,176,224,165,128,224,164,184,224,164,130,224,164,170,224,164,176,224,165,141,224,164,149,224,164,137,224,164,174,224,165,141,224,164,174,224,165,128,224,164,166,224,164,174,224,164,190,224,164,167,224,165,141,224,164,175,224,164,174,224,164,184,224,164,185,224,164,190,224,164,175,224,164,164,224,164,190,224,164,182,224,164,172,224,165,141,224,164,166,224,165,139,224,164,130,224,164,174,224,165,128,224,164,161,224,164,191,224,164,175,224,164,190,224,164,134,224,164,136,224,164,170,224,165,128,224,164,143,224,164,178,224,164,174,224,165,139,224,164,172,224,164,190,224,164,135,224,164,178,224,164,184,224,164,130,224,164,150,224,165,141,224,164,175,224,164,190,224,164,134,224,164,170,224,164,176,224,165,135,224,164,182,224,164,168,224,164,133,224,164,168,224,165,129,224,164,172,224,164,130,224,164,167,224,164,172,224,164,190,224,164,156,224,164,188,224,164,190,224,164,176,224,164,168,224,164,181,224,165,128,224,164,168,224,164,164,224,164,174,224,164,170,224,165,141,224,164,176,224,164,174,224,165,129,224,164,150,224,164,170,224,165,141,224,164,176,224,164,182,224,165,141,224,164,168,224,164,170,224,164,176,224,164,191,224,164,181,224,164,190,224,164,176,224,164,168,224,165,129,224,164,149,224,164,184,224,164,190,224,164,168,224,164,184,224,164,174,224,164,176,224,165,141,224,164,165,224,164,168,224,164,134,224,164,175,224,165,139,224,164,156,224,164,191,224,164,164,224,164,184,224,165,139,224,164,174,224,164,181,224,164,190,224,164,176,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,216,167,217,132,217,133,217,134,216,170,216,175,217,138,216,167,216,170,216,167,217,132,217,131,217,133,216,168,217,138,217,136,216,170,216,177,216,167,217,132,217,133,216,180,216,167,217,135,216,175,216,167,216,170,216,185,216,175,216,175,216,167,217,132,216,178,217,136,216,167,216,177,216,185,216,175,216,175,216,167,217,132,216,177,216,175,217,136,216,175,216,167,217,132,216,165,216,179,217,132,216,167,217,133,217,138,216,169,216,167,217,132,217,129,217,136,216,170,217,136,216,180,217,136,216,168,216,167,217,132,217,133,216,179,216,167,216,168,217,130,216,167,216,170,216,167,217,132,217,133,216,185,217,132,217,136,217,133,216,167,216,170,216,167,217,132,217,133,216,179,217,132,216,179,217,132,216,167,216,170,216,167,217,132,216,172,216,177,216,167,217,129,217,138,217,131,216,179,216,167,217,132,216,167,216,179,217,132,216,167,217,133,217,138,216,169,216,167,217,132,216,167,216,170,216,181,216,167,217,132,216,167,216,170,107,101,121,119,111,114,100,115,34,32,99,111,110,116,101,110,116,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,62,60,97,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,116,101,120,116,47,104,116,109,108,59,32,99,104,97,114,115,101,116,61,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,60,116,97,98,108,101,32,99,101,108,108,112,97,100,100,105,110,103,61,34,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,116,111,32,108,97,115,116,32,118,101,114,115,105,111,110,32,98,121,32,98,97,99,107,103,114,111,117,110,100,45,99,111,108,111,114,58,32,35,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,105,100,61,60,97,32,104,114,101,102,61,34,35,34,32,99,108,97,115,115,61,34,34,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,99,114,105,112,116,34,32,115,114,99,61,34,104,116,116,112,58,47,47,10,60,115,99,114,105,112,116,32,108,97,110,103,117,97,103,101,61,34,47,47,69,78,34,32,34,104,116,116,112,58,47,47,119,119,119,46,119,101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,40,34,32,104,114,101,102,61,34,106,97,118,97,115,99,114,105,112,116,58,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,116,101,110,116,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,39,60,115,99,112,111,115,105,116,105,111,110,58,32,97,98,115,111,108,117,116,101,59,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,32,115,116,121,108,101,61,34,109,97,114,103,105,110,45,116,111,112,58,46,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,60,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,32,10,13,10,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,100,105,115,116,105,110,99,116,105,111,110,32,98,101,116,119,101,101,110,47,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,60,108,105,110,107,32,104,114,101,102,61,34,104,116,116,112,58,47,47,101,110,99,111,100,105,110,103,61,34,117,116,102,45,56,34,63,62,10,119,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,63,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,119,119,119,46,105,99,111,110,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,58,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,109,101,116,97,32,112,114,111,112,101,114,116,121,61,34,111,103,58,116,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,32,115,116,121,108,101,61,34,116,101,120,116,45,97,108,105,103,110,58,116,104,101,32,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,116,121,108,101,115,104,101,101,116,34,32,116,121,112,101,61,34,116,101,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,105,115,32,99,111,110,115,105,100,101,114,101,100,32,116,111,32,98,101,116,97,98,108,101,32,119,105,100,116,104,61,34,49,48,48,37,34,32,73,110,32,97,100,100,105,116,105,111,110,32,116,111,32,116,104,101,32,99,111,110,116,114,105,98,117,116,101,100,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,115,32,98,101,116,119,101,101,110,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,116,104,101,32,73,116,32,105,115,32,105,109,112,111,114,116,97,110,116,32,116,111,32,60,47,115,99,114,105,112,116,62,10,10,60,115,99,114,105,112,116,32,32,115,116,121,108,101,61,34,102,111,110,116,45,115,105,122,101,58,49,62,60,47,115,112,97,110,62,60,115,112,97,110,32,105,100,61,103,98,76,105,98,114,97,114,121,32,111,102,32,67,111,110,103,114,101,115,115,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,109,69,110,103,108,105,115,104,32,116,114,97,110,115,108,97,116,105,111,110,65,99,97,100,101,109,121,32,111,102,32,83,99,105,101,110,99,101,115,100,105,118,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,99,111,110,115,116,114,117,99,116,105,111,110,32,111,102,32,116,104,101,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,105,100,41,105,110,32,99,111,110,106,117,110,99,116,105,111,110,32,119,105,116,104,69,108,101,109,101,110,116,40,39,115,99,114,105,112,116,39,41,59,32,60,109,101,116,97,32,112,114,111,112,101,114,116,121,61,34,111,103,58,208,145,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,10,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,62,80,114,105,118,97,99,121,32,80,111,108,105,99,121,60,47,97,62,97,100,109,105,110,105,115,116,101,114,101,100,32,98,121,32,116,104,101,101,110,97,98,108,101,83,105,110,103,108,101,82,101,113,117,101,115,116,115,116,121,108,101,61,38,113,117,111,116,59,109,97,114,103,105,110,58,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,105,118,62,60,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,32,115,116,121,108,101,61,38,113,117,111,116,59,102,108,111,97,116,58,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,116,104,101,32,116,111,116,97,108,32,112,111,112,117,108,97,116,105,111,110,32,111,102,105,110,32,87,97,115,104,105,110,103,116,111,110,44,32,68,46,67,46,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,97,109,111,110,103,32,111,116,104,101,114,32,116,104,105,110,103,115,44,111,114,103,97,110,105,122,97,116,105,111,110,32,111,102,32,116,104,101,112,97,114,116,105,99,105,112,97,116,101,100,32,105,110,32,116,104,101,116,104,101,32,105,110,116,114,111,100,117,99,116,105,111,110,32,111,102,105,100,101,110,116,105,102,105,101,100,32,119,105,116,104,32,116,104,101,102,105,99,116,105,111,110,97,108,32,99,104,97,114,97,99,116,101,114,32,79,120,102,111,114,100,32,85,110,105,118,101,114,115,105,116,121,32,109,105,115,117,110,100,101,114,115,116,97,110,100,105,110,103,32,111,102,84,104,101,114,101,32,97,114,101,44,32,104,111,119,101,118,101,114,44,115,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34,47,67,111,108,117,109,98,105,97,32,85,110,105,118,101,114,115,105,116,121,101,120,112,97,110,100,101,100,32,116,111,32,105,110,99,108,117,100,101,117,115,117,97,108,108,121,32,114,101,102,101,114,114,101,100,32,116,111,105,110,100,105,99,97,116,105,110,103,32,116,104,97,116,32,116,104,101,104,97,118,101,32,115,117,103,103,101,115,116,101,100,32,116,104,97,116,97,102,102,105,108,105,97,116,101,100,32,119,105,116,104,32,116,104,101,99,111,114,114,101,108,97,116,105,111,110,32,98,101,116,119,101,101,110,110,117,109,98,101,114,32,111,102,32,100,105,102,102,101,114,101,110,116,62,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,82,101,112,117,98,108,105,99,32,111,102,32,73,114,101,108,97,110,100,10,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,117,110,100,101,114,32,116,104,101,32,105,110,102,108,117,101,110,99,101,99,111,110,116,114,105,98,117,116,105,111,110,32,116,111,32,116,104,101,79,102,102,105,99,105,97,108,32,119,101,98,115,105,116,101,32,111,102,104,101,97,100,113,117,97,114,116,101,114,115,32,111,102,32,116,104,101,99,101,110,116,101,114,101,100,32,97,114,111,117,110,100,32,116,104,101,105,109,112,108,105,99,97,116,105,111,110,115,32,111,102,32,116,104,101,104,97,118,101,32,98,101,101,110,32,100,101,118,101,108,111,112,101,100,70,101,100,101,114,97,108,32,82,101,112,117,98,108,105,99,32,111,102,98,101,99,97,109,101,32,105,110,99,114,101,97,115,105,110,103,108,121,99,111,110,116,105,110,117,97,116,105,111,110,32,111,102,32,116,104,101,78,111,116,101,44,32,104,111,119,101,118,101,114,44,32,116,104,97,116,115,105,109,105,108,97,114,32,116,111,32,116,104,97,116,32,111,102,32,99,97,112,97,98,105,108,105,116,105,101,115,32,111,102,32,116,104,101,97,99,99,111,114,100,97,110,99,101,32,119,105,116,104,32,116,104,101,112,97,114,116,105,99,105,112,97,110,116,115,32,105,110,32,116,104,101,102,117,114,116,104,101,114,32,100,101,118,101,108,111,112,109,101,110,116,117,110,100,101,114,32,116,104,101,32,100,105,114,101,99,116,105,111,110,105,115,32,111,102,116,101,110,32,99,111,110,115,105,100,101,114,101,100,104,105,115,32,121,111,117,110,103,101,114,32,98,114,111,116,104,101,114,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,60,97,32,104,116,116,112,45,101,113,117,105,118,61,34,88,45,85,65,45,112,104,121,115,105,99,97,108,32,112,114,111,112,101,114,116,105,101,115,111,102,32,66,114,105,116,105,115,104,32,67,111,108,117,109,98,105,97,104,97,115,32,98,101,101,110,32,99,114,105,116,105,99,105,122,101,100,40,119,105,116,104,32,116,104,101,32,101,120,99,101,112,116,105,111,110,113,117,101,115,116,105,111,110,115,32,97,98,111,117,116,32,116,104,101,112,97,115,115,105,110,103,32,116,104,114,111,117,103,104,32,116,104,101,48,34,32,99,101,108,108,112,97,100,100,105,110,103,61,34,48,34,32,116,104,111,117,115,97,110,100,115,32,111,102,32,112,101,111,112,108,101,114,101,100,105,114,101,99,116,115,32,104,101,114,101,46,32,70,111,114,104,97,118,101,32,99,104,105,108,100,114,101,110,32,117,110,100,101,114,37,51,69,37,51,67,47,115,99,114,105,112,116,37,51,69,34,41,41,59,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,115,105,116,101,95,110,97,109,101,34,32,99,111,110,116,101,110,116,61,34,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,110,111,110,101,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,110,111,110,101,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,88,45,110,101,119,32,68,97,116,101,40,41,46,103,101,116,84,105,109,101,40,41,32,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,60,47,115,112,97,110,62,60,115,112,97,110,32,99,108,97,115,115,61,34,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,60,97,32,104,114,101,102,61,34,106,97,118,97,115,99,114,105,112,116,58,45,45,62,13,10,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,60,97,32,104,114,101,102,61,39,104,116,116,112,58,47,47,119,119,119,46,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,114,101,102,61,34,60,47,100,105,118,62,13,10,60,100,105,118,32,99,108,97,115,115,61,34,60,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,116,60,47,100,105,118,62,10,60,115,99,114,105,112,116,32,116,121,112,101,61,47,97,62,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,32,97,108,108,111,119,84,114,97,110,115,112,97,114,101,110,99,121,61,34,88,45,85,65,45,67,111,109,112,97,116,105,98,108,101,34,32,99,111,110,114,101,108,97,116,105,111,110,115,104,105,112,32,98,101,116,119,101,101,110,10,60,47,115,99,114,105,112,116,62,13,10,60,115,99,114,105,112,116,32,60,47,97,62,60,47,108,105,62,60,47,117,108,62,60,47,100,105,118,62,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,116,104,101,32,112,114,111,103,114,97,109,109,105,110,103,32,108,97,110,103,117,97,103,101,60,47,97,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,60,47,97,62,60,47,108,105,62,60,108,105,32,99,108,97,115,115,61,34,102,111,114,109,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,60,100,105,118,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,113,34,60,116,97,98,108,101,32,119,105,100,116,104,61,34,49,48,48,37,34,32,98,97,99,107,103,114,111,117,110,100,45,112,111,115,105,116,105,111,110,58,34,32,98,111,114,100,101,114,61,34,48,34,32,119,105,100,116,104,61,34,114,101,108,61,34,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,54,62,60,117,108,62,60,108,105,62,60,97,32,104,114,101,102,61,34,32,32,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,99,115,115,34,32,109,101,100,105,97,61,34,115,99,114,101,101,110,34,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,116,104,101,32,34,32,116,121,112,101,61,34,97,112,112,108,105,99,97,116,105,111,110,47,34,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,97,108,108,111,119,116,114,97,110,115,112,97,114,101,110,99,121,61,34,115,116,121,108,101,115,104,101,101,116,34,32,116,121,112,101,61,34,116,101,13,10,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,62,60,47,115,112,97,110,62,60,115,112,97,110,32,99,108,97,115,115,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,62,59,10,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,115,111,109,101,116,105,109,101,115,32,99,97,108,108,101,100,32,116,104,101,100,111,101,115,32,110,111,116,32,110,101,99,101,115,115,97,114,105,108,121,70,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,97,116,32,116,104,101,32,98,101,103,105,110,110,105,110,103,32,111,102,32,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,60,104,116,109,108,112,97,114,116,105,99,117,108,97,114,108,121,32,105,110,32,116,104,101,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,101,61,34,106,97,118,97,115,99,114,105,112,116,58,118,111,105,100,40,48,41,59,34,101,102,102,101,99,116,105,118,101,110,101,115,115,32,111,102,32,116,104,101,32,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,103,101,110,101,114,97,108,108,121,32,99,111,110,115,105,100,101,114,101,100,62,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,34,62,60,47,115,99,114,105,112,116,62,13,10,60,115,99,114,105,112,116,116,104,114,111,117,103,104,111,117,116,32,116,104,101,32,119,111,114,108,100,99,111,109,109,111,110,32,109,105,115,99,111,110,99,101,112,116,105,111,110,97,115,115,111,99,105,97,116,105,111,110,32,119,105,116,104,32,116,104,101,60,47,100,105,118,62,10,60,47,100,105,118,62,10,60,100,105,118,32,99,100,117,114,105,110,103,32,104,105,115,32,108,105,102,101,116,105,109,101,44,99,111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,116,104,101,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,32,97,110,32,105,110,99,114,101,97,115,105,110,103,32,110,117,109,98,101,114,100,105,112,108,111,109,97,116,105,99,32,114,101,108,97,116,105,111,110,115,97,114,101,32,111,102,116,101,110,32,99,111,110,115,105,100,101,114,101,100,109,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,32,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,101,120,97,109,112,108,101,115,32,105,110,99,108,117,100,101,32,116,104,101,34,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,112,97,114,116,105,99,105,112,97,116,105,111,110,32,105,110,32,116,104,101,116,104,101,32,101,115,116,97,98,108,105,115,104,109,101,110,116,32,111,102,10,60,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,38,97,109,112,59,110,98,115,112,59,38,97,109,112,59,110,98,115,112,59,116,111,32,100,101,116,101,114,109,105,110,101,32,119,104,101,116,104,101,114,113,117,105,116,101,32,100,105,102,102,101,114,101,110,116,32,102,114,111,109,109,97,114,107,101,100,32,116,104,101,32,98,101,103,105,110,110,105,110,103,100,105,115,116,97,110,99,101,32,98,101,116,119,101,101,110,32,116,104,101,99,111,110,116,114,105,98,117,116,105,111,110,115,32,116,111,32,116,104,101,99,111,110,102,108,105,99,116,32,98,101,116,119,101,101,110,32,116,104,101,119,105,100,101,108,121,32,99,111,110,115,105,100,101,114,101,100,32,116,111,119,97,115,32,111,110,101,32,111,102,32,116,104,101,32,102,105,114,115,116,119,105,116,104,32,118,97,114,121,105,110,103,32,100,101,103,114,101,101,115,104,97,118,101,32,115,112,101,99,117,108,97,116,101,100,32,116,104,97,116,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,112,97,114,116,105,99,105,112,97,116,105,110,103,32,105,110,32,116,104,101,111,114,105,103,105,110,97,108,108,121,32,100,101,118,101,108,111,112,101,100,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,105,110,116,101,114,99,104,97,110,103,101,97,98,108,121,32,119,105,116,104,109,111,114,101,32,99,108,111,115,101,108,121,32,114,101,108,97,116,101,100,115,111,99,105,97,108,32,97,110,100,32,112,111,108,105,116,105,99,97,108,116,104,97,116,32,119,111,117,108,100,32,111,116,104,101,114,119,105,115,101,112,101,114,112,101,110,100,105,99,117,108,97,114,32,116,111,32,116,104,101,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,116,121,112,101,61,34,115,117,98,109,105,116,34,32,110,97,109,101,61,34,102,97,109,105,108,105,101,115,32,114,101,115,105,100,105,110,103,32,105,110,100,101,118,101,108,111,112,105,110,103,32,99,111,117,110,116,114,105,101,115,99,111,109,112,117,116,101,114,32,112,114,111,103,114,97,109,109,105,110,103,101,99,111,110,111,109,105,99,32,100,101,118,101,108,111,112,109,101,110,116,100,101,116,101,114,109,105,110,97,116,105,111,110,32,111,102,32,116,104,101,102,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,111,110,32,115,101,118,101,114,97,108,32,111,99,99,97,115,105,111,110,115,112,111,114,116,117,103,117,195,170,115,32,40,69,117,114,111,112,101,117,41,208,163,208,186,209,128,208,176,209,151,208,189,209,129,209,140,208,186,208,176,209,131,208,186,209,128,208,176,209,151,208,189,209,129,209,140,208,186,208,176,208,160,208,190,209,129,209,129,208,184,208,185,209,129,208,186,208,190,208,185,208,188,208,176,209,130,208,181,209,128,208,184,208,176,208,187,208,190,208,178,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,208,184,209,131,208,191,209,128,208,176,208,178,208,187,208,181,208,189,208,184,209,143,208,189,208,181,208,190,208,177,209,133,208,190,208,180,208,184,208,188,208,190,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,143,208,152,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,143,208,160,208,181,209,129,208,191,209,131,208,177,208,187,208,184,208,186,208,184,208,186,208,190,208,187,208,184,209,135,208,181,209,129,209,130,208,178,208,190,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,142,209,130,208,181,209,128,209,128,208,184,209,130,208,190,209,128,208,184,208,184,208,180,208,190,209,129,209,130,208,176,209,130,208,190,209,135,208,189,208,190,216,167,217,132,217,133,216,170,217,136,216,167,216,172,216,175,217,136,217,134,216,167,217,132,216,167,216,180,216,170,216,177,216,167,217,131,216,167,216,170,216,167,217,132,216,167,217,130,216,170,216,177,216,167,216,173,216,167,216,170,104,116,109,108,59,32,99,104,97,114,115,101,116,61,85,84,70,45,56,34,32,115,101,116,84,105,109,101,111,117,116,40,102,117,110,99,116,105,111,110,40,41,100,105,115,112,108,97,121,58,105,110,108,105,110,101,45,98,108,111,99,107,59,60,105,110,112,117,116,32,116,121,112,101,61,34,115,117,98,109,105,116,34,32,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,119,119,119,46,34,32,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,114,101,102,61,34,34,32,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,60,47,97,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,60,47,97,62,60,47,108,105,62,10,60,108,105,32,99,108,97,115,115,61,34,99,115,115,34,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,60,102,111,114,109,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,120,116,47,99,115,115,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,108,105,110,107,32,114,101,108,61,34,97,108,116,101,114,110,97,116,101,34,32,13,10,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,32,111,110,99,108,105,99,107,61,34,106,97,118,97,115,99,114,105,112,116,58,40,110,101,119,32,68,97,116,101,41,46,103,101,116,84,105,109,101,40,41,125,104,101,105,103,104,116,61,34,49,34,32,119,105,100,116,104,61,34,49,34,32,80,101,111,112,108,101,39,115,32,82,101,112,117,98,108,105,99,32,111,102,32,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,117,110,100,101,114,116,104,101,32,98,101,103,105,110,110,105,110,103,32,111,102,32,116,104,101,32,60,47,100,105,118,62,10,60,47,100,105,118,62,10,60,47,100,105,118,62,10,101,115,116,97,98,108,105,115,104,109,101,110,116,32,111,102,32,116,104,101,32,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,35,118,105,101,119,112,111,114,116,123,109,105,110,45,104,101,105,103,104,116,58,10,60,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,111,112,116,105,111,110,62,60,111,112,116,105,111,110,32,118,97,108,117,101,61,111,102,116,101,110,32,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,47,111,112,116,105,111,110,62,10,60,111,112,116,105,111,110,32,118,97,108,117,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,10,60,33,45,45,91,73,110,116,101,114,110,97,116,105,111,110,97,108,32,65,105,114,112,111,114,116,62,10,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,60,47,97,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,224,184,160,224,184,178,224,184,169,224,184,178,224,185,132,224,184,151,224,184,162,225,131,165,225,131,144,225,131,160,225,131,151,225,131,163,225,131,154,225,131,152,230,173,163,233,171,148,228,184,173,230,150,135,32,40,231,185,129,233,171,148,41,224,164,168,224,164,191,224,164,176,224,165,141,224,164,166,224,165,135,224,164,182,224,164,161,224,164,190,224,164,137,224,164,168,224,164,178,224,165,139,224,164,161,224,164,149,224,165,141,224,164,183,224,165,135,224,164,164,224,165,141,224,164,176,224,164,156,224,164,190,224,164,168,224,164,149,224,164,190,224,164,176,224,165,128,224,164,184,224,164,130,224,164,172,224,164,130,224,164,167,224,164,191,224,164,164,224,164,184,224,165,141,224,164,165,224,164,190,224,164,170,224,164,168,224,164,190,224,164,184,224,165,141,224,164,181,224,165,128,224,164,149,224,164,190,224,164,176,224,164,184,224,164,130,224,164,184,224,165,141,224,164,149,224,164,176,224,164,163,224,164,184,224,164,190,224,164,174,224,164,151,224,165,141,224,164,176,224,165,128,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,165,139,224,164,130,224,164,181,224,164,191,224,164,156,224,165,141,224,164,158,224,164,190,224,164,168,224,164,133,224,164,174,224,165,135,224,164,176,224,164,191,224,164,149,224,164,190,224,164,181,224,164,191,224,164,173,224,164,191,224,164,168,224,165,141,224,164,168,224,164,151,224,164,190,224,164,161,224,164,191,224,164,175,224,164,190,224,164,129,224,164,149,224,165,141,224,164,175,224,165,139,224,164,130,224,164,149,224,164,191,224,164,184,224,165,129,224,164,176,224,164,149,224,165,141,224,164,183,224,164,190,224,164,170,224,164,185,224,165,129,224,164,129,224,164,154,224,164,164,224,165,128,224,164,170,224,165,141,224,164,176,224,164,172,224,164,130,224,164,167,224,164,168,224,164,159,224,164,191,224,164,170,224,165,141,224,164,170,224,164,163,224,165,128,224,164,149,224,165,141,224,164,176,224,164,191,224,164,149,224,165,135,224,164,159,224,164,170,224,165,141,224,164,176,224,164,190,224,164,176,224,164,130,224,164,173,224,164,170,224,165,141,224,164,176,224,164,190,224,164,170,224,165,141,224,164,164,224,164,174,224,164,190,224,164,178,224,164,191,224,164,149,224,165,139,224,164,130,224,164,176,224,164,171,224,164,188,224,165,141,224,164,164,224,164,190,224,164,176,224,164,168,224,164,191,224,164,176,224,165,141,224,164,174,224,164,190,224,164,163,224,164,178,224,164,191,224,164,174,224,164,191,224,164,159,224,165,135,224,164,161,100,101,115,99,114,105,112,116,105,111,110,34,32,99,111,110,116,101,110,116,61,34,100,111,99,117,109,101,110,116,46,108,111,99,97,116,105,111,110,46,112,114,111,116,46,103,101,116,69,108,101,109,101,110,116,115,66,121,84,97,103,78,97,109,101,40,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,10,60,104,116,109,108,32,60,109,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,58,117,114,108,34,32,99,111,110,116,101,110,116,61,34,104,116,116,112,58,47,47,46,99,115,115,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,104,114,101,102,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,32,120,109,108,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,34,32,109,101,116,104,111,100,61,34,103,101,116,34,32,97,99,116,105,111,110,61,34,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,32,47,62,99,101,108,108,112,97,100,100,105,110,103,61,34,48,34,32,99,101,108,108,115,112,46,99,115,115,34,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,60,47,97,62,60,47,108,105,62,60,108,105,62,60,97,32,104,114,101,102,61,34,34,32,119,105,100,116,104,61,34,49,34,32,104,101,105,103,104,116,61,34,49,34,34,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,97,108,116,101,114,110,97,116,101,34,32,116,121,112,101,61,34,97,112,112,108,105,45,47,47,87,51,67,47,47,68,84,68,32,88,72,84,77,76,32,49,46,48,32,101,108,108,115,112,97,99,105,110,103,61,34,48,34,32,99,101,108,108,112,97,100,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,118,97,108,117,101,61,34,47,97,62,38,110,98,115,112,59,60,115,112,97,110,32,114,111,108,101,61,34,115,10,60,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,108,97,110,103,117,97,103,101,61,34,74,97,118,97,83,99,114,105,112,116,34,32,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,103,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,32,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,109,101,100,105,97,61,34,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,119,105,116,104,32,116,104,101,32,101,120,99,101,112,116,105,111,110,32,111,102,32,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,114,101,108,61,34,115,116,32,104,101,105,103,104,116,61,34,49,34,32,119,105,100,116,104,61,34,49,34,32,61,39,43,101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,40,60,108,105,110,107,32,114,101,108,61,34,97,108,116,101,114,110,97,116,101,34,32,10,98,111,100,121,44,32,116,114,44,32,105,110,112,117,116,44,32,116,101,120,116,109,101,116,97,32,110,97,109,101,61,34,114,111,98,111,116,115,34,32,99,111,110,109,101,116,104,111,100,61,34,112,111,115,116,34,32,97,99,116,105,111,110,61,34,62,10,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,99,115,115,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,60,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,34,62,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,117,101,34,62,194,183,60,114,105,112,116,34,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,108,61,48,59,125,41,40,41,59,10,40,102,117,110,99,116,105,111,110,40,41,123,98,97,99,107,103,114,111,117,110,100,45,105,109,97,103,101,58,32,117,114,108,40,47,97,62,60,47,108,105,62,60,108,105,62,60,97,32,104,114,101,102,61,34,104,9,9,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,97,116,111,114,34,32,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,117,62,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,34,32,47,111,112,116,105,111,110,62,10,60,111,112,116,105,111,110,32,118,97,108,117,101,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,114,97,116,111,114,34,32,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,101,61,40,110,101,119,32,68,97,116,101,41,46,103,101,116,84,105,109,101,40,41,112,111,114,116,117,103,117,195,170,115,32,40,100,111,32,66,114,97,115,105,108,41,208,190,209,128,208,179,208,176,208,189,208,184,208,183,208,176,209,134,208,184,208,184,208,178,208,190,208,183,208,188,208,190,208,182,208,189,208,190,209,129,209,130,209,140,208,190,208,177,209,128,208,176,208,183,208,190,208,178,208,176,208,189,208,184,209,143,209,128,208,181,208,179,208,184,209,129,209,130,209,128,208,176,209,134,208,184,208,184,208,178,208,190,208,183,208,188,208,190,208,182,208,189,208,190,209,129,209,130,208,184,208,190,208,177,209,143,208,183,208,176,209,130,208,181,208,187,209,140,208,189,208,176,60,33,68,79,67,84,89,80,69,32,104,116,109,108,32,80,85,66,76,73,67,32,34,110,116,45,84,121,112,101,34,32,99,111,110,116,101,110,116,61,34,116,101,120,116,47,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,67,111,110,116,101,114,97,110,115,105,116,105,111,110,97,108,47,47,69,78,34,32,34,104,116,116,112,58,60,104,116,109,108,32,120,109,108,110,115,61,34,104,116,116,112,58,47,47,119,119,119,45,47,47,87,51,67,47,47,68,84,68,32,88,72,84,77,76,32,49,46,48,32,84,68,84,68,47,120,104,116,109,108,49,45,116,114,97,110,115,105,116,105,111,110,97,108,47,47,119,119,119,46,119,51,46,111,114,103,47,84,82,47,120,104,116,109,108,49,47,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,59,60,109,101,116,97,32,110,97,109,101,61,34,100,101,115,99,114,105,112,116,105,111,110,112,97,114,101,110,116,78,111,100,101,46,105,110,115,101,114,116,66,101,102,111,114,101,60,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,106,115,34,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,99,114,105,40,100,111,99,117,109,101,110,116,41,46,114,101,97,100,121,40,102,117,110,99,116,105,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,105,109,97,103,101,34,32,99,111,110,116,101,110,116,61,34,104,116,116,112,58,47,47,85,65,45,67,111,109,112,97,116,105,98,108,101,34,32,99,111,110,116,101,110,116,61,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,10,108,105,110,107,32,114,101,108,61,34,115,104,111,114,116,99,117,116,32,105,99,111,110,60,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,116,121,112,101,61,61,32,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,60,97,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,104,114,101,102,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,97,46,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,101,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,100,116,100,34,62,10,60,104,116,109,108,32,120,109,108,110,115,61,34,104,116,116,112,45,47,47,87,51,67,47,47,68,84,68,32,72,84,77,76,32,52,46,48,49,32,84,101,110,116,115,66,121,84,97,103,78,97,109,101,40,39,115,99,114,105,112,116,39,41,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,61,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,39,32,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,100,46,103,101,116,69,108,101,109,101,110,116,115,66,121,84,97,103,78,97,109,101,40,115,110,105,99,97,108,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,67,47,47,68,84,68,32,72,84,77,76,32,52,46,48,49,32,84,114,97,110,115,105,116,60,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,10,10,60,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,105,111,110,97,108,46,100,116,100,34,62,10,60,104,116,109,108,32,120,109,108,110,115,61,104,116,116,112,45,101,113,117,105,118,61,34,67,111,110,116,101,110,116,45,84,121,112,101,100,105,110,103,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,10,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,60,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,32,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,62,208,180,208,181,209,143,209,130,208,181,208,187,209,140,208,189,208,190,209,129,209,130,208,184,209,129,208,190,208,190,209,130,208,178,208,181,209,130,209,129,209,130,208,178,208,184,208,184,208,191,209,128,208,190,208,184,208,183,208,178,208,190,208,180,209,129,209,130,208,178,208,176,208,177,208,181,208,183,208,190,208,191,208,176,209,129,208,189,208,190,209,129,209,130,208,184,224,164,170,224,165,129,224,164,184,224,165,141,224,164,164,224,164,191,224,164,149,224,164,190,224,164,149,224,164,190,224,164,130,224,164,151,224,165,141,224,164,176,224,165,135,224,164,184,224,164,137,224,164,168,224,165,141,224,164,185,224,165,139,224,164,130,224,164,168,224,165,135,224,164,181,224,164,191,224,164,167,224,164,190,224,164,168,224,164,184,224,164,173,224,164,190,224,164,171,224,164,191,224,164,149,224,165,141,224,164,184,224,164,191,224,164,130,224,164,151,224,164,184,224,165,129,224,164,176,224,164,149,224,165,141,224,164,183,224,164,191,224,164,164,224,164,149,224,165,137,224,164,170,224,165,128,224,164,176,224,164,190,224,164,135,224,164,159,224,164,181,224,164,191,224,164,156,224,165,141,224,164,158,224,164,190,224,164,170,224,164,168,224,164,149,224,164,190,224,164,176,224,165,141,224,164,176,224,164,181,224,164,190,224,164,136,224,164,184,224,164,149,224,165,141,224,164,176,224,164,191,224,164,175,224,164,164,224,164,190]);q7.init=function(){return q7.dictionary}});var Ba=t6(we=>{var zf=Wi();we.init=function(){we.dictionary=zf.init()};we.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);we.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);we.minDictionaryWordLength=4;we.maxDictionaryWordLength=24});var _a=t6(Pa=>{function je(r,e){this.bits=r,this.value=e}Pa.HuffmanCode=je;var Ke=15;function zi(r,e){for(var x=1<<e-1;r&x;)x>>=1;return(r&x-1)+x}function Hi(r,e,x,t,s){do t-=x,r[e+t]=new je(s.bits,s.value);while(t>0)}function Hf(r,e,x){for(var t=1<<e-x;e<Ke&&(t-=r[e],!(t<=0));)++e,t<<=1;return e-x}Pa.BrotliBuildHuffmanTable=function(r,e,x,t,s){var a=e,n,i,o,d,c,f,l,h,b,u,S,m=new Int32Array(Ke+1),p=new Int32Array(Ke+1);for(S=new Int32Array(s),o=0;o<s;o++)m[t[o]]++;for(p[1]=0,i=1;i<Ke;i++)p[i+1]=p[i]+m[i];for(o=0;o<s;o++)t[o]!==0&&(S[p[t[o]]++]=o);if(h=x,b=1<<h,u=b,p[Ke]===1){for(d=0;d<u;++d)r[e+d]=new je(0,S[0]&65535);return u}for(d=0,o=0,i=1,c=2;i<=x;++i,c<<=1)for(;m[i]>0;--m[i])n=new je(i&255,S[o++]&65535),Hi(r,e+d,c,b,n),d=zi(d,i);for(l=u-1,f=-1,i=x+1,c=2;i<=Ke;++i,c<<=1)for(;m[i]>0;--m[i])(d&l)!==f&&(e+=b,h=Hf(m,i,x),b=1<<h,u+=b,f=d&l,r[a+f]=new je(h+x&255,e-a-f&65535)),n=new je(i-x&255,S[o++]&65535),Hi(r,e+(d>>x),c,b,n),d=zi(d,i);return u}});var Ui=t6(Na=>{Na.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Na.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])});var Ki=t6(Ve=>{function q(r,e){this.offset=r,this.nbits=e}Ve.kBlockLengthPrefixCode=[new q(1,2),new q(5,2),new q(9,2),new q(13,2),new q(17,3),new q(25,3),new q(33,3),new q(41,3),new q(49,4),new q(65,4),new q(81,4),new q(97,4),new q(113,5),new q(145,5),new q(177,5),new q(209,5),new q(241,6),new q(305,6),new q(369,7),new q(497,8),new q(753,9),new q(1265,10),new q(2289,11),new q(4337,12),new q(8433,13),new q(16625,24)];Ve.kInsertLengthPrefixCode=[new q(0,0),new q(1,0),new q(2,0),new q(3,0),new q(4,0),new q(5,0),new q(6,1),new q(8,1),new q(10,2),new q(14,2),new q(18,3),new q(26,3),new q(34,4),new q(50,4),new q(66,5),new q(98,5),new q(130,6),new q(194,7),new q(322,8),new q(578,9),new q(1090,10),new q(2114,12),new q(6210,14),new q(22594,24)];Ve.kCopyLengthPrefixCode=[new q(2,0),new q(3,0),new q(4,0),new q(5,0),new q(6,0),new q(7,0),new q(8,0),new q(9,0),new q(10,1),new q(12,1),new q(14,2),new q(18,2),new q(22,3),new q(30,3),new q(38,4),new q(54,4),new q(70,5),new q(102,5),new q(134,6),new q(198,7),new q(326,8),new q(582,9),new q(1094,10),new q(2118,24)];Ve.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];Ve.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]});var Xi=t6(W7=>{var Uf=Ba(),J=0,ji=1,Kf=2,jf=3,Vf=4,Jf=5,Xf=6,Yf=7,Qf=8,Ji=9,Q0=10,tx=11,Fa=12,Zf=13,x4=14,e4=15,t4=16,s4=17,a4=18,r4=20;function L(r,e,x){this.prefix=new Uint8Array(r.length),this.transform=e,this.suffix=new Uint8Array(x.length);for(var t=0;t<r.length;t++)this.prefix[t]=r.charCodeAt(t);for(var t=0;t<x.length;t++)this.suffix[t]=x.charCodeAt(t)}var mt=[new L("",J,""),new L("",J," "),new L(" ",J," "),new L("",Fa,""),new L("",Q0," "),new L("",J," the "),new L(" ",J,""),new L("s ",J," "),new L("",J," of "),new L("",Q0,""),new L("",J," and "),new L("",Zf,""),new L("",ji,""),new L(", ",J," "),new L("",J,", "),new L(" ",Q0," "),new L("",J," in "),new L("",J," to "),new L("e ",J," "),new L("",J,'"'),new L("",J,"."),new L("",J,'">'),new L("",J,`
`),new L("",jf,""),new L("",J,"]"),new L("",J," for "),new L("",x4,""),new L("",Kf,""),new L("",J," a "),new L("",J," that "),new L(" ",Q0,""),new L("",J,". "),new L(".",J,""),new L(" ",J,", "),new L("",e4,""),new L("",J," with "),new L("",J,"'"),new L("",J," from "),new L("",J," by "),new L("",t4,""),new L("",s4,""),new L(" the ",J,""),new L("",Vf,""),new L("",J,". The "),new L("",tx,""),new L("",J," on "),new L("",J," as "),new L("",J," is "),new L("",Yf,""),new L("",ji,"ing "),new L("",J,`
	`),new L("",J,":"),new L(" ",J,". "),new L("",J,"ed "),new L("",r4,""),new L("",a4,""),new L("",Xf,""),new L("",J,"("),new L("",Q0,", "),new L("",Qf,""),new L("",J," at "),new L("",J,"ly "),new L(" the ",J," of "),new L("",Jf,""),new L("",Ji,""),new L(" ",Q0,", "),new L("",Q0,'"'),new L(".",J,"("),new L("",tx," "),new L("",Q0,'">'),new L("",J,'="'),new L(" ",J,"."),new L(".com/",J,""),new L(" the ",J," of the "),new L("",Q0,"'"),new L("",J,". This "),new L("",J,","),new L(".",J," "),new L("",Q0,"("),new L("",Q0,"."),new L("",J," not "),new L(" ",J,'="'),new L("",J,"er "),new L(" ",tx," "),new L("",J,"al "),new L(" ",tx,""),new L("",J,"='"),new L("",tx,'"'),new L("",Q0,". "),new L(" ",J,"("),new L("",J,"ful "),new L(" ",Q0,". "),new L("",J,"ive "),new L("",J,"less "),new L("",tx,"'"),new L("",J,"est "),new L(" ",Q0,"."),new L("",tx,'">'),new L(" ",J,"='"),new L("",Q0,","),new L("",J,"ize "),new L("",tx,"."),new L("\xC2\xA0",J,""),new L(" ",J,","),new L("",Q0,'="'),new L("",tx,'="'),new L("",J,"ous "),new L("",tx,", "),new L("",Q0,"='"),new L(" ",Q0,","),new L(" ",tx,'="'),new L(" ",tx,", "),new L("",tx,","),new L("",tx,"("),new L("",tx,". "),new L(" ",tx,"."),new L("",tx,"='"),new L(" ",tx,". "),new L(" ",Q0,'="'),new L(" ",tx,"='"),new L(" ",Q0,"='")];W7.kTransforms=mt;W7.kNumTransforms=mt.length;function Vi(r,e){return r[e]<192?(r[e]>=97&&r[e]<=122&&(r[e]^=32),1):r[e]<224?(r[e+1]^=32,2):(r[e+2]^=5,3)}W7.transformDictionaryWord=function(r,e,x,t,s){var a=mt[s].prefix,n=mt[s].suffix,i=mt[s].transform,o=i<Fa?0:i-(Fa-1),d=0,c=e,f;o>t&&(o=t);for(var l=0;l<a.length;)r[e++]=a[l++];for(x+=o,t-=o,i<=Ji&&(t-=i),d=0;d<t;d++)r[e++]=Uf.dictionary[x+d];if(f=e-t,i===Q0)Vi(r,f);else if(i===tx)for(;t>0;){var h=Vi(r,f);f+=h,t-=h}for(var b=0;b<n.length;)r[e++]=n[b++];return e-c}});var co=t6(U7=>{var to=Aa().BrotliInput,n4=Aa().BrotliOutput,Ye=qi(),Xe=Ba(),sx=_a().HuffmanCode,so=_a().BrotliBuildHuffmanTable,Je=Ui(),z6=Ki(),Yi=Xi(),i4=8,Qi=16,o4=256,d4=704,c4=26,Zi=6,xo=2,Ga=8,f4=255,H6=1080,$a=18,l4=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),Oa=16,h4=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),u4=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),b4=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function ao(r){var e;return r.readBits(1)===0?16:(e=r.readBits(3),e>0?17+e:(e=r.readBits(3),e>0?8+e:17))}function ro(r){if(r.readBits(1)){var e=r.readBits(3);return e===0?1:r.readBits(e)+(1<<e)}return 0}function m4(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function no(r){var e=new m4,x,t,s;if(e.input_end=r.readBits(1),e.input_end&&r.readBits(1))return e;if(x=r.readBits(2)+4,x===7){if(e.is_metadata=!0,r.readBits(1)!==0)throw new Error("Invalid reserved bit");if(t=r.readBits(2),t===0)return e;for(s=0;s<t;s++){var a=r.readBits(8);if(s+1===t&&t>1&&a===0)throw new Error("Invalid size byte");e.meta_block_length|=a<<s*8}}else for(s=0;s<x;++s){var n=r.readBits(4);if(s+1===x&&x>4&&n===0)throw new Error("Invalid size nibble");e.meta_block_length|=n<<s*4}return++e.meta_block_length,!e.input_end&&!e.is_metadata&&(e.is_uncompressed=r.readBits(1)),e}function Qe(r,e,x){var t=e,s;return x.fillBitWindow(),e+=x.val_>>>x.bit_pos_&f4,s=r[e].bits-Ga,s>0&&(x.bit_pos_+=Ga,e+=r[e].value,e+=x.val_>>>x.bit_pos_&(1<<s)-1),x.bit_pos_+=r[e].bits,r[e].value}function p4(r,e,x,t){for(var s=0,a=i4,n=0,i=0,o=32768,d=[],c=0;c<32;c++)d.push(new sx(0,0));for(so(d,0,5,r,$a);s<e&&o>0;){var f=0,l;if(t.readMoreInput(),t.fillBitWindow(),f+=t.val_>>>t.bit_pos_&31,t.bit_pos_+=d[f].bits,l=d[f].value&255,l<Qi)n=0,x[s++]=l,l!==0&&(a=l,o-=32768>>l);else{var h=l-14,b,u,S=0;if(l===Qi&&(S=a),i!==S&&(n=0,i=S),b=n,n>0&&(n-=2,n<<=h),n+=t.readBits(h)+3,u=n-b,s+u>e)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var m=0;m<u;m++)x[s+m]=i;s+=u,i!==0&&(o-=u<<15-i)}}if(o!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+o);for(;s<e;s++)x[s]=0}function H7(r,e,x,t){var s=0,a,n=new Uint8Array(r);if(t.readMoreInput(),a=t.readBits(2),a===1){for(var i,o=r-1,d=0,c=new Int32Array(4),f=t.readBits(2)+1;o;)o>>=1,++d;for(i=0;i<f;++i)c[i]=t.readBits(d)%r,n[c[i]]=2;switch(n[c[0]]=1,f){case 1:break;case 3:if(c[0]===c[1]||c[0]===c[2]||c[1]===c[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(c[0]===c[1])throw new Error("[ReadHuffmanCode] invalid symbols");n[c[1]]=1;break;case 4:if(c[0]===c[1]||c[0]===c[2]||c[0]===c[3]||c[1]===c[2]||c[1]===c[3]||c[2]===c[3])throw new Error("[ReadHuffmanCode] invalid symbols");t.readBits(1)?(n[c[2]]=3,n[c[3]]=3):n[c[0]]=2;break}}else{var i,l=new Uint8Array($a),h=32,b=0,u=[new sx(2,0),new sx(2,4),new sx(2,3),new sx(3,2),new sx(2,0),new sx(2,4),new sx(2,3),new sx(4,1),new sx(2,0),new sx(2,4),new sx(2,3),new sx(3,2),new sx(2,0),new sx(2,4),new sx(2,3),new sx(4,5)];for(i=a;i<$a&&h>0;++i){var S=l4[i],m=0,p;t.fillBitWindow(),m+=t.val_>>>t.bit_pos_&15,t.bit_pos_+=u[m].bits,p=u[m].value,l[S]=p,p!==0&&(h-=32>>p,++b)}if(!(b===1||h===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");p4(l,r,n,t)}if(s=so(e,x,Ga,n,r),s===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return s}function z7(r,e,x){var t,s;return t=Qe(r,e,x),s=z6.kBlockLengthPrefixCode[t].nbits,z6.kBlockLengthPrefixCode[t].offset+x.readBits(s)}function g4(r,e,x){var t;return r<Oa?(x+=h4[r],x&=3,t=e[x]+u4[r]):t=r-Oa+1,t}function y4(r,e){for(var x=r[e],t=e;t;--t)r[t]=r[t-1];r[0]=x}function w4(r,e){var x=new Uint8Array(256),t;for(t=0;t<256;++t)x[t]=t;for(t=0;t<e;++t){var s=r[t];r[t]=x[s],s&&y4(x,s)}}function Se(r,e){this.alphabet_size=r,this.num_htrees=e,this.codes=new Array(e+e*b4[r+31>>>5]),this.htrees=new Uint32Array(e)}Se.prototype.decode=function(r){var e,x,t=0;for(e=0;e<this.num_htrees;++e)this.htrees[e]=t,x=H7(this.alphabet_size,this.codes,t,r),t+=x};function eo(r,e){var x={num_htrees:null,context_map:null},t,s=0,a,n;e.readMoreInput();var i=x.num_htrees=ro(e)+1,o=x.context_map=new Uint8Array(r);if(i<=1)return x;for(t=e.readBits(1),t&&(s=e.readBits(4)+1),a=[],n=0;n<H6;n++)a[n]=new sx(0,0);for(H7(i+s,a,0,e),n=0;n<r;){var d;if(e.readMoreInput(),d=Qe(a,0,e),d===0)o[n]=0,++n;else if(d<=s)for(var c=1+(1<<d)+e.readBits(d);--c;){if(n>=r)throw new Error("[DecodeContextMap] i >= context_map_size");o[n]=0,++n}else o[n]=d-s,++n}return e.readBits(1)&&w4(o,r),x}function Da(r,e,x,t,s,a,n){var i=x*2,o=x,d=Qe(e,x*H6,n),c;d===0?c=s[i+(a[o]&1)]:d===1?c=s[i+(a[o]-1&1)]+1:c=d-2,c>=r&&(c-=r),t[x]=c,s[i+(a[o]&1)]=c,++a[o]}function S4(r,e,x,t,s,a){var n=s+1,i=x&s,o=a.pos_&Ye.IBUF_MASK,d;if(e<8||a.bit_pos_+(e<<3)<a.bit_end_pos_){for(;e-- >0;)a.readMoreInput(),t[i++]=a.readBits(8),i===n&&(r.write(t,n),i=0);return}if(a.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;a.bit_pos_<32;)t[i]=a.val_>>>a.bit_pos_,a.bit_pos_+=8,++i,--e;if(d=a.bit_end_pos_-a.bit_pos_>>3,o+d>Ye.IBUF_MASK){for(var c=Ye.IBUF_MASK+1-o,f=0;f<c;f++)t[i+f]=a.buf_[o+f];d-=c,i+=c,e-=c,o=0}for(var f=0;f<d;f++)t[i+f]=a.buf_[o+f];if(i+=d,e-=d,i>=n){r.write(t,n),i-=n;for(var f=0;f<i;f++)t[f]=t[n+f]}for(;i+e>=n;){if(d=n-i,a.input_.read(t,i,d)<d)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");r.write(t,n),e-=d,i=0}if(a.input_.read(t,i,e)<e)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");a.reset()}function v4(r){var e=r.bit_pos_+7&-8,x=r.readBits(e-r.bit_pos_);return x==0}function io(r){var e=new to(r),x=new Ye(e);ao(x);var t=no(x);return t.meta_block_length}U7.BrotliDecompressedSize=io;function T4(r,e){var x=new to(r);e==null&&(e=io(r));var t=new Uint8Array(e),s=new n4(t);return oo(x,s),s.pos<s.buffer.length&&(s.buffer=s.buffer.subarray(0,s.pos)),s.buffer}U7.BrotliDecompressBuffer=T4;function oo(r,e){var x,t=0,s=0,a=0,n,i=0,o,d,c,f,l=[16,15,11,4],h=0,b=0,u=0,S=[new Se(0,0),new Se(0,0),new Se(0,0)],m,p,g,w=128+Ye.READ_SIZE;g=new Ye(r),a=ao(g),n=(1<<a)-16,o=1<<a,d=o-1,c=new Uint8Array(o+w+Xe.maxDictionaryWordLength),f=o,m=[],p=[];for(var M=0;M<3*H6;M++)m[M]=new sx(0,0),p[M]=new sx(0,0);for(;!s;){var I=0,P,k=[1<<28,1<<28,1<<28],N=[0],D=[1,1,1],e0=[0,1,0,1,0,1],i0=[0],p0,F0,g0,D0,Z=null,K=null,U0,Tx=null,S0,Z0=0,V0=null,gx=0,qx=0,lx=null,Ex=0,H0=0,f6=0,yx,Px;for(x=0;x<3;++x)S[x].codes=null,S[x].htrees=null;g.readMoreInput();var Lx=no(g);if(I=Lx.meta_block_length,t+I>e.buffer.length){var e6=new Uint8Array(t+I);e6.set(e.buffer),e.buffer=e6}if(s=Lx.input_end,P=Lx.is_uncompressed,Lx.is_metadata){for(v4(g);I>0;--I)g.readMoreInput(),g.readBits(8);continue}if(I!==0){if(P){g.bit_pos_=g.bit_pos_+7&-8,S4(e,I,t,c,d,g),t+=I;continue}for(x=0;x<3;++x)D[x]=ro(g)+1,D[x]>=2&&(H7(D[x]+2,m,x*H6,g),H7(c4,p,x*H6,g),k[x]=z7(p,x*H6,g),i0[x]=1);for(g.readMoreInput(),p0=g.readBits(2),F0=Oa+(g.readBits(4)<<p0),g0=(1<<p0)-1,D0=F0+(48<<p0),K=new Uint8Array(D[0]),x=0;x<D[0];++x)g.readMoreInput(),K[x]=g.readBits(2)<<1;var M6=eo(D[0]<<Zi,g);U0=M6.num_htrees,Z=M6.context_map;var t0=eo(D[2]<<xo,g);for(S0=t0.num_htrees,Tx=t0.context_map,S[0]=new Se(o4,U0),S[1]=new Se(d4,D[1]),S[2]=new Se(D0,S0),x=0;x<3;++x)S[x].decode(g);for(V0=0,lx=0,yx=K[N[0]],H0=Je.lookupOffsets[yx],f6=Je.lookupOffsets[yx+1],Px=S[1].htrees[0];I>0;){var C,z,r0,y0,x0,f0,B,u0,Wx,_x,zx;for(g.readMoreInput(),k[1]===0&&(Da(D[1],m,1,N,e0,i0,g),k[1]=z7(p,H6,g),Px=S[1].htrees[N[1]]),--k[1],C=Qe(S[1].codes,Px,g),z=C>>6,z>=2?(z-=2,B=-1):B=0,r0=z6.kInsertRangeLut[z]+(C>>3&7),y0=z6.kCopyRangeLut[z]+(C&7),x0=z6.kInsertLengthPrefixCode[r0].offset+g.readBits(z6.kInsertLengthPrefixCode[r0].nbits),f0=z6.kCopyLengthPrefixCode[y0].offset+g.readBits(z6.kCopyLengthPrefixCode[y0].nbits),b=c[t-1&d],u=c[t-2&d],_x=0;_x<x0;++_x)g.readMoreInput(),k[0]===0&&(Da(D[0],m,0,N,e0,i0,g),k[0]=z7(p,0,g),Z0=N[0]<<Zi,V0=Z0,yx=K[N[0]],H0=Je.lookupOffsets[yx],f6=Je.lookupOffsets[yx+1]),Wx=Je.lookup[H0+b]|Je.lookup[f6+u],gx=Z[V0+Wx],--k[0],u=b,b=Qe(S[0].codes,S[0].htrees[gx],g),c[t&d]=b,(t&d)===d&&e.write(c,o),++t;if(I-=x0,I<=0)break;if(B<0){var Wx;if(g.readMoreInput(),k[2]===0&&(Da(D[2],m,2,N,e0,i0,g),k[2]=z7(p,2*H6,g),qx=N[2]<<xo,lx=qx),--k[2],Wx=(f0>4?3:f0-2)&255,Ex=Tx[lx+Wx],B=Qe(S[2].codes,S[2].htrees[Ex],g),B>=F0){var l6,pt,bx;B-=F0,pt=B&g0,B>>=p0,l6=(B>>1)+1,bx=(2+(B&1)<<l6)-4,B=F0+(bx+g.readBits(l6)<<p0)+pt}}if(u0=g4(B,l,h),u0<0)throw new Error("[BrotliDecompress] invalid distance");if(t<n&&i!==n?i=t:i=n,zx=t&d,u0>i)if(f0>=Xe.minDictionaryWordLength&&f0<=Xe.maxDictionaryWordLength){var bx=Xe.offsetsByLength[f0],U6=u0-i-1,K6=Xe.sizeBitsByLength[f0],V7=(1<<K6)-1,J7=U6&V7,j6=U6>>K6;if(bx+=J7*f0,j6<Yi.kNumTransforms){var ve=Yi.transformDictionaryWord(c,zx,bx,f0,j6);if(zx+=ve,t+=ve,I-=ve,zx>=f){e.write(c,o);for(var C6=0;C6<zx-f;C6++)c[C6]=c[f+C6]}}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+u0+" len: "+f0+" bytes left: "+I)}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+u0+" len: "+f0+" bytes left: "+I);else{if(B>0&&(l[h&3]=u0,++h),f0>I)throw new Error("Invalid backward reference. pos: "+t+" distance: "+u0+" len: "+f0+" bytes left: "+I);for(_x=0;_x<f0;++_x)c[t&d]=c[t-u0&d],(t&d)===d&&e.write(c,o),++t,--I}b=c[t-1&d],u=c[t-2&d]}t&=1073741823}}e.write(c,t&d)}U7.BrotliDecompress=oo;Xe.init()});var lo=t6((Vm,fo)=>{fo.exports=co().BrotliDecompressBuffer});var wo={STATUS:"unstable",VERSION:"latest",LABEL:"latest ef88854",HASH:"ef888541fa83c6a7662f2885d0a61b7e8fd8ee41",DATE:new Date(1671166855e3)};typeof global<"u"&&(global.__VERSION__=wo);var Y7=class{constructor(e){this.table=e;let x=[];for(let[t,s]of Object.entries(e))for(let[a,n]of Object.entries(s))x[n]=[t,a];this.reverse=x}op(e){let x=this.table[e];if(!x)throw new Error(`Bad mnemonic: ${e}`);return x}disasm(e){let x=this.reverse[e];return x&&[...x]}argLen(e){switch(e){case"acc":case"imp":return 0;case"imm":case"rel":case"zpg":case"zpx":case"zpy":case"iny":return 1;case"abs":case"abx":case"aby":case"ind":case"inx":return 2}}format(e,x){if(e==="acc"||e==="imp")return"";if(typeof x=="number")if(e==="rel"){let t=(x>127?x-256:x)+2;t<0?x=`*-${-t}`:t>0?x=`*+${t}`:x="*"}else e.startsWith("zp")||e==="iny"||e==="imm"?x=`$${(x&255).toString(16).padStart(2,"0")}`:x=`$${(x&65535).toString(16).padStart(4,"0")}`;switch(e){case"imm":return`#${x}`;case"rel":return x;case"zpg":return x;case"abs":return x;case"zpx":return`${x},x`;case"abx":return`${x},x`;case"zpy":return`${x},y`;case"aby":return`${x},y`;case"iny":return`(${x}),y`;case"ind":return`(${x})`;case"inx":return`(${x},x)`}}},h6;(e=>e.P02=new Y7({adc:{abs:109,abx:125,aby:121,imm:105,iny:113,inx:97,zpg:101,zpx:117},and:{abs:45,abx:61,aby:57,imm:41,iny:49,inx:33,zpg:37,zpx:53},asl:{abs:14,abx:30,acc:10,imp:10,zpg:6,zpx:22},bcc:{rel:144},bcs:{rel:176},beq:{rel:240},bit:{abs:44,zpg:36},bmi:{rel:48},bne:{rel:208},bpl:{rel:16},brk:{imp:0},bvc:{rel:80},bvs:{rel:112},clc:{imp:24},cld:{imp:216},cli:{imp:88},clv:{imp:184},cmp:{abs:205,abx:221,aby:217,imm:201,iny:209,inx:193,zpg:197,zpx:213},cpx:{abs:236,imm:224,zpg:228},cpy:{abs:204,imm:192,zpg:196},dec:{abs:206,abx:222,zpg:198,zpx:214},dex:{imp:202},dey:{imp:136},eor:{abs:77,abx:93,aby:89,imm:73,iny:81,inx:65,zpg:69,zpx:85},inc:{abs:238,abx:254,zpg:230,zpx:246},inx:{imp:232},iny:{imp:200},jmp:{abs:76,ind:108},jsr:{abs:32},lda:{abs:173,abx:189,aby:185,imm:169,iny:177,inx:161,zpg:165,zpx:181},ldx:{abs:174,aby:190,imm:162,zpg:166,zpy:182},ldy:{abs:172,abx:188,imm:160,zpg:164,zpx:180},lsr:{abs:78,abx:94,acc:74,imp:74,zpg:70,zpx:86},nop:{imp:234},ora:{abs:13,abx:29,aby:25,imm:9,iny:17,inx:1,zpg:5,zpx:21},pha:{imp:72},php:{imp:8},pla:{imp:104},plp:{imp:40},rol:{abs:46,abx:62,acc:42,imp:42,zpg:38,zpx:54},ror:{abs:110,abx:126,acc:106,imp:106,zpg:102,zpx:118},rti:{imp:64},rts:{imp:96},sbc:{abs:237,abx:253,aby:249,imm:233,iny:241,inx:225,zpg:229,zpx:245},sec:{imp:56},sed:{imp:248},sei:{imp:120},sta:{abs:141,abx:157,aby:153,iny:145,inx:129,zpg:133,zpx:149},stx:{abs:142,zpg:134,zpy:150},sty:{abs:140,zpg:132,zpx:148},tax:{imp:170},tay:{imp:168},tsx:{imp:186},txa:{imp:138},txs:{imp:154},tya:{imp:152},slo:{abs:15,abx:31,aby:27,zpg:7,zpx:23,inx:3,iny:19},rla:{abs:47,abx:63,aby:59,zpg:39,zpx:55,inx:35,iny:51},sre:{abs:79,abx:95,aby:91,zpg:71,zpx:87,inx:67,iny:83},rra:{abs:111,abx:127,aby:123,zpg:103,zpx:119,inx:99,iny:115},sax:{abs:143,zpg:135,zpy:151,inx:131},lax:{abs:175,aby:191,zpg:167,zpy:183,inx:163,iny:179},dcp:{abs:207,abx:223,aby:219,zpg:199,zpx:215,inx:195,iny:211},isc:{abs:239,abx:255,aby:251,zpg:231,zpx:247,inx:227,iny:243},alr:{imm:75},arr:{imm:107},axs:{imm:203},tas:{aby:155},shy:{abx:156},shx:{aby:158},ahx:{aby:159,iny:147},anc:{imm:43},las:{aby:187}}))(h6||(h6={}));var Ha=class{constructor(e){this.buffer=new Array(16);this.mask=15;this.start=0;this.end=0;this.size=0;e&&this.push(...e)}[Symbol.iterator](){let e=0;return{next:()=>e>=this.size?{value:void 0,done:!0}:{value:this.buffer[this.start+e++&this.mask],done:!1},[Symbol.iterator](){return this}}}get length(){return this.size}upsize(e){for(;this.mask<=e;)this.end<this.start&&(this.start+=this.mask+1),this.mask=this.mask<<1|1,this.buffer=this.buffer.concat(this.buffer);this.size=e}push(...e){this.upsize(this.size+e.length);for(let x of e)this.buffer[this.end]=x,this.end=this.end+1&this.mask}pop(){if(!!this.size)return this.end=this.end-1&this.mask,this.size--,this.buffer[this.end]}peek(){if(!!this.size)return this.buffer[this.end-1&this.mask]}unshift(...e){this.upsize(this.size+e.length);let x=this.start=this.start-e.length&this.mask;for(let t of e)this.buffer[x++&this.mask]=t}shift(){if(!this.size)return;let e=this.buffer[this.start];return this.start=this.start+1&this.mask,this.size--,e}front(){if(!!this.size)return this.buffer[this.start]}get(e){if(!(e>=this.size))return this.buffer[this.start+e&this.mask]}slice(e,x=this.size){return e<0&&(e+=this.size),x<0&&(x+=this.size),x<=e?[]:(e=this.start+Math.max(0,Math.min(this.size,e))&this.mask,x=this.start+Math.max(0,Math.min(this.size,x))&this.mask,e<=x?this.buffer.slice(e,x):this.buffer.slice(e).concat(this.buffer.slice(0,x)))}splice(e,x,...t){e<0&&(e+=this.size),e=Math.max(0,Math.min(this.size,e)),x=Math.max(0,Math.min(this.size-e,x));let s=e+x,a=t.length-x,n=this.slice(e,s);if(this.upsize(this.size+a),this.size-=a,e===0){this.start=this.start-a&this.mask;for(let i=0;i<t.length;i++)this.buffer[this.start+i&this.mask]=t[i]}else if(s===this.size){this.end=this.end+a&this.mask,e+=this.start;for(let i=0;i<t.length;i++)this.buffer[e+i&this.mask]=t[i]}else{let i=[...this.slice(0,e),...t,...this.slice(s)];i.length=this.buffer.length,this.buffer=i,this.start=0,this.end=this.size}return this.size+=a,n}toString(){let e=new Array(this.size);for(let x=0;x<this.size;x++)e[x]=this.buffer[this.start+x&this.mask];return`[${e.join(", ")}]`}},Z7=(r,e)=>{r=r.trim();let x=[];for(;r.length>e;){let t=r.substring(0,e).lastIndexOf(" ");t<0&&(t=e),x.push(r.substring(0,t).trim()),r=r.substring(t).trim()}return x.push(r.trim()),x},X6=class extends Error{};var j=class extends Map{constructor(x,t){super(t);this.supplier=x}get(x){let t=super.get(x);return t==null&&super.set(x,t=this.supplier(x)),t}sortedKeys(x){return[...this.keys()].sort(x)}sortedEntries(x){return this.sortedKeys(x).map(t=>[t,this.get(t)])}};var C0;(d=>{function*r(...c){for(let f of c)yield*f}d.concat=r;function e(c){return Boolean(c[Symbol.iterator]().next().done)}d.isEmpty=e;function*x(c,f){for(let l of c)yield f(l)}d.map=x;function*t(c,f){for(let l of c)f(l)&&(yield l)}d.filter=t;function*s(c,f){for(let l of c)yield*f(l)}d.flatMap=s;function a(c){let f=0;for(let l of c)f++;return f}d.count=a;function*n(c,f){for(let l of c){if(--f<0)return;yield l}}d.take=n;function i(c,f){for(let l of c)return l;if(arguments.length<2)throw new Error(`Empty iterable: ${c}`);return f}d.first=i;function o(c,f,l=(h,b)=>[h,b]){return{*[Symbol.iterator](){let h=c[Symbol.iterator](),b=f[Symbol.iterator](),u,S;for(;u=h.next(),S=b.next(),!u.done&&!S.done;)yield l(u.value,S.value)}}}d.zip=o})(C0||(C0={}));function gt(r){return[...r]}var Y6=class{constructor(){this.map=new Map}add(e){this.map.set(e.label,e)}has(e){return this.map.has(e.label)}delete(e){this.map.delete(e.label)}[Symbol.iterator](){return this.map.values()}},Ua=Symbol("Invalidated"),So=Symbol("Size"),Q7=class{constructor(e,x,t){this.ownerMap=e;this.ownerKey=x;this.currentSet=t}getCurrentSet(){return(!this.currentSet||this.currentSet[Ua])&&(this.currentSet=this.ownerMap.get(this.ownerKey)||new Set),this.currentSet}mutateSet(e){let x=this.getCurrentSet(),t=x.size;try{return e(x)}finally{this.ownerMap[So]+=x.size-t,x.size||(this.ownerMap.delete(this.ownerKey),x[Ua]=!0)}}add(e){return this.mutateSet(x=>x.add(e)),this}has(e){return this.getCurrentSet().has(e)}clear(){this.mutateSet(e=>e.clear())}delete(e){return this.mutateSet(x=>x.delete(e))}[Symbol.iterator](){return this.getCurrentSet()[Symbol.iterator]()}values(){return this.getCurrentSet().values()}keys(){return this.getCurrentSet().keys()}entries(){return this.getCurrentSet().entries()}forEach(e,x){this.getCurrentSet().forEach(e,x)}get size(){return this.getCurrentSet().size}get[Symbol.toStringTag](){return"Set"}};Reflect.setPrototypeOf(Q7.prototype,Set.prototype);var Ze=class{constructor(e=[]){this.entries=new j(()=>0,e)}add(e){this.entries.set(e,this.entries.get(e)+1)}delete(e){let x=this.entries.get(e)-1;x>0?this.entries.set(e,x):this.entries.delete(e)}unique(){return this.entries.size}count(e){return this.entries.has(e)?this.entries.get(e):0}[Symbol.iterator](){return this.entries.entries()}};function u6(r){throw new Error(`non-exhaustive check: ${r}`)}function ja(r){if(!r)throw new Error(`asserted but falsy: ${r}`);return r}var xt=class{constructor(e){this.data=e}get(e){return this.data[e]}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}},et=class{constructor(e){this.data=e;let x=new Map;for(let t=0;t<e.length;t++)x.set(e[t],t);this.rev=x,this.length=e.length}get(e){return this.data[e]}hasValue(e){return this.rev.has(e)}index(e){let x=this.rev.get(e);if(x==null)throw new Error(`Missing index for ${e}`);return x}[Symbol.iterator](){return this.data.entries()}values(){return this.data[Symbol.iterator]()}},tt=class{constructor(){this._fwd=[];this._rev=[]}*[Symbol.iterator](){for(let e=0;e<this._fwd.length;e++){let x=this._fwd[e];x!=null&&(yield[e,x])}}*keys(){for(let e=0;e<this._fwd.length;e++)this._fwd[e]!=null&&(yield e)}*values(){for(let e=0;e<this._rev.length;e++)this._rev[e]!=null&&(yield e)}get(e){return this._fwd[e]}has(e){return this._fwd[e]!=null}hasValue(e){return this._rev[e]!=null}index(e){let x=this._rev[e];if(x==null)throw new Error(`Missing index for ${e}`);return x}set(e,x){if(this._fwd[e])throw new Error(`already has key ${e}`);if(this._rev[x])throw new Error(`already has value ${x}`);this._fwd[e]=x,this._rev[x]=e}replace(e,x){let t=this._rev[x];t!=null&&delete this._fwd[t];let s=this._fwd[e];return s!=null&&delete this._rev[s],this._fwd[e]=x,this._rev[x]=e,s}},st=class{constructor(e){this._map=new Map;if(e)for(let[x,t,s]of e)this.set(x,t,s)}*[Symbol.iterator](){for(let[e,x]of this._map)for(let[t,s]of x)yield[e,t,s]}set(e,x,t){let s=this._map.get(e);s||this._map.set(e,s=new Map),s.set(x,t)}get(e,x){return this._map.get(e)?.get(x)}has(e,x){return this._map.get(e)?.has(x)||!1}delete(e,x){let t=this._map.get(e);!t||(t.delete(x),t.size||this._map.delete(e))}row(e){return this._map.get(e)??new Map}};function Va(r,...e){let x=r.split(/%/g),t=0,s=x[0];for(let a=1;a<x.length;a++){if(!x[a]){s+="%"+x[++a];continue}let n=/([-+]*)([0\D]?)(\d*)([dxs])/.exec(x[a]);if(!n){s+=e[t++]+x[a];continue}let i=parseInt(n[3])||0,o=n[2]||" ",d=e[t++],c=n[4]==="x"?Number(d).toString(16):String(d);if(n[4]!=="s"&&/\+/.test(n[1])&&Number(d)>=0&&(c="+"+c),c.length<i){let f=o.repeat(i-c.length);c=/-/.test(n[1])?c+f:f+c}s+=c+x[a].substring(n[0].length)}return s}var Ka;(x=>(x.NONE={get requested(){return!1},throwIfRequested(){},register(){return{unregister(){}}}},x.CANCELLED={get requested(){return!0},throwIfRequested(){throw new Error("cancelled")},register(){return{unregister(){}}}}))(Ka||(Ka={}));function Te(r,e=1){return r<0?`~${(~r).toString(16).padStart(e,"0")}`:r.toString(16).padStart(e,"0")}var Ee;(x=>{class r{next(){for(;;){this.sink||(this.sink=this.pump());let{value:s,done:a}=this.sink.next();if(!a)return s;this.sink=void 0}}}x.Abstract=r;function e(...t){let s;return{next:()=>{for(;;){if(s||(s=t.shift()),!s)return;let a=s.next();if(a)return a;s=void 0}}}}x.concat=e})(Ee||(Ee={}));var T;(t0=>{t0.LB={token:"lb"},t0.LC={token:"lc"},t0.LP={token:"lp"},t0.RB={token:"rb"},t0.RC={token:"rc"},t0.RP={token:"rp"},t0.EOL={token:"eol"},t0.EOF={token:"eof"},t0.DEFINE={token:"cs",str:".define"},t0.DOT_EOL={token:"cs",str:".eol"},t0.ELSE={token:"cs",str:".else"},t0.ELSEIF={token:"cs",str:".elseif"},t0.ENDIF={token:"cs",str:".endif"},t0.ENDMAC={token:"cs",str:".endmac"},t0.ENDMACRO={token:"cs",str:".endmacro"},t0.ENDREP={token:"cs",str:".endrep"},t0.ENDREPEAT={token:"cs",str:".endrepeat"},t0.ENDPROC={token:"cs",str:".endproc"},t0.ENDSCOPE={token:"cs",str:".endscope"},t0.LOCAL={token:"cs",str:".local"},t0.MACRO={token:"cs",str:".macro"},t0.REPEAT={token:"cs",str:".repeat"},t0.SET={token:"cs",str:".set"},t0.SKIP={token:"cs",str:".skip"},t0.BYTE={token:"cs",str:".byte"},t0.WORD={token:"cs",str:".word"},t0.COLON={token:"op",str:":"},t0.COMMA={token:"op",str:","},t0.STAR={token:"op",str:"*"},t0.IMMEDIATE={token:"op",str:"#"},t0.ASSIGN={token:"op",str:"="};function g0(C,z){return C.token!==z.token?!1:C.token==="num"||C.token==="str"?!0:C.str===z.str}t0.match=g0;function D0(C,z){return!(!C||!z||C.token!==z.token||C.token==="grp"||C.str!==z.str||C.num!==z.num)}t0.eq=D0;function Z(C){switch(C.token){case"num":return`NUM[$${C.num.toString(16)}]`;case"str":return`STR[$${C.str}]`;case"lb":return"[";case"rb":return"]";case"grp":return"{";case"lc":return"{";case"rc":return"}";case"lp":return"(";case"rp":return")";case"eol":return"EOL";case"eof":return"EOF";case"ident":return C.str;case"cs":case"op":return`${C.str.toUpperCase()}`;default:u6(C)}}t0.name=Z;function K(C){let z=C.source;if(!z)return"";let r0=z.parent?K({source:z.parent}):"";return`
  at ${z.file}:${z.line}:${z.column}${r0}`}t0.at=K;function U0(C){if(!C)return"at unknown";let z=C;return(z.token?Z(z):"")+K(C)}t0.nameAt=U0;function Tx(C,z="end of line"){if(C)throw new Error(`Expected ${z}: ${t0.nameAt(C)}`)}t0.expectEol=Tx;function S0(C,z,r0){if(!z)throw r0?new Error(`Expected ${Z(C)} after ${U0(z)}`):new Error(`Expected ${Z(C)}`);if(!D0(C,z))throw new Error(`Expected ${Z(C)}: ${U0(z)}`)}t0.expect=S0;function Z0(C,z){return gx("ident","identifier",C,z)}t0.expectIdentifier=Z0;function V0(C,z){return gx("str","constant string",C,z)}t0.expectString=V0;function gx(C,z,r0,y0){if(!r0)throw y0?new Error(`Expected ${z} after ${U0(y0)}`):new Error(`Expected ${z}`);if(r0.token!==C)throw new Error(`Expected ${z}: ${U0(r0)}`);return r0.str}function qx(C){if(!C.length)return[];let z=[];for(let r0=0;r0<=C.length;r0+=2){let y0=C[r0];if(y0?.token!=="ident"){if(y0)throw new Error(`Expected identifier: ${U0(y0)}`);let x0=C[C.length-1];throw new Error(`Expected identifier after ${U0(x0)}`)}else if(r0+1<C.length&&!D0(C[r0+1],t0.COMMA)){let x0=C[r0+1];throw new Error(`Expected comma: ${U0(x0)}`)}z.push(y0.str)}return z}t0.identsFromCList=qx;function lx(C,z){let r0=C[z++].token;if(r0!=="lp"&&r0!=="lb")throw new Error("non-grouping token");let y0=r0==="lp"?"rp":"rb",x0=1;for(;z<C.length;z++){let f0=C[z].token;if(x0+=Number(f0===r0)-Number(f0===y0),!x0)return z}return-1}t0.findBalanced=lx;function Ex(C,z=0,r0=C.length){let y0=[],x0=[y0],f0=0;for(let B=z;B<r0;B++){let u0=C[B];if(!f0&&D0(u0,t0.COMMA))x0.push(y0=[]);else if(y0.push(u0),D0(u0,t0.LP)&&f0++,D0(u0,t0.RP)&&--f0<0)throw new Error(`Unbalanced paren${K(u0)}`)}return x0}t0.parseArgList=Ex;function H0(C,z){let r0=new Map,y0,x0=[];if(z>=C.length)return r0;if(!D0(C[z],t0.COLON))throw new Error(`Unexpected: ${U0(C[z])}`);for(let f0=z+1;f0<C.length;f0++){let B=C[f0];if(D0(B,t0.COLON)){if(y0==null)throw new Error(`Missing key${K(B)}`);r0.set(y0,x0),y0=void 0,x0=[]}else y0==null?y0=Z0(B):x0.push(B)}return y0!=null?r0.set(y0,x0):Z0(void 0,C[C.length-1]),r0}t0.parseAttrList=H0;function f6(C,z){let r0=yx(C,t0.COMMA,z);return r0<0?C.length:r0}t0.findComma=f6;function yx(C,z,r0){for(let y0=r0;y0<C.length;y0++)if(D0(C[y0],z))return y0;return-1}t0.find=yx;function Px(C){let z=0;for(let r0 of C)r0.token==="grp"?z+=2+Px(r0.inner):z++;return z}t0.count=Px;function Lx(C,z){return C.token==="ident"&&C.str.toLowerCase()===z}t0.isRegister=Lx;function e6(C){switch(C.token){case"cs":case"ident":case"str":case"op":return C.str}throw new Error(`Non-string token: ${t0.nameAt(C)}`)}t0.str=e6;function M6(C){return delete C.source,C}t0.strip=M6})(T||(T={}));var k0;(S=>{function r(m){return m.source?{source:{parent:m.source,file:"js",line:0,column:0}}:{}}function e(m){return{op:"<",args:[m],...r(m)}}S.loByte=e;function x(m){return{op:">",args:[m],...r(m)}}S.hiByte=x;function t(m,p){function g(M){return M.args?{...M,args:M.args.map(I=>w(I,M))}:M}function w(M,I){let P=M.source;return M=p(M,g,I),P&&!M.source&&(M.source=P),M}return w(m)}S.traverse=t;function s(m,p){return t(m,(g,w)=>p(w(g)))}S.traversePost=s;function a(m){switch(m.op){case".move":case"im":case"sym":return m;case"num":if(m.meta?.rel&&m.meta.org!=null){let{rel:p,...g}=m.meta;return{op:"num",num:m.num+g.org,meta:g}}return m;case".max":return d(m,Math.max);case".min":return d(m,Math.min);default:}if(m.args?.length===1)switch(m.op){case"+":return m.args[0];case"-":return f(m,p=>-p);case"~":return f(m,p=>~p);case"!":return f(m,p=>+!p);case"<":return f(m,p=>p&255);case">":return f(m,p=>p>>8&255);case"^":return c(m.args[0].meta?.bank)??m;default:throw new Error(`Unknown unary operator: ${m.op}`)}switch(m.op){case"+":return h(m);case"-":return b(m);case"*":return l(m,(p,g)=>p*g);case"/":return l(m,(p,g)=>Math.floor(p/g));case".mod":return l(m,(p,g)=>p%g);case"&":return l(m,(p,g)=>p&g);case"|":return l(m,(p,g)=>p|g);case"^":return l(m,(p,g)=>p^g);case"<<":return l(m,(p,g)=>p<<g);case">>":return l(m,(p,g)=>p>>>g);case"<":return l(m,(p,g)=>+(p<g));case"<=":return l(m,(p,g)=>+(p<=g));case">":return l(m,(p,g)=>+(p>g));case">=":return l(m,(p,g)=>+(p>=g));case"=":return l(m,(p,g)=>+(p==g));case"<>":return l(m,(p,g)=>+(p!=g));case"&&":return l(m,(p,g)=>p&&g);case"||":return l(m,(p,g)=>p||g);case".xor":return l(m,(p,g)=>!p&&g||!g&&p||0);default:throw new Error(`Unknown operator: ${m.op}`)}}S.evaluate=a;function n(m){if(m.op==="sym"&&m.sym)return m.sym;throw new Error(`Expected identifier but got op: ${m.op}`)}S.identifier=n;function i(m,p=0){let[g,w]=o(m,p);if(w<m.length)throw o(m,p),new Error(`Garbage after expression: ${T.nameAt(m[w])}`);if(!g)throw new Error("No expression?");return g}S.parseOnly=i;function o(m,p=0){let g=[],w=[];function M(){let[k,[,,N]]=g.pop(),D=w.splice(w.length-N,N);if(D.length!==N)throw new Error(`shunting parse failed? ${T.nameAt(m[P])}`);w.push(Xa({op:k,args:D}))}let I=!0,P=p;for(;P<m.length;P++){let k=m[P];if(I)if(k.token==="cs"||k.token==="op"){let N=Ja.get(k.str),D=Eo.get(N??k.str);if(D)g.push([k.str,D]);else if(k.token==="cs"){let e0=k.str;if(!ko.has(e0))throw new Error(`No such function: ${T.nameAt(k)}`);let i0=m[P+1];if(i0?.token!=="lp")throw new Error(`Bad funcall: ${T.nameAt(i0??k)}`);let p0=T.findBalanced(m,P+1);if(p0<0)throw new Error(`Never closed: ${T.nameAt(i0)}`);let F0=[];for(let g0 of T.parseArgList(m,P+2,p0))F0.push(i(g0));P=p0,w.push(Xa({op:e0,args:F0})),I=!1}else if(T.eq(k,T.STAR))w.push({op:"sym",sym:"*"}),I=!1;else throw new Error(`Unknown prefix operator: ${T.nameAt(k)}`)}else if(k.token==="lp"){let N=T.findBalanced(m,P);if(N<0)throw new Error(`No close paren: ${T.nameAt(k)}`);let D=i(m.slice(P+1,N));w.push(D),P=N,I=!1}else if(k.token==="ident")w.push({op:"sym",sym:k.str}),I=!1;else if(k.token==="num"){let N=k.num;w.push({op:"num",num:N,meta:ke(N,k)}),I=!1}else throw new Error(`Bad expression token: ${T.nameAt(k)}`);else{if(T.eq(k,T.COMMA))break;if(k.token==="cs"||k.token==="op"){let N=Ja.get(k.str),D=To.get(N??k.str);if(!D)break;for(;g.length;){let e0=g[g.length-1],i0=vo(e0[1],D);if(i0<0)break;if(i0===0)throw new Error(`Mixing ${e0[0]} and ${k.str} needs explicit parens.${T.at(k)}`);M()}g.push([k.str,D]),I=!0}else break}}for(;g.length;)M();if(!m[p])throw new Error(`No token at ${p}:
${m.map(k=>"  "+T.nameAt(k)+`
`)}`);if(w.length!==1)throw new Error(`expression parse failed: nonunique result ${T.nameAt(m[p])}`);return m[p].source&&(w[0].source=m[p].source),[w[0],P]}S.parse=o;function d(m,p){throw new Error}function c(m){if(m!=null)return{op:"num",num:m,meta:ke(m)}}function f(m,p){let g=m.args[0];if(!u(g))return m;let w=p(g.num);return{op:"num",num:w,meta:ke(w)}}function l(m,p){let[g,w]=m.args;if(!u(g)||!u(w))return m;let M=p(g.num,w.num);return{op:"num",num:M,meta:ke(M)}}function h(m){let[p,g]=m.args;if(p.op!=="num"||g.op!=="num")return m;let w={op:"num",num:p.num+g.num};if(p.meta||g.meta){if(p.meta?.rel&&g.meta?.rel)return m;p.meta?.rel?w.meta=p.meta:g.meta?.rel&&(w.meta=g.meta)}return!w.meta?.rel&&w.meta?.size==null&&((w.meta||(w.meta={})).size=ke(w.num).size),w}function b(m){let[p,g]=m.args;if(p.op!=="num"||g.op!=="num")return m;let w={op:"num",num:p.num-g.num};return g.meta?.rel?p.meta?.rel&&p.meta.chunk===g.meta.chunk?w:m:(p.meta?.rel&&(w.meta=p.meta),!w.meta?.rel&&w.meta?.size==null&&((w.meta||(w.meta={})).size=ke(w.num).size),w)}function u(m){return m.op==="num"&&!m.meta?.rel}})(k0||(k0={}));function vo(r,e){return r[0]>e[0]?1:r[0]<e[0]?-1:r[1]!==e[1]?0:r[1]}var ax=2,Q6=1,To=new Map([["*",[5,4,ax]],["/",[5,4,ax]],[".mod",[5,3,ax]],["&",[5,2,ax]],["^",[5,1,ax]],["<<",[5,0,ax]],[">>",[5,0,ax]],["+",[4,2,ax]],["-",[4,2,ax]],["|",[4,1,ax]],["<",[3,0,ax]],["<=",[3,0,ax]],[">",[3,0,ax]],[">=",[3,0,ax]],["=",[3,0,ax]],["<>",[3,0,ax]],["&&",[2,3,ax]],[".xor",[2,2,ax]],["||",[2,1,ax]]]),Eo=new Map([["+",[9,-1,Q6]],["-",[9,-1,Q6]],["~",[9,-1,Q6]],["<",[9,-1,Q6]],[">",[9,-1,Q6]],["^",[9,-1,Q6]],["!",[2,-1,Q6]]]),ko=new Set([".byteat",".wordat",".max",".min"]),Ja=new Map([[".bitand","&"],[".bitxor","^"],[".bitor","|"],[".shl","<<"],[".shr",">>"],[".and","&&"],[".or","||"],[".bitnot","~"],[".lobyte","<"],[".hibyte",">"],[".bankbyte","^"],[".not","!"]]),Ro=new Map([["^",(...r)=>r.length===1?1:Math.max(...r)],["<",()=>1],[">",()=>1],["!",()=>1],["<=",()=>1],[">=",()=>1],["<>",()=>1],["=",()=>1],["&",Math.max],["&&",Math.max],["|",Math.max],["||",Math.max],[".xor",Math.max],[".max",Math.max],[".min",Math.max]]);function Xa(r){let x=Ro.get(r.op)?.(...r.args.map(t=>Number(t.meta?.size)));return x&&((r.meta||(r.meta={})).size=x),r}function ke(r,e){return r<256&&e&&e.token==="num"&&e.width!=null?{size:e.width}:{size:0<=r&&r<256?1:2}}var Re;(e=>{function r(x,t){let s={...x,...t},a=[...x.free||[],...t.free||[]];return a.length&&(s.free=a),s}e.merge=r})(Re||(Re={}));var xs=class{constructor(e,x,t,s,a){this.line=e;this.column=x;this.prefix=t;this.remainder=s;this.match=a}},yt=class{constructor(e,x=1,t=0){this.content=e;this.line=x;this.column=t;this.prefix="";this.remainder=e}advance(e){let x=this.remainder.substring(0,e.length);if(e!==x)throw new Error(`Non-rooted token: '${e}' vs '${x}'`);this.prefix+=e,this.remainder=this.remainder.substring(e.length),e=e.replace(`
`,e.includes("\r")?"":"\r");let t=e.split(/\r/g);t.length>1&&(this.line+=t.length-1,this.column=0),this.column+=t[t.length-1].length}saveState(){return new xs(this.line,this.column,this.prefix,this.remainder,this.lastMatch)}restoreState(e){this.line=e.line,this.column=e.column,this.prefix=e.prefix,this.remainder=e.remainder,this.lastMatch=e.match}skip(e){let x=e.exec(this.remainder);return x?(this.advance(x[0]),!0):!1}space(){return this.skip(/^[ \t]+/)}newline(){return this.skip(/^(\r\n|\n|\r)/)}lookingAt(e){return typeof e=="string"?this.remainder.startsWith(e):e.test(this.remainder)}token(e){let x;if(typeof e=="string"){if(!this.remainder.startsWith(e))return!1;x=[e]}else x=e.exec(this.remainder);return x?(x.line=this.line,x.column=this.column,this.lastMatch=x,this.advance(x[0]),!0):!1}lookBehind(e){if(typeof e=="string")return this.prefix.endsWith(e);let x=e.exec(this.prefix);return x?(x.line=this.line,x.column=this.line,this.lastMatch=x,!0):!1}match(){return this.lastMatch}group(e=0){return this.lastMatch?.[e]}eof(){return!this.remainder}};var b6=class{constructor(e,x="input.s",t={}){this.file=x;this.opts=t;this.buffer=new yt(e)}next(){let e=this.token();for(;T.eq(e,T.EOL);)e=this.token();let x=[[]],t=0;for(;!T.eq(e,T.EOL)&&!T.eq(e,T.EOF);){if(T.eq(e,T.LC))x[t++].push(e),x.push([]);else if(T.eq(e,T.RC)){if(!t)throw new Error(`Missing open curly: ${T.nameAt(e)}`);let s=x.pop(),a=x[--t].pop().source,n={token:"grp",inner:s};a&&(n.source=a),x[t].push(n)}else x[t].push(e);e=this.token()}if(t){let s=x[t-1].pop();throw new Error(`Missing close curly: ${T.nameAt(s)}`)}return x[0].length?x[0]:void 0}token(){for(;this.buffer.space()||this.buffer.token(/^;.*/)||this.opts.lineContinuations&&this.buffer.token(/^\\(\r\n|\n|\r)/););if(this.buffer.eof())return T.EOF;let e={file:this.file,line:this.buffer.line,column:this.buffer.column};try{let x=this.tokenInternal();return this.opts.skipSourceAnnotations||(x.source=e),x}catch(x){let{file:t,line:s,column:a}=e,n=this.buffer.group();throw n=n?` near '${n}'`:"",x.message+=`
  at ${t}:${s}:${a}${n}`,x}}tokenInternal(){if(this.buffer.newline())return{token:"eol"};if(this.buffer.token(/^@+[a-z0-9_]*/i)||this.buffer.token(/^((::)?[a-z_][a-z0-9_]*)+/i))return this.strTok("ident");if(this.buffer.token(/^\.[a-z]+/i))return this.strTok("cs");if(this.buffer.token(/^:([+-]\d+|[-+]+|<+rts|>*rts)/))return this.strTok("ident");if(this.buffer.token(/^(:|\++|-+|&&?|\|\|?|[#*/,=~!^]|<[<>=]?|>[>=]?)/))return this.strTok("op");if(this.buffer.token("["))return{token:"lb"};if(this.buffer.token("{"))return{token:"lc"};if(this.buffer.token("("))return{token:"lp"};if(this.buffer.token("]"))return{token:"rb"};if(this.buffer.token("}"))return{token:"rc"};if(this.buffer.token(")"))return{token:"rp"};if(this.buffer.token(/^["']/))return this.tokenizeStr();if(this.buffer.token(/^[$%]?[0-9a-z_]+/i))return this.tokenizeNum();throw new Error("Syntax error")}tokenizeStr(){let e=this.buffer,t=e.match()[0],s="";for(;!e.lookingAt(t);){if(e.eof())throw new Error(`EOF while looking for ${t}`);e.token(/^\\u([0-9a-f]{4})/i)?s+=String.fromCodePoint(parseInt(e.group(1),16)):e.token(/^\\x([0-9a-f]{2})/i)?s+=String.fromCharCode(parseInt(e.group(1),16)):e.token(/^\\(.)/)?s+=e.group(1):(e.token(/^./),s+=e.group(0))}return e.token(t),{token:"str",str:s}}strTok(e){return{token:e,str:this.buffer.group()}}tokenizeNum(e=this.buffer.group()){return this.opts.numberSeparators&&(e=e.replace(/_/g,"")),e[0]==="$"?Co(e.substring(1)):e[0]==="%"?Ao(e.substring(1)):e[0]==="0"?Lo(e):Io(e)}};function Co(r){if(!/^[0-9a-f]+$/i.test(r))throw new Error(`Bad hex number: $${r}`);return{token:"num",num:Number.parseInt(r,16),width:Math.ceil(r.length/2)}}function Io(r){if(!/^[0-9]+$/.test(r))throw new Error(`Bad decimal number: ${r}`);return{token:"num",num:Number.parseInt(r,10)}}function Lo(r){if(!/^[0-7]+$/.test(r))throw new Error(`Bad octal number: ${r}`);return{token:"num",num:Number.parseInt(r,8)}}function Ao(r){if(!/^[01]+$/.test(r))throw new Error(`Bad binary number: %${r}`);return{token:"num",num:Number.parseInt(r,2),width:Math.ceil(r.length/8)}}var wt=class{constructor(){this.symbols=new Map}pickScope(e){return[e,this]}resolve(e,x={}){let{allowForwardRef:t=!1,ref:s}=x,[a,n]=this.pickScope(e),i=n.symbols.get(a);if(i)return a!==e&&(i.scoped=!0),i;if(!t)return;let o={ref:s};return n.symbols.set(a,o),a!==e&&(o.scoped=!0),o}},St=class extends wt{constructor(x,t){super();this.parent=x;this.kind=t;this.children=new Map;this.anonymousChildren=[];this.global=x?x.global:this}pickScope(x){let t=this,s=x.split(/::/g),a=s.pop();for(let n=0;n<s.length;n++){if(!n&&!s[n]){t=t.global;continue}let i=t.children.get(s[n]);for(;!n&&t.parent&&!i;)i=(t=t.parent).children.get(s[n]);if(!i){let o=s.slice(0,n+1).join("::");throw new Error(`Could not resolve scope ${o}`)}t=i}return[a,t]}},es=class extends wt{clear(){for(let[e,x]of this.symbols)if(!x.expr){let t=x.ref?T.at(x.ref):"";throw new Error(`Cheap local label never defined: ${e}${t}`)}this.symbols.clear()}},I6=class{constructor(e=h6.P02,x={}){this.cpu=e;this.opts=x;this.segments=["code"];this.segmentData=new Map;this.segmentStack=[];this.symbols=[];this.globals=new Map;this.currentScope=new St;this.cheapLocals=new es;this.anonymousForward=[];this.anonymousReverse=[];this.relativeForward=[];this.relativeReverse=[];this.rtsRefsForward=[];this.rtsRefsReverse=[];this.chunks=[];this._chunk=void 0;this._name=void 0;this._org=void 0;this._segmentPrefix=""}get chunk(){return this.ensureChunk(),this._chunk}ensureChunk(){this._chunk||(this._chunk={segments:this.segments,data:[]},this._org!=null&&(this._chunk.org=this._org),this._name&&(this._chunk.name=this._name),this.chunks.push(this._chunk))}definedSymbol(e){let x=this.currentScope,t=!e.includes("::");do{let s=x.resolve(e,{allowForwardRef:!1});if(s)return Boolean(s.expr)}while(t&&(x=x.parent));return!1}constantSymbol(e){let x=this.currentScope.resolve(e,{allowForwardRef:!1});return Boolean(x&&x.expr&&!(x.id<0))}referencedSymbol(e){return this.currentScope.resolve(e,{allowForwardRef:!1})!=null}evaluate(e){if(e=this.resolve(e),e.op==="num"&&!e.meta?.rel)return e.num}pc(){let e=this.chunk.data.length,x={rel:!0,chunk:this.chunks.length-1};return this._chunk?.org!=null&&(x.org=this._chunk.org),k0.evaluate({op:"num",num:e,meta:x})}resolve(e){return k0.traverse(e,(x,t)=>{for(;x.op==="sym"&&x.sym;)x=this.resolveSymbol(x);return k0.evaluate(t(x))})}resolveSymbol(e){let x=e.sym,t=Po(x);if(t.type==="pc")return this.pc();if(t.type==="anon"&&t.num>0){let n=t.num-1,i=this.anonymousForward[n];return i!=null?{op:"sym",num:i}:(this.anonymousForward[n]=i=this.symbols.length,this.symbols.push({id:i}),{op:"sym",num:i})}else if(t.type==="rts"&&t.num>0){let n=t.num-1,i=this.rtsRefsForward[n];return i!=null?{op:"sym",num:i}:(this.rtsRefsForward[n]=i=this.symbols.length,this.symbols.push({id:i}),{op:"sym",num:i})}else if(t.type==="rel"&&t.num>0){let n=this.relativeForward[t.num-1];return n!=null?{op:"sym",num:n}:(this.relativeForward[x.length-1]=n=this.symbols.length,this.symbols.push({id:n}),{op:"sym",num:n})}else if(t.type==="anon"&&t.num<0){let n=this.anonymousReverse.length+t.num;return n<0&&this.fail(`Bad anonymous backref: ${x}`),this.anonymousReverse[n]}else if(t.type==="rts"&&t.num<0){let n=this.rtsRefsReverse.length+t.num;return n<0&&this.fail(`Bad rts backref: ${x}`),this.rtsRefsReverse[n]}else if(t.type==="rel"&&t.num<0){let n=this.relativeReverse[x.length-1];return n==null&&this.fail(`Bad relative backref: ${x}`),n}let a=(x.startsWith("@")?this.cheapLocals:this.currentScope).resolve(x,{allowForwardRef:!0,ref:e});return a.expr?a.expr:(a.id==null&&(a.id=this.symbols.length,this.symbols.push(a)),{op:"sym",num:a.id})}chunkData(e){return{org:this.chunks[e].org}}closeScopes(){this.cheapLocals.clear();function e(x){for(let t of x.children.values())e(t);for(let t of x.anonymousChildren)e(t);for(let[t,s]of x.symbols)if(!(s.expr||s.id==null)&&x.parent){if(s.scoped)throw new Error(`Symbol '${t}' undefined: ${T.nameAt(s.ref)}`);let a=x.parent.symbols.get(t);if(!a)x.parent.symbols.set(t,s);else if(a.id!=null)s.expr={op:"sym",num:a.id};else if(a.expr)s.expr=a.expr;else throw new Error(`Impossible: ${t}`)}}if(this.currentScope.parent)throw new Error("Scope never closed");e(this.currentScope);for(let[x,t]of this.globals){let s=this.currentScope.symbols.get(x);if(t==="export"){if(!s?.expr)throw new Error(`Symbol '${x}' undefined`);s.id==null&&(s.id=this.symbols.length,this.symbols.push(s)),s.export=x}else if(t==="import"){if(!s)continue;if(s.expr)throw new Error(`Already defined: ${x}`);s.expr={op:"im",sym:x}}else u6(t)}for(let[x,t]of this.currentScope.symbols)if(!t.expr)throw new Error(`Symbol '${x}' undefined: ${T.nameAt(t.ref)}`)}module(){this.closeScopes();let e=[];for(let s of this.chunks)e.push({...s,data:Uint8Array.from(s.data)});let x=[];for(let s of this.symbols){if(s.expr==null)throw new Error("Symbol undefined");let a={expr:s.expr};s.export!=null&&(a.export=s.export),x.push(a)}let t=[...this.segmentData.values()];return{chunks:e,symbols:x,segments:t}}line(e){this._source=e[0].source,e.length<3&&T.eq(e[e.length-1],T.COLON)?this.label(e[0]):T.eq(e[1],T.ASSIGN)?this.assign(T.str(e[0]),this.parseExpr(e,2)):T.eq(e[1],T.SET)?this.set(T.str(e[0]),this.parseExpr(e,2)):e[0].token==="cs"?this.directive(e):this.instruction(e)}tokens(e){let x;for(;x=e.next();)this.line(x)}async tokensAsync(e){let x;for(;x=await e.nextAsync();)this.line(x)}directive(e){switch(T.str(e[0])){case".org":return this.org(this.parseConst(e));case".reloc":return this.parseNoArgs(e),this.reloc();case".assert":return this.assert(this.parseExpr(e));case".segment":return this.segment(...this.parseSegmentList(e));case".byte":return this.byte(...this.parseDataList(e,!0));case".res":return this.res(...this.parseResArgs(e));case".word":return this.word(...this.parseDataList(e));case".free":return this.free(this.parseConst(e),e[0]);case".segmentprefix":return this.segmentPrefix(this.parseStr(e));case".import":return this.import(...this.parseIdentifierList(e));case".export":return this.export(...this.parseIdentifierList(e));case".scope":return this.scope(this.parseOptionalIdentifier(e));case".endscope":return this.parseNoArgs(e),this.endScope();case".proc":return this.proc(this.parseRequiredIdentifier(e));case".endproc":return this.parseNoArgs(e),this.endProc();case".pushseg":return this.pushSeg(...this.parseSegmentList(e));case".popseg":return this.parseNoArgs(e),this.popSeg();case".move":return this.move(...this.parseMoveArgs(e))}this.fail(`Unknown directive: ${T.nameAt(e[0])}`)}label(e){let x,t,s=this.pc();if(typeof e=="string"?x=e:(x=T.str(t=e),e.source&&(s.source=e.source)),x===":"){this.anonymousReverse.push(s);let a=this.anonymousForward.shift();a!=null&&(this.symbols[a].expr=s);return}else if(/^\++$/.test(x)){let a=this.relativeForward[x.length-1];delete this.relativeForward[x.length-1],a!=null&&(this.symbols[a].expr=s);return}else if(/^-+$/.test(x)){this.relativeReverse[x.length-1]=s;return}x.startsWith("@")||(this.cheapLocals.clear(),!this.chunk.name&&!this.chunk.data.length&&(this.chunk.name=x)),this.assignSymbol(x,!1,s,t)}assign(e,x){e.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${e}`),typeof x!="number"&&(x=this.resolve(x)),this.assignSymbol(e,!1,x)}set(e,x){e.startsWith("@")&&this.fail(`Cheap locals may only be labels: ${e}`),typeof x!="number"&&(x=this.resolve(x)),this.assignSymbol(e,!0,x)}assignSymbol(e,x,t,s){typeof t=="number"&&(t={op:"num",num:t});let a=e.startsWith("@")?this.cheapLocals:this.currentScope,n=a.resolve(e,{allowForwardRef:!x,ref:s});if(n&&x!==n.id<0)this.fail(`Cannot change mutability of ${e}`,s);else if(x&&t.op!="num")this.fail("Mutable set requires constant",s);else if(n){if(!x&&n.expr){let i=n.expr.source?`
Originally defined${T.at(n.expr)}`:"",o=s?T.nameAt(s):e+(this._source?T.at({source:this._source}):"");throw new Error(`Redefining symbol ${o}${i}`)}}else{if(!x)throw new Error("impossible");a.symbols.set(e,n={id:-1})}n.expr=t}instruction(...e){let x,t;if(e.length===1&&Array.isArray(e[0])){let n=e[0];x=T.expectIdentifier(n[0]).toLowerCase(),t=this.parseArg(n)}else if(typeof e[1]=="string"){x=e[0];let n=new b6(e[1]);t=this.parseArg(n.next(),0)}else[x,t]=e,t||(t=["imp"]),x=x.toLowerCase();if(x==="rts"){let n=this.pc();this.rtsRefsReverse.push(n);let i=this.rtsRefsForward.shift();i!=null&&(this.symbols[i].expr=n)}let s=this.cpu.op(x),a=t[0];if(a==="add"||a==="a,x"||a==="a,y"){let n=t[1],i=n.meta?.size||2;if(a==="add"&&i===1&&"zpg"in s)return this.opcode(s.zpg,1,n);if(a==="add"&&"abs"in s)return this.opcode(s.abs,2,n);if(a==="add"&&"rel"in s)return this.relative(s.rel,1,n);if(a==="a,x"&&i===1&&"zpx"in s)return this.opcode(s.zpx,1,n);if(a==="a,x"&&"abx"in s)return this.opcode(s.abx,2,n);if(a==="a,y"&&i===1&&"zpy"in s)return this.opcode(s.zpy,1,n);if(a==="a,y"&&"aby"in s)return this.opcode(s.aby,2,n);this.fail(`Bad address mode ${a} for ${x}`)}if(a in s){let n=this.cpu.argLen(a);return a==="rel"?this.relative(s[a],n,t[1]):this.opcode(s[a],n,t[1])}this.fail(`Bad address mode ${a} for ${x}`)}parseArg(e,x=1){if(e.length===x)return["imp"];let t=e[x],s=e[x+1];if(e.length===x+1){if(T.isRegister(t,"a"))return["acc"]}else if(T.eq(t,T.IMMEDIATE))return["imm",k0.parseOnly(e,x+1)];if(T.eq(t,T.COLON)&&e.length===x+2&&s.token==="op"&&/^[-+]+$/.test(s.str))return["add",{op:"sym",sym:":"+s.str}];if(e.length===x+1&&t.token==="op"&&/^[-+]+$/.test(t.str))return["add",{op:"sym",sym:t.str}];if(T.eq(t,T.LP)||this.opts.allowBrackets&&T.eq(t,T.LB)){let i=T.findBalanced(e,x);i<0&&this.fail(`Unbalanced ${T.name(t)}`,t);let o=T.parseArgList(e,x+1,i);o.length||this.fail("Bad argument",t);let d=k0.parseOnly(o[0]);if(o.length===1)return T.eq(e[i+1],T.COMMA)&&T.isRegister(e[i+2],"y")?(T.expectEol(e[i+3]),["iny",d]):(T.expectEol(e[i+1]),["ind",d]);if(o.length===2&&o[1].length===1&&T.isRegister(o[1][0],"x"))return["inx",d];this.fail("Bad argument",t)}let a=T.parseArgList(e,x);a.length||this.fail("Bad arg",t);let n=k0.parseOnly(a[0]);if(a.length===1)return["add",n];if(a.length===2&&a[1].length===1){if(T.isRegister(a[1][0],"x"))return["a,x",n];if(T.isRegister(a[1][0],"y"))return["a,y",n]}this.fail("Bad arg",t)}relative(e,x,t){let s=this.chunk.data.length+x+1,a={rel:!0,chunk:this.chunks.length-1};this._chunk?.org&&(a.org=this._chunk.org);let i={op:"-",args:[t,{op:"num",num:s,meta:a}]};t.source&&(i.source=t.source),this.opcode(e,x,i)}opcode(e,x,t){x&&(t=this.resolve(t));let{chunk:s}=this;s.data.push(e),x&&this.append(t,x),s.name||(s.name="Code")}append(e,x){let{chunk:t}=this;e=this.resolve(e);let s=e.num;if(e.op!=="num"||e.meta?.rel){let a=t.data.length;(t.subs||(t.subs=[])).push({offset:a,size:x,expr:e}),this.writeNumber(t.data,x)}else this.writeNumber(t.data,x,s)}org(e,x){this._org!=null&&this._chunk!=null&&this._org+this._chunk.data.length===e||(this._org=e,this._chunk=void 0,this._name=x)}reloc(e){this._org=void 0,this._chunk=void 0,this._name=e}segment(...e){this.segments=e.map(x=>typeof x=="string"?x:x.name);for(let x of e)if(typeof x=="object"){let t=this.segmentData.get(x.name)||{name:x.name};this.segmentData.set(x.name,Re.merge(t,x))}this._chunk=void 0,this._name=void 0}assert(e){e=this.resolve(e);let x=this.evaluate(e);if(x!=null){if(!x){let t="",s=this.chunk;s.org!=null&&(t=` (PC=$${(s.org+s.data.length).toString(16)})`),this.fail(`Assertion failed${t}`,e)}}else{let{chunk:t}=this;(t.asserts||(t.asserts=[])).push(e)}}byte(...e){let{chunk:x}=this;for(let t of e)typeof t=="number"?this.writeNumber(x.data,1,t):typeof t=="string"?Bo(x.data,t):this.append(t,1)}res(e,x){!e||this.byte(...new Array(e).fill(x??0))}word(...e){let{chunk:x}=this;for(let t of e)typeof t=="number"?this.writeNumber(x.data,2,t):this.append(t,2)}free(e,x){this._org==null&&this.fail(".free in .reloc mode",x);let t=this.segments.length>1?this.segments.filter(n=>{let i=this.segmentData.get(n);return!(!i||i.memory==null||i.size==null||i.memory>this._org||i.memory+i.size<=this._org)}):this.segments;t.length!==1?this.fail(`.free with non-unique segment: ${this.segments}`,x):e<0&&this.fail(`.free with negative size: ${e}`,x),this._chunk&&(this._org+=this._chunk.data.length),this._chunk=void 0;let s=t[0],a=this.segmentData.get(s);a||this.segmentData.set(s,a={name:s}),(a.free||(a.free=[])).push([this._org,this._org+e]),this._org+=e}segmentPrefix(e){this._segmentPrefix=e}import(...e){for(let x of e)this.globals.set(x,"import")}export(...e){for(let x of e)this.globals.set(x,"export")}scope(e){this.enterScope(e,"scope")}proc(e){this.label(e),this.enterScope(e,"proc")}enterScope(e,x){let t=e?this.currentScope.children.get(e):void 0;if(t){if(this.opts.reentrantScopes){this.currentScope=t;return}this.fail(`Cannot re-enter scope ${e}`)}let s=new St(this.currentScope,x);e?this.currentScope.children.set(e,s):this.currentScope.anonymousChildren.push(s),this.currentScope=s}endScope(){this.exitScope("scope")}endProc(){this.exitScope("proc")}exitScope(e){(this.currentScope.kind!==e||!this.currentScope.parent)&&this.fail(`.end${e} without .${e}`),this.currentScope=this.currentScope.parent}pushSeg(...e){this.segmentStack.push([this.segments,this._chunk]),this.segment(...e)}popSeg(){this.segmentStack.length||this.fail(".popseg without .pushseg"),[this.segments,this._chunk]=this.segmentStack.pop()}move(e,x){this.append({op:".move",args:[x],meta:{size:e}},e)}parseConst(e,x=1){let t=this.evaluate(k0.parseOnly(e,x));if(t!=null)return t;this.fail("Expression is not constant",e[1])}parseNoArgs(e,x=1){T.expectEol(e[1])}parseExpr(e,x=1){return k0.parseOnly(e,x)}parseStr(e,x=1){let t=T.expectString(e[x]);return T.expectEol(e[x+1],"a single string"),t}parseSegmentList(e,x=1){return e.length<x+1&&this.fail("Expected a segment list",e[x-1]),T.parseArgList(e,1).map(t=>{let s=this._segmentPrefix+T.expectString(t[0]);if(t.length===1)return s;T.eq(t[1],T.COLON)||this.fail(`Expected comma or colon: ${T.name(t[1])}`,t[1]);let a={name:s},n=T.parseAttrList(t,1);for(let[i,o]of n)switch(i){case"bank":a.bank=this.parseConst(o,0);break;case"size":a.size=this.parseConst(o,0);break;case"off":a.offset=this.parseConst(o,0);break;case"mem":a.memory=this.parseConst(o,0);break;default:this.fail(`Unknown segment attr: ${i}`)}return a})}parseResArgs(e){let x=this.parseDataList(e);x.length>2&&this.fail("Expected at most 2 args",x[2]),x.length||this.fail("Expected at least 1 arg");let t=this.evaluate(x[0]);t==null&&this.fail("Expected constant count");let s=x[1]&&this.evaluate(x[1]);return x[1]&&s==null&&this.fail("Expected constant value"),[t,s]}parseDataList(e,x=!1){e.length<2&&this.fail("Expected a data list",e[0]);let t=[];for(let s of T.parseArgList(e,1))x&&s.length===1&&s[0].token==="str"?t.push(s[0].str):s.length<1?this.fail("Missing term"):t.push(this.resolve(k0.parseOnly(s)));return t}parseIdentifierList(e){e.length<2&&this.fail("Expected identifier(s)",e[0]);let x=[];for(let t of T.parseArgList(e,1))(t.length!==1||t[0].token!=="ident")&&this.fail(`Expected identifier: ${T.name(t[0])}`,t[0]),x.push(T.str(t[0]));return x}parseOptionalIdentifier(e){let x=e[1];if(!x)return;let t=T.expectIdentifier(x);return T.expectEol(e[2]),t}parseRequiredIdentifier(e){let x=T.expectIdentifier(e[1]);return T.expectEol(e[2]),x}parseMoveArgs(e){let x=T.parseArgList(e,1);x.length!==2&&this.fail("Expected constant number, then identifier");let t=this.evaluate(k0.parseOnly(x[0]));t==null&&this.fail("Expected a constant number");let s=this.resolve(k0.parseOnly(x[1]));if(s.op==="num"&&s.meta?.chunk!=null)return[t,s];this.fail("Expected a constant offset",x[1][0])}fail(e,x){throw x?.source?new Error(e+T.at(x)):!this._source&&this._chunk?.name?new Error(e+`
  in ${this._chunk.name}`):new Error(e+T.at({source:this._source}))}writeNumber(e,x,t){let s=x<<3;if(t!=null&&(t<-1<<s||t>=1<<s)){let a=["byte","word","farword","dword"][x-1];this.fail(`Not a ${a}: $${t.toString(16)}`)}for(let a=0;a<x;a++)e.push(t!=null?t&255:255),t!=null&&(t>>=8)}};function Bo(r,e){for(let x=0;x<e.length;x++)r.push(e.charCodeAt(x))}function Po(r){return r==="*"?{type:"pc"}:/^:\++$/.test(r)?{type:"anon",num:r.length-1}:/^:\+\d+$/.test(r)?{type:"anon",num:parseInt(r.substring(2))}:/^:-+$/.test(r)?{type:"anon",num:1-r.length}:/^:-\d+$/.test(r)?{type:"anon",num:-parseInt(r.substring(2))}:/^:>*rts$/.test(r)?{type:"rts",num:Math.max(r.length-4,1)}:/^:<+rts$/.test(r)?{type:"rts",num:4-r.length}:/^\++$/.test(r)?{type:"rel",num:r.length}:/^-+$/.test(r)?{type:"rel",num:-r.length}:{type:"none"}}var _o=!1,L6=class{constructor(e){this.overloads=e}canOverload(){return this.overloads[this.overloads.length-1].canOverload()}append(e){if(!this.canOverload()){let x=this.overloads[this.overloads.length-1].definition,s=(x?T.at(x):"").replace(/at/,"previously defined at"),a=e.overloads[0].definition,n=a?T.nameAt(a):"";throw new Error(`Non-overloadable: ${n}${s}`)}this.overloads.push(...e.overloads)}expand(e,x){let t=[];for(let s of this.overloads){let a=s.expand(e,x);if(Array.isArray(a))return a;t.push(a)}_o&&console.error(t.join(`
`))}static from(e){if(!T.eq(e[0],T.DEFINE))throw new Error("invalid");if(e[1]?.token!=="ident")throw new Error("invalid");let x=e[2],t;if(!x)t=new at([],[],e[1]);else if(x.token==="grp")t=new at(x.inner,e.slice(3),e[1]);else if(x.token==="lp"){let s=T.findBalanced(e,2);if(s<0)throw new Error(`Expected close paren ${T.nameAt(e[2])}`);t=new ts(T.identsFromCList(e.slice(3,s)),e.slice(s+1),e[1])}else t=new at([],e.slice(2),e[1]);return new L6([t])}};function Ya(r,e,x,t,s){let a=[],n=[],i=a;for(let o of s){if(o.token==="ident"){let c=t.get(o.str);if(c){i.push(...c);continue}}else if(T.eq(o,T.DOT_EOL)){n.push(i=[]);continue}let d=o.source&&r[0].source?{...o.source,parent:r[0].source}:o.source||r[0].source;i.push(d?{...o,source:d}:o)}return n=n.filter(o=>o.length),n.length&&x<r.length?"cannot expand .eol without consuming to end of line":(r.splice(e,x-e,...a),n)}var ts=class{constructor(e,x,t){this.params=e;this.production=x;this.definition=t}expand(e,x){let t=x+1,s=this.params.length?e.length:x,a=s,n=new Map;if(x<e.length&&T.eq(T.LP,e[t])){if(a=T.findBalanced(e,t),a<0)return"missing close paren for enclosed C-style expansion";s=a+1,t++}let i=T.parseArgList(e,t,a);if(i.length>this.params.length)return"too many args";for(t=0;t<this.params.length;t++){let o=i[t]||[],d=o[0];o.length===1&&d.token==="grp"&&(o=d.inner),n.set(this.params[t],o)}return Ya(e,x,s,n,this.production)}canOverload(){return Boolean(this.params.length)}},at=class{constructor(e,x,t){this.pattern=e;this.production=x;this.definition=t}expand(e,x){let t=x+1,s=new Map;for(let a=0;a<this.pattern.length;a++){let n=this.pattern[a];if(n.token==="ident"){let i=this.pattern[a+1];if(!i||i?.token==="ident"){let o=e[t++];if(!o)return`missing undelimited argument ${T.name(n)}`;s.set(n.str,o.token==="grp"?o.inner:[o])}else{let o=T.eq(i,T.DOT_EOL)?e.length:T.find(e,i,t);if(o<0)return`could not find delimiter ${T.name(i)}`;s.set(n.str,e.slice(t,o)),t=o}}else if(T.eq(n,T.DOT_EOL)){if(t<e.length)return"could not match .eol"}else if(!T.eq(e[t++],n))return`could not match: ${T.name(n)}`}return Ya(e,x,t,s,this.production)}canOverload(){return Boolean(this.pattern.length)}};var A6=class{constructor(e,x){this.params=e;this.production=x}static from(e,x){if(!T.eq(e[0],T.MACRO))throw new Error("invalid");if(e[1]?.token!=="ident")throw new Error("invalid");let t=T.identsFromCList(e.slice(2)),s=[],a;for(;a=x.next();){if(T.eq(a[0],T.ENDMACRO))return new A6(t,s);if(T.eq(a[0],T.ENDMAC))return new A6(t,s);s.push(a)}throw new Error(`EOF looking for .endmacro: ${T.nameAt(e[1])}`)}expand(e,x){let t=1,s=new Map,a=[];for(let i of this.params){let o=T.findComma(e,t),d=e.slice(t,o);t=o+1,d.length===1&&d[0].token==="grp"&&(d=d[0].inner),s.set(i,d)}if(t<e.length)throw new Error(`Too many macro parameters: ${T.nameAt(e[t])}`);let n=new Map;for(let i of this.production){let o=function(d){let c=[];for(let f of d){if(f.token==="ident"){let h=s.get(f.str);if(h){c.push(...h);continue}let b=n.get(f.str);if(b){c.push({token:"ident",str:b});continue}}else if(f.token==="grp"){c.push({token:"grp",inner:o(f.inner)});continue}let l=f.source&&e[0].source?{...f.source,parent:e[0].source}:f.source||e[0].source;c.push(l?{...f,source:l}:f)}return c};if(T.eq(i[0],T.LOCAL))for(let d of T.identsFromCList(i.slice(1)))n.set(d,`${d}@${x.next()}`);a.push(o(i))}return a}};var No=100,Qa=new WeakMap;function Fo(r){let e=Qa.get(r);return e||Qa.set(r,e=(x=>({next:()=>x++}))(0)),e}var Me=class extends Ee.Abstract{constructor(x,t,s){super();this.stream=x;this.env=t;this.repeats=[];this.runDirectives={".define":x=>this.parseDefine(x),".undefine":x=>this.parseUndefine(x),".else":([x])=>rt(".if",x),".elseif":([x])=>rt(".if",x),".endif":([x])=>rt(".if",x),".endmac":([x])=>rt(".macro",x),".endmacro":([x])=>rt(".macro",x),".endrep":x=>this.parseEndRepeat(x),".endrepeat":x=>this.parseEndRepeat(x),".exitmacro":([,x])=>{Do(x),this.stream.exit()},".if":([x,...t])=>this.parseIf(!!this.evaluateConst(ss(t,x))),".ifdef":([x,...t])=>this.parseIf(this.macros.has(B6(t,x))),".ifndef":([x,...t])=>this.parseIf(!this.macros.has(B6(t,x))),".ifblank":([,...x])=>this.parseIf(!x.length),".ifnblank":([,...x])=>this.parseIf(!!x.length),".ifref":([x,...t])=>this.parseIf(this.env.referencedSymbol(B6(t,x))),".ifnref":([x,...t])=>this.parseIf(!this.env.referencedSymbol(B6(t,x))),".ifsym":([x,...t])=>this.parseIf(this.env.definedSymbol(B6(t,x))),".ifnsym":([x,...t])=>this.parseIf(!this.env.definedSymbol(B6(t,x))),".ifconst":([x,...t])=>this.parseIf(this.env.constantSymbol(B6(t,x))),".ifnconst":([x,...t])=>this.parseIf(!this.env.constantSymbol(B6(t,x))),".macro":x=>this.parseMacro(x),".repeat":x=>this.parseRepeat(x)};this.macros=s?s.macros:new Map}*pump(){let x=this.readLine();if(x==null)return void(yield x);for(;x.length;){let t=x[0];switch(t.token){case"ident":if(T.eq(x[1],T.COLON)){yield x.splice(0,2);break}this.tryExpandMacro(x)||(yield x);return;case"cs":this.tryRunDirective(x)||(yield x);return;case"op":if(/^[-+]+$/.test(t.str)){let s=[t],a=x[1];a&&T.eq(a,T.COLON)?(s.push(a),x.splice(0,2)):(s.push({token:"op",str:":"}),x.splice(0,1)),yield s;break}else if(t.str===":"){yield x.splice(0,1);break}default:throw new Error(`Unexpected: ${T.nameAt(x[0])}`)}}}readLine(){let x=this.stream.next();return x==null?x:this.expandLine(x)}expandLine(x,t=0){let s=x[0],a=0,n=0;for(;t<x.length;){if(t>n)n=t,a=0;else if(a++>No)throw new Error(`Maximum expansion depth reached: ${x.map(T.name).join(" ")}${T.at(s)}`);t=this.expandToken(x,t)}return x}expandToken(x,t){let s=x[t];if(s.token==="ident"){let a=this.macros.get(s.str);if(a instanceof L6){let n=a.expand(x,t);if(n)return n.length&&this.stream.unshift(...n),t}}else if(s.token==="cs")return this.expandDirective(s.str,x,t);return t+1}tryExpandMacro(x){let[t]=x;if(t.token!=="ident")throw new Error("impossible");let s=this.macros.get(t.str);if(!(s instanceof A6))return!1;let a=s.expand(x,Fo(this.env));return this.stream.enter(),this.stream.unshift(...a),!0}expandDirective(x,t,s){switch(x){case".define":case".ifdef":case".ifndef":case".undefine":return this.skipIdentifier(t,s);case".skip":return this.skip(t,s);case".noexpand":return this.noexpand(t,s);case".tcount":return this.parseArgs(t,s,1,this.tcount);case".ident":return this.parseArgs(t,s,1,this.ident);case".string":return this.parseArgs(t,s,1,this.string);case".concat":return this.parseArgs(t,s,0,this.concat);case".sprintf":return this.parseArgs(t,s,0,this.sprintf);case".cond":return this.parseArgs(t,s,0,this.cond);case".def":case".defined":return this.parseArgs(t,s,1,this.defined);case".definedsymbol":return this.parseArgs(t,s,1,this.definedSymbol);case".constantsymbol":return this.parseArgs(t,s,1,this.constantSymbol);case".referencedsymbol":return this.parseArgs(t,s,1,this.referencedSymbol)}return s+1}skip(x,t){x.splice(t,1);let s=x[t];return s?.token==="grp"?this.expandToken(s.inner,0):this.expandToken(x,t+1),t}noexpand(x,t){let s=x[t+1];return s.token==="grp"?(x.splice(t,2,...s.inner),t+=s.inner.length-1):x.splice(t,1),t+1}parseArgs(x,t,s,a){let n=x[t];T.expect(T.LP,x[t+1],n);let i=T.findBalanced(x,t+1),o=T.parseArgList(x,t+2,i).map(c=>(c.length===1&&c[0].token==="grp"&&(c=c[0].inner),this.expandLine(c)));if(s&&o.length!==s)throw new Error(`Expected ${s} parameters: ${T.nameAt(n)}`);let d=a.call(this,n,...o);return x.splice(t,i+1-t,...d),t}tcount(x,t){return[{token:"num",num:T.count(t),source:x.source}]}ident(x,t){let s=T.expectString(t[0],x);return T.expectEol(t[1],"a single token"),[{token:"ident",str:s,source:t[0].source}]}string(x,t){let s=T.expectIdentifier(t[0],x);return T.expectEol(t[1],"a single token"),[{token:"str",str:s,source:t[0].source}]}concat(x,...t){return[{token:"str",str:t.map(a=>{let n=T.expectString(a[0]);return T.expectEol(a[1],"a single string"),n}).join(""),source:x.source}]}sprintf(x,t,...s){let a=T.expectString(t[0],x);T.expectEol(t[1],"a single format string");let[]=[a];throw new Error("unimplemented")}cond(x,...t){throw new Error("unimplemented")}defined(x,t){let s=T.expectIdentifier(t[0],x);return T.expectEol(t[1],"a single identifier"),[{token:"num",num:this.macros.has(s)?1:0}]}definedSymbol(x,t){let s=T.expectIdentifier(t[0],x);return T.expectEol(t[1],"a single identifier"),[{token:"num",num:this.env.definedSymbol(s)?1:0}]}constantSymbol(x,t){let s=T.expectIdentifier(t[0],x);return T.expectEol(t[1],"a single identifier"),[{token:"num",num:this.env.constantSymbol(s)?1:0}]}referencedSymbol(x,t){let s=T.expectIdentifier(t[0],x);return T.expectEol(t[1],"a single identifier"),[{token:"num",num:this.env.referencedSymbol(s)?1:0}]}skipIdentifier(x,t){return x[t+1]?.token==="ident"?t+2:t+1}tryRunDirective(x){let t=x[0];if(t.token!=="cs")throw new Error("impossible");let s=this.runDirectives[t.str];return s?(s(x),!0):!1}evaluateConst(x){if(x=k0.traversePost(x,k0.evaluate),x.op==="num"&&!x.meta?.rel)return x.num;let t=T.at(x);throw new Error(`Expected a constant${t}`)}parseDefine(x){let t=T.expectIdentifier(x[1],x[0]),s=L6.from(x),a=this.macros.get(t);if(a instanceof L6)a.append(s);else{if(a)throw new Error(`Already defined: ${t}`);this.macros.set(t,s)}}parseUndefine(x){let[t,s,a]=x,n=T.expectIdentifier(s,t);if(T.expectEol(a),!this.macros.has(n))throw new Error(`Not defined: ${T.nameAt(s)}`);this.macros.delete(n)}parseMacro(x){let t=T.expectIdentifier(x[1],x[0]),s=A6.from(x,this.stream);if(this.macros.get(t))throw new Error(`Already defined: ${t}`);this.macros.set(t,s)}parseRepeat(x){let[t,s]=k0.parse(x,1),a=x[1]||x[0];if(!t)throw new Error(`Expected expression: ${T.nameAt(a)}`);let n=this.evaluateConst(t);if(n==null)throw new Error(`Expected a constant${T.at(t)}`);let i;if(s<x.length){if(!T.eq(x[s],T.COMMA))throw new Error(`Expected comma: ${T.nameAt(x[s])}`);i=T.expectIdentifier(x[s+1]),T.expectEol(x[s+2])}let o=[],d=1;for(;d>0;)x=this.stream.next()??Go(".repeat with no .endrep"),T.eq(x[0],T.REPEAT)&&d++,T.eq(x[0],T.ENDREPEAT)&&d--,T.eq(x[0],T.ENDREP)&&d--,o.push(x);this.repeats.push([o,n,-1,i]),this.parseEndRepeat(x)}parseEndRepeat(x){T.expectEol(x[1]);let t=this.repeats.pop();if(!t)throw new Error(`.endrep with no .repeat${T.at(x[0])}`);++t[2]>=t[1]||(this.repeats.push(t),this.stream.unshift(...t[0].map(s=>s.map(a=>{if(a.token!=="ident"||a.str!==t[3])return a;let n={token:"num",num:t[2]};return a.source&&(n.source=a.source),n}))))}parseIf(x){let t=1,s=!1,a=[];for(;t>0;){let n=this.stream.next();if(!n)throw new Error("EOF looking for .endif");let i=n[0];if(T.eq(i,T.ENDIF)){if(t--,!t)break}else if(i.token==="cs"&&i.str.startsWith(".if"))t++;else if(t===1&&!s){if(x&&(T.eq(i,T.ELSE)||T.eq(i,T.ELSEIF))){x=!1,s=!0;continue}else if(T.eq(i,T.ELSEIF)){x=!!this.evaluateConst(ss(n.slice(1),i));continue}else if(T.eq(i,T.ELSE)){x=!0;continue}}x&&a.push(n)}this.stream.unshift(...a)}};function B6(r,e){let x=ss(r,e);return k0.identifier(x)}function ss(r,e){if(!r.length)throw e?new Error(`Expected expression: ${T.nameAt(e)}`):new Error("Expected expression");return k0.parseOnly(r)}function Do(r){if(r)throw new Error(`garbage at end of line: ${T.nameAt(r)}`)}function rt(r,e){throw new Error(`${T.name(e)} with no ${r}${T.at(e)}`)}function Go(r){throw new Error(r)}var $o=100,Ce=class{constructor(){this.stack=[]}next(){for(;this.stack.length;){let[e,x]=this.stack[this.stack.length-1];if(x.length)return x.pop();let t=e?.next();if(t)return t;this.stack.pop()}}unshift(...e){if(!this.stack.length)throw new Error("Cannot unshift after EOF");let x=this.stack[this.stack.length-1][1];for(let t=e.length-1;t>=0;t--)x.push(e[t])}enter(e){let x=[void 0,[]];if(e&&(x[0]=e),this.stack.push(x),this.stack.length>$o)throw new Error("Stack overflow")}exit(){this.stack.pop()}};function Tt(r,e){if(!r)return-1;let x=e(0),t=e(r-1);if(x<0)return-1;if(x===0)return 0;if(t>0)return~r;if(t===0)return r-1;let s=0,a=r-1;for(;a-s>1;){let n=s+a>>1,i=e(n);if(i>0)s=n;else if(i<0)a=n;else return n}return~a}function rs(r,e,x){let t=e(x),s=Tt(r.length,a=>t<e(r[a])?-1:1);r.splice(~s,0,x)}var as=class{constructor(){this._chunks=[];this._length=0}get length(){return this._length}_find(e){return Tt(this._chunks.length,x=>{let[t,s]=this._chunks[x];return e<t?-1:e>=t+s.length?1:0})}apply(e){if(e.length<this._length)throw new Error("Target too small.");for(let[x,t]of this._chunks)for(let s=0;s<t.length;s++)e[x+s]=t[s]}chunks(){return this._chunks}get(e){let x=this._find(e);if(x<0)return;let[t,s]=this._chunks[x];return s[e-t]}set(e,...x){this.setInternal(e,x)}setInternal(e,x){if(!x.length)return;let t=e+x.length;this._length=Math.max(this._length,t);let s=this._find(e),a=this._find(t);if(s>=0&&s===a){let[d,c]=this._chunks[s];for(let f=0;f<x.length;f++)c[e+f-d]=x[f];return}let n=this._chunks[~s-1];if(n&&n[0]+n[1].length===e&&(s=~s-1),this._chunks[~a]?.[0]===t&&(a=~a),s>=0){let[d,c]=this._chunks[s];a!==s||!Array.isArray(x)?x=Oo(c,e-d,x):x.unshift(...c.slice(0,e-d)),e=d}if(a>=0){let[d,c]=this._chunks[a];x=qo(x,t-d,c)}let i=s<0?~s:s,o=a<0?~a:a;a>=0&&o++,Array.isArray(x)||(x=Array.from(x)),this._chunks.splice(i,o-i,[e,x])}splice(e,x=1){let t=e+x,s=this._find(e),a=this._find(t),n=s>=0?this._chunks[s]:void 0,i=a>=0?this._chunks[a]:void 0;if(n){let f=e-n[0];f?n=[n[0],n===i?n[1].slice(0,f):Za(n[1],f)]:(n=void 0,s=~s)}i&&(i=[t,xr(i[1],t-i[0])],i[1].length||(i=void 0,a=~a));let o=[];n&&o.push(n),i&&o.push(i);let d=s<0?~s:s,c=a<0?~a:a;a>=0&&c++,this._chunks.splice(d,c-d,...o)}slice(e,x){if(x<=e)return[];let t=this._find(e);if(t<0)throw new Error(`Absent: ${e}`);let[s,a]=this._chunks[t];if(s+a.length<x)throw new Error(`Absent: ${s+a.length}`);return a.slice(e-s,x-s)}},m6=class extends as{set(e,...x){this.setInternal(e,x[0]instanceof Uint8Array?x[0]:Uint8Array.from(x))}search(e,x,t){return this.pattern(e).search(x,t)}pattern(e){if(!e.length)return{search:(o=0)=>o};let x=e.length,t=new Array(256).fill(x);for(let o=0;o<e.length;o++)t[e[o]]=x-1-o;let s=[],a=x;for(let o=x;o>0;--o){n(o)&&(a=o),s[x-o]=a-o+x;for(let d=0;d<x-1;++d){let c=i(d);s[c]=x-1-d+c}}return{search:(o=0,d=this._length)=>{if(!this._chunks.length||d<o)return-1;let c=this._find(o),f=0;for(c>=0?f=o-this._chunks[c][0]:c=~c;c<this._chunks.length;){let[l,h]=this._chunks[c++],b=Math.min(d-l,h.length);if(b<0)break;for(let u=x-1+f,S;u<b;){for(S=x-1;e[S]===h[u];--u,--S)if(S===0)return u+l;u+=Math.max(s[x-1-S],t[h[u]])}f=0}return-1}};function n(o){for(let d=o,c=0;d<x;++d,++c)if(e[d]!==e[c])return!1;return!0}function i(o){let d=0;for(let c=o,f=x-1;c>=0&&e[c]===e[f];--c,--f)++d;return d}}addOffset(e){let x=new m6;for(let[t,s]of this._chunks)x._chunks.push([t+e,s]);return x}toIpsPatch(){let e=8;for(let[,s]of this._chunks)e+=5+s.length;let x=new Uint8Array(e),t=5;x[0]=80,x[1]=65,x[2]=84,x[3]=67,x[4]=72;for(let[s,a]of this._chunks){if(a.length>65535)throw new Error("Oops!");x[t++]=s>>>16,x[t++]=s>>>8&255,x[t++]=s&255,x[t++]=a.length>>>8,x[t++]=a.length&255,x.subarray(t,t+a.length).set(a),t+=a.length}return x[t]=69,x[t+1]=79,x[t+2]=70,x}toIpsHexString(){let e=[...this.toIpsPatch()],x=[];for(let t=0;t<e.length;t+=16)x.push([t.toString(16).padStart(8,"0")+":",...e.slice(t,t+16).map(s=>s.toString(16).padStart(2,"0"))].join(" "));return x.join(`
`)}};function Oo(r,e,x){let t=r.length;return x.length<t||!Array.isArray(x)?(r.splice(e,t-e,...x),r):(x.unshift(...Za(r,e)),x)}function qo(r,e,x){let t=x.length;return r.length<t||!Array.isArray(r)?(x.splice(0,e,...r),x):(r.push(...xr(x,e)),r)}function Za(r,e){let x=r.length;return e<<1<x?r.slice(0,e):(r.splice(e,x-e),r)}function xr(r,e){let x=r.length;return e<<1<x?(r.splice(0,e),r):r.slice(e)}var vt=class{constructor(){this.data=[]}[Symbol.iterator](){return this.data[Symbol.iterator]()}_find(e){return Tt(this.data.length,x=>{let t=this.data[x];return e<t[0]?-1:e>=t[1]?1:0})}has(e){return this._find(e)>=0}add(e,x){let t=this._find(e),s=this._find(x);this.data[~t-1]?.[1]===e&&(t=~t-1),this.data[~s]?.[0]===x&&(s=~s);let a=[e,x];t>=0&&(a[0]=this.data[t][0]),s>=0&&(a[1]=this.data[s][1]);let n=t<0?~t:t,i=s<0?~s:s;s>=0&&i++,this.data.splice(n,i-n,a)}delete(e,x){let t=this._find(e),s=this._find(x),a=t>=0?this.data[t]:void 0,n=s>=0?this.data[s]:void 0;a&&(a=[a[0],Math.min(a[1],e)],a[0]===a[1]&&(a=void 0,t=~t)),n&&(n=[Math.max(n[0],x),n[1]],n[0]===n[1]&&(n=void 0,s=~s));let i=[];a&&i.push(a),n&&i.push(n);let o=t<0?~t:t,d=s<0?~s:s;s>=0&&d++,this.data.splice(o,d-o,...i)}tail(e){let x=this._find(e);x<0&&(x=~x);let t=this.data;return{[Symbol.iterator](){return this},next(){if(x>=t.length)return{value:void 0,done:!0};let s=t[x++];return{value:[Math.max(e,s[0]),s[1]],done:!1}}}}};var p6=class{constructor(){this._link=new ds}static assemble(e){let x=new b6(e,"contents.s",{lineContinuations:!0}),t=new I6(h6.P02),s=new Ce;s.enter(x);let a=new Me(s,t);t.tokens(a);let n=new p6;n.read(t.module());let i=n.link(),o=new Uint8Array(i.length);return i.apply(o),o}static link(...e){let x=new p6;for(let t of e)x.read(t);return x.link()}read(e){return this._link.readFile(e),this}base(e,x=0){return this._link.base(e,x),this}link(){return this._link.link()}report(e=!1){console.log(this._link.report(e))}exports(){return this._exports?this._exports:this._exports=this._link.buildExports()}watch(...e){this._link.watches.push(...e)}};function nt(r){throw new Error(r)}var is=class{constructor(e){let x=this.name=e.name;this.bank=e.bank??0,this.addressing=e.addressing??2,this.size=e.size??nt(`Size must be specified: ${x}`),this.offset=e.offset??nt(`OFfset must be specified: ${x}`),this.memory=e.memory??nt(`OFfset must be specified: ${x}`)}get delta(){return this.offset-this.memory}},os=class{constructor(e,x,t,s,a){this.linker=e;this.index=x;this.subs=new Set;this.selfSubs=new Set;this.deps=new Set;this.imports=new Set;this.follow=new Map;this.overlaps=!1;this.name=t.name,this.size=t.data.length,this.segments=t.segments,this._data=t.data;for(let n of t.subs||[])this.subs.add(Wo(n,s,a));this.asserts=(t.asserts||[]).map(n=>Et(n,s,a)),t.org&&(this._org=t.org)}get org(){return this._org}get offset(){return this._offset}get segment(){return this._segment}get data(){return this._data??nt("no data")}initialPlacement(){if(this._org==null)return;let e=[];for(let t of this.segments){let s=this.linker.segments.get(t);if(!s)throw new Error(`Unknown segment: ${t}`);this._org>=s.memory&&this._org<s.memory+s.size&&e.push(s)}if(e.length!==1)throw new Error(`Non-unique segment for ${this.name}:
Segments: ${this.segments.join(",")}, org: $${this.org?.toString(16)}, offset: $${this.offset?.toString(16)}
Eligible: [${e}]`);let x=e[0];if(this._org>=x.memory+x.size)throw new Error(`Chunk does not fit in segment ${x.name}`);this.place(this._org,x)}place(e,x){this._org=e,this._segment=x;let t=this._offset=e+x.delta;for(let n of this.linker.watches)if(n>=t&&n<t+this.size)debugger;rs(this.linker.placed,n=>n[0],[t,this]);let s=this.linker.data,a=this._data??nt("No data");if(this._data=void 0,this.subs.size){s.splice(t,a.length);let n=new m6;n.set(0,a);for(let i of this.subs)n.splice(i.offset,i.size);for(let[i,o]of n.chunks())s.set(t+i,...o)}else s.set(t,a);for(let[n,i]of this.follow)i.resolveSub(n,!1);this.linker.free.delete(this.offset,this.offset+this.size)}resolveSubs(e=!1){for(let x of this.selfSubs)this.resolveSub(x,e);for(let x of this.subs)this.resolveSub(x,e)}addDep(e,x){x===this.index&&this.subs.delete(e)&&this.selfSubs.add(e),this.linker.chunks[x].follow.set(e,this),this.deps.add(x)}resolveSub(e,x){if(!this.subs.has(e)&&!this.selfSubs.has(e))return;e.expr=k0.traverse(e.expr,(s,a,n)=>x&&n?.op==="^"&&n.args.length===1&&s.meta?(s.meta.bank==null&&this.addDep(e,s.meta.chunk),s):(s=this.linker.resolveLink(k0.evaluate(a(s))),x&&s.meta?.rel&&this.addDep(e,s.meta.chunk),s));let t=!1;if(e.expr.op==="num"&&!e.expr.meta?.rel)this.writeValue(e.offset,e.expr.num,e.size),t=!0;else if(e.expr.op===".move"){if(e.expr.args.length!==1)throw new Error("bad .move");let s=e.expr.args[0];if(s.op==="num"&&s.meta?.offset!=null){let a=s.meta.offset-(s.meta.rel?0:s.meta.org),n=s.num+a,i=this.linker.orig.slice(n,n+e.size);this.writeBytes(e.offset,Uint8Array.from(i)),t=!0}}t&&(this.subs.delete(e)||this.selfSubs.delete(e),this.subs.size||this.linker.unresolvedChunks.delete(this)&&this.linker.insertResolved(this))}writeBytes(e,x){if(this._data)this._data.subarray(e,e+x.length).set(x);else if(this._offset!=null)this.linker.data.set(this._offset+e,x);else throw new Error("Impossible")}writeValue(e,x,t){let s=t<<3;if(x!=null&&(x<-1<<s||x>=1<<s)){let n=["byte","word","farword","dword"][t-1];throw new Error(`Not a ${n}: $${x.toString(16)} at $${(this.org+e).toString(16)}`)}let a=new Uint8Array(t);for(let n=0;n<t;n++)a[n]=x&255,x>>=8;this.writeBytes(e,a)}};function Wo(r,e,x){return r={...r},r.expr=Et(r.expr,e,x),r}function Et(r,e,x){return r={...r},r.meta&&(r.meta={...r.meta}),r.args&&(r.args=r.args.map(t=>Et(t,e,x))),r.meta?.chunk!=null&&(r.meta.chunk+=e),r.op==="sym"&&r.num!=null&&(r.num+=x),r}function zo(r,e,x){return r={...r},r.expr&&(r.expr=Et(r.expr,e,x)),r}var ds=class{constructor(){this.data=new m6;this.orig=new m6;this.exports=new Map;this.chunks=[];this.symbols=[];this.free=new vt;this.rawSegments=new Map;this.segments=new Map;this.resolvedChunks=[];this.unresolvedChunks=new Set;this.watches=[];this.placed=[];this.initialReport=""}insertResolved(e){rs(this.resolvedChunks,x=>x.size,e)}base(e,x=0){this.data.set(x,e),this.orig.set(x,e)}readFile(e){let x=this.chunks.length,t=this.symbols.length;for(let s of e.segments||[])this.addRawSegment(s);for(let s of e.chunks||[]){let a=new os(this,this.chunks.length,s,x,t);this.chunks.push(a)}for(let s of e.symbols||[])this.symbols.push(zo(s,x,t))}resolveLink(e){if(e.op===".orig"&&e.args?.length===1){let x=e.args[0],t=x.meta?.offset;if(t!=null){let s=this.orig.get(t+x.num);if(s!=null)return{op:"num",num:s}}}else if(e.op==="num"&&e.meta?.chunk!=null){let x=e.meta,t=this.chunks[x.chunk];if(t.org!==x.org||t.segment?.bank!==x.bank||t.offset!==x.offset){let s={org:t.org,offset:t.offset,bank:t.segment?.bank};e=k0.evaluate({...e,meta:{...x,...s}})}}return e}resolveExpr(e){if(e=k0.traverse(e,(t,s)=>this.resolveLink(k0.evaluate(s(t)))),e.op==="num"&&!e.meta?.rel)return e.num;let x=T.at(e);throw new Error(`Unable to fully resolve expr${x}`)}link(){for(let[s,a]of this.rawSegments){let n=a[0];for(let i=1;i<a.length;i++)n=Re.merge(n,a[i]);this.segments.set(s,new is(n))}for(let[s,a]of this.rawSegments){let n=this.segments.get(s);for(let i of a){let o=i.free;for(let[d,c]of o||[])this.free.add(d+n.delta,c+n.delta),this.data.splice(d+n.delta,c-d)}}for(let s of this.chunks)s.initialPlacement();ns&&(this.initialReport=`Initial:
${this.report(!0)}`);for(let s=0;s<this.symbols.length;s++){let a=this.symbols[s];if(!a.expr)throw new Error(`Symbol ${s} never resolved`);a.export!=null&&this.exports.set(a.export,s)}for(let s of this.symbols)s.expr=this.resolveSymbols(s.expr);for(let s of this.chunks){for(let a of[...s.subs,...s.selfSubs])a.expr=this.resolveSymbols(a.expr);for(let a=0;a<s.asserts.length;a++)s.asserts[a]=this.resolveSymbols(s.asserts[a])}for(let s of this.chunks)s.resolveSubs(!0);let e=[...this.chunks];e.sort((s,a)=>a.size-s.size);for(let s of e)s.resolveSubs(),s.subs.size?this.unresolvedChunks.add(s):this.insertResolved(s);let x=this.resolvedChunks.length+2*this.unresolvedChunks.size;for(;x;){let s=this.resolvedChunks.pop();if(s)this.placeChunk(s);else{let[n]=this.unresolvedChunks;for(let i of n.deps){let o=this.chunks[i];o.org==null&&this.placeChunk(o)}}let a=this.resolvedChunks.length+2*this.unresolvedChunks.size;if(a===x)throw console.error(this.resolvedChunks,this.unresolvedChunks),new Error("Not making progress");x=a}let t=new m6;for(let s of this.chunks){for(let a of s.asserts){if(this.resolveExpr(a))continue;let i=T.at(a);throw new Error(`Assertion failed${i}`)}s.overlaps||t.set(s.offset,...this.data.slice(s.offset,s.offset+s.size))}return ns&&console.log(this.report(!0)),t}placeChunk(e){if(e.org!=null)return;let x=e.size;if(!e.subs.size&&!e.selfSubs.size){let s=this.data.pattern(e.data);for(let a of e.segments){let n=this.segments.get(a),i=n.offset,o=i+n.size,d=s.search(i,o);if(!(d<0)){e.place(d-n.delta,n),e.overlaps=!0;return}}}for(let s of e.segments){let a=this.segments.get(s),n=a.offset,i=n+a.size,o,d=1/0;for(let[c,f]of this.free.tail(n)){if(c>=i)break;let l=Math.min(f,i)-c;l<x||l<d&&(o=c,d=l)}if(o!=null){e.place(o-a.delta,a);return}}ns&&console.log(`Initial:
${this.initialReport}`),console.log(`After filling:
${this.report(!0)}`);let t=e.name?`${e.name} `:"";throw console.log(this.segments.get(e.segments[0])),new Error(`Could not find space for ${x}-byte chunk ${t}in ${e.segments.join(", ")}`)}resolveSymbols(e){return k0.traverse(e,(x,t)=>{for(;x.op==="im"||x.op==="sym";)if(x.op==="im"){let s=x.sym,a=this.exports.get(s);if(a==null){let n=T.at(e);throw new Error(`Symbol never exported ${s}${n}`)}x=this.symbols[a].expr}else{if(x.num==null)throw new Error("Symbol not global");x=this.symbols[x.num].expr}return k0.evaluate(t(x))})}addRawSegment(e){let x=this.rawSegments.get(e.name);x||this.rawSegments.set(e.name,x=[]),x.push(e)}buildExports(){let e=new Map;for(let x of this.symbols){if(!x.export)continue;let t=k0.traverse(x.expr,(n,i)=>this.resolveLink(k0.evaluate(i(n))));if(t.op!=="num")throw new Error(`never resolved: ${x.export}`);let s=t.num,a={value:s};t.meta?.offset!=null&&t.meta.org!=null&&(a.offset=t.meta.offset+s-t.meta.org),t.meta?.bank!=null&&(a.bank=t.meta.bank),e.set(x.export,a)}return e}report(e=!1){let x="";for(let[t,s]of this.free)x+=`Free: ${t.toString(16)}..${s.toString(16)}: ${s-t} bytes
`;if(e)for(let[t,s]of this.placed){let a=s.name??`Chunk ${s.index}`,n=s.offset+s.size;x+=`${t.toString(16).padStart(5,"0")} .. ${n.toString(16).padStart(5,"0")}: ${a} (${n-t} bytes)
`}return x}},ns=!1;function g6(r){return r.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace(/Of/g,"of").replace(/_/g," - ")}function tr(r){return g6(r).replace(/^./,e=>e.toUpperCase())}function O(r,e=x=>x){return new Array(r).fill(0).map((x,t)=>e(t))}function Ho(r,e,x){return r.slice(e,e+x)}function o0(r,e,x){return Array.from(r.slice(e,e+x))}function ls(r){return r<128?r:r-256}function hs(r){return r<0?r+256:r}function kt(r,e,x,t,s=1/0,a){a||(a=i=>i);let n=[];for(;e+x<=s&&r[e]!==t;)n.push(a(r.slice(e,e+x))),e+=x;return n}function sr(r,e,x=0){return(r[e]|r[e+1]<<8)+x}function ar(r,e,x){return x||(x=t=>t),O(Math.max(0,Math.floor(e.length/r)),t=>x(Ho(e,t*r,r)))}function rr(r){return(r*2050&139536|r*32800&558144)*65793>>>16&255}function A(r){return r!=null?r.toString(16).padStart(2,"0"):String(r)}function us(r){return r.toString(16).padStart(3,"0")}function xe(r){let e=[];for(let x of r)for(let t of x)e.push(t);return e}function P6(r,e){return r[e]<<8|r[e+1]}function _0(r,e){return r[e+1]<<8|r[e]}function Rt(r,e,x=0){let t=[];for(;r[e]!=x;)t.push(r[e++]);return String.fromCharCode(...t)}function nr(r,e){let x=r[e];return String.fromCharCode(...r.slice(e+1,e+1+x))}function ir(r,e,x){r[e]=x&255,r[e+1]=x>>>8}var Z6=class{constructor(e,x,t=!1){this.last=e;this.clear=x;this.nonEmpty=t}read(e,x=0){let t=[];for(;;){let s=e[x++],a=e[x++],n=(s&3)<<8|a,i=s&this.clear?~n:n;if(i!==-1&&t.push(i),s&this.last)return t}}bytes(e){e=e.filter(t=>t!==-1),this.nonEmpty&&!e.length&&(e=[-1]);let x=[];for(let t=0;t<e.length;t++){let s=e[t];s<0&&(s=this.clear<<8|~s),t===e.length-1&&(s|=this.last<<8),x.push(s>>>8),x.push(s&255)}return x}write(e,x,t=0){let s=this.bytes(x);for(let a=0;a<s.length;a++)e[a+t]=s[a]}},bs=new Z6(64,128),ms=new Z6(64,128,!0),ps=new Z6(64,128,!0),gs=new Z6(128,32,!0),ys=new Z6(128,32);function or(){let r=Symbol();function e(...x){return{tag:r,args:x}}return e.commit=(x,t)=>{for(let s of Object.getOwnPropertyNames(x)){let a=x[s];a.tag===r&&(x[s]=t(s,...a.args))}},e}var fs=Symbol("PROP_TAG"),cs=new WeakMap;function er(r){let e=cs.get(r);if(!e){e=class extends Hx{},Object.defineProperties(e,{name:{value:r.name}}),Object.assign(e,r),Reflect.setPrototypeOf(e.prototype,r.prototype);let x=new r,t={};for(let[s,a]of Object.entries(x))a&&a[fs]&&(t[s]=a);Object.defineProperties(e.prototype,t),cs.set(r,e),cs.set(e,e)}return e}var Hx=class{constructor(e){this.data=e}static of(e){return Object.assign(new(er(this))(new Array(this.size).fill(0)),e)}static from(e,x=0){let t=er(this),s=!x&&e.length===this.size?e:o0(e,x,this.size);return new t(s)}[Symbol.iterator](){return this.data[Symbol.iterator]()}hex(){return Array.from(this.data,A).join(" ")}clone(){return new this.constructor(this.data)}prop(...e){return{get(){let x=0;for(let[t,s=255,a=0]of e){let n=a<0?-a:0,i=a<0?0:a;x|=(this.data[t]&s)>>>i<<n}return x},set(x){for(let[t,s=255,a=0]of e){let n=a<0?-a:0,i=a<0?0:a,o=x>>>n<<i&s;this.data[t]=this.data[t]&~s|o}},[fs]:!0}}booleanProp(e,x){return{get(){return Boolean(this.data[e]&1<<x)},set(t){let s=1<<x;t?this.data[e]|=s:this.data[e]&=~s},[fs]:!0}}},ws=(r,e)=>{let x={get(t,s){let a=t[s];return s==="subarray"?(n,i)=>{let o=t.subarray(n,i);return n<=e&&e<i?ws(o,e-n):o}:s==="set"?n=>{console.log(`Setting overlapping array ${e}`);debugger;t.set(n)}:(typeof a=="function"&&(a=a.bind(t)),a)},set(t,s,a,n){if(s==e){console.log(`Writing ${e.toString(16)}`);debugger}return t[s]=a,!0}};return new Proxy(r,x)},J0=class{constructor(e,x,t){this.name=e;this.bank=x;this.org=t}get offset(){return(this.bank&31)<<13}},n0=J0;n0.$04=new J0("04",4,32768),n0.$05=new J0("05",5,40960),n0.$0a=new J0("0a",10,32768),n0.$0b=new J0("0b",11,40960),n0.$0c=new J0("0c",12,32768),n0.$0d=new J0("0d",13,40960),n0.$0e=new J0("0e",14,32768),n0.$0f=new J0("0f",15,40960),n0.$10=new J0("10",16,32768),n0.$14=new J0("14",20,32768),n0.$15=new J0("15",21,40960),n0.$16_a=new J0("16:a",22,40960),n0.$17=new J0("17",23,40960),n0.$18=new J0("18",24,32768),n0.$19=new J0("19",25,40960),n0.$1a=new J0("1a",26,32768),n0.$1b=new J0("1b",27,40960),n0.$fe=new J0("fe",30,49152),n0.$ff=new J0("ff",31,57344);var d0=class{constructor(e,x){this.seg=e;this.delta=x}static of(e,x){return new d0(e,x-e.org)}get offset(){return this.seg.offset+this.delta}get org(){return this.seg.org+this.delta}get segment(){return this.seg.name}plus(e,x){let t=this.delta+e;if(t>=8192){if(!x)throw new Error("Segment changed");if(this.seg.org&8192)throw new Error("Bad segment cross");return new d0(x,t&8191)}return new d0(this.seg,t)}minus(e){if(e.seg!==this.seg)throw new Error("Incompatible segments");return this.delta-e.delta}read(e){return e[this.offset]}readLittleEndian(e){let x=this.offset;return e[x]|e[x+1]<<8}readAddress(e,...x){let t=this.readLittleEndian(e);x.length||(x=[this.seg]);for(let s of x)if((t&57344)===(s.org&57344))return d0.of(s,t);throw new Error(`Could not find valid segment for ${A(t)}`)}loc(e,x){e.segment(this.segment),e.org(this.org,x)}};function N0(r,e,x,t){r.segment(e.name),r.org(x),r.free(t-x)}function Ux(r,e,x){r.segment(...e.map(t=>t.name)),r.reloc(x),r.label(x),r.export(x)}function Ie(r){return[...r]}var b0=class{constructor(e,x){this.rom=e;this.id=x}write(){return[]}toString(){return`${this.constructor.name} $${A(this.id)}`}},kx=class extends Array{static get[Symbol.species](){return Array}};var Mt=class extends b0{constructor(x,t){super(x,t);this.data=o0(x.prg,this.base,4)}get base(){return(this.id<<2)+171008}get slotRangeLower(){return this.data[0]}set slotRangeLower(x){this.data[0]=x}get slotRangeUpper(){return this.data[1]}set slotRangeUpper(x){this.data[1]=x}get objectId(){return this.data[2]}set objectId(x){this.data[2]=x}get count(){return this.data[3]}set count(x){this.data[3]=x}write(){let x=this.rom.assembler();return x.segment("14"),x.org(39936+(this.id<<2)),x.byte(...this.data),[x.module()]}};var Ct=class extends b0{constructor(x,t){super(x,t);this.base=_0(x.prg,this.pointer),this.data=x.prg.slice(this.base+81920,this.base+81941),this.palettes=this.data.subarray(5,13),this.patterns=this.data.subarray(13,19)}get pointer(){return 129387+2*this.id}get routine(){let x=_0(this.data,0);return x&&x+81920}set routine(x){ir(this.data,0,x?x-81920:0)}get restoreMusic(){return this.data[3]}set restoreMusic(x){this.data[3]=x}get itemDrop(){return this.data[4]}set itemDrop(x){this.data[4]=x}get restoreAnimation(){return this.data[19]}set restoreAnimation(x){this.data[19]=x}get explode(){return!!this.data[20]}set explode(x){this.data[20]=x?1:0}write(){if(!this.base)return[];let x=this.rom.assembler();return x.segment("0f"),x.org(this.base),x.byte(this.data[0],this.data[1]),x.org(this.base+4),x.byte(this.data[4]),[x.module()]}};var dr=!0;function cr(){dr=!1}function Ss(){if(dr)throw new Error("impossible")}function Nx(r){throw new Error(r)}var{$0f:_6,$1b:Uo}=n0,It=class{constructor(e){this.rom=e;this.Vampire1=new rx(this,{flag:this.rom.flags.Vampire1,kill:0,npc:this.rom.npcs.Vampire1,shuffled:!0,sword:1});this.Insect=new rx(this,{flag:this.rom.flags.GiantInsect,kill:1,npc:this.rom.npcs.Insect,sword:1});this.Kelbesque1=new rx(this,{flag:this.rom.flags.Kelbesque1,kill:2,npc:this.rom.npcs.Kelbesque1,shuffled:!0});this.Rage=new rx(this,{flag:this.rom.flags.Rage,kill:3,npc:this.rom.npcs.Rage});this.Sabera1=new rx(this,{address:222574,flag:this.rom.flags.Sabera1,kill:4,npc:this.rom.npcs.SaberaDisguisedAsMesia,shuffled:!0});this.Vampire2=new rx(this,{flag:this.rom.flags.Vampire2,kill:12,npc:this.rom.npcs.Vampire2,shuffled:!0,sword:1});this.Mado1=new rx(this,{address:514080,flag:this.rom.flags.Mado1,kill:5,shuffled:!0});this.Kelbesque2=new rx(this,{flag:this.rom.flags.Kelbesque2,kill:6,npc:this.rom.npcs.Kelbesque2,shuffled:!0});this.Sabera2=new rx(this,{flag:this.rom.flags.Sabera2,kill:7,npc:this.rom.npcs.Sabera2,shuffled:!0});this.Mado2=new rx(this,{flag:this.rom.flags.Mado2,kill:8,npc:this.rom.npcs.Mado2,shuffled:!0});this.Karmine=new rx(this,{flag:this.rom.flags.Karmine,kill:9,npc:this.rom.npcs.Karmine,shuffled:!0,sword:2});this.Draygon1=new rx(this,{flag:this.rom.flags.Draygon1,kill:10,npc:this.rom.npcs.Draygon,shuffled:!0,sword:2});this.StatueOfMoon=new rx(this,{flag:this.rom.flags.UsedBowOfMoon,npc:this.rom.npcs.StatueOfMoon});this.StatueOfSun=new rx(this,{flag:this.rom.flags.UsedBowOfSun,npc:this.rom.npcs.StatueOfSun});this.Draygon2=new rx(this,{flag:this.rom.flags.Draygon2,kill:11,npc:this.rom.npcs.Draygon});this.Dyna=new rx(this,{kill:13,object:164});this.musics=[new Kx(_6,42168,[this.Vampire1,this.Vampire2]),new Kx(_6,42640,[this.Insect]),new Kx(_6,43419,[this.Kelbesque1,this.Kelbesque2]),new Kx(_6,44209,[this.Sabera1,this.Sabera2]),new Kx(_6,44559,[this.Mado1,this.Mado2]),new Kx(_6,44931,[this.Karmine]),new Kx(_6,45447,[this.Draygon1]),new Kx(_6,45841,[this.Draygon2]),new Kx(Uo,48176,[this.Dyna])];this.all=[];for(let x in this){if(!this.hasOwnProperty(x))continue;let t=this[x];t instanceof rx&&(t.name=g6(x),this.all.push(t))}}isBossFlag(e){return(this.flags||(this.flags=(()=>{let t=new Set;for(let s of this.all)s.flag!=null&&t.add(s.flag.id);return t})())).has(e)}fromLocation(e){return this.all.find(x=>x.location===e)}fromBossKill(e){return this.all.find(x=>x.kill===e)}fromObject(e){return this.all.find(x=>x.object===e)}[Symbol.iterator](){return this.all[Symbol.iterator]()}write(){let e=this.rom.assembler();for(let x of this.musics)x.addr.loc(e),e.byte(x.bgm);return[e.module()]}},Kx=class{constructor(e,x,t){this.bosses=t;this.addr=d0.of(e,x);let s=t[0].bosses.rom;this.bgm=this.addr.read(s.prg)}},rx=class{constructor(e,{flag:x,npc:t,kill:s,shuffled:a,address:n,sword:i=3,object:o}){this.bosses=e;let{prg:d}=e.rom;if(this.flag=x,this.npc=t,this.object=n?d[n]:t?t.data[1]:o??Nx("address, npc, or object is required"),this.swordLevel=i,this.shuffled=Boolean(a),this.kill=s,s!=null){let c=81920+_0(d,129387+2*s),f=d[c+4];f!==255&&(this.drop=f),this.location=d[129373+s]}}};var Lt=class{constructor(e){this.rom=e;this.values=o0(e.prg,fr.offset,Ko)}write(){let e=this.rom.assembler();return fr.loc(e),e.word(...this.values),[e.module()]}},fr=d0.of(n0.$1a,35806),Ko=16;var jo=!1,te=Symbol(),vs={assumeFalse:!0},lr={assumeTrue:!0},B0={track:!0},Bt={},ee=class{constructor(e,x,t,s){this.flags=e;this.name=x;this.id=t;this.fixed=s.fixed||!1,this.obsolete=s.obsolete,this.logic=s.logic??B0}get c(){return this.id}get r(){return[[this.id]]}get debug(){return this.id.toString(16).padStart(3,"0")+" "+this.name}get item(){if(this.id<256||this.id>383)throw new Error(`not a slot: ${this.id}`);let e=this.flags.rom.slots[this.id&255],x=this.flags.rom.itemGets[e].itemId,t=this.flags.rom.items[x];if(!t)throw new Error("no item");return t}};function _(r){return typeof r=="number"&&(r=(e=>()=>e)(r)),{obsolete:r,[te]:!0}}function G0(r,e=Bt){return{id:r,fixed:!0,[te]:!0,logic:e}}function E(r){return G0(r,B0)}function I0(r,e=Bt){return{id:r,[te]:!0,logic:e}}function w0(r,e=Bt){return{name:r,[te]:!0,logic:e}}function Rx(r,e=Bt){return{name:r,[te]:!0,logic:e}}function nx(r){let e=hr.get(r)||1024;return hr.set(r,e+1),{id:e,[te]:!0,logic:B0}}var hr=new WeakMap,At=class{constructor(e){this.rom=e;this[0]=G0(0,vs);this[1]=G0(1);this[2]=G0(2);this[3]=G0(3);this[4]=G0(4);this[5]=G0(5);this[6]=G0(6);this[7]=G0(7);this[8]=G0(8);this[9]=G0(9);this.UsedWindmillKey=G0(10,B0);this[11]=_(256);this[12]=Rx("Leaf villager");this.LeafVillagersRescued=I0(13);this[14]=_(e=>e.trigger?.id===133?323:579);this.WokeWindmillGuard=I0(15,B0);this.TurnedInKirisaPlant=I0(16);this[17]=w0("Welcomed to Amazones");this[18]=w0("Treasure hunter dead");this[19]=_(312);this[22]=w0("Portoa queen Rage hint");this[23]=_(258);this.EnteredUndergroundChannel=I0(24,B0);this[25]=Rx("Portoa queen tired of talking");this[26]=w0("Initial talk with Portoa queen");this.MesiaRecording=I0(27,B0);this[28]=_(272);this.TalkedToFortuneTeller=I0(29,B0);this.QueenRevealed=I0(30,B0);this[31]=_(265);this.QueenNotInThroneRoom=I0(32,B0);this.ReturnedFogLamp=I0(33,B0);this[34]=w0("Sahara elder");this[35]=w0("Sahara elder daughter");this[36]=_(317);this[37]=_(310);this[38]=_(765);this.ShyronMassacre=G0(39,B0);this.ChangeWoman=G0(40);this.ChangeAkahana=G0(41);this.ChangeSoldier=G0(42);this.ChangeStom=G0(43);this[45]=w0("Shyron sages");this[46]=_(301);this.UsedBowOfTruth=G0(47);this[49]=w0("Zombie town");this[50]=_(311);this[52]=w0("Akahana in waterfall cave");this.CuredAkahana=I0(53,B0);this[54]=w0("Akahana Shyron");this[55]=_(322);this.LeafAbduction=I0(56,B0);this[57]=_(321);this.TalkedToZebuInCave=I0(58,B0);this.TalkedToZebuInShyron=I0(59,B0);this[60]=_(315);this[61]=w0("Asina in Shyron temple");this.FoundKensuInDanceHall=I0(62,B0);this[63]=_(e=>e.trigger?.id===186?580:324);this[64]=w0("Tornel in Shyron temple");this[65]=_(263);this[68]=_(263);this.RescuedChild=G0(69,B0);this.UsedInsectFlute=G0(70);this.RescuedLeafElder=I0(71);this[72]=w0("Treasure hunter embarked");this[73]=_(257);this[74]=w0("Boat owner");this[75]=Rx("Shyron sick men");this[76]=Rx("Shyron training men 1");this[77]=Rx("Shyron training men 2");this[78]=_(262);this[79]=_(299);this.GivenStatueToAkahana=I0(80);this[81]=_(326);this.TalkedToDwarfMother=I0(82,B0);this.LeadingChild=G0(83,B0);this[85]=w0("Zebu rescued");this[86]=w0("Tornel rescued");this[87]=w0("Asina rescued");this.MtSabreGuardsDespawned=I0(91,lr);this[94]=_(653);this[95]=_(515);this.TalkedToStomInSwan=I0(97,B0);this[98]=_(337);this[99]=_(327);this.CuredKensu=I0(101,B0);this[103]=_(267);this[104]=_(260);this.StonedPeopleCured=I0(106,B0);this[108]=_(284);this.CurrentlyRidingDolphin=G0(-111,B0);this.ParalyzedKensuInTavern=G0(112);this.ParalyzedKensuInDanceHall=G0(113);this.FoundKensuInTavern=I0(114,B0);this[115]=w0("Startled man in Leaf");this[117]=_(313);this[118]=w0("Kensu in Goa");this[119]=_(264);this[120]=_(268);this[121]=_(320);this[122]=_(266);this[123]=_(265);this[125]=_(319);this[126]=w0("Mt Sabre guards 1");this[127]=w0("Mt Sabre guards 2");this.AlarmFluteUsedOnce=G0(118);this.FluteOfLimeUsedOnce=G0(119);this[130]=_(320);this[131]=w0("Rescued Leaf elder");this.LeafVillagersCurrentlyAbducted=I0(132);this.LeafElderCurrentlyAbducted=I0(133);this[135]=_(261);this[136]=_(306);this[137]=w0("Dead Stom's girlfriend");this[138]=w0("Dead Stom");this[139]=_(566);this[141]=_(311);this[143]=_(643);this[144]=w0("Stoned people gone");this[146]=_(296);this[150]=Rx("Leaf elder daughter");this[151]=Rx("Leaf villager");this[152]=w0("Nadare villager");this.AbleToRideDolphin=I0(155,B0);this.PortoaQueenGoingAway=I0(156);this[160]=_(295);this[163]=Rx("Portoa queen/fortune teller");this.WokeKensuInLighthouse=I0(164,B0);this[165]=_(305);this[166]=w0("Oak elder 1",vs);this[167]=Rx("Swan dancer");this[168]=w0("Oak elder 2",vs);this.TalkedToLeafRabbit=I0(169,B0);this[170]=_(285);this[171]=_(336);this[173]=_(338);this[174]=_(339);this[175]=_(340);this[176]=_(341);this[177]=_(342);this[178]=_(343);this[179]=_(344);this[180]=_(345);this[181]=_(346);this[182]=_(287);this[183]=_(348);this[184]=_(349);this[185]=_(286);this[186]=_(350);this[187]=_(351);this[188]=_(352);this[189]=_(288);this[190]=_(289);this[191]=_(354);this[192]=_(355);this[193]=_(356);this[194]=_(290);this[195]=_(357);this[196]=_(358);this[197]=_(363);this[198]=_(364);this[199]=_(291);this[200]=_(292);this[201]=_(362);this[202]=_(317);this[203]=_(298);this[204]=_(284);this[205]=_(276);this[206]=_(293);this[207]=_(307);this[208]=_(296);this[209]=_(309);this[210]=_(361);this[211]=_(294);this[212]=_(347);this[213]=Rx("Portoa queen 1");this[214]=Rx("Portoa queen 2");this[215]=Rx("Portoa queen 3");this[216]=w0("Kensu rescued");this[217]=Rx("Stoned pair");this[218]=w0("Kensu gone from tavern");this[219]=Rx("In Sabera's trap");this[220]=_(367);this[221]=_(368);this[222]=_(300);this[223]=_(283);this[224]=w0("Dead Akahana");this[228]=_(316);this[229]=_(366);this[230]=_(365);this[231]=_(303);this[232]=w0("Dead Shyron villager");this[233]=w0("Dead Shyron guard");this[234]=w0("Tower message 1");this[235]=w0("Tower message 2");this[236]=w0("Tower message 3");this[237]=w0("Mesia");this.TalkedToZebuStudent=I0(238,B0);this[256]=_(302);this[257]=_(263);this[258]=_(264);this[259]=_(265);this[261]=_(294);this[262]=_(291);this[263]=_(274);this[264]=_(317);this.UsedBowOfMoon=I0(265);this.UsedBowOfSun=I0(266);this[267]=_(284);this[268]=_(353);this.LeafElder=E(-257);this.OakElder=E(-258);this.WaterfallCaveSwordOfWaterChest=E(-259);this.StxyLeftUpperSwordOfThunderChest=E(-260);this.MesiaInTower=E(260);this.SealedCaveBallOfWindChest=E(-262);this.MtSabreWestTornadoBraceletChest=E(-263);this.GiantInsect=E(-264);this.Kelbesque1=E(-265);this.Rage=E(-266);this.AryllisBasementChest=E(-267);this.Mado1=E(-268);this.StormBraceletChest=E(-269);this.WaterfallCaveRiverLeftChest=E(272);this.Mado2=E(274);this.StxyRightMiddleChest=E(276);this.BattleArmorChest=E(283);this.Draygon1=E(284);this.SealedCaveSmallRoomBackChest=E(285);this.SealedCaveBigRoomNortheastChest=E(286);this.FogLampCaveFrontChest=E(287);this.MtHydraRightChest=E(288);this.SaberaUpstairsLeftChest=E(289);this.EvilSpiritIslandLowerChest=E(290);this.Sabera2=E(291);this.SealedCaveSmallRoomFrontChest=E(292);this.CordelGrass=E(293);this.Kelbesque2=E(294);this.OakMother=E(295);this.PortoaQueen=E(296);this.AkahanaStatueOfOnyxTradein=E(297);this.OasisCaveFortressBasementChest=E(298);this.Brokahana=E(299);this.EvilSpiritIslandRiverLeftChest=E(300);this.Deo=E(301);this.Vampire1=E(302);this.OasisCaveNorthwestChest=E(303);this.AkahanaFluteOfLimeTradein=E(304);this.ZebuStudent=E(305);this.WindmillGuardAlarmFluteTradein=E(306);this.MtSabreNorthBackOfPrisonChest=E(307);this.ZebuInShyron=E(308);this.FogLampCaveBackChest=E(309);this.InjuredDolphin=E(310);this.Clark=E(311);this.Sabera1=E(312);this.KensuInLighthouse=E(313);this.RepairedStatue=E(314);this.UndergroundChannelUnderwaterChest=E(315);this.KirisaMeadow=E(316);this.Karmine=E(317);this.Aryllis=E(318);this.MtHydraSummitChest=E(319);this.AztecaInPyramid=E(320);this.ZebuAtWindmill=E(321);this.MtSabreNorthSummit=E(322);this.StomFightReward=E(323);this.MtSabreWestTornel=E(324);this.AsinaInBackRoom=E(325);this.BehindWhirlpool=E(326);this.KensuInSwan=E(327);this.SlimedKensu=E(328);this.MezameShrineLeftChest=E(329);this.SealedCaveBigRoomSouthwestChest=E(336);this.MtSabreWestRightChest=E(338);this.MtSabreNorthMiddleChest=E(339);this.FortressMadoHellwayChest=E(340);this.SaberaUpstairsRightChest=E(341);this.MtHydraFarLeftChest=E(342);this.StxyLeftLowerChest=E(343);this.KarmineBasementLowerMiddleChest=E(344);this.EastCaveNortheastChest=E(345);this.OasisCaveEntranceAcrossRiverChest=E(346);this.EvilSpiritIslandExitChest=E(348);this.FortressSaberaMiddleChest=E(349);this.MtSabreNorthUnderBridgeChest=E(350);this.KirisaPlantCaveChest=E(351);this.FortressMadoUpperNorthChest=E(352);this.Vampire2=E(353);this.FortressSaberaNorthwestChest=E(354);this.FortressMadoLowerCenterNorthChest=E(355);this.OasisCaveNearEntranceChest=E(356);this.MtHydraLeftRightChest=E(357);this.FortressSaberaSoutheastChest=E(358);this.KensuInCabin=E(359);this.MtSabreWestNearKensuChest=E(361);this.MtSabreWestLeftChest=E(362);this.FortressMadoUpperBehindWallChest=E(363);this.PyramidChest=E(364);this.CryptRightChest=E(365);this.KarmineBasementLowerLeftChest=E(366);this.FortressMadoLowerSoutheastChest=E(367);this.FogLampCaveMiddleNorthMimic=E(368);this.FogLampCaveMiddleSouthwestMimic=E(369);this.WaterfallCaveFrontMimic=E(370);this.EvilSpiritIslandRiverRightMimic=E(371);this.MtHydraFinalCaveMimic=E(372);this.StxyLeftNorthMimic=E(373);this.StxyRightNorthMimic=E(374);this.StxyRightSouthMimic=E(375);this.CryptLeftPitMimic=E(376);this.KarmineBasementUpperMiddleMimic=E(377);this.KarmineBasementUpperRightMimic=E(378);this.KarmineBasementLowerRightMimic=E(379);this.EastCaveNorthwestMimic=E(380);this.SwordOfWind=E(512);this.SwordOfFire=E(513);this.SwordOfWater=E(514);this.SwordOfThunder=E(515);this.Crystalis=E(516);this.BallOfWind=E(517);this.TornadoBracelet=E(518);this.BallOfFire=E(519);this.FlameBracelet=E(520);this.BallOfWater=E(521);this.BlizzardBracelet=E(522);this.BallOfThunder=E(523);this.StormBracelet=E(524);this.CarapaceShield=E(525);this.BronzeShield=E(526);this.PlatinumShield=E(527);this.MirroredShield=E(528);this.CeramicShield=E(529);this.SacredShield=E(530);this.BattleShield=E(531);this.PsychoShield=E(532);this.TannedHide=E(533);this.LeatherArmor=E(534);this.BronzeArmor=E(535);this.PlatinumArmor=E(536);this.SoldierSuit=E(537);this.CeramicSuit=E(538);this.BattleArmor=E(539);this.PsychoArmor=E(540);this.MedicalHerb=E(541);this.Antidote=E(542);this.LysisPlant=E(543);this.FruitOfLime=E(544);this.FruitOfPower=E(545);this.MagicRing=E(546);this.FruitOfRepun=E(547);this.WarpBoots=E(548);this.StatueOfOnyx=E(549);this.OpelStatue=E(550);this.InsectFlute=E(551);this.FluteOfLime=E(552);this.GasMask=E(553);this.PowerRing=E(554);this.WarriorRing=E(555);this.IronNecklace=E(556);this.DeosPendant=E(557);this.RabbitBoots=E(558);this.LeatherBoots=E(559);this.ShieldRing=E(560);this.AlarmFlute=E(561);this.WindmillKey=E(562);this.KeyToPrison=E(563);this.KeyToStxy=E(564);this.FogLamp=E(565);this.ShellFlute=E(566);this.EyeGlasses=E(567);this.BrokenStatue=E(568);this.GlowingLamp=E(569);this.StatueOfGold=E(570);this.LovePendant=E(571);this.KirisaPlant=E(572);this.IvoryStatue=E(573);this.BowOfMoon=E(574);this.BowOfSun=E(575);this.BowOfTruth=E(576);this.Refresh=E(577);this.Paralysis=E(578);this.Telepathy=E(579);this.Teleport=E(580);this.Recover=E(581);this.Barrier=E(582);this.Change=E(583);this.Flight=E(584);this.CalmedAngrySea=E(643);this.OpenedJoelShed=E(647);this.Draygon2=E(653);this.OpenedCrypt=E(654);this.OpenedStxy=E(688);this.OpenedSwanGate=E(691);this.OpenedPrison=E(728);this.OpenedSealedCave=E(750);this.AlwaysTrue=G0(752,lr);this.WarpLeaf=E(757);this.WarpBrynmaer=E(758);this.WarpOak=E(759);this.WarpNadare=E(760);this.WarpPortoa=E(761);this.WarpAmazones=E(762);this.WarpJoel=E(763);this.WarpZombie=E(-764);this.WarpSwan=E(764);this.WarpShyron=E(765);this.WarpGoa=E(766);this.WarpSahara=E(767);this.Sword=nx(this);this.Money=nx(this);this.BreakStone=nx(this);this.BreakIce=nx(this);this.FormBridge=nx(this);this.BreakIron=nx(this);this.TravelSwamp=nx(this);this.CrossPain=nx(this);this.ClimbWaterfall=nx(this);this.BuyHealing=nx(this);this.BuyWarp=nx(this);this.ShootingStatue=nx(this);this.ClimbSlope8=nx(this);this.ClimbSlope9=nx(this);this.ClimbSlope10=nx(this);this.WildWarp=nx(this);this.TriggerSkip=nx(this);this.RageSkip=nx(this);this.ShootingStatueSouth=nx(this);this.unallocated=new Map;for(let x in this){if(!this.hasOwnProperty(x))continue;let t=this[x];if(!t[te])continue;let s=Number(x),a=typeof t.id=="number"?t.id:s;if(isNaN(a))throw new Error(`Bad flag: ${x}`);let n=t.name||(isNaN(s)?g6(x):Vo(a)),i=new ee(this,n,a,t);this[x]=i,i.id<0?this.unallocated.set(~i.id,i):this[i.id]||(this[i.id]=i)}for(let x=256;x<384;x++){let t=`Check ${A(x&255)}`;this[x]?!this[x].fixed&&!this.unallocated.has(x)&&this.unallocated.set(x,new ee(this,t,~x,{fixed:!0})):this[x]=new ee(this,t,x,{fixed:!0})}for(let x=384;x<640;x++)if(!this[x]){let t=x<512?"Buffer ":"Item ";this[x]=new ee(this,t+A(x),x,{fixed:!0})}for(let x of e.locations)for(let t of x.flags)this[t.flag]||(this[t.flag]=ur(this,t.flag))}defrag(){let e=new Map,x=new Set;for(let i=0;i<768;i++){let o=this[i],d=o?.obsolete;d?(e.set(i,c=>c.set?-1:d.call(o,c)),delete this[i]):o||x.add(i)}let t=0,s=767;function a(i){return()=>i}for(;t<s;){if(this[t]||this.unallocated.has(t)){t++;continue}let i=this[s];if(!i||i.fixed){s--;continue}e.set(s,a(t)),i.id=t,this[t]=i,delete this[s],t++,s--}this.remapFlags(e,x);for(let[i,o]of this.unallocated)this[i]||(this.unallocated.delete(i),(this[i]=o).id=i);let n=[];for(let i=0;i<768;i++)this[i]||n.push(us(i));jo&&console.log(`Free flags: ${n.join(" ")}`)}insertZombieWarpFlag(){let e=new Map;if(this[756])throw new Error("No space to insert warp flag");let x=~this.WarpZombie.id;if(x<0)throw new Error("Bad WarpZombie id");for(let t=756;t<x;t++)this[t]=this[t+1],this[t].id=t,e.set(t+1,()=>t);this.WarpZombie.id=x,this[x]=this.WarpZombie,this.remapFlags(e)}remap(e,x){this.remapFlags(new Map([[e,()=>x]]))}remapFlags(e,x){function t(a,n){for(let i=a.length-1;i>=0;i--){let o=a[i];if(o<0&&(o=~o),x&&x.has(o))throw new Error(`SHOULD BE UNUSED: ${A(o)}`);let d=e.get(o);if(d==null)continue;let c=d({...n,index:i});c>=0?a[i]=a[i]<0?~c:c:a.splice(i,1)}}function s(a,n){let i=a<0?~a:a;if(x&&x.has(i))throw new Error(`SHOULD BE UNUSED: ${A(i)}`);let o=e.get(i);if(o==null)return a;let d=o(n);if(d<0)throw new Error("Bad flag delete");return a<0?~d:d}for(let a of this.rom.locations)if(!!a.used)for(let n of a.flags)n.flag=s(n.flag,{location:a});for(let a of this.rom.npcs)if(!!a.used){for(let[n,i]of a.spawnConditions)t(i,{npc:a,spawn:n});for(let n of a.globalDialogs)n.condition=s(n.condition,{npc:a,dialog:!0});for(let[,n]of a.localDialogs)for(let i of n)i.condition=s(i.condition,{npc:a,dialog:!0}),t(i.flags,{npc:a,dialog:!0,set:!0})}for(let a of this.rom.triggers)!a.used||(t(a.conditions,{trigger:a}),t(a.flags,{trigger:a,set:!0}));for(let a of this.rom.itemGets)t(a.flags,{set:!0});for(let a of this.rom.items)for(let n of a.itemUseData)n.kind==="flag"&&(n.want=s(n.want,{})),t(n.flags,{set:!0})}alloc(e=0){if(e!==512)throw new Error("Cannot allocate outside 2xx");for(let x=640;x<768;x++)if(!this[x])return this[x]=ur(this,x),x;throw new Error("No free flags.")}free(e){delete this[e]}};function Vo(r){return"Flag "+us(r)}function ur(r,e){return new ee(r,"Wall "+A(e&255),e,{fixed:!0})}var Pt=class extends b0{constructor(x,t){super(x,t);this.coordinates=o0(x.prg,this.base,4)}get base(){return 218769+(this.id<<2)}get w(){return this.coordinates[1]}set w(x){this.coordinates[1]=x}get x0(){return ls(this.coordinates[0])}set x0(x){this.coordinates[0]=hs(x)}get x1(){return this.x0+this.w}get h(){return this.coordinates[3]}set h(x){this.coordinates[3]=x}get y0(){return ls(this.coordinates[2])}set y0(x){this.coordinates[2]=hs(x)}get y1(){return this.y0+this.h}write(){let x=this.rom.assembler();return x.segment("1a"),x.org(38545+(this.id<<2)),x.byte(...this.coordinates),[x.module()]}};var W0=class extends Hx{constructor(){super(...arguments);this.action=this.prop([0,248,3]);this.part=this.prop([0,7,-3],[1,224,5]);this.index=this.prop([1,31])}toString(){let x=this.action?` (action ${A(this.action)})`:"";return`MessageId ${this.hex()}: (${A(this.part)}:${A(this.index)}${x}`}get mid(){return`${A(this.part)}:${A(this.index)}`}set mid(x){let t=x.split(":");if(t.length!==2)throw new Error(`oops: ${x}`);if(this.part=Number.parseInt(t[0],16),this.index=Number.parseInt(t[1],16),isNaN(this.part)||isNaN(this.index))throw new Error(`oops: ${x}`)}nonzero(){return!!(this.part||this.index)}};W0.size=2;var{$0e:se,$0f:_t,$10:Ft,$1a:gr,$fe:Jo,$ff:Xo}=n0,Yo=d0.of(se,33689),Qo=d0.of(se,39906),Zo=d0.of(Ft,36848),xd=d0.of(Ft,36923),ed=d0.of(Ft,36998),br=d0.of(gr,35776),mr=d0.of(gr,35785),pr=[["Sword",`
\v\f`],[" of ","\\]"],["Bracelet","<=>["],["Shield","\r"],["Armor","{"],["Magic","#%("],["Power",""],["Item","^"]],X=class extends b0{constructor(x,t,s={}){super(x.rom,t);this.items=x;let a=this.rom;if(x[t]=this,this.itemUseData=[],this.trades=s.trades||[],this.use=s.use||!1,this.weight=s.weight||1,this.valueAddr=s.valueAddr!=null?d0.of(se,s.valueAddr):void 0,this.valueAddr!=null&&(this.value=this.valueAddr.read(a.prg)),this.use){this.itemUseJump=this.itemUseJumpPointer.readAddress(a.prg,se,_t);let i=x.itemUseJumps[this.itemUseJump.org];if(!i)throw new Error(`Bad ItemUseJump: ${this.itemUseJump}`);let o=this.itemUseDataPointer.readAddress(a.prg,se,_t);for(let d of i){let c=it.from(d,a.prg,o);this.itemUseData.push(c),o=o.plus(c.length)}}this.itemDataValue=this.itemDataPointer.read(a.prg),this.selectedItemValue=this.selectedItemPointer.read(a.prg);let n=this.menuNamePointer.readAddress(a.prg);this.menuName=pr.reduce((i,[o,d])=>i.replace(d,o),Rt(a.prg,n.offset,255))}get messageName(){return this.rom.messages.itemNames[this.id]}set messageName(x){this.rom.messages.itemNames[this.id]=x}get basePrice(){return this.rom.shops.basePrices[this.id]}set basePrice(x){this.rom.shops.basePrices[this.id]=x}get itemUseJumpPointer(){return Yo.plus(this.id<<1)}get itemUseDataPointer(){return Qo.plus(this.id<<1)}get itemDataPointer(){return Zo.plus(this.id)}get selectedItemPointer(){return xd.plus(this.id)}get menuNamePointer(){return ed.plus(this.id<<1)}itemUseMessages(){let x=new Map;for(let{message:t}of this.itemUseData)x.set(t.mid,t);return[...x.values()]}setName(x){this.messageName=this.menuName=x}get palette(){return this.itemDataValue&3}set palette(x){this.itemDataValue=this.itemDataValue&-4|x&3}get unique(){return!!(this.itemDataValue&64)}set unique(x){this.itemDataValue=this.itemDataValue&-65|(x?64:0)}get worn(){return!!(this.itemDataValue&32)}set worn(x){this.itemDataValue=this.itemDataValue&-33|(x?32:0)}get solid(){return!!(this.itemDataValue&128)}set solid(x){this.itemDataValue=this.itemDataValue&-129|(x?128:0)}assemble(x){let t=A(this.id);this.itemDataPointer.loc(x,`ItemData_${t}`),x.byte(this.itemDataValue),this.selectedItemPointer.loc(x,`ItemSelectedValue_${t}`),x.byte(this.selectedItemValue);let s=pr.reduce((n,[i,o])=>n.replace(i,o),this.menuName);x.segment(Ft,Jo,Xo),x.reloc(`ItemMenuName_${A(this.id)}`);let a=x.pc();if(x.byte(s,255),this.menuNamePointer.loc(x,`ItemMenuName_${t}`),x.word(a),this.itemUseJump){this.itemUseJumpPointer.loc(x,`ItemUseJump_${t}_Ptr`),x.word(this.itemUseJump.org);let n=[];for(let o of this.itemUseData)n.push(...o.bytes());x.segment(se.name,_t.name),x.reloc(`ItemUseData_${t}`);let i=x.pc();x.byte(...n),this.itemUseDataPointer.loc(x,`ItemUseData_${t}_Ptr`),x.word(i)}this.valueAddr&&(this.valueAddr.loc(x,`ItemValue_${t}`),x.byte(this.value)),this.itemUseData.some(n=>n.tradeNpc()===this.rom.npcs.Aryllis.id)&&(x.segment("fe"),x.org(54453),x.byte(this.id-28))}isMagic(){return this.id>=65&&this.id<=72}},it=class{constructor(e,x,t,s){this.kind=e;this.want=x;this.message=t;this.flags=s}static from(e,x,t){let{offset:s}=t,a=0;if(e==="expect"||e==="screen")a=x[s+1]<<8|x[s],s+=2;else if(e==="flag"){let o=gs.read(x,s);if(o.length||o.push(-1),o.length>1)throw new Error(`Flag list too long: ${o}`);a=o[0],s+=2}else e==="location"?a=x[s++]:e!=="empty"&&u6(e);let n=W0.from(x,s),i=ps.read(x,s+2);return new it(e,a,n,i)}bytes(){let e=[];if(this.kind==="expect"||this.kind==="screen")e.push(this.want&255,this.want>>>8&255);else if(this.kind==="flag"){let x=gs.bytes([this.want]);if(x.length!==2)throw new Error(`bad data: ${x}`);e.push(...x)}else this.kind==="location"?e.push(this.want):this.kind!=="empty"&&u6(this.kind);return e.push(...this.message.data),e.push(...ps.bytes(this.flags)),e}tradeNpc(){return this.kind!=="expect"||this.want>>>8!==1?null:this.want&255}get length(){let e=this.kind==="empty"?0:this.kind==="location"?1:2;return 2*(1+Math.max(1,this.flags.length))+e}},s6=class extends X{get defense(){return this.items.shieldDefense[this.id-12]}set defense(e){this.items.shieldDefense[this.id-12]=e}},a6=class extends X{get defense(){return this.items.armorDefense[this.id-20]}set defense(e){this.items.armorDefense[this.id-20]=e}},Nt=class extends kx{constructor(x){super(73);this.rom=x;this.itemUseJumps=td;this.SwordOfWind=new X(this,0);this.SwordOfFire=new X(this,1);this.SwordOfWater=new X(this,2);this.SwordOfThunder=new X(this,3);this.Crystalis=new X(this,4);this.BallOfWind=new X(this,5);this.TornadoBracelet=new X(this,6);this.BallOfFire=new X(this,7);this.FlameBracelet=new X(this,8);this.BallOfWater=new X(this,9);this.BlizzardBracelet=new X(this,10);this.BallOfThunder=new X(this,11);this.StormBracelet=new X(this,12);this.CarapaceShield=new s6(this,13);this.BronzeShield=new s6(this,14);this.PlatinumShield=new s6(this,15);this.MirroredShield=new s6(this,16);this.CeramicShield=new s6(this,17);this.SacredShield=new s6(this,18);this.BattleShield=new s6(this,19);this.PsychoShield=new s6(this,20);this.TannedHide=new a6(this,21);this.LeatherArmor=new a6(this,22);this.BronzeArmor=new a6(this,23);this.PlatinumArmor=new a6(this,24);this.SoldierSuit=new a6(this,25);this.CeramicSuit=new a6(this,26);this.BattleArmor=new a6(this,27);this.PsychoArmor=new a6(this,28);this.MedicalHerb=new X(this,29,{use:!0,trades:[0],valueAddr:34026});this.Antidote=new X(this,30,{use:!0});this.LysisPlant=new X(this,31,{use:!0});this.FruitOfLime=new X(this,32,{use:!0});this.FruitOfPower=new X(this,33,{use:!0,valueAddr:34060});this.MagicRing=new X(this,34,{use:!0});this.FruitOfRepun=new X(this,35,{use:!0});this.WarpBoots=new X(this,36,{use:!0});this.StatueOfOnyx=new X(this,37,{use:!0,trades:[0]});this.OpelStatue=new X(this,38,{use:!0});this.InsectFlute=new X(this,39,{use:!0});this.FluteOfLime=new X(this,40,{use:!0,trades:[0,1,2,3]});this.GasMask=new X(this,41);this.PowerRing=new X(this,42);this.WarriorRing=new X(this,43);this.IronNecklace=new X(this,44);this.DeosPendant=new X(this,45);this.RabbitBoots=new X(this,46);this.LeatherBoots=new X(this,47);this.ShieldRing=new X(this,48);this.AlarmFlute=new X(this,49,{use:!0,trades:[0,1]});this.WindmillKey=new X(this,50,{use:!0});this.KeyToPrison=new X(this,51,{use:!0});this.KeyToStyx=new X(this,52,{use:!0});this.FogLamp=new X(this,53,{use:!0,trades:[0]});this.ShellFlute=new X(this,54,{use:!0});this.EyeGlasses=new X(this,55,{use:!0});this.BrokenStatue=new X(this,56,{use:!0});this.GlowingLamp=new X(this,57,{use:!0});this.StatueOfGold=new X(this,58,{use:!0});this.LovePendant=new X(this,59,{use:!0,trades:[0]});this.KirisaPlant=new X(this,60,{use:!0,trades:[0]});this.IvoryStatue=new X(this,61,{use:!0,trades:[0]});this.BowOfMoon=new X(this,62,{use:!0});this.BowOfSun=new X(this,63,{use:!0});this.BowOfTruth=new X(this,64,{use:!0});this.Refresh=new X(this,65);this.Paralysis=new X(this,66);this.Telepathy=new X(this,67);this.Teleport=new X(this,68);this.Recover=new X(this,69);this.Barrier=new X(this,70);this.Change=new X(this,71);this.Flight=new X(this,72);this.armorDefense=o0(x.prg,br.offset,9),this.shieldDefense=o0(x.prg,mr.offset,9)}write(){let x=this.rom.assembler();br.loc(x),x.byte(...this.armorDefense),mr.loc(x),x.byte(...this.shieldDefense);let t=new Array(10).fill(0);for(let s of this)s.assemble(x),s.unique&&(t[s.id>>>3]|=1<<(s.id&7));return Ux(x,[se,_t],"KeyItemData"),x.byte(...t),[x.module()]}},td={33849:["expect"],33858:["screen"],33872:["empty"],33873:["screen"],33887:["location"],33937:["expect"],33961:["expect","expect"],33971:["location"],34e3:["expect"],34011:[],34016:["expect","empty"],34055:["empty"],34077:["empty"],34084:["empty"],34095:["empty"],34106:["empty"],34122:["empty"],34148:["empty"],34149:["expect"],34155:["flag"],34181:["empty"],34206:["expect","expect","expect","expect"]};var{$0e:Dt,$0f:yr,$14:sd,$fe:ad,$ff:rd}=n0,nd=d0.of(Dt,39680),id=d0.of(Dt,40294),od=73,Gt=class extends kx{constructor(x){super(113);this.rom=x;this.actionGrants=new Map;for(let t=0;t<113;t++)this[t]=new Ts(x,t);this.actionGrants.set(37,41),this.actionGrants.set(57,58),this.actionGrants.set(59,71),this.actionGrants.set(60,62),this.actionGrants.set(132,70),this.actionGrants.set(178,66),this.actionGrants.set(180,65)}write(){let x=this.rom.assembler();for(let t of this)t.assemble(x);Ux(x,[sd,ad,rd],"GrantItemTable");for(let[t,s]of this.actionGrants)x.byte(t,s);return[x.module()]}},Ts=class extends b0{constructor(x,t){super(x,t);this._itemId=this.itemPointer.read(x.prg);let s=this.tablePointer.readAddress(x.prg,Dt,yr),a=s.offset;this.inventoryRowStart=x.prg[a++],this.inventoryRowLength=x.prg[a++],this.acquisitionAction=W0.from(x.prg,a),this.flags=ms.read(x.prg,a+2),this.key=x.prg[a+2+2*this.flags.length+1]===254,t!==0&&s.org===_0(x.prg,122214)&&(this.key=!1,this.flags=[])}get itemPointer(){return id.plus(this.id)}get tablePointer(){return nd.plus(this.id<<1)}get itemId(){return this._itemId}set itemId(x){if(this.id<od)throw new Error(`${this.id}`);this._itemId=x}isLosable(){return dd.has(this.inventoryRowStart)}copyFrom(x){this.inventoryRowStart=x.inventoryRowStart,this.inventoryRowLength=x.inventoryRowLength,this.acquisitionAction=x.acquisitionAction,this.flags=[...x.flags],this.key=x.key}assemble(x){this.itemPointer.loc(x),x.byte(this.itemId);let t=[this.inventoryRowStart,this.inventoryRowLength,...this.acquisitionAction.data,...ms.bytes(this.flags),this.key?254:255];x.segment(Dt.name,yr.name),x.reloc(`ItemGetData ${A(this.id)}`);let s=x.pc();x.byte(...t),this.tablePointer.loc(x),x.word(s)}},dd=new Set([4,8,16]);var cd=0,Le=class{constructor(){this.name=`Area ${++cd}`}},y6=class extends Le{constructor(){super(...arguments);this.type="overworld"}},Mx=class extends Le{constructor(){super(...arguments);this.type="town"}},q0=class extends Le{constructor(){super(...arguments);this.type="connector";this.exits=[2,2]}},dx=class extends Le{constructor(){super(...arguments);this.type="terminal";this.exits=[1,1]}},$;(B=>(B.Unused=new dx,B.ValleyOfWind=new class extends y6{constructor(){super(...arguments);this.exits=[3,6]}},B.CordelPlain=new class extends y6{constructor(){super(...arguments);this.exits=[5,8]}},B.WaterfallValley=new class extends y6{constructor(){super(...arguments);this.exits=[6,6]}},B.AngrySea=new class extends y6{constructor(){super(...arguments);this.exits=[0,0]}},B.GoaValley=new class extends y6{constructor(){super(...arguments);this.exits=[0,0]}},B.Desert1=new class extends y6{constructor(){super(...arguments);this.exits=[0,0]}},B.Desert2=new class extends y6{constructor(){super(...arguments);this.exits=[0,0]}},B.Leaf=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Brynmaer=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Oak=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Amazones=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Nadare=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Portoa=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Joel=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.ZombieTown=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Swan=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Shyron=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Goa=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.Sahara=new class extends Mx{constructor(){super(...arguments);this.exits=[0,0]}},B.WindmillCave=new class extends q0{},B.SealedCave=new class extends q0{},B.ZebuCave=new class extends q0{},B.MtSabreWest=new class extends q0{},B.MtSabreNorth=new class extends q0{},B.LimeTreeValley=new class extends q0{},B.PortoaPalace=new class extends q0{},B.FishermanHouse=new class extends q0{},B.UndergroundChannel=new class extends q0{},B.JoelPassage=new class extends q0{},B.EvilSpiritIslandEntrance=new class extends q0{},B.EvilSpiritIsland=new class extends q0{},B.KirisaPlantCave=new class extends q0{},B.SwanGate=new class extends q0{},B.MtHydra=new class extends q0{},B.GoaFortress=new class extends q0{},B.OasisEntrance=new class extends q0{},B.OasisCave=new class extends q0{},B.DesertCave1=new class extends q0{},B.SaharaMeadow=new class extends q0{},B.DesertCave2=new class extends q0{},B.EastCave=new class extends q0{},B.Swamp=new class extends q0{},B.Mezame=new class extends dx{},B.Windmill=new class extends dx{},B.StomHouse=new class extends dx{},B.WaterfallCave=new class extends dx{},B.KirisaMeadow=new class extends dx{},B.FogLampCave=new class extends dx{},B.LimeTreeLake=new class extends dx{},B.Lighthouse=new class extends dx{},B.SaberaFortress=new class extends dx{},B.ShyronTemple=new class extends dx{},B.Styx=new class extends dx{},B.FortressBasement=new class extends dx{},B.Pyramid=new class extends dx{},B.Crypt=new dx,B.Tower=new dx))($||($={}));function fd(r){return r.replace(/([a-z])([A-Z0-9])/g,"$1 $2").replace("Of","of")}for(let[r,e]of Object.entries($))e.name=fd(r);var ix=class extends Hx{constructor(){super(...arguments);this.x=this.prop([0],[1,255,-8]);this.y=this.prop([2],[3,255,-8]);this.screen=this.prop([3,15,-4],[1,15]);this.tile=this.prop([2,240],[0,240,4]);this.coord=this.prop([2,255,-8],[0,255])}get used(){return this.data[1]<8}toString(){return`Entrance ${this.hex()}: (${A(this.y)}, ${A(this.x)})`}};ix.size=4;var jx=class extends Hx{constructor(){super(...arguments);this.x=this.prop([0,255,-4]);this.xt=this.prop([0]);this.y=this.prop([1,255,-4]);this.yt=this.prop([1]);this.screen=this.prop([1,240],[0,240,4]);this.tile=this.prop([1,15,-4],[0,15]);this.coord=this.prop([1,15,-12],[0,15,-4]);this.dest=this.prop([2]);this.entrance=this.prop([3])}isSeamless(){return Boolean(this.entrance&32)}toString(){return`Exit ${this.hex()}: (${A(this.y)}, ${A(this.x)}) => ${this.dest}:${this.entrance}`}};jx.size=4;var r6=class extends Hx{constructor(){super(...arguments);this.x=this.prop([1,7,-8]);this.xs=this.prop([1,7]);this.y=this.prop([1,240,-4]);this.ys=this.prop([1,240,4]);this.screen=this.prop([1])}get flag(){return this.data[0]|512}set flag(x){if((x&-256)!==512)throw new Error(`bad flag: ${A(x)}`);this.data[0]=x&255}toString(){return`Flag ${this.hex()}: ${A(this.screen)} @ ${A(this.flag)}`}};r6.size=2;var ae=class extends Hx{constructor(){super(...arguments);this.fromXs=this.prop([1,112,4]);this.toXs=this.prop([1,7]);this.fromYs=this.prop([3,240,4]);this.toYs=this.prop([3,15]);this.fromScreen=this.prop([3,240],[1,112,4]);this.toScreen=this.prop([3,15,-4],[1,7]);this.dest=this.prop([0])}toString(){return`Pit ${this.hex()}: (${A(this.fromXs)}, ${A(this.fromYs)}) => ${A(this.dest)}:(${A(this.toXs)}, ${A(this.toYs)})`}};ae.size=4;var v0=class extends Hx{constructor(){super(...arguments);this.y=this.prop([0,255,-4]);this.yt=this.prop([0]);this.x=this.prop([1,127,-4],[2,64,3]);this.xt=this.prop([1,127]);this.timed=this.booleanProp(1,7);this.screen=this.prop([0,240],[1,112,4]);this.tile=this.prop([0,15,-4],[1,15]);this.coord=this.prop([0,15,-12],[1,15,-4],[2,64,3]);this.type=this.prop([2,7]);this.id=this.prop([3]);this.patternBank=this.prop([2,128,7])}get used(){return this.data[0]!==254}set used(x){this.data[0]=x?0:254}[Symbol.iterator](){return this.used?super[Symbol.iterator]():[254,0,0,0][Symbol.iterator]()}get monsterId(){return this.id+80&255}set monsterId(x){this.id=x-80&255}isChest(){return this.type===2&&this.id<128}isInvisible(){return this.isChest()&&Boolean(this.data[2]&32)}isTrigger(){return this.type===2&&this.id>=128}isNpc(){return this.type===1&&this.id<192}isBoss(){return this.type===1&&this.id>=192}isMonster(){return this.type===0}isGeneric(){return this.type===4}isWall(){return Boolean(this.type===3&&(this.id<4||this.data[2]&32))}isShootingWall(x){return this.isWall()&&!!(this.data[2]&32?this.data[2]&16:x.id===143||x.id===168)}wallType(){if(this.type!==3)return"";let x=this.data[2]&32?this.id>>>4:this.id;return x>=4?"":x===2?"bridge":"wall"}wallElement(){return this.isWall()?this.id&3:-1}toString(){return`Spawn ${this.hex()}: (${A(this.x)}, ${A(this.y)}) ${this.timed?"timed":"fixed"} ${this.type}:${A(this.id)}`}};v0.size=4;function Es(r,e){let x=r-e;return x-=(r>>>4)-(e>>>4),x}function wr(r,...e){for(let x of e){let t=x%15,s=(x-t)/15,a=(r>>4)+s,n=(r&15)+t;n<0?(a--,n=15+n):n>=15&&(a++,n=n-15),r=a<<4|n}return r}var X0=class{constructor(){this.data=new Map;this.sizes=new Map}find(e){if(e!==e)throw"nan";this.data.has(e)||(this.data.set(e,e),this.sizes.set(e,1));let x;for(;!Object.is(x=this.data.get(e),e);)this.data.set(e,e=this.data.get(x));return e}union(e){this.find(e[0]);for(let x=1;x<e.length;x++){if(e[x]!==e[x])throw"nan";this.unionInternal(e[0],e[x])}}unionInternal(e,x){if(e=this.find(e),x=this.find(x),e===x)return;let t=this.sizes.get(e),s=this.sizes.get(x);t<s?(this.sizes.set(x,t+s),this.data.set(e,x)):(this.sizes.set(e,t+s),this.data.set(x,e))}sets(){let e=new Map;for(let x of this.data.keys()){let t=this.find(x),s=e.get(t);s||e.set(t,s=new Set),s.add(x)}return[...e.values()]}map(){let e=new j(()=>new Set);for(let x of this.data.keys()){let t=e.get(this.find(x));e.set(x,t),t.add(x)}return e}roots(){let e=new Set;for(let x of this.data.keys())e.add(this.find(x));return[...e]}};var ld={next(){return{done:!0}}},ot={get size(){return 0},has(){return!1},[Symbol.iterator](){return ld}},s0={get size(){return 1/0},has(){return!0},[Symbol.iterator](){throw new Error("cannot iterate")}},ks=class{constructor(e){this.bit=e}get size(){return 1}has(e){return e===this.bit}[Symbol.iterator](){return[this.bit][Symbol.iterator]()}};function n6(r){return new ks(r)}var Vx;(s=>{function r(a,n){if(a===s0||!n.size)return n;if(n===s0||!a.size)return a;let i=new Set;for(let o of a)n.has(o)&&i.add(o);return i.size?i:ot}s.intersect=r;function e(a,n){if(a===s0||!n.size)return a;if(n===s0||!a.size)return n;let i=new Set(a);for(let o of n)i.add(o);return i}s.union=e;function x(a,n){if(n===s0||!a.size)return!0;if(a.size>n.size)return!1;for(let i of a)if(!n.has(i))return!1;return!0}s.isSubset=x;function t(a){return a===s0?"all":[...a].sort().join(" ")}s.label=t})(Vx||(Vx={}));var h0=class{constructor(e,x,t){this.fixed=e;this.float=x;this.shift=t}get pat0(){return this.fixed[0]}get pat1(){return this.fixed[1]}get pal2(){return this.fixed[2]}get pal3(){return this.fixed[3]}static get ALL(){return new h0([s0,s0,s0,s0],[],0)}static get NONE(){return new h0([ot,ot,ot,ot],[],0)}static get MIMIC(){return new h0([s0,n6(108),s0,s0],[],2)}static get TREASURE_CHEST(){return new h0([s0,s0,s0,s0],[Sr],0)}static get BOSS(){return new h0([Sr,s0,s0,s0],[],0)}static get COIN(){return new h0([hd,s0,s0,s0],[],0)}static get STOM_FIGHT(){return new h0([s0,new Set([77]),s0,s0],[],0)}static get GUARDIAN_STATUE(){return new h0([new Set([116]),new Set([98]),s0,s0],[],0)}static get SHOOTING_WALL(){return new h0([new Set([97]),s0,s0,s0],[],0)}static get KENSU_CHEST(){return new h0([new Set([81]),s0,s0,s0],[],0)}static forLocation(e){switch(e){case 3:return new h0([s0,n6(96),s0,n6(32)],[],0);case 96:case 100:case 104:return new h0([s0,n6(82),s0,n6(8)],[],0)}return h0.ALL}static fromSpawn(e,x,t,s,a){let[n,...i]=x;a=a&&n===2&&!i.length,a&&s.patternBank&&(x=new Set([3]));let o=a||!x.has(2)?s0:n6(t.spritePatterns[0]),d=a||!x.has(3)?s0:n6(t.spritePatterns[1]),c=a?[n6(t.spritePatterns[s.patternBank])]:[],f=e.has(2)?n6(t.spritePalettes[0]):s0,l=e.has(3)?n6(t.spritePalettes[1]):s0;return new h0([o,d,f,l],c,0)}ignorePalette(){return new h0([this.fixed[0],this.fixed[1],s0,s0],this.float,this.shift)}shufflePalette(e,x){let t=[...this.fixed];for(let s=2;s<4;s++){if(t[s]===s0)continue;let a=Math.floor(5-Math.log2(e.nextInt(15)+2)),n=t[s]=new Set;for(let i=0;i<a;i++)n.add(e.pick(x))}return new h0(t,this.float,this.shift)}shifted(){return new h0(this.fixed,this.float,this.shift|2)}join(e){let x=O(4,s=>Vx.union(this.fixed[s],e.fixed[s]));if(this.float.length!==e.float.length)throw console.dir(this),console.dir(e),new Error(`incompatible float: ${this.float} ${e.float}`);let t=O(this.float.length,s=>Vx.union(this.float[s],e.float[s]));return new h0(x,t,this.shift|e.shift)}fix(e,x){let t=x?n=>x.nextInt(n):()=>0,s=x?n=>x.pick([...n]):n=>n[Symbol.iterator]().next().value,a=[...this.fixed];if(this.float.length){let n=t(2),i=1-n;n<this.float.length&&(a[0]=Vx.intersect(a[0],this.float[n])),i<this.float.length&&(a[1]=Vx.intersect(a[1],this.float[i]))}a[0]!==s0&&(e.spritePatterns[0]=s([...a[0]])),a[1]!==s0&&(e.spritePatterns[1]=s([...a[1]])),a[2]!==s0&&(e.spritePalettes[0]=s([...a[2]])),a[3]!==s0&&(e.spritePalettes[1]=s([...a[3]]))}meet(e,x=!1){let t=this.tryMeet(e,x);if(!t)throw new Error("Could not reconcile patterns");return t}tryMeet(e,x=!1){let t=[],s=this.shift|e.shift;for(let i=0;i<4;i++){let o=Vx.intersect(this.fixed[i],e.fixed[i]);if(!o.size){if(!x||i<2)return;o=Vx.union(this.fixed[i],e.fixed[i])}t.push(o)}let a=new Map,n=[];for(let i of C0.concat(this.float,e.float)){if(i===s0)throw new Error("Unexpected unconstrained float");let o=!1;for(let d of i){let c=a.get(d);if(c!=null){for(let f of n[c])a.delete(f);n[c]=Vx.intersect(n[c],i);for(let f of n[c])a.set(f,c);o=!0;break}}if(o)break;for(let d of i)a.set(d,n.length);if(n.push(i),n.length>2)return}for(let i=0;i<n.length;i++)for(let o=0;o<2;o++){let d=Vx.intersect(n[i],t[o]);if(d.size)d.size,n[i].size;else{let c=t[1-o]=Vx.intersect(n[i],t[1-o]);if(s|=1<<1-o,!c.size)return;n.splice(i,1),i=-1;break}}return new h0(t,n,s)}},Sr=new Set([94,95,96,97,100,101,102,103,104,105,106,108,109,110,111,112,116,117,118,119]),hd=new Set([94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119]);var hx=class extends b0{constructor(x,t,s=""){super(x.rom,t);this.constraint=h0.ALL;if(x[t]=this,this.used=!0,this.name="",x.rom.writeMonsterNames){let i=this.rom.prg[499712|t]|this.rom.prg[499968|t]<<8|458752;this.displayName=nr(this.rom.prg,i)}else this.displayName=s;this.base=_0(this.rom.prg,this.pointer)+65536,this.sfx=this.rom.prg[this.base],this.data=[];let a=this.base+1,n=0;for(let i=0;i<32;i++)i&7||(n=this.rom.prg[a++]),this.data.push(n&128?this.rom.prg[a++]:0),n<<=1}get pointer(){return 109568+(this.id<<1)}serialize(){let x=[this.sfx];for(let t=0;t<4;t++){let s=x.length;x.push(0);for(let a=0;a<8;a++)this.data[8*t+a]&&(x[s]|=128>>>a,x.push(this.data[8*t+a]))}return x}write(){let x=`Object_${this.id.toString(16).padStart(2,"0")}`,t=this.rom.assembler();t.segment("0d"),t.reloc(x);let s=t.pc();if(t.byte(...this.serialize()),t.org(44032+(this.id<<1),`${x}_Ptr`),t.word(s),this===this.rom.objects.blueSlime){let a=this.elements,n=0;for(;a;)a>>=1,n++;t.segment("1a"),t.org(37421),t.byte(n)}if(this.rom.writeMonsterNames){t.segment("3d");let a;if(this.displayName){let n=`${this.name}_Str`;t.reloc(n),a=t.pc(),t.byte(this.displayName.length),t.byte(...this.displayName)}t.org(40960|this.id),t.byte(a!=null?k0.loByte(a):0),t.org(41216|this.id),t.byte(a!=null?k0.hiByte(a):0)}return[t.module()]}get(x){return this.data[x-768>>>5]}parents(){return[]}spawnedChild(){if(!this.rom.objectActions[this.action]?.data.hasChild)return;let t=this.rom.adHocSpawns[this.child],s=t&&t.objectId;if(s!=null)return this.rom.objects[s]}spawnedReplacement(){if(!!this.replacement)return this.rom.objects[this.replacement]}locations(){return this.rom.locations.filter(x=>x.used&&x.spawns.some(t=>t.isMonster()&&t.monsterId===this.id))}palettes(x=!1){if(this.action===34)return[3];let t=this.data[0];this.action===42&&(t=this.data[31]|1),this.action===41&&(t=107),this.action===38&&(t=156);let s=this.rom.metasprites[t],a=x&&this.child?this.rom.metasprites[this.rom.objects[this.rom.adHocSpawns[this.child].objectId].data[0]]:null;return[...new Set([...s?.palettes()??[],...a?.palettes()??[]])]}isVulnerable(x){return!(this.elements&1<<x)}isShadow(){return this.id===123||this.id===140}get metasprite(){return vr.get(this.data)}set metasprite(x){vr.set(this.data,x)}get speed(){return Tr.get(this.data)}set speed(x){Tr.set(this.data,x)}get collisionPlane(){return Er.get(this.data)}set collisionPlane(x){Er.set(this.data,x)}get hitbox(){return kr.get(this.data)}set hitbox(x){kr.set(this.data,x)}get hp(){return Rr.get(this.data)}set hp(x){Rr.set(this.data,x)}get atk(){return Mr.get(this.data)}set atk(x){Mr.set(this.data,x)}get def(){return Cr.get(this.data)}set def(x){Cr.set(this.data,x)}get level(){return Ir.get(this.data)}set level(x){Ir.set(this.data,x)}get poison(){return!!Lr.get(this.data)}set poison(x){Lr.set(this.data,x?1:0)}get child(){return Ar.get(this.data)}set child(x){Ar.set(this.data,x)}get terrainSusceptibility(){return Br.get(this.data)}set terrainSusceptibility(x){Br.set(this.data,x)}get immobile(){return!!Pr.get(this.data)}set immobile(x){Pr.set(this.data,x?1:0)}get action(){return _r.get(this.data)}set action(x){_r.set(this.data,x)}get replacement(){return Nr.get(this.data)}set replacement(x){Nr.set(this.data,x)}get goldDrop(){return Fr.get(this.data)}set goldDrop(x){Fr.set(this.data,x)}get elements(){return Dr.get(this.data)}set elements(x){Dr.set(this.data,x)}get expReward(){return Gr.get(this.data)}set expReward(x){Gr.set(this.data,x)}get attackType(){return $r.get(this.data)}set attackType(x){$r.set(this.data,x)}get statusEffect(){return Or.get(this.data)}set statusEffect(x){Or.set(this.data,x)}toString(){return super.toString()+(this.name?" "+this.name:"")}};function ox(...r){return new Rs(...r)}var Rs=class{constructor(...e){this.spec=e}get(e){let x=0;for(let[t,s=255,a=0]of this.spec){let n=t-768>>>5,i=a<0?-a:0,o=a<0?0:a;x|=(e[n]&s)>>>o<<i}return x}set(e,x){for(let[t,s=255,a=0]of this.spec){let n=t-768>>>5,i=a<0?-a:0,o=a<0?0:a,d=x>>>i<<o&s;e[n]=e[n]&~s|d}}},vr=ox([768]),Tr=ox([832,15]),Er=ox([928,240,4]),kr=ox([1056,64,2],[928,15]),Rr=ox([960]),Mr=ox([992]),Cr=ox([1024]),Ir=ox([1056,31]),Lr=ox([1056,128,7]),Ar=ox([1088]),Br=ox([1120]),Pr=ox([1184,128,7]),_r=ox([1184,127]),Nr=ox([1216]),Fr=ox([1280,240,4]),Dr=ox([1280,15]),Gr=ox([1312]),$r=ox([1344]),Or=ox([1376,15]);var R=class extends hx{constructor(x,t){super(x,t.id,t.displayName);let s=t.scaling,a=(qr(s)+this.level)/2,n=a+yd(s,this.elements);this.hits=(this.hp+1)/(n-this.def),this.sdef=this.def/n;let i=Math.min(255,Math.max(16,32+a*16));this.satk=(this.atk-wd(s,this.attackType))/i,this.extraDifficulty=t.difficulty||0,this.monsterClass=t.class;let o=ud(this.expReward)/bd(s),d=pd[this.goldDrop]/gd(s);this.type=t.type||"monster",this.wealth=d&&d/(o+d)}isBoss(){return this.type==="boss"}isProjectile(){return this.type==="projectile"}isBird(){return this.rom.objectActions[this.action]?.data.bird||!1}isFlyer(){let x=this.rom.objectActions[this.action];return x?.data.bird||x?.data.moth||!1}placement(){return this.rom.objectActions[this.action]?.data.placement??"normal"}clearance(){return this.rom.objectActions[this.action]?.data.large?6:3}totalDifficulty(){return this.toughness()+this.attack()+this.statusDifficulty()+this.immunities()+this.movement()}collectDifficulty(x,t){let s=x(this),a=this.spawnedChild();a instanceof R&&(s=t(s,a.collectDifficulty(x,t)));let n=this.spawnedReplacement();return n instanceof R&&(s=t(s,n.collectDifficulty(x,t))),s}toughness(){return this.collectDifficulty(x=>$t(x.hits,0,[2,1],[3,2],[5,3],[7,4],[10,5],[13,6]),Math.max)}attack(){return this.collectDifficulty(x=>x.attackType&&x.statusEffect?0:$t(x.satk,0,[.04,1],[.08,2],[.13,3],[.18,4],[.25,5],[.33,6]),Math.max)}addStatusEffects(x){this.attackType&&this.statusEffect?x.add(this.statusEffect):!this.attackType&&this.poison&&x.add(0);let t=this.spawnedReplacement();t instanceof R&&t.addStatusEffects(x);let s=this.spawnedChild();s instanceof R&&s.addStatusEffects(x)}statusDifficulty(){let x=new Set;this.addStatusEffects(x);let t=0;for(let s of x)t+=md[s];return t}immunities(){let x=0,t=this.elements;for(;t;)t&1&&x++,t>>>=1;return x&&1<<x-1}movement(){return this.collectDifficulty(x=>{let t=this.rom.objectActions[x.action],s=x.spawnedChild(),a=x.extraDifficulty;return t&&(a+=t.data.movement||0,t.data.large&&a++,s&&!s.statusEffect&&(a+=t.data.projectile||0)),this.metasprite===167&&(a+=2),a},(x,t)=>x+t)}totalReward(){return this.totalDifficulty()/4}normalizedGold(){if(!this.wealth)return 0;let x=this.totalDifficulty()*this.wealth*.6;return Math.max(1,Math.min(15,Math.round(x)))}normalizedExp(){if(this.wealth===1)return 0;let x=.488+this.totalDifficulty()*(1-this.wealth)*.256;return Math.max(1,Math.min(255,Math.round(x*32)))}toString(){return`Monster $${A(this.id)} ${this.name}`}};function ud(r){return r<128?r:(r&127)<<4}function bd(r){return 2**(r/5-1)}var md=[2,1,3,2,4],pd=[0,1,2,4,8,16,30,50,100,200,400,50,100,200,400,500];function gd(r){return 2**(r/7-1)}function qr(r){return r<24?1+r/3:(r+12)/4}function yd(r,e=0){let x=r<10?1:r<18?2:r<38?4:8;for(let t=x;t;t>>>=1)if(!(t&e))return t<<1;return x<<1}function wd(r,e){return qr(r)+Sd(r,e)}function Sd(r,e){return e?$t(r,2,[6,6],[18,8],[25,12],[30,18],[37,24],[42,32]):$t(r,2,[6,6],[18,10],[25,14],[30,18],[40,24],[46,32])}function $t(r,e,...x){for(let t=x.length-1;t>=0;t--){let[s,a]=x[t];if(r>=s)return a}return e}var[]=[A],cx=class{constructor(e,x,t,s){this.id=e;this.tileset=x;this.customFlags=new Map;this.freeFlags=new Set;this._pos=void 0;this._exits=new st;this._pits=new Map;this.rom=x.rom,this._height=t,this._width=s,this._screens=new Array(t<<4).fill(x.empty)}static of(e,x){let{rom:t,width:s,height:a}=e;if(!x){let{fortress:b,labyrinth:u}=t.metatilesets,S=new Set;for(let m of t.metatilesets)e.tileset===m.tileset.id&&S.add(m);S.delete(e.id===169?b:u);for(let m of new Set(C0.concat(...e.screens)))for(let p of S)if(p.getMetascreens(m).length||S.delete(p),!S.size)throw new Error(`No tileset for ${A(m)} in ${e}`);if(S.size!==1)throw new Error(`Non-unique tileset for ${e}: [${Array.from(S,m=>m.name).join(", ")}]`);x=[...S][0]}let n=e.reachableTiles(!0),i=new Set;for(let b of n.keys())i.add(b>>>8);for(let b of e.entrances)b.used&&i.add(b.screen);for(let b of e.exits)if(i.add(b.screen),b.isSeamless()){let u=b.tile>>>4;u===0?n.set(b.screen-16<<8|136,1):u===14&&n.set(b.screen<<8|136,1)}let o=new Array(a<<4).fill(x.empty);for(let b=0;b<a;b++)for(let u=0;u<s;u++){let S=b<<4|u,m=x.getMetascreens(e.screens[b][u]),p;if(m.length===1)p=m[0];else if(m.length){let g=e.flags.find(I=>I.screen===(b<<4|u)),w=[],M=[];for(let I of m)I.data.match?w.push(I):I.flag==="always"&&g?.flag===766||!I.flag&&!I.data.wall&&!g?M.unshift(I):M.push(I);if(w.length){let I=function(P,k){let N=(u<<8)+k,D=(b<<8)+P,e0=D<<4&61440|N&3840|D&240|N>>4&15;return n.has(e0)};for(let P of w)if(!!P.data.match(I,g!=null)){p=P;break}}p||(p=M[0])}else throw new Error("impossible");if(!p)throw new Error("impossible");o[S]=p}let d=new st,c;for(let b of e.exits){if(b.dest===255)continue;let u=b.screen,S=b.tile;if(b.isSeamless()&&!(b.yt&15)&&(e.id&88)!==88&&(u-=16,S|=240),!i.has(u))throw new Error("impossible?");let m=o[u],p=m.findExitType(S,a===1,!!(b.entrance&32)),g=p?.type;if(!g){let D=e.id<<16|u<<8|b.tile;if(vd.has(D))continue;let e0=m.data.exits?.map(i0=>i0.type+": "+i0.exits.map(A).join(", ")).join(`
  `);console.warn(`Unknown exit ${A(b.tile)}: ${m.name} in ${e} @ ${A(u)}:
  ${e0}`);continue}if(d.has(u,g))continue;let w=t.locations[b.dest];if(g.startsWith("seamless")){let D=g==="seamless:down",e0=p.exits[0]+(D?-16:16),i0=u+(e0<0?-16:0),p0=D?"seamless:up":"seamless:down";d.set(u,g,[w.id<<8|i0,p0]);continue}let M=w.entrances[b.entrance&31],I=M.screen,P=M.coord;g==="door"&&(M.y&240)===0&&(I-=16,P+=65536);let k=w.screens[I>>4][I&15],N=h(w,k,P);if(!N){let D=[];for(let e0 of t.metascreens.getById(k,w.tileset))for(let i0 of e0.data.exits??[])i0.type.startsWith("seamless")||D.push(`  ${e0.name} ${i0.type}: ${A(i0.entrance)}`);console.warn(`Bad entrance ${A(P)}: raw ${A(k)} in ${w} @ ${A(I)}
${D.join(`
`)}`);continue}if(d.set(u,g,[w.id<<8|I,N]),e.entrances[0].screen===u){let D=e.entrances[0].coord,e0=m.findExitByType(g);((e0.entrance&255)-(D&255))**2+((e0.entrance>>>8)-(D>>>8))**2<=1024&&(c=g)}}let f=new Map;for(let b of e.pits)f.set(b.fromScreen,b.dest<<8|b.toScreen);let l=new cx(e.id,x,a,s);l._screens=o,l._exits=d,l._entrance0=c,l._pits=f;for(let b of e.flags){let u=l._screens[b.screen];u.flag?.startsWith("custom")?l.customFlags.set(b.screen,t.flags[b.flag]):u.flag||l.freeFlags.add(t.flags[b.flag])}return l;function h(b,u,S){for(let m of t.metascreens.getById(u,b.tileset)){let p=m.findEntranceType(S,b.height===1);if(p!=null)return p}}}getUid(e){return this._screens[e].uid}get(e){return this._screens[e]}get width(){return this._width}set width(e){this._width=e,this._pos=void 0}get height(){return this._height}set height(e){this._height>e?this._screens.splice(e+2<<4,this._height-e<<4):this._height<e&&(this._screens.length=e+2<<4,this._screens.fill(this.tileset.empty,this.height+2<<4,this._screens.length)),this._height=e,this._pos=void 0}allPos(){if(this._pos)return this._pos;let e=this._pos=[];for(let x=0;x<this._height;x++)for(let t=0;t<this._width;t++)e.push(x<<4|t);return e}set(e,x){this._screens[e]=x??this.tileset.empty}inBounds(e){return(e&15)<this.width&&e>=0&&e>>>4<this.height}set2d(e,x){for(let t of x){let s=0;for(let a of t)a&&this.set(e+s,a),s++;e+=16}}validate(){for(let e of[0,1])for(let x=e?0:1;x<this.height;x++)for(let t=e;t<this.width;t++){let s=x<<4|t,a=this._screens[s],n=s-(e?1:16),i=this._screens[n];if(!a.isEmpty()&&!i.isEmpty()&&!a.checkNeighbor(i,e))throw new Error(Va("bad neighbor %s (%02x) %s %s (%02x)",i.name,n,Td[e],a.name,s))}return!0}spliceColumns(e,x,t,s){for(let d=0;d<this._screens.length;d+=16)this._screens.copyWithin(d+e+t,d+e+x,d+10),this._screens.splice(d+e,t,...s[d>>4]);let a=t-x;this.width+=a,this._pos=void 0;let n=[];for(let[d,c]of this._exits){let f=d&15;if(f<e+x){f>=e&&this._exits.delete(d,c);continue}n.push([d,c,d+a,c])}this.moveExits(...n);let i=this.rom.locations[this.id],o=e+x<<4;for(let d of i.spawns)d.xt<o||(d.xt-=a<<4);for(let d of i.flags){if(d.xs<e+x){d.xs>=e&&(d.screen=255);continue}d.xs-=a}i.flags=i.flags.filter(d=>d.screen!==255)}setExit(e,x,t){let s=this.rom.locations[t[0]>>>8].meta;if(!s)throw new Error("Cannot set two-way exit without meta");this.setExitOneWay(e,x,t),s.setExitOneWay(t[0]&255,t[1],[this.id<<8|e,x])}setExitOneWay(e,x,t){this._exits.set(e,x,t)}deleteExit(e,x){this._exits.delete(e,x)}getExit(e,x){return this._exits.get(e,x)}exits(){return this._exits}exitCandidates(e){let x=[];for(let t of this.tileset)t.data.exits?.some(s=>s.type===e)&&x.push(t);return x}show(){let e=[],x=[];for(let t=0;t<this.width;t++)x.push(t.toString(16));e.push("   "+x.join("  "));for(let t=0;t<this.height;t++)for(let s=0;s<3;s++){x=[s===1?t.toString(16):" "," "];for(let a=0;a<this.width;a++){let n=this._screens[t<<4|a];x.push(n?.data.icon?.full[s]??(s===1?" ? ":"   "))}e.push(x.join(""))}return e.join(`
`)}screenNames(){let e=[];for(let x=0;x<this.height;x++){let t=[];for(let s=0;s<this.width;s++){let a=this._screens[x<<4|s];t.push(a?.name)}e.push(t.join(" "))}return e.join(`
`)}traverse(e={}){let x=new X0,t=(e.flight?2:0)|(e.noFlagged?1:0);for(let n of this.allPos()){let i=e.with?.get(n)??this._screens[n];for(let o of i.connections[t])!o.length||x.union(o.map(d=>(n<<8)+d))}let s=new Map,a=x.sets();for(let n=0;n<a.length;n++){let i=a[n];for(let o of i)s.set(o,i)}return s}exitType(e){if((e&240)!==224)return;let x=e>>>8,s=this.get(x).data.exits?.[e&15].type;if(!s?.startsWith("edge:"))return s;if(!(s==="edge:top"&&x>>>4)&&!(s==="edge:bottom"&&x>>>4===this.height-1)&&!(s==="edge:left"&&x&15)&&!(s==="edge:bottom"&&(x&15)===this.width-1))return s}poiTile(e){throw new Error("not implemented")}static connect(e,x,t){let s=e.locations[x[0]>>>8].meta,a=e.locations[t[0]>>>8].meta;s.attach(x[0]&255,a,t[0]&255,x[1],t[1])}static findExitTiles(e,x){return e.locations[x[0]>>>8].meta._screens[x[0]&255].findExitByType(x[1]).exits.map(n=>n|(x[0]&255)<<8)}attach(e,x,t,s,a){s||(s=this.pickTypeFromExits(e)),a||(a=x.pickTypeFromExits(t));let n=x.id<<8|t,i=this.id<<8|e,o=this._exits.get(e,s),d=x._exits.get(t,a);if(o&&d){let[c,f]=o,[l,h]=d;if(c===n&&f===a&&l===i&&h===s)return}if(this._exits.set(e,s,[n,a]),x._exits.set(t,a,[i,s]),d&&o){let[c,f]=o,[l,h]=d,b=this.rom.locations[l>>8].meta,u=this.rom.locations[c>>8].meta;b._exits.set(l&255,h,o),u._exits.set(c&255,f,d)}else if(d||o){let[c,f]=d||o;(c!==i||f!==s)&&(c!==n||f!==a)&&this.rom.locations[c>>8].meta._exits.delete(c&255,f)}}pickTypeFromExits(e){let x=[...this._exits.row(e).keys()];if(!x.length)return this.pickTypeFromScreens(e);if(x.length>1)throw new Error(`No single type for ${A(e)}: [${x.join(", ")}]`);return x[0]}moveExits(...e){let x=[];for(let[t,s,a,n]of e){let i=this._exits.get(t,s),[o,d]=i;this.rom.locations[o>>8].meta._exits.set(o&255,d,[this.id<<8|a,n]),x.push([a,n,i]),this._exits.delete(t,s)}for(let[t,s,a]of x)this._exits.set(t,s,a)}moveExit(e,x,t,s){t||(t=this.pickTypeFromExits(e)),s||(s=this.pickTypeFromScreens(x));let a=this._exits.get(e,t),[n,i]=a;this.rom.locations[n>>8].meta._exits.set(n&255,i,[this.id<<8|x,s]),this._exits.set(x,s,a),this._exits.delete(e,t)}moveExitsAndPitsTo(e){let x=new Set;for(let t of e.allPos())e.get(t).data.delete||x.add(t);for(let[t,s,[a,n]]of this._exits){if(!x.has(t))continue;this.rom.locations[a>>>8].meta._exits.set(a&255,n,[e.id<<8|t,s]),e._exits.set(t,s,[a,n]),this._exits.delete(t,s)}for(let[t,s]of this._pits)!x.has(t)||(e._pits.set(t,s),this._pits.delete(t))}pickTypeFromScreens(e){let t=(this._screens[e].data.exits??[]).map(s=>s.type);if(t.length!==1)throw new Error(`No single type for ${A(e)}: [${t.join(", ")}]`);return t[0]}transferFlags(e,x){this.freeFlags=new Set(e.freeFlags);let t=new j(()=>[]);for(let[s,a]of e.customFlags)t.get(e._screens[s]).push(a);for(let s of t.values())x.shuffle(s);for(let s of this.allPos()){let a=this._screens[s];if(a.flag?.startsWith("custom")){let n=t.get(a).pop();if(!n)throw new Error(`No flag for ${a.name} at ${this.rom.locations[this.id]} @${A(s)}`);this.customFlags.set(s,n)}}}transferPits(e){this._pits=e._pits}shufflePits(e){if(!this._pits.size)return;let x=new Set;for(let[,s]of this._pits)x.add(this.rom.locations[s>>>8].id);this._pits.clear();let t=new j(()=>[]);for(let s of this.allPos()){if(!this.get(s).hasFeature("pit"))continue;let n=[-1,this,1/0];for(let[i,,[o]]of this._exits){let d=Wr(s,i);if(x.has(o>>>8)&&d<n[2]){let c=this.rom.locations[o>>>8].meta,f=o&255;n=[zr(s,f,i,c),c,d]}}n[0]>=0&&t.get(n[1]).push([s,n[0]])}for(let s of x){let a=t.get(this.rom.locations[s].meta);a.length||a.push([0,240])}for(let[s,a]of t){let n=[[],[]],i=new Map;for(let d of s.allPos()){let c=s.get(d);if(c.hasFeature("river")||c.hasFeature("empty"))continue;let f=(c.data.edges||"").split("").map(l=>l===" "?"":l);f[0]&&f[2]&&n[0].push(d),(f[1]&&f[3]||c.hasFeature("spikes"))&&n[1].push(d),c.hasFeature("spikes")&&i.set(d,[...f].filter(l=>l==="s").length)}let o=[0,0];for(let[d,c]of a){let l=this.get(d).data.edges||"",h=l[1]==="c"&&l[3]==="c"?1:0,b=[-1,1/0,0],u=zr(c,o[0],o[1],s);for(let m of n[h]){let p=i.get(m)??0;if(p<b[2])continue;let g=Wr(u,m);g<b[1]&&(b=[m,g,p])}let S=b[0];if(S<0)throw new Error("no eligible dest");o=[S,u],this._pits.set(d,s.id<<8|S)}}}transferExits(e,x){let t=new j(()=>[]),s=new j(()=>new Set);for(let a of this.allPos()){let n=this._screens[a];for(let{type:i}of n.data.exits??[])i==="edge:top"&&a>>>4||i==="edge:left"&&a&15||i==="edge:bottom"&&a>>>4<this.height-1||i==="edge:right"&&(a&15)<this.width-1||t.get(i).push(a)}for(let a of t.values())x.shuffle(a);for(let[a,n,i]of e._exits){if(s.get(n).has(a))continue;let o=t.get(n).pop();if(o==null)throw new Error(`Could not transfer exit ${n} in ${this.rom.locations[this.id]}: no eligible screen
${this.show()}`);let d=this.rom.locations[i[0]>>>8].meta,c=i[0]&255,f=i[1];if(d===e){let h=t.get(f).pop();if(h==null)throw new Error("Impossible");this._exits.set(o,n,[this.id<<8|h,f]),this._exits.set(h,f,[this.id<<8|o,n]),s.get(f).add(c);continue}let l=d._exits.get(c,f);if(!l){let h=this.rom.locations[i[0]>>>8];throw console.log(d),new Error(`No exit for ${h} at ${A(c)} ${f}
${d.show()}
${this.rom.locations[this.id]} at ${A(a)} ${n}
${this.show()}`)}l[0]>>>8===this.id&&(l[0]&255)===a&&l[1]===n&&d._exits.set(c,f,[this.id<<8|o,n]),this._exits.set(o,n,i)}}transferSpawns(e,x){let t=new Map,s=new Map,a=[],n=[],i=[],o=[],d=[];for(let h of[this,e]){for(let b of h.allPos()){let u=h._screens[b],S=b&240,m=(b&15)<<4;if(u.hasFeature("pit")&&h===this)s.set(b,u.edgeIndex("c")===5?0:1);else if(u.data.statues?.length&&h===this)for(let p=0;p<u.data.statues.length;p++){let g=u.data.statues[p]<<12,M=(b&15^b>>>4^p)&1?80:160;a.push([b,g|M])}if(h===this&&u.hasFeature("wall")){if(u.data.wall==null)throw new Error("Missing wall prop");let p=[S|u.data.wall>>4,m|u.data.wall&15];i.push(p),u.data.tilesets.lime&&i.push([p[0]-1,p[1]])}else if(h===this&&u.hasFeature("bridge")){if(u.data.wall==null)throw new Error("Missing wall prop");o.push([S|u.data.wall>>4,m|u.data.wall&15])}if(!!u.hasFeature("arena"))if(h===this)d.push([S|8,m|8]);else{let[p,g]=d.pop();n.push([S|8,m|8,p,g,144,"arena"])}}h===this&&(x.shuffle(d),x.shuffle(a))}for(let h of[this,e])for(let[b,u,S]of h._exits){let m=h._screens[b],p=m.data.exits?.find(P=>P.type===u);if(!p)throw new Error(`Invalid exit: ${m.name} ${u}`);let g=b&15,w=b>>>4,M=p.exits[0]&15,I=p.exits[0]>>>4;if(h===this)t.set(S,[w<<4|I,g<<4|M]);else if(S[0]>>>8!==this.id){let[P,k]=t.get(S);n.push([w<<4|I,g<<4|M,P,k,25,"exit"])}}let c=[[],[],[],[],[],[]];for(let h of this.allPos()){let b=this._screens[h];for(let[u,S=112,m=120]of b.data.poi??[]){let p=((h&240)<<4)+S,g=((h&15)<<8)+m;c[u].push([p,g])}}for(let h of c)x.shuffle(h);let f=[...C0.concat(...c)],l=this.rom.locations[this.id];for(let h of x.ishuffle(l.spawns)){if(h.isMonster()){let m=Hr.indexOf(h.monsterId);if(m>=0&&s.size){let[[p,g]]=s;s.delete(p),h.monsterId=Hr[m&2|g],h.screen=p,h.tile=g?115:71}else if(h.monsterId===143&&a.length){let[p,g]=a.pop();h.screen=p,h.coord=g}continue}else if(h.isWall()){let m=(h.wallType()==="bridge"?o:i).pop();if(!m)throw new Error(`Not enough ${h.wallType()} screens in new metalocation: ${l}
${this.show()}`);let[p,g]=m;h.yt=p,h.xt=g;continue}else if(h.isNpc()||h.isBoss()||h.isTrigger()||h.isGeneric()){let m=[-1,-1,1/0];for(let[p,g,w,M,I,P]of n){if(P!=="arena"&&h.isBoss())continue;let k=Es(h.yt,p)**2+(h.xt-g)**2;k<=I&&k<m[2]&&(m=[wr(h.yt,Es(w,p)),h.xt+M-g,k])}if(Number.isFinite(m[2])){[h.yt,h.xt]=m;continue}}if(h.isTrigger()||h.isBoss())throw new Error(`Could not place ${l} ${h.isBoss()?"Boss":"Trigger"} ${h.hex()}
${this.show()}`);let b=f.shift();if(!b)throw new Error(`Ran out of POI for ${l}`);let[u,S]=b;n.push([h.y>>>4,h.x>>>4,u>>>4,S>>>4,4,"???"]),h.y=u,h.x=S}}reconcileExits(e){let x=[],t=[];for(let s of[this,e])for(let[a,n,[i,o]]of s._exits){if(o.startsWith("seamless"))continue;let c=this.rom.locations[i>>>8].meta._exits.get(i&255,o);if(c){let[f,l]=c;if(f>>>8===s.id&&(f&255)===a&&l===n){x.push([s===this?e:this,a,n,[i,o]]);continue}}t.push([s,a,n])}for(let[s,a,n]of t)s._exits.delete(a,n);for(let[s,a,n,i]of x)s._exits.set(a,n,i)}writeEntrance0(){if(!!this._entrance0)for(let[e,x]of this._exits){if(x!==this._entrance0)continue;let t=this._screens[e].findExitByType(x);this.rom.locations[this.id].entrances[0]=ix.of({screen:e,coord:t.entrance});return}}write(){let e=this.rom.locations[this.id],x=new Set;for(let[i,o,[d,c]]of this._exits){let f=this._screens[i],l=d>>8,h=d&255,b=this.rom.locations[l],S=b.meta._screens[d&255],m=f.data.exits?.find(w=>w.type===o),p=S.data.exits?.find(w=>w.type===c);if(!m||!p)throw new Error(`Missing ${m?"dest":"source"} exit:
  From: ${e} @ ${A(i)}:${o} ${f.name}
  To:   ${b} @ ${A(h)}:${c} ${S.name}`);let g=32;if(p.type.startsWith("seamless"))x.add(i);else{let w=p.entrance;w>61439&&(h+=16,w-=65536),g=b.findOrAddEntrance(h,w)}for(let w of m.exits){let M=i;(w&240)===240&&(M+=16,w&=15),e.exits.push(jx.of({screen:M,tile:w,dest:l,entrance:g}))}}e.width=this._width,e.height=this._height,e.screens=[];for(let i=0;i<this._height;i++){let o=[];e.screens.push(o);for(let d=0;d<this._width;d++)o.push(this._screens[i<<4|d].sid)}e.tileset=this.tileset.tilesetId,e.tileEffects=this.tileset.effects().id;let t=new X0;for(let i of this.allPos()){if(x.has(i))continue;let o=this._screens[i],d=i+16,c=i+1;!x.has(d)&&(o.data.edges?.[2]??" ")!==" "&&t.union([i,d]),!x.has(c)&&(o.data.edges?.[3]??" ")!==" "&&t.union([i,c]),t.union([i])}let s=t.map(),a=new Set;for(let[i]of this._exits)for(let o of s.get(i)??[])a.add(o);e.flags=[];let n=[...this.freeFlags];for(let i of this.allPos()){let o=this._screens[i],d;o.data.wall!=null&&a.has(i)?d=n.pop()?.id??this.rom.flags.alloc(512):o.flag==="always"?d=this.rom.flags.AlwaysTrue.id:o.flag==="calm"?d=this.rom.flags.CalmedAngrySea.id:o.flag==="custom:false"?d=this.customFlags.get(i)?.id:o.flag==="custom:true"&&(d=this.customFlags.get(i)?.id??this.rom.flags.AlwaysTrue.id),d!=null&&e.flags.push(r6.of({screen:i,flag:d}))}e.pits=[];for(let[i,o]of this._pits){let d=o&255,c=o>>>8;e.pits.push(ae.of({fromScreen:i,toScreen:d,dest:c}))}}replaceMonsters(e){if(this.id===104)return;let x=this.rom.locations[this.id],t=x.monsterPlacer(e);for(let s of x.spawns){if(!s.used||!s.isMonster())continue;let a=x.rom.objects[s.monsterId];if(!(a instanceof R))continue;let n=t(a);n==null?(console.error(`no valid location for ${A(a.id)} ${a.name} in ${x}`),s.used=!1):a.isBird()?(s.y=4048,s.x=2032,s.timed=!0):(s.screen=n>>>8,s.tile=n&255)}}},vd=new Set([65594,65595,1392800,1716320,4202496,4202544,4292816,6326207,10552102,10552105,11077158,11077161]),Td=["above","left of","below","right of"];function Wr(r,e){return((r>>>4)-(e>>>4))**2+((r&15)-(e&15))**2}function zr(r,e,x,t){let s=e&15,a=e>>>4,n=x&15,i=x>>>4,o=r&15,d=r>>>4,c=Math.max(0,Math.min(t.width-1,o+s-n));return Math.max(0,Math.min(t.height-1,d+a-i))<<4|c}var Hr=[126,127,159,141];var{$0a:Ed,$0b:kd,$0c:Rd,$0d:Ur}=n0,L0={subArea:"cave",music:r=>`${r.name}-Cave`,palette:r=>`${r.name}-Cave`},Y={subArea:"house",palette:()=>Symbol()},Md={subArea:"house",palette:()=>Symbol(),music:r=>`${r.name}-FortuneTeller`},Kr={name:"mesia",music:r=>`${r.name}-Mesia`,palette:r=>r.name==="Tower"?r.name:`${r.name}-Mesia`},Cd={name:"dyna",music:r=>`${r.name}-Dyna`,palette:r=>`${r.name}-Dyna`},jr={name:"goa 1",music:"goa 1",palette:"goa 1"},Vr={name:"goa 2",music:"goa 2",palette:"goa 2"},Yr={name:"goa 3",music:"goa 3",palette:"goa 3"},Ms={...Yr,palette:"goa 3 upper"},re={name:"goa 4",music:"goa 4",palette:"goa 4"},Jr={...re,palette:"goa 4 lower"},v=(()=>{let r=or(),e;function x(t,s={}){return s={...s},e=s.area=s.area||e,r(t,s)}return x.commit=t=>{r.commit(t,(s,a,n)=>{let i=g6(s),o=n.area,d=typeof n.music=="function"?n.music(o):n.music!=null?n.music:o.name,c=typeof n.palette=="function"?n.palette(o):n.palette||o.name,f={area:o,name:i,music:d,palette:c};n.houseType!=null&&(f.houseType=n.houseType),n.subArea!=null&&(f.subArea=n.subArea),n.bossScreen!=null&&(f.bossScreen=n.bossScreen);let l=new N6(t.rom,a,f);return a>=0&&(t[a]=l),l})},x})(),Ot=class extends Array{constructor(x){super(256);this.rom=x;this.MezameShrine=v(0,{area:$.Mezame});this.Leaf_OutsideStart=v(1,{music:1});this.Leaf=v(2,{area:$.Leaf});this.ValleyOfWind=v(3,{area:$.ValleyOfWind});this.SealedCave1=v(4,{area:$.SealedCave});this.SealedCave2=v(5);this.SealedCave6=v(6);this.SealedCave4=v(7);this.SealedCave5=v(8);this.SealedCave3=v(9);this.SealedCave7=v(10,{bossScreen:145});this.SealedCave8=v(12);this.WindmillCave=v(14,{area:$.WindmillCave});this.Windmill=v(15,{area:$.Windmill,music:0,houseType:"outside"});this.ZebuCave=v(16,{area:$.ZebuCave});this.MtSabreWest_Cave1=v(17,{area:$.MtSabreWest,...L0});this.CordelPlainWest=v(20,{area:$.CordelPlain});this.CordelPlainEast=v(21);this.Brynmaer=v(24,{area:$.Brynmaer});this.OutsideStomHouse=v(25,{area:$.StomHouse,music:0});this.Swamp=v(26,{area:$.Swamp,bossScreen:124});this.Amazones=v(27,{area:$.Amazones,fixed:[13,14]});this.Oak=v(28,{area:$.Oak});this.StomHouse=v(30,{area:$.StomHouse,houseType:"outside"});this.MtSabreWest_Lower=v(32,{area:$.MtSabreWest});this.MtSabreWest_Upper=v(33);this.MtSabreWest_Cave2=v(34,L0);this.MtSabreWest_Cave3=v(35,L0);this.MtSabreWest_Cave4=v(36,L0);this.MtSabreWest_Cave5=v(37,L0);this.MtSabreWest_Cave6=v(38,L0);this.MtSabreWest_Cave7=v(39,L0);this.MtSabreNorth_Main=v(40,{area:$.MtSabreNorth,bossScreen:181});this.MtSabreNorth_Middle=v(41);this.MtSabreNorth_Cave2=v(42,L0);this.MtSabreNorth_Cave3=v(43,L0);this.MtSabreNorth_Cave4=v(44,L0);this.MtSabreNorth_Cave5=v(45,L0);this.MtSabreNorth_Cave6=v(46,L0);this.MtSabreNorth_PrisonHall=v(47,L0);this.MtSabreNorth_LeftCell=v(48,L0);this.MtSabreNorth_LeftCell2=v(49,L0);this.MtSabreNorth_RightCell=v(50,L0);this.MtSabreNorth_Cave8=v(51,L0);this.MtSabreNorth_Cave9=v(52,L0);this.MtSabreNorth_SummitCave=v(53,L0);this.MtSabreNorth_Cave1=v(56,L0);this.MtSabreNorth_Cave7=v(57,L0);this.Nadare_Inn=v(60,{area:$.Nadare,...Y});this.Nadare_ToolShop=v(61,{...Y,houseType:"tool"});this.Nadare_BackRoom=v(62,{...Y,houseType:"house"});this.WaterfallValleyNorth=v(64,{area:$.WaterfallValley});this.WaterfallValleySouth=v(65);this.LimeTreeValley=v(66,{area:$.LimeTreeValley,music:0});this.LimeTreeLake=v(67,{area:$.LimeTreeLake,music:0});this.KirisaPlantCave1=v(68,{area:$.KirisaPlantCave});this.KirisaPlantCave2=v(69);this.KirisaPlantCave3=v(70);this.KirisaMeadow=v(71,{area:$.KirisaMeadow});this.FogLampCave1=v(72,{area:$.FogLampCave});this.FogLampCave2=v(73);this.FogLampCave3=v(74);this.FogLampCaveDeadEnd=v(75);this.FogLampCave4=v(76);this.FogLampCave5=v(77);this.FogLampCave6=v(78);this.FogLampCave7=v(79);this.Portoa=v(80,{area:$.Portoa});this.Portoa_FishermanIsland=v(81,{area:$.FishermanHouse,music:0});this.MesiaShrine=v(82,{area:$.LimeTreeLake,...Kr});this.WaterfallCave1=v(84,{area:$.WaterfallCave});this.WaterfallCave2=v(85);this.WaterfallCave3=v(86);this.WaterfallCave4=v(87);this.TowerEntrance=v(88,{area:$.Tower});this.Tower1=v(89);this.Tower2=v(90);this.Tower3=v(91);this.TowerOutsideMesia=v(92);this.TowerOutsideDyna=v(93);this.TowerMesia=v(94,Kr);this.TowerDyna=v(95,Cd);this.AngrySea=v(96,{area:$.AngrySea});this.BoatHouse=v(97,{houseType:"outside"});this.JoelLighthouse=v(98,{area:$.Lighthouse,music:0,houseType:"outside"});this.UndergroundChannel=v(100,{area:$.UndergroundChannel});this.ZombieTown=v(101,{area:$.ZombieTown});this.EvilSpiritIsland1=v(104,{area:$.EvilSpiritIslandEntrance,music:1});this.EvilSpiritIsland2=v(105,{area:$.EvilSpiritIsland});this.EvilSpiritIsland3=v(106);this.EvilSpiritIsland4=v(107);this.SaberaPalace1=v(108,{area:$.SaberaFortress,bossScreen:253,houseType:"palace"});this.SaberaPalace2=v(109);this.SaberaPalace2_West=v(-1);this.SaberaPalace3=v(110,{bossScreen:253});this.JoelSecretPassage=v(112,{area:$.JoelPassage});this.Joel=v(113,{area:$.Joel});this.Swan=v(114,{area:$.Swan,music:1});this.SwanGate=v(115,{area:$.SwanGate,music:1});this.GoaValley=v(120,{area:$.GoaValley});this.MtHydra=v(124,{area:$.MtHydra});this.MtHydra_Cave1=v(125,L0);this.MtHydra_OutsideShyron=v(126,{fixed:[13,14]});this.MtHydra_Cave2=v(127,L0);this.MtHydra_Cave3=v(128,L0);this.MtHydra_Cave4=v(129,L0);this.MtHydra_Cave5=v(130,L0);this.MtHydra_Cave6=v(131,L0);this.MtHydra_Cave7=v(132,L0);this.MtHydra_Cave8=v(133,L0);this.MtHydra_Cave9=v(134,L0);this.MtHydra_Cave10=v(135,L0);this.Styx1=v(136,{area:$.Styx,houseType:"palace"});this.Styx2=v(137);this.Styx2_East=v(-1);this.Styx3=v(138);this.Shyron=v(140,{area:$.Shyron});this.Goa=v(142,{area:$.Goa});this.GoaFortressBasement=v(143,{area:$.FortressBasement,music:0});this.Desert1=v(144,{area:$.Desert1});this.OasisCaveMain=v(145,{area:$.OasisCave});this.DesertCave1=v(146,{area:$.DesertCave1,music:0});this.Sahara=v(147,{area:$.Sahara});this.SaharaOutsideCave=v(148,{music:0});this.DesertCave2=v(149,{area:$.DesertCave2,music:1});this.SaharaMeadow=v(150,{area:$.SaharaMeadow,music:0});this.Desert2=v(152,{area:$.Desert2});this.Pyramid_Entrance=v(156,{area:$.Pyramid,houseType:"palace"});this.Pyramid_Branch=v(157);this.Pyramid_Main=v(158);this.Pyramid_Draygon=v(159);this.Crypt_Entrance=v(160,{area:$.Crypt});this.Crypt_Hall1=v(161);this.Crypt_Branch=v(162);this.Crypt_DeadEndLeft=v(163);this.Crypt_DeadEndRight=v(164);this.Crypt_Hall2=v(165);this.Crypt_Draygon2=v(166);this.Crypt_Teleporter=v(167,{music:"Crypt-Teleporter"});this.GoaFortress_Entrance=v(168,{area:$.GoaFortress,music:1,houseType:"palace"});this.GoaFortress_Kelbesque=v(169,{bossScreen:115,...jr});this.GoaFortress_Zebu=v(170,{...jr,palette:1});this.GoaFortress_Sabera=v(171,Vr);this.GoaFortress_Tornel=v(172,{bossScreen:145,...Vr,palette:1});this.GoaFortress_Mado1=v(173,Yr);this.GoaFortress_Mado2=v(174,Ms);this.GoaFortress_Mado3=v(175,Ms);this.GoaFortress_Karmine1=v(176,re);this.GoaFortress_Karmine2=v(177,re);this.GoaFortress_Karmine3=v(178,re);this.GoaFortress_Karmine4=v(179,re);this.GoaFortress_Karmine5=v(180,re);this.GoaFortress_Karmine6=v(181,Jr);this.GoaFortress_Karmine7=v(182,{bossScreen:253,...Jr});this.GoaFortress_Exit=v(183,{music:0});this.OasisCave_Entrance=v(184,{area:$.OasisEntrance,music:2});this.GoaFortress_Asina=v(185,{area:$.GoaFortress,...Ms,bossScreen:145});this.GoaFortress_Kensu=v(186,re);this.Goa_House=v(187,{area:$.Goa,...Y,houseType:"house"});this.Goa_Inn=v(188,{...Y,houseType:"inn"});this.Goa_ToolShop=v(190,{...Y,houseType:"tool"});this.Goa_Tavern=v(191,{...Y,houseType:"tavern"});this.Leaf_ElderHouse=v(192,{area:$.Leaf,...Y,houseType:"house"});this.Leaf_RabbitHut=v(193,{...Y,houseType:"shed"});this.Leaf_Inn=v(194,{...Y,houseType:"inn"});this.Leaf_ToolShop=v(195,{...Y,houseType:"tool"});this.Leaf_ArmorShop=v(196,{...Y,houseType:"armor"});this.Leaf_StudentHouse=v(197,{...Y,houseType:"house"});this.Brynmaer_Tavern=v(198,{area:$.Brynmaer,...Y,houseType:"tavern"});this.Brynmaer_PawnShop=v(199,{...Y,houseType:"pawn"});this.Brynmaer_Inn=v(200,{...Y,houseType:"inn"});this.Brynmaer_ArmorShop=v(201,{...Y,houseType:"armor"});this.Brynmaer_ItemShop=v(203,{...Y,houseType:"tool"});this.Oak_ElderHouse=v(205,{area:$.Oak,...Y,houseType:"house"});this.Oak_MotherHouse=v(206,{...Y,houseType:"house"});this.Oak_ToolShop=v(207,{...Y,houseType:"tool"});this.Oak_Inn=v(208,{...Y,houseType:"inn"});this.Amazones_Inn=v(209,{area:$.Amazones,...Y,houseType:"inn"});this.Amazones_ItemShop=v(210,{...Y,houseType:"tool"});this.Amazones_ArmorShop=v(211,{...Y,houseType:"armor"});this.Amazones_Elder=v(212,{...Y,houseType:"house",fixed:[13,14]});this.Nadare=v(213,{area:$.Nadare});this.Portoa_FishermanHouse=v(214,{area:$.FishermanHouse,...Y,music:0,houseType:"outside"});this.Portoa_PalaceEntrance=v(215,{area:$.PortoaPalace,houseType:"palace"});this.Portoa_FortuneTeller=v(216,{area:$.Portoa,fixed:[13,14],...Md,houseType:"house"});this.Portoa_PawnShop=v(217,{...Y,houseType:"pawn"});this.Portoa_ArmorShop=v(218,{...Y,houseType:"armor"});this.Portoa_Inn=v(220,{...Y,houseType:"inn"});this.Portoa_ToolShop=v(221,{...Y,houseType:"tool"});this.PortoaPalace_Left=v(222,{area:$.PortoaPalace,...Y,houseType:"house"});this.PortoaPalace_ThroneRoom=v(223,Y);this.PortoaPalace_Right=v(224,{...Y,houseType:"house"});this.Portoa_AsinaRoom=v(225,{area:$.UndergroundChannel,...Y,music:"asina"});this.Amazones_ElderDownstairs=v(226,{area:$.Amazones,...Y});this.Joel_ElderHouse=v(227,{area:$.Joel,...Y,houseType:"house"});this.Joel_Shed=v(228,{...Y,houseType:"shed"});this.Joel_ToolShop=v(229,{...Y,houseType:"tool"});this.Joel_Inn=v(231,{...Y,houseType:"inn"});this.ZombieTown_House=v(232,{area:$.ZombieTown,...Y,houseType:"house"});this.ZombieTown_HouseBasement=v(233,Y);this.Swan_ToolShop=v(235,{area:$.Swan,...Y,houseType:"tool"});this.Swan_StomHut=v(236,{...Y,houseType:"shed"});this.Swan_Inn=v(237,{...Y,houseType:"inn"});this.Swan_ArmorShop=v(238,{...Y,houseType:"armor"});this.Swan_Tavern=v(239,{...Y,houseType:"tavern"});this.Swan_PawnShop=v(240,{...Y,houseType:"pawn"});this.Swan_DanceHall=v(241,{...Y,houseType:"house"});this.Shyron_Temple=v(242,{area:$.ShyronTemple,bossScreen:112,houseType:"palace"});this.Shyron_TrainingHall=v(243,{area:$.Shyron,...Y,houseType:"house"});this.Shyron_Hospital=v(244,{...Y,houseType:"house"});this.Shyron_ArmorShop=v(245,{...Y,houseType:"armor"});this.Shyron_ToolShop=v(246,{...Y,houseType:"tool"});this.Shyron_Inn=v(247,{...Y,houseType:"inn"});this.Sahara_Inn=v(248,{area:$.Sahara,...Y,houseType:"inn"});this.Sahara_ToolShop=v(249,{...Y,houseType:"tool"});this.Sahara_ElderHouse=v(250,{...Y,houseType:"house"});this.Sahara_PawnShop=v(251,{...Y,houseType:"pawn"});this.EastCave1=v(-1,{area:$.EastCave});this.EastCave2=v(-1);this.EastCave3=v(-1);this.FishermanBeach=v(-1,{area:$.FishermanHouse,...Y});this.locsByScreen=new j(()=>[]);v.commit(this);for(let t=0;t<256;t++){if(this[t]){this.indexScreens(this[t]);continue}this[t]=new N6(x,t,{area:$.Unused,name:"",music:"",palette:""})}}indexScreens(x){for(let t of x.screens)for(let s of t)this.locsByScreen.get(s).push(x)}renumberScreen(x,t){let s=this.locsByScreen.get(x);this.locsByScreen.set(t,s),this.locsByScreen.delete(x);for(let a of s)for(let n of a.screens)for(let i=0;i<n.length;i++)n[i]===x&&(n[i]=t)}allocate(x,t){for(let s of this)if(!(s.used||t&&s.id<t.id))return x.id=s.id,x.used=!0,this.indexScreens(x),this[s.id]=x;throw new Error("No unused location")}write(){let x=this.rom.assembler();N0(x,Ed,34040,40960),N0(x,kd,40960,48640),N0(x,Rd,37881,40960),N0(x,Ur,40960,44032),N0(x,Ur,44544,49152);for(let t of this)t.assemble(x);return[x.module()]}location(){}},N6=class extends b0{constructor(x,t,s){super(x,t);this.data=s;this.monstersMoved=!1;this._isShop=void 0;this._meta=void 0;let a=t>=0?_0(x.prg,this.mapDataPointer)+49152:0;if(this.used=a>49152&&!!this.name,!this.used){this.bgm=this.originalBgm=0,this.layoutWidth=0,this.layoutHeight=0,this.animation=0,this.screens=[[0]],this.tilePalettes=[36,1,38],this.originalTilePalettes=[36,1,38],this.tileset=128,this.tileEffects=179,this.tilePatterns=[2,4],this.exits=[],this.entrances=[],this.flags=[],this.pits=[],this.spawns=[],this.spritePalettes=[0,0],this.spritePatterns=[0,0],this.checkpoint=this.saveable=!1;return}let n=_0(x.prg,a)+49152,i=_0(x.prg,a+2)+49152,o=_0(x.prg,a+4)+49152,d=_0(x.prg,a+6)+49152,c=_0(x.prg,a+8)+49152,f=this.used&&n!==a+10,l=d-o;this.exits=(()=>{let m=[],p=d;for(;!(x.prg[p]&128);)x.prg[p+2]!=255&&m.push(jx.from(x.prg,p)),p+=4;return x.prg[p]!==255&&(f=!!(x.prg[p]&64),l=(x.prg[p]&31)<<2),m})();let h=f?_0(x.prg,a+10)+49152:0;this.bgm=this.originalBgm=x.prg[n],this.layoutWidth=x.prg[n+1],this.layoutHeight=x.prg[n+2],this.animation=x.prg[n+3];let b=x.prg[n+4]?256:0;this.screens=O(this.height,m=>o0(x.prg,n+5+m*this.width,this.width).map(p=>b|p)),this.tilePalettes=o0(x.prg,i,3),this.originalTilePalettes=o0(this.tilePalettes,0,3),this.tileset=x.prg[i+3],this.tileEffects=x.prg[i+4],this.tilePatterns=o0(x.prg,i+5,2),this.entrances=ar(4,x.prg.slice(o,o+l),m=>ix.from(m)),this.flags=kt(x.prg,c,2,255,1/0,m=>r6.from(m)),this.pits=h?kt(x.prg,h,4,255,1/0,m=>ae.from(m)):[];let u=_0(x.prg,this.npcDataPointer)+65536,S=u!==65536;this.spritePalettes=S?o0(x.prg,u+1,2):[0,0],this.spritePatterns=S?o0(x.prg,u+3,2):[0,0],this.spawns=S?kt(x.prg,u+5,4,255,1/0,m=>v0.from(m)):[],this.checkpoint=!!(x.prg[196352|t]&128),this.saveable=!!(x.prg[196352|t]&1)}set meta(x){this._meta=x}get meta(){return this.ensureMeta(),this._meta}ensureMeta(){this._meta||(this._meta=cx.of(this))}set musicGroup(x){this._musicGroup=x}get musicGroup(){return this.ensureMusicGroup(),this._musicGroup}ensureMusicGroup(){if(this._musicGroup==null){let x=this.data.music;this._musicGroup=typeof x!="number"?x:this.rom.locations[this.exits[x].dest].musicGroup}}set colorGroup(x){this._colorGroup=x}get colorGroup(){return this.ensureColorGroup(),this._colorGroup}ensureColorGroup(){if(this._colorGroup==null){let x=this.data.music;this._colorGroup=typeof x!="number"?x:this.rom.locations[this.exits[x].dest].colorGroup}}lazyInitialization(){this.ensureMeta(),this.ensureMusicGroup(),this.ensureColorGroup()}get name(){return this.data.name}get mapDataPointer(){if(this.id<0)throw new Error(`no mapdata pointer for ${this.name}`);return 82688+(this.id<<1)}get npcDataPointer(){if(this.id<0)throw new Error(`no npcdata pointer for ${this.name}`);return 102913+(this.id<<1)}get hasSpawns(){return this.spawns.length>0}mapPlane(){let x=new j(()=>new Set);for(let s of this.screens)for(let a of s)x.get(a>>>8).add(a);if(x.size!==1)throw new Error(`Non-unique screen page for ${this}: ${[...x.values()].map(s=>[...s].map(a=>{let[n]=this.rom.metascreens.getById(a);return`${A(a)} ${n?.name??"??"}`}).join(", ")).join(", ")}`);let[t]=x.keys();return t}isShop(){return this._isShop==null&&(this._isShop=this.rom.shops.findIndex(x=>x.location===this.id)>=0,this.id===251&&(this._isShop=!0)),this._isShop}spawn(x){let t=this.spawns[x-13];if(!t)throw new Error(`Expected spawn $${A(x)}`);return t}get width(){return this.layoutWidth+1}set width(x){this.layoutWidth=x-1}get height(){return this.layoutHeight+1}set height(x){this.layoutHeight=x-1}findOrAddEntrance(x,t){for(let s=0;s<this.entrances.length;s++){let a=this.entrances[s];if(a.screen===x&&a.coord===t)return s}return this.entrances.push(ix.of({screen:x,coord:t})),this.entrances.length-1}assemble(x){if(!this.used)return;let t=this.id.toString(16).padStart(2,"0"),s=this.spawns.length?this.spritePalettes:[255,255],a=this.spawns.length?this.spritePatterns:[255,255],n=[],i=[0,...s,...a,...xe(this.spawns),255];x.segment("0c","0d"),x.reloc(`NpcData_${t}`);let o=x.pc();x.byte(...i),x.org(37377+(this.id<<1),`NpcData_${t}_Ptr`),x.word(o),x.segment("17"),x.org(48896|this.id),x.byte(+this.checkpoint<<7|+this.saveable),x.segment("0a","0b");let d=[];for(let g of xe(this.screens))d.push(g&255);let c=this.rom.compressedMapData?[this.bgm,this.layoutHeight<<4|this.layoutWidth,this.mapPlane()<<2|this.animation,...d]:[this.bgm,this.layoutWidth,this.layoutHeight,this.animation,this.mapPlane()?128:0,...d];x.reloc(`MapData_${t}_Layout`);let f=x.pc();x.byte(...c),n.push(f),x.reloc(`MapData_${t}_Graphics`);let l=x.pc();if(x.byte(...this.tilePalettes,this.tileset,this.tileEffects,...this.tilePatterns),n.push(l),this.height===1){for(let g of this.entrances)!g.used||g.y>191&&(g.y=191);for(let g of this.exits)g.yt>12&&(g.yt=12)}x.reloc(`MapData_${t}_Entrances`);let h=x.pc();x.byte(...xe(this.entrances)),n.push(h),x.reloc(`MapData_${t}_Exits`);let b=x.pc();x.byte(...xe(this.exits),128|(this.pits.length?64:0)|this.entrances.length),n.push(b),x.reloc(`MapData_${t}_Flags`);let u=x.pc();x.byte(...xe(this.flags),255),n.push(u);let S=xe(this.pits);if(S.length){x.reloc(`MapData_${t}_Pits`);let g=x.pc();x.byte(...S),n.push(g)}x.reloc(`MapData_${t}`);let m=x.pc();x.word(...n),x.org(33536+(this.id<<1),`MapData_${t}_Ptr`),x.word(m);let p=this.bossId();if(p!=null&&this.id!==95){let g=[a[0],void 0];this.id===166&&(g=[83,80]);let w=this.rom.bossKills[p].base,M=this.id===166?0:this.bgm,I=[,,,M,,...this.tilePalettes,,,,this.spritePalettes[0],,,,,,,,this.animation],[]=[g];x.segment("0f");for(let k=0;k<I.length;k++){let N=I[k];N!=null&&(x.org(w+k,`Boss_${p}_${k}`),x.byte(N))}let P=47041+5*p;x.org(P,`Boss_${p}_Post`),x.byte(s[1])}}allScreens(){let x=new Set;for(let t of this.screens)for(let s of t)x.add(this.rom.screens[s]);return x}bossId(){for(let x=0;x<14;x++)if(this.rom.prg[129373+x]===this.id)return x}hasDolphin(){return this.id===96||this.id===100||this.id===104}isTower(){return(this.id&248)===88}reachableTiles(x=!1){this.hasDolphin()&&(x=!0);let t=new Set(this.exits.map(f=>f.screen<<8|f.tile)),s=new X0,a=this.rom.tilesets[this.tileset],n=this.rom.tileEffects[this.tileEffects-179],i=new Set;for(let f=0;f<this.height;f++){let l=this.screens[f];for(let h=0;h<this.width;h++){let b=this.rom.screens[l[h]],u=f<<4|h,S=this.flags.find(m=>m.screen===u);for(let m=0;m<240;m++){let p=u<<8|m;if(t.has(p))continue;let g=b.tiles[m],w=n.effects[g],M=x?w&4:w&6;S&&M&&g<32&&a.alternates[g]!=g&&(g=a.alternates[g],w=n.effects[g],M=x?w&4:w&6),M||i.add(p)}}}for(let f of i){let l=(f&15)===15?f+241:f+1;i.has(l)&&s.union([f,l]);let h=(f&240)===224?f+3872:f+16;i.has(h)&&s.union([f,h])}let o=s.map(),d=new Set;for(let f of this.entrances){if(!f.used)continue;let l=f.screen<<8|f.tile;d.add(o.get(l)||new Set)}let c=new Map;for(let f of d)for(let l of f){let h=this.screens[l>>>12][l>>>8&15],b=this.rom.screens[h];c.set(l,n.effects[b.tiles[l&255]])}return c}screenMover(){let x=new j(()=>[]),t=C0.concat(this.spawns,this.exits,this.entrances);for(let s of t)x.get(s.screen).push(s);return(s,a)=>{for(let n of x.get(s))n.screen=a}}moveScreen(x,t){let s=C0.concat(this.spawns,this.exits,this.entrances);for(let a of s)a.screen===x&&(a.screen=t)}monsterPlacer(x){this.monstersMoved=!0;let t=this.data.bossScreen,s=this.reachableTiles(!1),a=new Map([...s.keys()].map(l=>[l,0])),n=[],i=[],o=[],d=[],c=[],f=this.hasDolphin()?37:39;for(let[l,h]of a){let b=this.screens[l>>>12][l>>>8&15];if(b!==t){for(let u of Id(l,this.width,this.height))a.has(u)||a.set(u,h+1);!h&&!(s.get(l)&f)&&n.push(l),this.id===26?this.rom.screens[b].tiles[l&255]===240&&d.push(l):h>=2&&h<=4&&d.push(l),h>=3&&h<=7&&i.push(l),h>=12&&o.push(l)}}return l=>{let h=l.clearance(),b=l.placement(),u=[...b==="normal"?n:b==="moth"?i:b==="bird"?o:b==="plant"?d:u6(b)],S;x:for(;u.length;){let m=x.nextInt(u.length),[p]=u.splice(m,1),g=(p&3840)>>>4|p&15,w=(p&61440)>>>8|(p&240)>>>4;for(let{x:M,y:I,used:P}of this.entrances){if(!P)continue;if((w-(I>>4))**2+(g-(M>>4))**2<(h+1)**2)continue x}for(let M of this.exits){if(!M.isSeamless())continue;let{x:I,y:P}=M;if((w-(P>>4))**2+(g-(I>>4))**2<(h+8)**2)continue x}for(let[,M,I,P]of c){let k=(w-I)**2+(g-M)**2;if(!k)continue x;if(k<(h+P)**2){(!S||S[2]<k)&&(S=[g,w,k]);continue x}}S=[g,w,1/0];break}if(S){let[m,p]=S;c.push([l,m,p,h]);let g=p&240|(m&240)>>>4,w=(p&15)<<4|m&15;return g<<8|w}}}resizeScreens(x,t,s,a,n=0){let i=this.width+t+a,o=this.height+x+s,d=Array.from({length:o},(c,f)=>(f-=x,Array.from({length:i},(l,h)=>(h-=t,f<0||h<0||f>=this.height||h>=this.width?n:this.screens[f][h]))));this.width=i,this.height=o,this.screens=d;for(let c of this.flags)c.xs+=t,c.ys+=x;for(let c of this.pits)c.fromXs+=t,c.fromYs+=x;for(let c of[...this.spawns,...this.exits])c.xt+=16*t,c.yt+=16*x;for(let c of this.entrances)!c.used||(c.x+=256*t,c.y+=256*x)}writeScreens2d(x,t){let s=x&15,a=x>>>4;for(let n=0;n<t.length;n++){let i=t[n];for(let o=0;o<i.length;o++){let d=i[o];d!=null&&(d<0&&(d=~d,this.flags.push(r6.of({screen:a+n<<4|s+o,flag:this.rom.flags.AlwaysTrue.id}))),this.screens[a+n][s+o]=d)}}}connect(x,t,s){let a=x<0?256:0,n=s<0?256:0;x=x<0?~x:x,s=s<0?~s:s;let i=x>>>4,o=x&15,d=s>>>4,c=s&15,f=this.screens[i][o],l=t.screens[d][c],[h,b]=Xr[a|f],[u,S]=Xr[n|l],m=this.entrances.length,p=t.entrances.length;this.entrances.push(ix.of({y:i<<8|h>>>8,x:o<<8|h&255})),t.entrances.push(ix.of({y:d<<8|u>>>8,x:c<<8|u&255}));for(let g of b)this.exits.push(jx.of({screen:x,tile:g,dest:t.id,entrance:p}));for(let g of S)t.exits.push(jx.of({screen:s,tile:g,dest:this.id,entrance:m}))}neighborForEntrance(x){let t=this.entrances[x];if(!t)throw new Error(`no entrance ${A(this.id)}:${x}`);for(let s of this.exits){if(s.screen!==t.screen)continue;let a=Math.abs(s.x-t.x),n=Math.abs(s.y-t.y);if(a<24&&n<24)return this.rom.locations[s.dest]}throw new Error(`no exit found near ${A(this.id)}:${x}`)}toString(){return`${super.toString()} ${this.name}`}};function Id(r,e,x){let t=[],s=r&61680,a=r&3855;return s<(x-1<<12|224)&&t.push((r&240)===224?r+3872:r+16),s&&t.push((r&240)===0?r-3872:r-16),a<(e-1<<8|15)&&t.push((r&15)===15?r+241:r+1),a&&t.push((r&15)===0?r-241:r-1),t}var Xr={21:[37024,[137,138]],25:[24720,[88,89]],150:[16432,[50,51]],151:[44848,[178,179]],152:[16592,[60,61]],153:[45008,[188,189]],154:[8064,[39,40]],158:[57216,[231,232]],193:[20640,[73,74]],194:[24752,[90,91]],410:[53376,[199,200]]};var{$14:wx,$15:rn,$16_a:nn,$17:on}=n0,Ld=new Map([[6,"{}"],[7,"[]"]]),Cs=class{constructor(e,x,t,s,a){this.messages=e;this.part=x;this.id=t;this.bytes=[];this.hex="";let n=e.rom.prg,i=[];for(let o=s;s&&n[o];o++){let d=n[o];if(this.bytes.push(d),d===1){if(o!==s&&n[o-1]!==3)throw new Error(`Unexpected start message signal at ${o.toString(16)}`)}else if(d===2)i.push(`
 `);else if(d===3)i.push(`${Be.CONTINUED}
`);else if(d===4)i.push("{:HERO:}");else if(d===8)i.push("[:ITEM:]");else if(d>=5&&d<=9){let c=n[++o];if(this.bytes.push(c),d===9){i.push(" ".repeat(c));continue}let f=Ld.get(d);f&&(i.push(f[0]),i.push(c.toString(16).padStart(2,"0")),i.push(":")),i.push(a(c,d)),f&&i.push(f[1]),Ae[String.fromCharCode(n[o+1])]||i.push(" ")}else if(d>=128)i.push(a(d,0)),Ae[String.fromCharCode(n[o+1])]||i.push(" ");else if(d>=32)i.push(String.fromCharCode(d));else throw new Error(`Non-exhaustive switch: ${d} at ${o.toString(16)}`)}this.text=i.join("")}get mid(){return`${A(this.part)}:${A(this.id)}`}fixText(){if(this.checkText())return;let e=[],x=0,t=0,s=!1,a=[],n=new Map;function i(l,h=l.length){t+h>28&&c(),l===" "?(e.push(...a," "),a=[]):/^[[{]:/.test(l)?a.push({toString:()=>l,length:h}):a.push(l),t+=h,s=l.endsWith(" ")}function o(){s||i(" "),s=!0}function d(l){let h=l.split(/\s+/);for(let b=0;b<h.length;b++)b&&o(),i(h[b])}function c(){t=1+a.reduce((l,h)=>l+h.length,0),++x>2?(e.push(`#
 `),x=0):e.push(`
 `),s=!0}for(let l=0;l<this.text.length;l++){let h=this.text[l],b=this.text[l+1];if(/[\s\n#]/.test(h))o();else if(h==="{"){if(b===":")i("{:HERO:}",6);else{let u=this.text.indexOf(":",l),S=Number.parseInt(this.text.substring(l+1,u),16),m=this.messages.extraWords[6][S];n.set(m,`{${S.toString(16)}:${m}}`),d(m)}l=this.text.indexOf("}",l)}else if(h==="["){if(b===":"){let u=this.messages.rom.items;i("[:ITEM:]",Math.max(...u.map(S=>S.messageName.length)))}else{let u=this.text.indexOf(":",l),S=Number.parseInt(this.text.substring(l+1,u),16),m=this.messages.rom.items[S].messageName;n.set(m,`[${S.toString(16)}:${m}]`),d(m)}l=this.text.indexOf("]",l)}else i(h)}e.push(...a);let f=e.join("");for(let[l,h]of n)f.includes(l)&&(f=f.split(l).join(h));this.text=f}checkText(){let e=0,x=0,t=this.text.replace(/\s+$/mg,"");for(let s=0;s<t.length;s++){let a=t[s],n=t[s+1];if(a===`
`){if(e++,x=0,e>3)return!1}else if(a==="#")n===`
`&&s++,e=x=0;else if(a==="{"||a==="["){if(n===":"){if(a==="{")x+=6;else{let i=this.messages.rom.items;x+=Math.max(...i.map(o=>o.messageName.length))}if(x>28)return!1}else{let i=t.indexOf(":",s),o=Number.parseInt(t.substring(s+1,i),16);x+=(a==="{"?this.messages.personNames[o]:this.messages.itemNames[o]).length}s=t.indexOf(dn[a],s)}else x++;if(x>28||x>14&&e>2&&t.includes("#",s))return!1}return!0}},Ae={"\0":!0," ":!0,"!":!0,"'":!0,",":!0,".":!0,":":!0,";":!0,"?":!0,_:!0,"\n":!0,"#":!0},Qr=d0.of(wx,34564),Zr=d0.of(wx,34442),xn=d0.of(wx,34517),en=d0.of(wx,34537),Ad=d0.of(wx,34697),tn=d0.of(wx,34113),Bd=d0.of(wx,34380),sn=d0.of(wx,34124),an={21:rn,22:nn,23:on},Is=class{constructor(e){this.rom=e;this.partCount=34;this.commonWords=[];this.uncommonWords=[];this.personNames=[];this.itemNames=[];this.parts=[];let x=Qr.readAddress(e.prg),t=Zr.readAddress(e.prg),s=xn.readAddress(e.prg),a=en.readAddress(e.prg),n=tn.readAddress(e.prg),i=sn.readAddress(e.prg),o={5:t,6:s,7:a};this.extraWords={5:this.uncommonWords,6:this.personNames,7:this.itemNames};let d=(l,h,b)=>{let u=l[b];return u??(u=Rt(e.prg,h.plus(2*b).readAddress(e.prg).offset),l[b]=u)},c=(l,h)=>h?d(this.extraWords[h],o[h],l):d(this.commonWords,x,l-128);for(let l=0;l<73;l++)c(l,7);let f=n.offset;this.banks=o0(e.prg,f,this.partCount);for(let l=this.partCount-1;l>=0;l--){let h=i.plus(2*l).readAddress(e.prg),b=f-h.offset>>>1;f=h.offset;let u=an[this.banks[l]],S=this.parts[l]=[];for(let m=0;m<b;m++){let p=h.plus(2*m).readAddress(e.prg,u);S[m]=new Cs(this,l,m,p.offset,c)}}}*messages(e){for(let x of this.parts)if(e)for(let t of x)e.has(t.mid)&&(yield t);else yield*x}alloc(){let e=this.uses();for(let x of this.parts)for(let t of x)if(!e.has(t.mid))return t;throw new Error("could not find an unused message id")}uses(){let e=new Map;function x(t,s){let a=typeof t=="string"?t:t.mid,n=e.get(a)||new Set;n.add(s),e.set(a,n)}for(let t of this.rom.triggers)t.message.nonzero()&&x(t.message,`Trigger $${A(t.id)}`);for(let t of this.rom.items)for(let s of t.itemUseMessages())s.nonzero()&&x(s,`Item $${A(t.id)}`);for(let t of this.rom.npcs){for(let s of t.globalDialogs)x(s.message,`NPC $${A(t.id)}`);for(let[s,a]of t.localDialogs){let n=s>=0?` @ $${A(s)}`:"";for(let i of a)x(i.message,`NPC $${A(t.id)}${n}`)}}for(let t of this.rom.telepathy.sages){for(let s of t.defaultMessages)x(s,`Telepathy ${t.sage}`);for(let s of t.messageGroups)for(let[,...a]of s.messages)for(let n of a)x(n,`Telepathy ${t.sage}`)}for(let t of _d)x(t,"Hardcoded");return e}buildAbbreviationTable(e=this.uses()){let x=[],t=new Map,s=new Map;for(let f of this.messages(e)){f.fixText();let l=f.mid,h=t.get(f.text),b=h!=null&&s.get(h);if(b){b.push(l);continue}t.set(f.text,l),s.set(l,[]);let u=f.text,S=[];for(let m=0,p=u.length;m<=p;m++){let g=u[m],w=dn[g];if(Ae[g]||w||m===p){let M=u[m+1];if(w&&(m=Math.max(m,u.indexOf(w,m))),!S.length)continue;let I=(g===" "||g==="'")&&M&&!Ae[M]?g:"",P=S.join(""),k=x.length,N=P.length+(g===" "?1:0);S=[],x.push({str:P,id:k,chain:I,bytes:N,used:0,suffixes:new Set,mid:l})}else S.push(g)}}let a=new Map;for(let f=x.length-1;f>=0;f--){let l=x[f];for(let h=l.bytes-2;h>=0;h--){let u=l.str.substring(h),S=0,m=l,p=l.bytes-h-1;for(;;){let g=a.get(u);g||a.set(u,g={chains:S,missing:h,saving:-u.length,str:u,words:new Set}),g.words.add(f),g.saving+=p;for(let w=S;w>=0;w--)x[f+w].suffixes.add(g);if(!m.chain)break;u+=m.chain,m=x[f+ ++S],u+=m.str,p+=m.bytes}}}let n=new Set,i=[],o=({saving:f},{saving:l})=>l-f,d=[...a.values()].sort(o),c=0;for(;d.length&&c<Pd;){n.has(d[0].str)&&(d.sort(o),n.clear());let{str:f,saving:l,missing:h,words:b,chains:u}=d.shift();if(l<=0)break;c+=f.length+3;let S=i.length,m=new Set;for(let p of b){let g=x[p];for(let w of[g.mid,...s.get(g.mid)||[]])m.add(w)}i.push({bytes:S<128?[S+128]:[5,S-128],mids:m,str:f});for(let p of b)for(let g=0;g<=u;g++){let w=x[p+g],M=w.bytes-(g?0:h);for(let I of w.suffixes)I.saving-=M-w.used,n.add(I.str);w.used=M}if(i.length===128){for(let p of a.values())p.saving-=p.words.size;d.sort(o),n.clear()}}return i}compress(){let e=this.uses(),x=this.buildAbbreviationTable(e),t=new Map;this.commonWords.splice(0,this.commonWords.length),this.uncommonWords.splice(0,this.uncommonWords.length);for(let s of x){s.bytes.length===1?this.commonWords[s.bytes[0]&127]=s.str:this.extraWords[s.bytes[0]][s.bytes[1]]=s.str;for(let a of s.mids){let n=t.get(a);n||t.set(a,n=[]),n.push(s)}}for(let s of t.values())s.sort(({str:{length:a}},{str:{length:n}})=>n-a);for(let s of this.messages(e)){let a=s.text;a=a.replace(/([\[{])([^\]}]*)[\]}](.|$)/g,(o,d,c,f)=>{if(f&&!Ae[f])return o;if(f===" "&&(f=""),d==="["&&c===":ITEM:")return`[8]${f}`;if(d==="{"&&c===":HERO:")return`[4]${f}`;let l=/^([0-9a-f]+):/.exec(c);if(!l)throw new Error(`Bad message text: ${o}`);let h=Number.parseInt(l[1],16);return`[${d==="{"?6:7}][${h}]${f}`});for(let{str:o,bytes:d}of t.get(s.mid)||[])a=a.replace(new RegExp(o+"( [ &0-9]|.|$)","g"),(c,f)=>f&&!Ae[f]?c:(f===" "&&(f=""),d.map(l=>`[${l}]`).join("")+f));let n=["[01]"],i=[];i.push(1);for(let o=0,d=a.length;o<d;o++){let c=a[o];if(c===Is.CONTINUED)i.push(3,1),n.push("[03][01]"),a[o+1]===`
`&&o++;else if(c===`
`)i.push(2),a[o+1]===" "&&o++,n.push("[02]");else if(c==="["){let f=a.indexOf("]",o);if(f<=0)throw new Error(`bad text: ${a}`);let l=Number(a.substring(o+1,f));if(isNaN(l))throw new Error(`bad text: ${a}`);i.push(l),n.push(`[${A(l)}]`),o=f}else if(c===" "&&a[o+1]===" "){let f=o+2;for(;a[f]===" ";)f++;i.push(9,f-o),n.push(`[09][${A(f-o)}]`),o=f-1}else i.push(c.charCodeAt(0)),n.push(c)}i.push(0),n.push("[0]"),s.bytes=i,s.hex=n.join("")}}write(){let e=this.rom.assembler();N0(e,wx,32768,34048),N0(e,wx,34080,34088),N0(e,wx,34182,34195),N0(e,wx,35072,37888),N0(e,wx,38533,38662),N0(e,wx,40576,40960),N0(e,rn,40960,49152),N0(e,nn,40960,49152),N0(e,on,40960,48128);function x(o,d,...c){o.loc(e),e.word(d);let f=0;for(let l of c)o.plus(l).loc(e),e.word({op:"+",args:[d,{op:"num",num:++f}]})}let t=O(this.partCount,()=>[]);for(let o=0;o<this.partCount;o++){let d=t[o],c=this.parts[o],f=this.banks[o],l=an[f];e.segment(l.name);for(let h of c)e.reloc(`Message_${h.mid}`),d.push(e.pc()),e.byte(...h.bytes,0)}let s=[];e.segment(wx.name),e.reloc("MessagesTable");for(let o=0;o<this.partCount;o++)s.push(e.pc()),e.word(...t[o]);let a=e.pc();e.byte(...this.banks),e.reloc("MessageParts");let n=e.pc();e.word(...s),x(tn,a),x(Bd,a),x(sn,n,5);let i=[["CommonWords",this.commonWords,[Qr]],["UncommonWords",this.uncommonWords,[Zr]],["PersonNames",this.personNames,[xn]],["ItemNames",this.itemNames,[en,Ad]]];for(let[o,d,c]of i){let f=[],l=0;for(let b of d){if(!b){f.push(0);continue}e.reloc(`${o}_${A(l++)}`),f.push(e.pc()),e.byte(b,0)}e.reloc(o);let h=e.pc();e.word(...f);for(let b of c)x(b,h,5)}return[e.module()]}},Be=Is;Be.CONTINUED="#";var Pd=1250,dn={"{":"}","[":"]"},_d=new Set(["20:1d","1b:0f","1b:10","1b:11","1b:12","1b:05","1b:06","1b:07","1f:00","13:00","0b:01","20:0c","20:0f","1c:11","0e:05","16:00","16:02","16:04","16:06","20:11","21:00","21:02","21:01","06:00","18:00","18:02","18:04","18:08","1b:03","1b:00","1b:00","1b:04","06:01","10:13","19:05","20:14","20:15","20:17","20:02","20:0d","20:19","20:1a","20:1b","03:01","03:02","10:10","10:11","10:12","0c:04","0c:05","03:03","20:0e","20:13"]);var Jx={empty:1,pit:2,arena:4,spikes:8,wide:16,river:32,bridge:64,wall:128,ramp:256,overpass:512,underpass:1024,whirlpool:2048,deadend:4096,"stair:up":65536,"stair:down":131072,portoa1:117440512,portoa2:184549376,portoa3:218103808,lake:234881024,lighthouse:318767104,cabin:352321536,windmill:369098752,altar:419430400,pyramid:436207616,crypt:469762048,manual:1073741824,consolidate:2147483648};function y(r){if(r.length!=1)throw new Error("Bad icon input");let x=r[0].split(`
`),t=x.slice(1).map(a=>a.replace(/^\s*\||\|\s*$/g,""));return{short:/\S/.test(x[0])?x[0][0]:t[1][1],full:[t[0],t[1],t[2]]}}function Xx(r,...e){let x=r.split(/\s+/g);if(x[0]||x.shift(),x[x.length-1]||x.pop(),x.length!==240)throw new Error(`Bad screen definition: ${x.length}`);let t=new Map(e);return Uint8Array.from(x,(s,a)=>{let n=t.get(s);return typeof n=="number"?n:n?n.screen.tiles[a]:parseInt(s,16)})}function Sx(r,e=2){let x=r>>>4,t=r&15;if(e===1){let a=x===14?10240:6144;return{type:"stair:up",dir:2,entrance:(x<<12)+a|(t<<4)+8,exits:[r]}}return{type:"stair:up",dir:0,entrance:x<<12|(t<<4)+(e<<3),exits:O(e,a=>r-16+a)}}function i6(r,e=2){let x=r>>>4,t=r&15;return e===1?{type:"stair:down",dir:2,entrance:(x<<12)-2048|(t<<4)+8,exits:[r],allowedExits:[r+16,r-16]}:{type:"stair:down",dir:2,entrance:x<<12|3840|(t<<4)+(e<<3),exits:O(e,a=>r+16+a),allowedExits:[...O(e,a=>r+32+a),...O(e,a=>r+a)]}}function T0(r,e="cave"){return{...Sx(r+16),type:e}}function V(r,e="door"){return{...Sx(r,1),type:e}}function cn(r){let e=r>>>4,x=r&15;return{type:"cave",dir:0,entrance:e<<12|x<<4|15,exits:[r-15,r+1]}}function m0({left:r=7,width:e=2,top:x=2,manual:t=!1}={}){return{type:"edge:top",manual:t,dir:0,entrance:x+1<<12|(r<<4)+(e<<3),exits:O(e,s=>x<<4|s+r)}}function E0({left:r=7,width:e=2,shift:x=0,type:t="edge:bottom",manual:s=!1}={}){return{type:t,manual:s,dir:2,entrance:57088|(r<<4)+(e<<3)+16*x,exits:O(e,a=>224|a+r)}}function fx({left:r=7,width:e=2,shift:x=0}={}){return{type:"edge:bottom",dir:2,entrance:44800|(r<<4)+(e<<3)+16*x,exits:O(e,t=>176|t+r)}}function Y0({top:r=7,height:e=2,shift:x=0}={}){return{type:"edge:left",dir:1,entrance:(r<<12)+(16*x<<8)+(e<<11)|16,exits:O(e,t=>t+r<<4)}}function xx({top:r=7,height:e=2,shift:x=0}={}){return{type:"edge:right",dir:3,entrance:(r<<12)+(16*x<<8)+(e<<11)|239,exits:O(e,t=>t+r<<4|15)}}function Pe(r,e=2){return{type:"seamless:up",dir:0,get entrance(){throw new Error("does not make sense")},exits:O(e,x=>r+x)}}function ne(r,e=2){return{type:"seamless:down",dir:2,get entrance(){throw new Error("does not make sense")},exits:O(e,x=>r+x)}}var dt=class{constructor(e,x,t){this.rom=e;this.uid=x;this.data=t;this._tilesets=new Set;this.used=!1;this.neighbors=[new j(e=>this._checkNeighbor(e,0)),new j(e=>this._checkNeighbor(e,1))];for(let n of Object.values(t.tilesets))n.requires||(this.used=!0);let s=0;for(let n of t.feature??[]){let i=Jx[n];i!=null&&(s|=i)}for(let n of t.exits??[])(n.type==="stair:down"||n.type==="stair:up")&&(s|=Jx[n.type]);this._features=s,this._isEmpty=Boolean(s&Jx.empty),this.flag=t.flag;let a=[[[]],[[]],[[]],[[]]];this.connections=a;for(let n=0;n<4;n++){let i=0,o=0,d=a[n][0];for(let c of this.data.connect??""){if(Fd[n].includes(c)){a[n].push(d=[]);continue}let f;if(!Dd.has(c)){if(c==="p")f=240|i++;else if(c==="x")f=224|o++;else{let l=parseInt(c,16);if(!l)throw new Error(`bad term: '${c}'`);let h=(l&3)<<(l&4),b=l&8?l&4?256:4096:0;f=h|b}d.push(f)}}for(;i<this.data.poi?.length;)d.push(240|i++);for(;o<this.data.exits?.length;)d.push(224|o++)}}get features(){return this._features}get manual(){return Boolean(this._features&Od)}get counted(){return Boolean(this._features&qd)}hasFeature(e){return Boolean(this._features&Jx[e])}hasFeatures(e){return(this._features&e)===e}withFeature(e){throw new Error}isEmpty(){return this._isEmpty}hasStair(){return Boolean(this._features&(Jx["stair:up"]|Jx["stair:down"]))}withObstruction(){throw new Error}isCompatibleWithTileset(e){for(let x of this._tilesets)if(x.tilesetId===e)return!0;return!1}replace(e,x){let{tiles:t}=this.screen;for(let s=0;s<t.length;s++)t[s]===e&&(t[s]=x);return this}remove(){for(let e of this.tilesets())e.deleteScreen(this)}tilesets(){let e=[];for(let x in this.data.tilesets)e.push(this.rom.metatilesets[x]);return e}setGridTile(...e){this.data.tile=e;for(let x of this.tilesets())x.invalidate()}gridTiles(){let e=this.data.tile??[];return Array.isArray(e)||(e=[e]),e.map(x=>x.replace(/\|/g,""))}get sid(){return this.data.id}set sid(e){this.sid!==e&&this.rom.metascreens.renumber(this.sid,e,new Set(this.tilesets()))}get screen(){let{sid:e,rom:{screens:x}}=this;return e<0?x.unallocated[~e]:x[e]}unsafeSetId(e){this.data.id=e;for(let x of this._tilesets)x.invalidate()}unsafeAddTileset(e){this._tilesets.add(e)}unsafeRemoveTileset(e){this._tilesets.delete(e)}edgeExits(){let e=0;for(let x of this.data.exits??[]){let t=Nd[x.type];t!=null&&(e|=1<<t)}return e}edgeIndex(e){let x=0,t=this.data.edges??"";for(let s=0;s<4;s++)if(t[s]!==" "){if(t[s]!==e)return;x|=1<<s}return x}findExitType(e,x,t){for(let s of this.data.exits??[]){if(s.type.startsWith("seamless")!==t)continue;let a=x&&s.type==="edge:bottom"&&e>=192?e+32:e;if(s.exits.includes(a)||(s.allowedExits??[]).includes(a))return s}}findExitByType(e){let x=this.data.exits.find(t=>t.type===e);if(!x)throw new Error(`no exit ${e}`);return x}findEntranceType(e,x){for(let t of this.data.exits??[]){if(t.type.startsWith("seamless"))continue;let s=x&&t.type==="edge:bottom"&&e>=48896?e+8192:e,a=(s&240)>>4|(s&61440)>>8;if(t.entrance===s||t.exits.includes(a)||(t.allowedExits??[]).includes(a))return t.type}}addCustomFlag(e){this.flag=e?"custom:true":"custom:false"}checkNeighbor(e,x){let t=x&2?this:e,s=x&2?e:this;return t.neighbors[x&1].get(s)}_checkNeighbor(e,x){let t=this.data.edges,s=e.data.edges;if(t&&s){let a=x^2;if(t[a]!=="*"&&t[a]===s[x])return!0}return!1}toString(){return`${Te(this.sid)} ${this.name}`}},Nd={"edge:top":0,"edge:left":1,"edge:bottom":2,"edge:right":3},Fd=["|:","|:=-","|","|="],Dd=new Set(["|",":","-","="]),Gd=new Set(["arena","portoa1","portoa2","portoa3","lake","overpass","underpass","lighthouse","cabin","windmill","altar","pyramid","crypt"]),$d=new Set(["pit","spikes","bridge","wall","ramp","whirlpool"]),Od=[...Gd].map(r=>Jx[r]).reduce((r,e)=>r|e),qd=[...$d].map(r=>Jx[r]).reduce((r,e)=>r|e);function fn(r){let{desert:e,grass:x,lime:t,mountain:s,mountainRiver:a,river:n,sea:i,town:o}=r.metatilesets,d=r.metascreens;d.registerFix(11),e.getTile(95).copyFrom(91).replaceIn(d.oasisCave,d.oasisLake),e.getTile(90).copyFrom(152).setTiles([,,26,24]),e.getTile(91).copyFrom(128).setTiles([52,50,,]),e.getTile(92).copyFrom(128).setTiles([,,55,53]),e.getTile(93).copyFrom(128).setTiles([,55,,52]),e.getTile(94).copyFrom(128).setTiles([53,,50]),d.registerFix(12),e.getTile(99).copyFrom(113),e.getTile(104).copyFrom(112),e.getTile(105).copyFrom(96),e.getTile(106).copyFrom(101),e.getTile(108).copyFrom(112),e.getTile(110).copyFrom(118),e.getTile(111).copyFrom(120),d.registerFix(1),x.getTile(64).copyFrom(81),x.getTile(65).copyFrom(82),x.getTile(66).copyFrom(83),x.getTile(67).copyFrom(84),x.getTile(68).copyFrom(85),x.getTile(69).copyFrom(86),x.getTile(70).copyFrom(88),x.getTile(71).copyFrom(89),d.registerFix(4),i.getTile(173).copyFrom(10).replaceIn(d.beachExitN,d.lighthouseEntrance,d.oceanShrine),i.getTile(10).copyFrom(162),d.boundaryN_cave.screen.set2d(56,[[,0,0],[,10,10],[,247,247],[248,248,248,248]]),d.cornerSE_cave.screen.set2d(73,[[,0,0],[,10,10],[,247,247],[248,247,247],[,253,247]]),d.cornerSE_cave.screen.set2d(74,[[0,0],[10,10],[247,247],[248,247],[128,253],[128,255],[250]]),d.registerFix(17),n.getTile(7).copyFrom(1).replaceIn(...n),n.getTile(14).copyFrom(2).replaceIn(...n),n.getTile(32).copyFrom(3).replaceIn(...n),n.getTile(33).copyFrom(4).replaceIn(...n);for(let h of[e,i,s,a,t])h.getTile(104).copyFrom(1).replaceIn(...h),h.getTile(131).copyFrom(2).replaceIn(...h),h.getTile(136).copyFrom(3).replaceIn(...h),h.getTile(137).copyFrom(4).replaceIn(...h);for(let h of[o])h.getTile(80).copyFrom(26).replaceIn(...h),h.getTile(81).copyFrom(27).replaceIn(...h),h.getTile(26).copyFrom(1).replaceIn(...h),h.getTile(27).copyFrom(2).replaceIn(...h),h.getTile(82).copyFrom(3).replaceIn(...h),h.getTile(87).copyFrom(4).replaceIn(...h);for(let h of[x,n,e])h.getTile(1).copyFrom(193).setAlternative(0),h.getTile(2).copyFrom(215).setAlternative(10),h.getTile(3).copyFrom(193).setAlternative(0),h.getTile(4).copyFrom(215).setAlternative(10);for(let h of[i]){h.getTile(1).copyFrom(193).setAlternative(0),h.getTile(2).copyFrom(203).setAlternative(0),h.getTile(3).copyFrom(193).setAlternative(192),h.getTile(4).copyFrom(203).setAlternative(192);for(let b=1;b<5;b++)h.getTile(b).setTiles(x.getTile(b).tiles)}for(let h of[o])h.getTile(1).copyFrom(99).setAlternative(0),h.getTile(2).copyFrom(100).setAlternative(210),h.getTile(3).copyFrom(99).setAlternative(0),h.getTile(4).copyFrom(100).setAlternative(210);let c=new Set([d.boundaryE_cave,d.boundaryW_cave,d.exitW_cave,d.caveAbovePortoa,d.beachCave,d.outsideWindmill,d.exitS_cave,d.townExitW_cave,d.zombieTownBottom_caveExit]),f=new Set([]);d.isFixed(4)&&(f.add(d.boundaryN_cave),f.add(d.cornerSE_cave));let l=new Set([d.mountainDeadEndW_caveEmpty,d.mountainPathW_cave,d.mountainCave_empty,d.mountainPathE_cave,d.mountainPathN_slopeS_cave,d.mountainPathWE_slopeN_cave,d.mountainPathE_gate]);for(let h of[...c,...f]){let b=h.data.exits.find(m=>m.type==="cave"),u=Math.min(...b.exits)-16,S=f.has(h)?[[3,3],[4,4]]:[[1,1],[2,2]];h.screen.set2d(u,S),h.addCustomFlag(!0)}for(let h of[...l]){let b=h.data.exits.find(m=>m.type==="cave"||m.type==="gate"),u=Math.min(...b.exits)-16,S=[[26,26],[8,9]];h.screen.set2d(u,S),h.addCustomFlag(!0)}d.outsideWindmill.screen.set2d(67,[[202,130]]),d.townExitW_cave.screen.set2d(42,[[202,130]])}function ln(r){function e(d){d.splice(0,d.length,...new Set(C0.concat(...d.map(c=>[c,c+1,c-1]))))}let{fortressArena_through:x,fortressTrap:t,hallNS:s,hallNS_arena:a,hallNS_arenaWall:n,hallNS_entrance:i}=r.metascreens;a.screen.set2d(4,[[151,118,34,35,35,35,75,149],[66,72,34,33,35,35,69,66],[67,73,46,35,35,33,70,67],[68,74,46,35,33,33,71,68]]),a.setGridTile(" c | a | c "),e(a.findExitByType("edge:top").exits),n.screen.set2d(4,[[148,76,34,33,33,33,75,147],[151,79,0,1,1,2,80,149]]),n.setGridTile(" c | a | c "),e(n.findExitByType("edge:top").exits);let o=r.locations.ZebuCave.spawns.find(d=>d.isTrigger()&&d.id===140);o&&(o.yt+=4),x.screen.set2d(5,[[95,34,33,33,33,95],[183,34,33,33,33,181],[191,34,33,33,33,168]]),x.setGridTile(" c | a | w "),e(x.findExitByType("edge:top").exits),t.screen.set2d(196,[[60,61,33,33,33,33,59,60],[146,76,34,33,33,33,75,144],[148,76,34,33,33,33,75,147]]),t.setGridTile("   | x | c "),e(t.findExitByType("edge:bottom").exits);for(let d of r.locations){let c=d.meta;for(let f of c.allPos())if(c.get(f)===i&&c.get(f+16)?.hasFeature("arena")){c.set(f,s);let h=d.screens[f>>>4];h&&(h[f&15]=s.sid)}}}var Wd=!1,qt=class{constructor(e){this.rom=e;this.length=0;this.screensByFix=new j(()=>[]);this.screensById=new j(()=>[]);this.registeredFixes=new Set;this.overworldEmpty=this.metascreen({id:0,icon:y`
      |███|
      |███|
      |███|`,tile:"   |   |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},feature:["empty"],edges:"    ",delete:!0});this.boundaryW_trees=this.metascreen({id:1,icon:y`
      |█▌ |
      |█▌^|
      |█▌ |`,tile:" oo| oo| oo",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[7]}},edges:"> >o"});this.boundaryW=this.metascreen({id:2,icon:y`
      |█▌ |
      |█▌ |
      |█▌ |`,tile:" oo| oo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"> >o"});this.boundaryE_rocks=this.metascreen({id:3,icon:y`
      |.▐█|
      | ▐█|
      |.▐█|`,tile:"oo |oo |oo ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:"<o< "});this.boundaryE=this.metascreen({id:4,icon:y`
      | ▐█|
      | ▐█|
      | ▐█|`,tile:"oo |oo |oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<o< "});this.longGrassS=this.metascreen({id:5,icon:y`
      |vv |
      | vv|
      |   |`,tile:"olo|ooo|   ",tilesets:{river:{},grass:{requires:[1]}},edges:"looo"});this.longGrassN=this.metascreen({id:6,icon:y`
      |   |
      | vv|
      |vv |`,tile:"   |ooo|olo",tilesets:{river:{},grass:{requires:[1]}},edges:"oolo"});this.boundaryS_rocks=this.metascreen({id:7,icon:y`
      | . |
      |▄▄▄|
      |███|`,tile:"ooo|ooo|   ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:"o^ ^"});this.fortressTownEntrance=this.metascreen({id:8,icon:y`
      |███|
      |█∩█|
      |   |`,placement:"manual",tile:["   |oFo|ooo","oo |oFo|ooo"],tilesets:{grass:{}},edges:" vov",exits:[{...Sx(166,3),type:"fortress"}]});this.bendSE_longGrass=this.metascreen({id:9,icon:y`▗
      | v |
      |vv▄|
      | ▐█|`,tile:"ooo|ooo|oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"oo<^"});this.exitW_cave=this.metascreen({id:10,icon:y`∩
      |█∩█|
      |  █|
      |███|`,tile:["   |o< |   ","   |x< |   "],tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:" n  ",exits:[T0(72),Y0({top:6})]});this.bendNE_grassRocks=this.metascreen({id:11,icon:y`▝
      |.▐█|
      |  ▀|
      |;;;|`,tile:"oo |ooo|ogo",tilesets:{grass:{},river:{requires:[3]},desert:{requires:[8,11]}},edges:"<osv"});this.cornerNW=this.metascreen({id:12,icon:y`▛
      |███|
      |█ ▀|
      |█▌ |`,tile:"   | oo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"  >v"});this.overworldEmpty_alt=this.metascreen({id:12,icon:y`
      |███|
      |███|
      |███|`,placement:"manual",tilesets:{grass:{},river:{},sea:{},desert:{}},feature:["empty","manual"],edges:"    ",match:()=>!1,delete:!0});this.cornerNE=this.metascreen({id:13,icon:y`▜
      |███|
      |▀██|
      | ▐█|`,tile:"   |oo |oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:" v< "});this.cornerSW=this.metascreen({id:14,icon:y`▙
      |█▌ |
      |██▄|
      |███|`,tile:" oo| oo|   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:">  ^"});this.cornerSE=this.metascreen({id:15,icon:y`▟
      | ▐█|
      |▄██|
      |███|`,tile:"oo |oo |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<^  "});this.exitE=this.metascreen({id:16,icon:y`╶
      | ▐█|
      |   |
      | ▐█|`,tile:["oo |ooo|oo ","oo |oox|oo "],tilesets:{grass:{},river:{},desert:{requires:[11]}},edges:"<o<n",exits:[xx({top:6})]});this.boundaryN_trees=this.metascreen({id:17,icon:y`
      |███|
      |▀▀▀|
      | ^ |`,tile:"   |ooo|ooo",tilesets:{grass:{},river:{},desert:{},sea:{requires:[7]}},edges:" vov"});this.bridgeToPortoa=this.metascreen({id:18,icon:y`╴
      |═  |
      |╞══|
      |│  |`,placement:"manual",tile:"roo|1rr| oo",tilesets:{river:{}},feature:["portoa3"],edges:"2*>r",exits:[Y0({top:1})]});this.slopeAbovePortoa=this.metascreen({id:19,icon:y`
      |█↓█|
      |█↓▀|
      |│  |`,placement:"manual",tile:" \u2193 | oo|roo",tilesets:{river:{}},feature:["portoa2"],edges:"1*2v"});this.riverBendSE=this.metascreen({id:20,icon:y`
      |w  |
      | ╔═|
      | ║ |`,tile:"ooo|orr|oro",tilesets:{river:{}},edges:"oorr"});this.boundaryW_cave=this.metascreen({id:21,icon:y`
      |█▌ |
      |█∩ |
      |█▌ |`,tile:" oo| <o| oo",tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:"> >o",exits:[T0(137)]});this.exitN=this.metascreen({id:22,icon:y`╵
      |█ █|
      |▀ ▀|
      | ^ |`,tile:[" o |ooo|ooo"," x |ooo|ooo"],tilesets:{grass:{},river:{},desert:{}},edges:"nvov",exits:[m0()]});this.riverWE_woodenBridge=this.metascreen({id:23,icon:y`═
      |   |
      |═║═|
      |   |`,tile:"ooo|ror|ooo",tilesets:{river:{}},edges:"oror",exits:[Pe(119),ne(135)]});this.riverBoundaryE_waterfall=this.metascreen({id:24,icon:y`╡
      | ▐█|
      |══/|
      | ▐█|`,tile:"oo |rr |oo ",tilesets:{river:{}},edges:"<r< "});this.boundaryE_cave=this.metascreen({id:25,icon:y`
      | ▐█|
      |v∩█|
      |v▐█|`,tile:"oo |o< |oo ",tilesets:{river:{},grass:{requires:[1]},desert:{requires:[9]}},edges:"<o< ",exits:[T0(88)]});this.exitW_southwest=this.metascreen({id:26,icon:y`╴
      |█▌ |
      |▀ ▄|
      |▄██|`,tile:" oo|Boo|   ",tilesets:{grass:{},river:{},desert:{requires:[11]},sea:{requires:[5]}},edges:">* ^",exits:[Y0({top:11})]});this.nadare=this.metascreen({id:27,tilesets:{house:{}},exits:[fx(),V(35),V(37,"door2"),V(42,"door3")]});this.townExitW=this.metascreen({id:28,icon:y`╴
      |█▌ |
      |▀ ^|
      |█▌ |`,tile:" oo|8oo| oo",tilesets:{grass:{},river:{}},edges:">n>o",exits:[Y0({top:8,height:3,shift:-.5})]});this.shortGrassS=this.metascreen({id:29,icon:y` |
      |;;;|
      | v |
      |   |`,tile:"ogo|ooo|ooo",tilesets:{grass:{},river:{requires:[3,2]}},edges:"sooo"});this.townExitS=this.metascreen({id:30,icon:y`╷
      | ^ |
      |▄ ▄|
      |█ █|`,tile:["ooo|ooo| o ","ooo|ooo| x "],tilesets:{grass:{},river:{},desert:{requires:[11,13]}},edges:"o^n^",exits:[E0()]});this.swanGate=this.metascreen({id:31,tilesets:{town:{}},exits:[Y0({top:3}),xx({top:9})],flag:"custom:false"});this.riverBranchNSE=this.metascreen({id:32,icon:y`
      | ║ |
      | ╠═|
      | ║ |`,tile:"oro|orr|oro",tilesets:{river:{}},edges:"rorr"});this.riverWE=this.metascreen({id:33,icon:y`
      |   |
      |═══|
      |   |`,tile:"ooo|rrr|ooo",tilesets:{river:{}},edges:"oror"});this.riverBoundaryS_waterfall=this.metascreen({id:34,icon:y`╨
      | ║ |
      |▄║▄|
      |█/█|`,tile:"oro|oro|   ",tilesets:{river:{}},edges:"r^ ^"});this.shortGrassSE=this.metascreen({id:35,icon:y`
      |;;;|
      |;  |
      |; ^|`,tile:"ogo|goo|ooo",tilesets:{grass:{}},edges:"ssoo"});this.shortGrassNE=this.metascreen({id:36,icon:y` |
      |;  |
      |;v |
      |;;;|`,tile:"ooo|goo|ogo",tilesets:{grass:{}},edges:"osso"});this.stomHouseOutside=this.metascreen({id:37,icon:y`∩
      |███|
      |▌∩▐|
      |█ █|`,placement:"manual",tile:["   | H | o ","   | H | x "],tilesets:{grass:{}},exits:[V(104),E0({shift:.5})]});this.bendNW_trees=this.metascreen({id:38,icon:y`▘
      |█▌ |
      |▀ ^|
      | ^^|`,tile:" oo|ooo|ooo",tilesets:{grass:{},river:{},desert:{requires:[11,12]},sea:{requires:[5,7]}},edges:">voo"});this.shortGrassSW=this.metascreen({id:39,icon:y`
      |;;;|
      |  ;|
      |^ ;|`,tile:"ogo|oog|ooo",tilesets:{grass:{},river:{requires:[3]}},edges:"soos"});this.riverBranchNWS=this.metascreen({id:40,icon:y`
      | ║ |
      |═╣ |
      | ║ |`,tile:"oro|rro|oro",tilesets:{river:{}},edges:"rrro"});this.shortGrassNW=this.metascreen({id:41,icon:y`
      |  ;|
      | v;|
      |;;;|`,tile:"ooo|oog|ogo",tilesets:{grass:{},river:{requires:[3,2]}},edges:"ooss"});this.valleyBridge=this.metascreen({id:42,icon:y` |
      |▛║▜|
      | ║ |
      |▙║▟|`,tile:[" o | o | o "," x | o | o "," o | o | x "],tilesets:{grass:{},river:{}},edges:"n n ",exits:[Pe(119),ne(135),m0(),E0()]});this.exitS_cave=this.metascreen({id:43,icon:y`∩
      |█∩█|
      |▌ ▐|
      |█ █|`,tile:["   | < | o ","   | < | x "],tilesets:{grass:{},river:{},desert:{},sea:{requires:[4]}},edges:"  n ",exits:[T0(103),E0()]});this.outsideWindmill=this.metascreen({id:44,icon:y`╳
      |██╳|
      |█∩█|
      |█ █|`,placement:"manual",tile:["   | W | o ","   | W | x "],tilesets:{grass:{}},flag:"custom:false",feature:["windmill"],edges:"  n ",exits:[T0(99),E0(),V(137,"windmill"),V(140)]});this.townExitW_cave=this.metascreen({id:45,icon:y`∩
      |█∩█|
      |▄▄█|
      |███|`,tile:"   |x< |   ",tilesets:{grass:{}},edges:" n  ",exits:[T0(74),Y0({top:5,height:3,shift:-.5})],flag:"custom:true"});this.riverNS=this.metascreen({id:46,icon:y`
      | ║ |
      | ║ |
      | ║ |`,tile:"oro|ooo|oro",tilesets:{river:{}},edges:"roro",mod:"bridge"});this.riverNS_bridge=this.metascreen({id:47,icon:y`
      | ║ |
      |w╏w|
      | ║ |`,placement:"mod",tile:"oro|oro|oro",tilesets:{river:{}},feature:["bridge"],edges:"roro",wall:119});this.riverBendWS=this.metascreen({id:48,icon:y`
      | w▜|
      |═╗w|
      | ║ |`,tile:"oo |rro|oro",tilesets:{river:{}},edges:"<rrv"});this.boundaryN_waterfallCave=this.metascreen({id:49,icon:y`
      |▛/█|
      |▘║▀|
      | ║ |`,tile:"   |oro|oro",tilesets:{river:{}},edges:" vrv",exits:[cn(117)]});this.open_trees=this.metascreen({id:50,icon:y`
      | ^ |
      |^ ^|
      | ^ |`,tile:"ooo|ooo|ooo",tilesets:{grass:{},river:{},desert:{requires:[12,11]}},edges:"oooo"});this.exitS=this.metascreen({id:51,icon:y`╷
      | w |
      |▄ ▄|
      |█ █|`,tile:["ooo|ooo| o ","ooo|ooo| x |"],tilesets:{grass:{},river:{},desert:{requires:[10]},sea:{requires:[6]}},edges:"o^n^",exits:[E0()]});this.bendNW=this.metascreen({id:52,icon:y`▘
      |█▌ |
      |▀▀ |
      |   |`,tile:" oo|ooo|ooo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:">voo"});this.bendNE=this.metascreen({id:53,icon:y`▝
      | ▐█|
      |  ▀|
      |   |`,tile:"oo |ooo|ooo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<oov"});this.bendSE=this.metascreen({id:54,icon:y`▗
      |   |
      | ▄▄|
      | ▐█|`,tile:"ooo|ooo|oo ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"oo<^"});this.bendWS=this.metascreen({id:55,icon:y`▖
      |   |
      |▄▄ |
      |█▌ |`,tile:"ooo|ooo| oo",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"o^>o"});this.towerPlain_upStair=this.metascreen({id:56,icon:y`┴
      | ┊ |
      |─┴─|
      |   |`,tile:" t |ttt|   ",tilesets:{tower:{}},edges:"st t",exits:[m0({left:8}),ne(8,2)]});this.towerRobotDoor_downStair=this.metascreen({id:57,icon:y`┬
      | ∩ |
      |─┬─|
      | ┊ |`,tile:"   |ttt| t ",tilesets:{tower:{}},edges:" tst",exits:[Pe(232,2),ne(248,2)]});this.towerDynaDoor=this.metascreen({id:58,icon:y`∩
      | ∩ |
      |└┬┘|
      | ┊ |`,tile:"   | < | t ",tilesets:{tower:{}},edges:"  s ",exits:[T0(103,"door")]});this.towerLongStairs=this.metascreen({id:59,icon:y`
      | ┊ |
      | ┊ |
      | ┊ |`,tile:" t | t | t ",tilesets:{tower:{}},edges:"s s ",exits:[E0()]});this.towerMesiaRoom=this.metascreen({id:60,tilesets:{tower:{}},exits:[fx()]});this.towerTeleporter=this.metascreen({id:61,tilesets:{tower:{}},exits:[fx(),T0(87,"teleporter")]});this.caveAbovePortoa=this.metascreen({id:62,icon:y`
      |███|
      |█∩█|
      |█↓█|`,placement:"manual",tile:"   | < | \u2193 ",tilesets:{river:{}},edges:"  1 ",feature:["portoa1"],exits:[T0(102)]});this.cornerNE_flowers=this.metascreen({id:63,icon:y`▜
      |███|
      |▀*█|
      | ▐█|`,tile:"   |oo |oo ",tilesets:{grass:{}},edges:" v< "});this.towerEdge=this.metascreen({id:64,icon:y` |
      |   |
      |┤ ├|
      |   |`,tile:"   |t t|   ",tilesets:{tower:{}},edges:" t t"});this.towerEdgeW=this.metascreen({id:64,icon:y` |
      |   |
      |┤  |
      |   |`,tile:"   |t  |   ",tilesets:{tower:{}},edges:" t  "});this.towerEdgeE=this.metascreen({id:64,icon:y` |
      |   |
      |  ├|
      |   |`,tile:"   |  t|   ",tilesets:{tower:{}},edges:"   t"});this.towerRobotDoor=this.metascreen({id:65,icon:y`─
      | O |
      |───|
      |   |`,tile:"   |ttt|   ",tilesets:{tower:{}},edges:" t t"});this.towerDoor=this.metascreen({id:66,icon:y`∩
      | ∩ |
      |─┴─|
      |   |`,tile:"   |t<t|   ",tilesets:{tower:{}},edges:" t t",exits:[T0(88)]});this.house_bedroom=this.metascreen({id:67,tilesets:{house:{}},exits:[fx()]});this.shed=this.metascreen({id:68,tilesets:{house:{}},exits:[fx(),T0(73)],flag:"custom:false"});this.tavern=this.metascreen({id:69,tilesets:{house:{}},exits:[fx()]});this.house_twoBeds=this.metascreen({id:70,tilesets:{house:{}},exits:[fx()]});this.throneRoom_amazones=this.metascreen({id:71,tilesets:{house:{}},exits:[fx({width:3}),i6(76,1)]});this.house_ruinedUpstairs=this.metascreen({id:72,tilesets:{house:{}},exits:[fx(),i6(156,1)]});this.house_ruinedDownstairs=this.metascreen({id:73,tilesets:{house:{}},exits:[Sx(86,1)]});this.foyer=this.metascreen({id:74,tilesets:{house:{}},exits:[fx({shift:.5}),V(40),V(83,"door2"),V(92,"door3")]});this.throneRoom_portoa=this.metascreen({id:75,tilesets:{house:{}},exits:[fx(),V(43)]});this.fortuneTeller=this.metascreen({id:76,tilesets:{house:{}},exits:[fx(),V(86),V(89,"door2")]});this.backRoom=this.metascreen({id:77,tilesets:{house:{}},exits:[fx()]});this.dojo=this.metascreen({id:78,tilesets:{house:{}},exits:[fx({shift:-.5})]});this.windmillInside=this.metascreen({id:79,tilesets:{house:{}},exits:[fx({left:9,width:1})]});this.horizontalTownMiddle=this.metascreen({id:80,tilesets:{town:{}},exits:[V(76),V(85,"door2")],tallHouses:[53]});this.brynmaerRight_exitE=this.metascreen({id:81,tilesets:{town:{type:"horizontal"}},exits:[xx({top:8}),V(65)]});this.brynmaerLeft_deadEnd=this.metascreen({id:82,tilesets:{town:{type:"horizontal"}},exits:[V(73),V(76,"door2")]});this.swanLeft_exitW=this.metascreen({id:83,tilesets:{town:{type:"horizontal"}},exits:[Y0({top:9}),V(73),V(94,"door2")]});this.swanRight_exitS=this.metascreen({id:84,tilesets:{town:{type:"horizontal"}},exits:[E0({left:3}),V(65),V(67,"door2"),V(87,"door3")]});this.horizontalTownLeft_exitN=this.metascreen({id:85,tilesets:{town:{type:"horizontal"}},exits:[m0({left:13}),V(70),V(75,"door2")]});this.amazonesRight_deadEnd=this.metascreen({id:86,tilesets:{town:{type:"horizontal"}},exits:[V(64),V(88,"door2")]});this.saharaRight_exitE=this.metascreen({id:87,tilesets:{town:{type:"horizontal"}},exits:[xx({top:7}),V(64),V(102,"door2")]});this.portoaNW=this.metascreen({id:88,tilesets:{town:{type:"square"}},exits:[T0(71,"fortress"),E0()]});this.portoaNE=this.metascreen({id:89,tilesets:{town:{type:"square"}},exits:[V(99),V(138,"door2"),E0({left:3,width:4})]});this.portoaSW_exitW=this.metascreen({id:90,tilesets:{town:{type:"square"}},exits:[Y0({top:9}),V(134),m0()]});this.portoaSE_exitE=this.metascreen({id:91,tilesets:{town:{type:"square"}},exits:[xx({top:9}),V(122),V(135,"door2")],tallHouses:[90]});this.dyna=this.metascreen({id:92,tilesets:{tower:{}},exits:[{type:"stair:down",manual:!0,dir:2,entrance:49024,exits:[]}]});this.portoaFisherman=this.metascreen({id:93,tilesets:{town:{type:"square"}},exits:[xx({top:6}),Y0({top:4,height:6,shift:.5}),V(104)]});this.verticalTownTop_fortress=this.metascreen({id:94,tilesets:{town:{type:"vertical"}},exits:[T0(71,"fortress"),E0()]});this.shyronMiddle=this.metascreen({id:95,tilesets:{town:{type:"vertical"}},exits:[V(84),V(91,"door2"),m0()]});this.shyronBottom_exitS=this.metascreen({id:96,tilesets:{town:{type:"vertical"}},exits:[E0({left:3}),V(4),V(6,"door2"),V(153,"door3")]});this.zombieTownMiddle=this.metascreen({id:97,tilesets:{town:{type:"vertical"}},exits:[V(153),m0()]});this.zombieTownBottom_caveExit=this.metascreen({id:98,tilesets:{town:{type:"vertical"}},exits:[T0(146),V(35),V(77,"door2")]});this.leafNW_houseShed=this.metascreen({id:99,tilesets:{town:{type:"square"}},exits:[V(140),V(149,"door2")]});this.squareTownNE_house=this.metascreen({id:100,tilesets:{town:{type:"square"}},exits:[m0({left:1}),V(183)]});this.leafSW_shops=this.metascreen({id:101,tilesets:{town:{type:"square"}},exits:[V(119),V(138,"door2")],tallHouses:[106]});this.leafSE_exitE=this.metascreen({id:102,tilesets:{town:{type:"square"}},exits:[xx({top:3,height:3,shift:-.5}),V(132)]});this.goaNW_tavern=this.metascreen({id:103,tilesets:{town:{type:"square"}},exits:[V(186)]});this.squareTownSW_exitS=this.metascreen({id:104,tilesets:{town:{type:"square"}},exits:[E0({left:8}),V(132)]});this.goaSE_shop=this.metascreen({id:105,tilesets:{town:{type:"square"}},exits:[V(130)]});this.joelNE_shop=this.metascreen({id:106,tilesets:{town:{type:"square"}},exits:[V(167)]});this.joelSE_lake=this.metascreen({id:107,tilesets:{town:{type:"square"}}});this.oakNW=this.metascreen({id:108,tilesets:{town:{type:"square"}},exits:[V(231)]});this.oakNE=this.metascreen({id:109,tilesets:{town:{type:"square"}},exits:[V(96)]});this.oakSW=this.metascreen({id:110,tilesets:{town:{type:"square"}},exits:[V(124)]});this.oakSE=this.metascreen({id:111,tilesets:{town:{type:"square"}},exits:[E0({left:0,shift:.5}),V(151)]});this.temple=this.metascreen({id:112,tilesets:{house:{}},exits:[fx()]});this.wideDeadEndN=this.metascreen({id:113,icon:y`
      | ┃ |
      | > |
      |   |`,tile:" w | > |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w   ",connect:"2",exits:[i6(199)],statues:[4]});this.goaWideDeadEndN=this.metascreen({id:113,icon:y`
      |╵┃╵|
      | > |
      |   |`,tile:" w | > |   ",tilesets:{labyrinth:{}},edges:"w   ",connect:"1|2x|3",exits:[i6(199)],statues:[4]});this.wideHallNS=this.metascreen({id:114,icon:y`
      | ┃ |
      | ┃ |
      | ┃ |`,tile:" w | w | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w w ",connect:"2a",statues:[1,7,13]});this.goaWideHallNS=this.metascreen({id:114,icon:y`
      |│┃│|
      |│┃│|
      |│┃│|`,tile:" w | w | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"19|2a|3b",statues:[1,7,13]});this.goaWideHallNS_blockedRight=this.metascreen({id:114,icon:y`
      |│┃│|
      |│┃ |
      |│┃│|`,placement:"mod",tile:" w | w | w ",tilesets:{labyrinth:{requires:[14],addWall:[157]}},edges:"w w ",connect:"19|2a|3|b"});this.goaWideHallNS_blockedLeft=this.metascreen({id:114,icon:y`
      |│┃│|
      | ┃│|
      |│┃│|`,placement:"mod",tile:" w | w | w ",tilesets:{labyrinth:{requires:[14],addWall:[81]}},edges:"w w ",connect:"1|9|2a|3b"});this.goaWideArena=this.metascreen({id:115,icon:y`<
      |╻<╻|
      |┡━┩|
      |│╻│|`,placement:"manual",tile:"   | < | w ",tilesets:{labyrinth:{}},feature:["arena"],edges:"w w ",connect:"9b|a",exits:[Sx(55)]});this.limeTreeLake=this.metascreen({id:116,tilesets:{lime:{}},exits:[fx(),T0(71)],feature:["bridge"],wall:103});this.swampNW=this.metascreen({id:117,icon:y`
      | │ |
      |─┘ |
      |   |`,tile:" c |cc |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ss  ",connect:"26",exits:[m0({left:6,width:4}),Y0({top:7,height:4,shift:-.5})],poi:[[2]]});this.swampE=this.metascreen({id:118,icon:y`
      |   |
      | ╶─|
      |   |`,tile:"   | cc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"   s",connect:"e",exits:[],poi:[[0]]});this.swampE_door=this.metascreen({id:118,icon:y`∩
      | ∩ |
      | ╶─|
      |   |`,tile:"   | <c|   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:"   s",connect:"e",exits:[T0(92,"swamp")]});this.swampNWSE=this.metascreen({id:119,icon:y`
      | │ |
      |─┼─|
      | │ |`,tile:" c |ccc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ssss",connect:"26ae",exits:[m0({left:6,width:4}),Y0({top:7,height:4,shift:-.5}),E0({left:6,width:4}),xx({top:7,height:4,shift:-.5})]});this.swampNWS=this.metascreen({id:120,icon:y`
      | │ |
      |─┤ |
      | │ |`,tile:" c |cc | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"sss ",connect:"26a",exits:[m0({left:6,width:4}),Y0({top:7,height:4,shift:-.5}),E0({left:6,width:4})]});this.swampNE=this.metascreen({id:121,icon:y`
      | │ |
      | └─|
      |   |`,tile:" c | cc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s  s",connect:"2e",exits:[m0({left:6,width:4}),xx({top:7,height:4,shift:-.5})],poi:[[2]]});this.swampWSE=this.metascreen({id:122,icon:y`
      |   |
      |─┬─|
      | │ |`,tile:"   |ccc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:" sss",connect:"6ae",exits:[Y0({top:7,height:4,shift:-.5}),E0({left:6,width:4}),xx({top:7,height:4,shift:-.5})]});this.swampWSE_door=this.metascreen({id:122,icon:y`∩
      | ∩ |
      |─┬─|
      | │ |`,tile:"   |c<c| c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" sss",connect:"6ae",exits:[T0(86,"swamp")]});this.swampW=this.metascreen({id:123,icon:y`
      |   |
      |─╴ |
      |   |`,tile:"   |cc |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:" s  ",connect:"6",poi:[[0]]});this.swampW_door=this.metascreen({id:123,icon:y`∩
      | ∩ |
      |─╴ |
      |   |`,tile:"   |c< |   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" s  ",connect:"6",exits:[T0(84,"swamp")]});this.swampArena=this.metascreen({id:124,icon:y`
      |   |
      |┗┯┛|
      | │ |`,tile:"   | a | c ",tilesets:{swamp:{}},feature:["arena"],edges:"  s ",connect:"a"});this.swampNWE=this.metascreen({id:125,icon:y`
      | │ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"ss s",connect:"26e",exits:[m0({left:6,width:4}),Y0({top:7,height:4}),xx({top:7,height:4})]});this.swampWS=this.metascreen({id:126,icon:y`
      |   |
      |─┐ |
      | │ |`,tile:"   |cc | c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],update:[[15,(e,x,t)=>(t.metascreens.swampWS_door.flag="always",!0)]],edges:" ss ",connect:"6a",exits:[Y0({top:7,height:4}),E0({left:6,width:4})],poi:[[2]]});this.swampWS_door=this.metascreen({id:126,icon:y`∩
      | ∩ |
      |─┐ |
      | │ |`,tile:"   |c< | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:" ss ",connect:"6a",exits:[T0(87,"swamp")]});this.swampEmpty=this.metascreen({id:127,icon:y`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{swamp:{}},feature:["empty"],edges:"    ",connect:"",delete:!0});this.swampN=this.metascreen({id:-113,icon:y`
      | │ |
      | ╵ |
      |   |`,tile:" c | c |   ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s   ",connect:"2",poi:[[0]],definition:ie(Xx(`.  .  .  .  cf f6 c7 ad c4 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b8 b9 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b8 ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 c2 c3 b7 b8 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 c2 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad b9 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 b9 b8 ad ad d2 e2 .  .  .  .
         .  .  .  .  e3 f6 c3 c3 b8 b6 d2 .  .  .  .  .
         .  .  .  .  .  e3 fd ad ad fc e2 .  .  .  .  .
         .  .  .  .  .  .  ff fb fb fa .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .`,[".",200]))});this.swampS=this.metascreen({id:-114,icon:y`
      |   |
      | ╷ |
      | │ |`,tile:"   | c | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"  s ",connect:"a",poi:[[0]],definition:ie(Xx(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  cd c9 c9 ca .  .  .  .  .  .
         .  .  .  .  .  cd eb a0 a0 cb ca .  .  .  .  .
         .  .  .  .  cf a0 f9 f5 f7 f8 cb cc .  .  .  .
         .  .  .  .  cf a0 ed 08 09 a0 a0 cc .  .  .  .
         .  .  .  .  cf db ee 0c 0b ef a0 cc .  .  .  .
         .  .  .  .  cf d0 d1 03 03 d8 db cc .  .  .  .
         .  .  .  .  cf f6 c7 ad ad ae d2 cc .  .  .  .
         .  .  .  .  cf d3 ad b9 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 c2 c3 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 c5 c3 c3 b7 f6 cc .  .  .  .
         .  .  .  .  cf d3 b6 c2 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf f6 b8 b6 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b8 b6 d2 cc .  .  .  .`,[".",200]))});this.swampNS=this.metascreen({id:-115,icon:y`
      | │ |
      | │ |
      | │ |`,tile:" c | c | c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s s ",connect:"2a",exits:[m0({left:6,width:4}),E0({left:6,width:4})],definition:ie(Xx(`.  .  .  .  cf d3 b6 b6 c6 b6 f6 cc .  .  .  .
         .  .  .  .  cf d3 b6 c3 c7 b6 f6 cc .  .  .  .
         .  .  .  .  cf f5 c3 c7 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 b6 c6 c5 f6 cc .  .  .  .
         .  .  .  .  cf d9 b6 c6 c3 c7 d2 cc .  .  .  .
         .  .  .  .  cf f5 c3 c3 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf d9 ad c2 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf d9 c4 c5 c3 c3 f6 cc .  .  .  .
         .  .  .  .  cf f5 b7 b7 b8 b6 d2 cc .  .  .  .
         .  .  .  .  cf d9 c2 b8 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf d9 b6 c2 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf d9 b6 b6 b6 b6 d2 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 b8 b6 d2 cc .  .  .  .
         .  .  .  .  cf d3 b9 b7 b7 b7 f6 cc .  .  .  .
         .  .  .  .  cf f6 b7 b7 c7 b6 d2 cc .  .  .  .`,[".",200]))});this.swampWE=this.metascreen({id:-116,icon:y`
      |   |
      |───|
      |   |`,tile:"   |ccc|   ",tilesets:{swamp:{}},feature:["consolidate"],edges:" s s",connect:"6e",exits:[Y0({top:7,height:4,shift:-.5}),xx({top:7,height:4,shift:-.5})],definition:ie(Xx(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9 c9
         a0 e4 e8 eb e4 a0 a0 a0 eb eb e8 f0 f1 a0 e4 a0
         a0 e5 e9 f9 f5 f6 f6 f7 ec f9 f7 f8 f2 a0 e5 a0
         a0 e6 f0 f1 e6 e0 08 09 ed de ea de f2 a0 e6 a0
         db e7 db f3 e7 e1 0c 0b dd df e0 df f3 db e7 e0
         d0 d1 da da d0 d1 03 03 d0 d1 d0 d1 da da da da
         ad c4 ad ad ad ad ad ad ad ad ad ad ad ad ad ad
         c2 c5 b8 c6 c4 c4 b9 c7 c4 c5 c5 c7 ad ad ad ad
         ad ad ad ad c2 c3 c3 c3 c3 c3 c7 ad ad ad ad ad
         fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .`,[".",200]))});this.swampWE_door=this.metascreen({id:-116,icon:y`∩
      | ∩ |
      |───|
      |   |`,tile:"   |c<c|   ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:" s s",connect:"6e",exits:[T0(86,"swamp")]});this.swampSE=this.metascreen({id:-117,icon:y`
      |   |
      | ┌─|
      | │ |`,tile:"   | cc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"  ss",connect:"ae",exits:[xx({top:7,height:4,shift:-.5}),E0({left:6,width:4})],poi:[[2]],definition:ie(Xx(`.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
         .  .  .  .  .  .  cd c9 c9 c9 c9 c9 c9 c9 c9 c9
         .  .  .  .  .  cd a0 a0 a0 e8 04 a0 e8 a0 a0 e4
         .  .  .  .  cf f8 a0 f0 f1 f5 f5 f7 e9 f4 f7 e5
         .  .  .  .  cf f6 f7 f8 f2 ea 06 aa e9 f0 f1 e6
         .  .  .  .  cf a0 dd e0 f3 e0 07 0c ea db f3 e7
         .  .  .  .  cf db d5 d0 d1 d1 03 03 d0 d1 da da
         .  .  .  .  cf d5 af c4 c4 ad ad ad ad ad c4 ad
         .  .  .  .  cf d3 b9 c3 c3 b8 ad ad ad c2 b7 b8
         .  .  .  .  cf f6 c3 c3 c3 c3 b8 ad ad ad ad ad
         .  .  .  .  cf f6 c7 ad c2 c3 c7 fc fb fb fb fb
         .  .  .  .  cf d3 ad ad ad ad d6 cc .  .  .  .
         .  .  .  .  cf d3 b9 b8 ad b9 f6 cc .  .  .  .
         .  .  .  .  cf f6 c7 ad b9 c7 d2 cc .  .  .  . 
         .  .  .  .  cf d3 b6 b9 c3 b8 d2 cc .  .  .  .`,[".",200]))});this.swampSE_door=this.metascreen({id:-117,icon:y`∩
      | ∩ |
      | ┌─|
      | │ |`,tile:"   | <c| c ",tilesets:{swamp:{requires:[15]}},feature:["consolidate"],flag:"always",edges:"  ss",connect:"ae",exits:[T0(90,"swamp")]});this.swampNSE=this.metascreen({id:-118,icon:y`
      | │ |
      | ├─|
      | │ |`,tile:" c | cc| c ",tilesets:{swamp:{}},feature:["consolidate"],edges:"s ss",connect:"2ae",exits:[m0({left:6,width:4}),E0({left:6,width:4}),xx({top:7,height:4,shift:-.5})],definition:ie(Xx(`.  .  .  .  cf d3 c4 c3 c3 c3 f7 f8 ca .  .  .
         .  .  .  .  cf f5 c3 c3 c3 c3 f7 f7 a0 ca c9 c9
         .  .  .  .  cf f6 c3 c3 b8 b6 d2 f7 f8 e8 e4 a0
         .  .  .  .  cf f5 b7 c3 b7 b8 d2 f0 f1 e9 e5 de
         .  .  .  .  cf d3 c2 b8 c2 b8 d8 db f2 ea e6 df
         .  .  .  .  cf d3 ad ad ad ad ae d4 f3 dd e7 df
         .  .  .  .  cf d3 ad ad ad ad ad ae d0 d1 d0 d1
         .  .  .  .  cf d3 c2 c3 c3 b7 b8 ad ad ad ad ad
         .  .  .  .  cf d3 ad ad c2 b7 b7 b7 b8 c4 ad ad
         .  .  .  .  cf d3 ad ad b6 b9 b7 b7 b7 b7 b8 ad
         .  .  .  .  cf d3 ad c4 c3 b7 b8 fc fb fb fb fb
         .  .  .  .  cf d3 b6 ad ad ad d6 cc .  .  .  .
         .  .  .  .  cf d3 ad ad ad ad d2 cc .  .  .  .
         .  .  .  .  cf d3 c4 c3 b7 b8 d2 cc .  .  .  .
         .  .  .  .  cf d3 b6 b9 b7 b7 f6 cc .  .  .  .`,[".",200]))});this.caveEmpty=this.metascreen({id:128,icon:y`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{cave:{},fortress:{},labyrinth:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"    ",delete:!0});this.dolphinCave_empty=this.metascreen({id:128,icon:y`
      |   |
      |   |
      |   |`,tile:"   |   |   ",tilesets:{dolphinCave:{}},feature:["empty"],edges:"    ",delete:!0});this.open=this.metascreen({id:128,icon:y`
      |   |
      |   |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{desert:{},sea:{}},edges:"oooo"});this.hallNS=this.metascreen({id:129,icon:y`
      | │ |
      | │ |
      | │ |`,tile:" c | c | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c c ",connect:"2a",poi:[[4]],exits:[E0({left:6,width:4,manual:!0}),m0({left:6,width:4,manual:!0})]});this.hallNS_unreachable=this.metascreen({id:129,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWE=this.metascreen({id:130,icon:y`
      |   |
      |───|
      |   |`,tile:"   |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c c",connect:"6e",poi:[[4]]});this.hallWE_unreachable=this.metascreen({id:130,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallSE=this.metascreen({id:131,icon:y`
      |   |
      | ┌─|
      | │ |`,tile:"   | cc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"  cc",connect:"ae",poi:[[2]]});this.hallSE_unreachable=this.metascreen({id:131,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWS=this.metascreen({id:132,icon:y`
      |   |
      |─┐ |
      | │ |`,tile:"   |cc | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" cc ",connect:"6a",poi:[[2]]});this.hallWS_unreachable=this.metascreen({id:132,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNE=this.metascreen({id:133,icon:y`
      | │ |
      | └─|
      |   |`,tile:" c | cc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c  c",connect:"2e",poi:[[2]],exits:[m0({left:6,width:4,manual:!0})]});this.hallNE_unreachable=this.metascreen({id:133,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNW=this.metascreen({id:134,icon:y`
      | │ |
      |─┘ |
      |   |`,tile:" c |cc |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cc  ",connect:"26",poi:[[2]],exits:[m0({left:6,width:4,manual:!0})]});this.hallNW_unreachable=this.metascreen({id:134,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNSE=this.metascreen({id:135,icon:y`
      | │ |
      | ├─|
      | │ |`,tile:" c | cc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c cc",connect:"2ae",poi:[[3]],exits:[m0({left:6,width:4,manual:!0})]});this.branchNSE_unreachable=this.metascreen({id:135,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWSE=this.metascreen({id:136,icon:y`
      | │ |
      |─┼─|
      | │ |`,tile:" c |ccc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cccc",connect:"26ae",poi:[[3]],exits:[m0({left:6,width:4,manual:!0})]});this.branchNWSE_unreachable=this.metascreen({id:136,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWS=this.metascreen({id:137,icon:y`
      | │ |
      |─┤ |
      | │ |`,tile:" c |cc | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"ccc ",connect:"26a",poi:[[3]],exits:[m0({left:6,width:4,manual:!0})]});this.branchNWS_unreachable=this.metascreen({id:137,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchWSE=this.metascreen({id:138,icon:y`
      |   |
      |─┬─|
      | │ |`,tile:"   |ccc| c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" ccc",connect:"6ae",poi:[[3]]});this.branchWSE_unreachable=this.metascreen({id:138,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWE=this.metascreen({id:139,icon:y`
      | │ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"cc c",connect:"26e",poi:[[3]],exits:[m0({left:6,width:4,manual:!0})]});this.branchNWE_unreachable=this.metascreen({id:139,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_ramp=this.metascreen({id:140,icon:y`
      | ┋ |
      | ┋ |
      | ┋ |`,tile:" c | / | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["ramp"],edges:"c c ",connect:"2a",exits:[m0({left:6,width:4,manual:!0})]});this.hallNS_ramp_unreachable=this.metascreen({id:140,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_overBridge=this.metascreen({id:141,icon:y`
      | ╽ |
      |─┃─|
      | ╿ |`,tile:" c | b | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["overpass"],edges:"cbcb",connect:"2a",exits:[m0({left:6,width:4,manual:!0})]});this.hallWE_underBridge=this.metascreen({id:142,icon:y`
      | ╽ |
      |───|
      | ╿ |`,tile:"   |cbc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["underpass"],edges:"bcbc",connect:"6e"});this.hallNS_wall=this.metascreen({id:143,icon:y`
      | │ |
      | ┆ |
      | │ |`,tile:" c | c | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c c ",feature:["wall"],connect:"2=a",wall:135,mod:"wall",exits:[m0({left:6,width:4,manual:!0})]});this.hallNS_wall_unreachable=this.metascreen({id:143,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallWE_wall=this.metascreen({id:144,icon:y`
      |   |
      |─┄─|
      |   |`,tile:"   |ccc|   ",tilesets:{cave:{},iceCave:{}},feature:["wall"],edges:" c c",connect:"6=e",wall:103,mod:"wall"});this.hallWE_wall_unreachable=this.metascreen({id:144,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_arena=this.metascreen({id:145,icon:y`
      |┌┸┐|
      |│&│|
      |└┬┘|`,tile:[" n | a | c "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["arena"],edges:"c c ",connect:"2a",poi:[[1,96,120]],exits:[m0(),E0({left:6,width:4,manual:!0}),Pe(230,4),ne(246,4)],arena:1});this.hallNS_arena_unreachable=this.metascreen({id:145,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.hallNS_arenaWall=this.metascreen({id:146,icon:y`
      |┌┄┐|
      |│&│|
      |└┬┘|`,placement:"manual",tile:[" n | a | c "],tilesets:{cave:{},iceCave:{}},feature:["arena","wall"],edges:"n c ",connect:"2x=apx",wall:39,mod:"wall",poi:[[1,96,120]],exits:[m0({top:1}),E0({left:6,width:4,manual:!0})],arena:1});this.branchNWE_wall=this.metascreen({id:148,icon:y`
      | ┆ |
      |─┴─|
      |   |`,tile:" c |ccc|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wall"],edges:"cc c",connect:"2x=6e",exits:[m0({left:6,width:4})],mod:"wall",wall:55});this.branchNWE_wall_unreachable=this.metascreen({id:148,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.branchNWE_upStair=this.metascreen({id:149,icon:y`<
      | < |
      |─┴─|
      |   |`,tile:"   |c<c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c c",connect:"6e",exits:[Sx(71)]});this.branchNWE_upStair_unreachable=this.metascreen({id:149,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.deadEndW_upStair=this.metascreen({id:150,icon:y`<
      | < |
      |─┘ |
      |   |`,tile:"   |c< |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c  ",connect:"6",exits:[Sx(66)]});this.deadEndW_upStair_unreachable=this.metascreen({id:150,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,32),delete:!0});this.deadEndW_downStair=this.metascreen({id:151,icon:y`>
      |   |
      |─┐ |
      | > |`,tile:"   |c> |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:" c  ",connect:"6",exits:[i6(162)]});this.deadEndW_downStair_unreachable=this.metascreen({id:151,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,32),delete:!0});this.deadEndE_upStair=this.metascreen({id:152,icon:y`<
      | < |
      | └─|
      |   |`,tile:"   | <c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"   c",connect:"e",exits:[Sx(76)]});this.deadEndE_upStair_unreachable=this.metascreen({id:152,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,208),delete:!0});this.deadEndE_downStair=this.metascreen({id:153,icon:y`>
      |   |
      | ┌─|
      | > |`,tile:"   | >c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"   c",connect:"e",exits:[i6(172)]});this.deadEndE_downStair_unreachable=this.metascreen({id:153,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,208),delete:!0});this.deadEndNS_stairs=this.metascreen({id:154,icon:y`
      | > |
      |   |
      | < |`,placement:"manual",tile:" > |   | < ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"c c ",connect:"2x|ax",exits:[i6(23),Sx(215)],match:e=>e(264,120)&&e(-48,120)});this.deadEndNS_stairs_unreachable=this.metascreen({id:154,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(264,120)&&!e(-48,120),delete:!0});this.deadEndN_stairs=this.metascreen({id:154,icon:y`
      | > |
      |   |
      |   |`,tile:[" c | > |   "," > |   |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"c   ",connect:"2",exits:[i6(23)],match:e=>!e(264,120)&&e(-48,120)});this.deadEndS_stairs=this.metascreen({id:154,icon:y`
      |   |
      |   |
      | < |`,tile:["   | < | c ","   |   | < "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],edges:"  c ",connect:"a",exits:[Sx(215)],match:e=>!e(-48,120)&&e(264,120)});this.deadEndNS=this.metascreen({id:155,icon:y`
      | ╵ |
      |   |
      | ╷ |`,placement:"manual",tile:" c |   | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"c c ",connect:"2p|ap",poi:[[0,-48,120],[0,272,120]],match:e=>e(-48,120)&&e(272,120)});this.deadEndNS_unreachable=this.metascreen({id:155,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(-48,120)&&!e(272,120),delete:!0});this.deadEndN=this.metascreen({id:155,icon:y`
      | ╵ |
      |   |
      |   |`,tile:[" c | c |   "," c |   |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"c   ",connect:"2",poi:[[0,-48,120]],match:e=>!e(272,120)&&e(-48,120)});this.deadEndS=this.metascreen({id:155,icon:y`
      |   |
      |   |
      | ╷ |`,tile:["   | c | c ","   |   | c "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"  c ",connect:"a",poi:[[0,272,120]],match:e=>!e(-48,120)&&e(272,120)});this.deadEndWE=this.metascreen({id:156,icon:y`
      |   |
      |╴ ╶|
      |   |`,placement:"manual",tile:"   |c c|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:" c c",connect:"6p|ep",poi:[[0,112,-40],[0,112,264]],match:e=>e(112,-40)&&e(112,264)});this.deadEndWE_unreachable=this.metascreen({id:156,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(112,-40)&&!e(112,264),delete:!0});this.deadEndW=this.metascreen({id:156,icon:y`
      |   |
      |╴  |
      |   |`,tile:["   |cc |   ","   |c  |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:" c  ",connect:"6",poi:[[0,112,-40]],match:e=>!e(112,264)&&e(112,-40)});this.deadEndE=this.metascreen({id:156,icon:y`
      |   |
      |  ╶|
      |   |`,tile:["   | cc|   ","   |  c|   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["deadend","empty"],edges:"   c",connect:"e",poi:[[0,112,264]],match:e=>!e(112,-40)&&e(112,264)});this.hallNS_entrance=this.metascreen({id:158,icon:y`╽
      | │ |
      | │ |
      | ╽ |`,tile:" c | c | n ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},edges:"c n ",connect:"2a",exits:[E0()]});this.hallNS_entrance_unreachable=this.metascreen({id:158,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.channelExitSE=this.metascreen({id:159,icon:y`
      |   |
      | ╔═|
      | ║ |`,tilesets:{dolphinCave:{}},feature:["river"],edges:"  rr",exits:[E0({left:5})]});this.channelBendWS=this.metascreen({id:160,icon:y`
      |█  |
      |═╗ |
      |█║ |`,tilesets:{dolphinCave:{}},feature:["river"],edges:" rr "});this.channelHallNS=this.metascreen({id:161,icon:y`
      | ║ |
      | ╠┈|
      | ║ |`,tilesets:{dolphinCave:{}},feature:["river","bridge"],wall:139,edges:"r r "});this.channelEntranceSE=this.metascreen({id:162,icon:y`
      |   |
      | ╔┈|
      |╷║ |`,tilesets:{dolphinCave:{}},feature:["river","bridge"],exits:[E0({left:2})],wall:124,edges:"  rr"});this.channelCross=this.metascreen({id:163,icon:y`
      | ║ |
      |═╬═|
      |╷║╷|`,tilesets:{dolphinCave:{}},feature:["river"],exits:[E0({left:3}),E0({left:11,type:"door"})],edges:"  rr"});this.channelDoor=this.metascreen({id:164,icon:y`∩
      | ∩█|
      |┈══|
      |  █|`,tilesets:{dolphinCave:{}},feature:["river","bridge"],exits:[V(56)],wall:115,edges:" r  "});this.mountainFloatingIsland=this.metascreen({id:165,icon:y`*
      |═╗█|
      |*║ |
      |═╣█|`,placement:"manual",tile:"   | ap|   ",tilesets:{mountainRiver:{}},edges:"  wp",connect:"e"});this.mountainPathNE_stair=this.metascreen({id:166,icon:y`└
      |█┋█|
      |█  |
      |███|`,tile:" / | pp|  ",tilesets:{mountain:{},mountainRiver:{}},edges:"l  p",connect:"2e",exits:[m0()]});this.mountainBranchNWE=this.metascreen({id:167,icon:y`┴
      |█ █|
      |   |
      |███|`,tile:" p |ppp|  ",tilesets:{mountain:{},mountainRiver:{}},edges:"pp p",connect:"26e"});this.mountainPathWE_iceBridge=this.metascreen({id:168,icon:y`╫
      |█║█|
      | ┆ |
      |█║█|`,tile:[" r |ppp| r "," r |ppp|   "],tilesets:{mountainRiver:{}},feature:["bridge"],edges:"wpwp",connect:"6-e:2a",wall:135});this.mountainPathSE=this.metascreen({id:169,icon:y`┌
      |███|
      |█  |
      |█ █|`,tile:"   | pp| p ",tilesets:{mountain:{},mountainRiver:{}},edges:"  pp",connect:"ae",exits:[xx({top:6,height:4}),E0({left:6,width:4})]});this.mountainDeadEndW_caveEmpty=this.metascreen({id:170,icon:y`∩
      |█∩█|
      |▐ ▐|
      |███|`,tile:"   |p< |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6",exits:[T0(56)]});this.mountainPathNE=this.metascreen({id:171,icon:y`└
      |█ █|
      |█  |
      |███|`,tile:" p | pp|   ",tilesets:{mountain:{},mountainRiver:{}},edges:"p  p",connect:"2e",exits:[xx({top:6,height:4}),m0({left:6,width:4})]});this.mountainBranchWSE=this.metascreen({id:172,icon:y`┬
      |███|
      |   |
      |█ █|`,tile:"   |ppp| p ",tilesets:{mountain:{},mountainRiver:{}},edges:" ppp",connect:"6ae"});this.mountainPathW_cave=this.metascreen({id:173,icon:y`∩
      |█∩█|
      |  ▐|
      |███|`,tile:"   |p< |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6",exits:[T0(85)]});this.mountainPathE_slopeS=this.metascreen({id:174,icon:y`╓
      |███|
      |█  |
      |█↓█|`,tile:"   | pp| \u2193 ",tilesets:{mountain:{}},edges:"  sp",connect:"ae"});this.mountainPathNW=this.metascreen({id:175,icon:y`┘
      |█ █|
      |  █|
      |███|`,tile:" p |pp |   ",tilesets:{mountain:{},mountainRiver:{}},edges:"pp  ",connect:"26",exits:[Y0({top:6,height:4}),m0({left:6,width:4})]});this.mountainCave_empty=this.metascreen({id:176,icon:y`∩
      |█∩█|
      |▌ ▐|
      |███|`,tile:"   | < |   ",tilesets:{mountain:{},mountainRiver:{}},edges:"    ",connect:"",exits:[T0(88)]});this.mountainPathE_cave=this.metascreen({id:177,icon:y`∩
      |█∩█|
      |█  |
      |███|`,tile:"   | <p|   ",tilesets:{mountain:{},mountainRiver:{}},edges:"   p",connect:"e",exits:[T0(87)]});this.mountainPathWE_slopeN=this.metascreen({id:178,icon:y`╨
      |█↓█|
      |   |
      |███|`,tile:" \u2193 |ppp|   ",tilesets:{mountain:{}},edges:"sp p",connect:"26e"});this.mountainDeadEndW=this.metascreen({id:179,icon:y`╴
      |███|
      |  █|
      |███|`,tile:"   |pp |   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p  ",connect:"6"});this.mountainPathWE=this.metascreen({id:180,icon:y`─
      |███|
      |   |
      |███|`,tile:"   |ppp|   ",tilesets:{mountain:{},mountainRiver:{}},edges:" p p",connect:"6e",exits:[Y0({top:6,height:4}),xx({top:6,height:4})]});this.mountainArena_gate=this.metascreen({id:181,icon:y`#
      |█#█|
      |▌ ▐|
      |█┋█|`,tile:"   | < | / ",tilesets:{mountain:{},mountainRiver:{}},feature:["arena"],edges:"  l ",connect:"a",exits:[{...Sx(71,3),type:"gate"}],flag:"custom:false"});this.mountainPathN_slopeS_cave=this.metascreen({id:182,icon:y`∩
      |█┋∩|
      |▌ ▐|
      |█↓█|`,tile:" / | < | \u2193 ",tilesets:{mountain:{}},edges:"l s ",connect:"2a",exits:[T0(90),m0()]});this.mountainPathWE_slopeNS=this.metascreen({id:183,icon:y`╫
      |█↓█|
      |   |
      |█↓█|`,tile:" \u2193 |ppp| \u2193 ",tilesets:{mountain:{}},edges:"spsp",connect:"26ae"});this.mountainPathWE_slopeN_cave=this.metascreen({id:184,icon:y`∩
      |█↓∩|
      |   |
      |███|`,tile:" \u2193 |p<p|   ",tilesets:{mountain:{}},edges:"sp p",connect:"26e",exits:[T0(92)]});this.mountainPathWS=this.metascreen({id:185,icon:y`┐
      |███|
      |  █|
      |█ █|`,tile:"   |pp | p ",tilesets:{mountain:{},mountainRiver:{}},edges:" pp ",connect:"6a",exits:[Y0({top:6,height:4}),E0({left:6,width:4})]});this.mountainSlope=this.metascreen({id:186,icon:y`↓
      |█↓█|
      |█↓█|
      |█↓█|`,tile:" \u2193 | \u2193 | \u2193 ",tilesets:{mountain:{}},edges:"s s ",connect:"2a"});this.mountainRiver=this.metascreen({id:186,icon:y`║
      |█║█|
      |█║█|
      |█║█|`,tile:[" r | r | r "," r | r |   "],tilesets:{mountainRiver:{}},edges:"w w ",connect:"2:e"});this.mountainPathE_gate=this.metascreen({id:187,icon:y`∩
      |█∩█|
      |█  |
      |███|`,tile:"   | <p|   ",tilesets:{mountain:{}},edges:"   p",connect:"e",exits:[T0(87,"gate")]});this.mountainPathWE_inn=this.metascreen({id:188,icon:y`∩
      |█∩█|
      |   |
      |███|`,tile:"   |p<p|   ",placement:"manual",tilesets:{mountain:{}},edges:" p p",connect:"6e",exits:[V(118)]});this.mountainPathWE_bridgeOverSlope=this.metascreen({id:189,icon:y`═
      |█↓█|
      | ═ |
      |█↓█|`,tile:" \u2193 |ppp| \u2193 ",tilesets:{mountain:{}},edges:"spsp",connect:"6e",exits:[Pe(182,4)]});this.mountainPathWE_bridgeOverRiver=this.metascreen({id:189,icon:y`═
      |█║█|
      | ═ |
      |█║█|`,tile:[" r |ppp| r "," r |ppp|   "],tilesets:{mountainRiver:{}},edges:"wpwp",connect:"6e|2|a"});this.mountainSlope_underBridge=this.metascreen({id:190,icon:y`↓
      |█↓█|
      | ═ |
      |█↓█|`,tile:" \u2193 |p\u2193p| \u2193 ",placement:"manual",tilesets:{mountain:{}},edges:"spsp",connect:"2a",exits:[ne(198,4)]});this.mountainEmpty=this.metascreen({id:191,icon:y`
      |███|
      |███|
      |███|`,tile:"   |   |   ",tilesets:{mountain:{},mountainRiver:{}},feature:["empty"],edges:"    ",delete:!0});this.boundaryS=this.metascreen({id:192,icon:y`
      |   |
      |▄▄▄|
      |███|`,tile:"ooo|ooo|   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"o^ ^"});this.boundaryN_cave=this.metascreen({id:193,icon:y`
      |███|
      |▀∩▀|
      |   |`,tile:"   |o<o|ooo",tilesets:{grass:{},sea:{},desert:{},river:{requires:[4]}},edges:" vov",exits:[T0(73)]});this.cornerSE_cave=this.metascreen({id:194,icon:y`
      | ▐█|
      |▄∩█|
      |███|`,tile:"oo |o< |   ",tilesets:{grass:{},river:{},sea:{},desert:{}},edges:"<^  ",exits:[T0(90)]});this.waterfall=this.metascreen({id:195,icon:y`
      |   |
      |↓↓↓|
      |   |`,tile:"ooo|\u2193\u2193\u2193|ooo",tilesets:{sea:{}},edges:"oooo"});this.whirlpoolBlocker=this.metascreen({id:196,icon:y`
      |   |
      |█╳█|
      |   |`,tile:"ooo|\u2193#\u2193|ooo",tilesets:{sea:{}},feature:["whirlpool"],flag:"calm",edges:"oooo"});this.beachExitN=this.metascreen({id:197,icon:y`
      |█ █|
      |█╱▀|
      |█▌ |`,placement:"manual",tile:" x | bo| oo",tilesets:{sea:{}},edges:"n >v",exits:[m0({left:9})]});this.whirlpoolOpen=this.metascreen({id:198,icon:y`
      |   |
      | ╳ |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{sea:{}},feature:["whirlpool"],edges:"oooo",flag:"calm"});this.quicksandOpen=this.metascreen({id:198,icon:y`
      |   |
      | ╳ |
      |   |`,tile:"ooo|ooo|ooo",tilesets:{desert:{}},feature:["whirlpool"],edges:"oooo"});this.lighthouseEntrance=this.metascreen({id:199,icon:y`
      |▗▟█|
      |▐∩▛|
      |▝▀▘|`,placement:"manual",tile:"oo |oLo|ooo",tilesets:{sea:{}},feature:["lighthouse"],edges:"<oov",exits:[T0(42),V(117)]});this.beachCave=this.metascreen({id:200,icon:y`
      |█∩█|
      |▀╲█|
      |   |`,placement:"manual",tile:"   |o<o|ooo",tilesets:{sea:{}},edges:" vov",exits:[T0(40)]});this.beachCabinEntrance=this.metascreen({id:201,icon:y`
      | ∩█|
      | ╲▀|
      |█▄▄|`,placement:"manual",tile:"oo |oC8|   ",tilesets:{sea:{}},feature:["cabin"],edges:"<^ b",exits:[V(85),xx({top:8,height:3})]});this.oceanShrine=this.metascreen({id:202,icon:y`
      |▗▄▖|
      |▐*▌|
      |▝ ▘|`,placement:"manual",tile:"ooo|oAo|ooo",tilesets:{sea:{}},feature:["altar"],edges:"oooo"});this.pyramidEntrance=this.metascreen({id:203,icon:y`
      | ▄ |
      |▟∩▙|
      | ╳ |`,placement:"manual",tile:"ooo|oPo|ooo",tilesets:{desert:{}},feature:["pyramid"],edges:"oooo",exits:[T0(167,"fortress")]});this.cryptEntrance=this.metascreen({id:204,icon:y`
      | ╳ |
      |▐>▌|
      |▝▀▘|`,placement:"manual",tile:"ooo|oYo|ooo",tilesets:{desert:{}},feature:["crypt"],edges:"oooo",exits:[i6(103)]});this.oasisLake=this.metascreen({id:205,icon:y`
      | ^ |
      |vOv|
      | vv|`,tile:"ooo|ooo|oro",placement:"manual",tilesets:{desert:{}},feature:["lake"],edges:"oo3o"});this.desertCaveEntrance=this.metascreen({id:206,icon:y`
      |▗▄▖|
      |▜∩▛|
      | ╳ |`,tile:"ooo|o<o|ooo",tilesets:{desert:{},sea:{requires:[4]}},edges:"oooo",exits:[T0(167)]});this.oasisCave=this.metascreen({id:207,icon:y`
      | vv|
      |▄∩v|
      |█▌ |`,placement:"manual",tile:"oro|o<o| oo",tilesets:{desert:{}},edges:"3^>o",exits:[Sx(55)]});this.channelEndW_cave=this.metascreen({id:208,icon:y`
      |██∩|
      |══ |
      |███|`,tile:"   |r< |   ",tilesets:{dolphinCave:{}},feature:["river"],exits:[Sx(87)]});this.boatChannel=this.metascreen({id:209,icon:y`
      |███|
      |▀▀▀|
      |▄▄▄|`,tile:["   |888|   ","   |88x|   "],tilesets:{sea:{}},edges:" b b",exits:[{...xx({top:8,height:3}),entrance:40168},Y0({top:8,height:3})]});this.channelWE=this.metascreen({id:210,icon:y`
      |███|
      |═══|
      |███|`,tile:"   |rrr|   ",tilesets:{dolphinCave:{}},feature:["river"]});this.riverCaveNWSE=this.metascreen({id:211,icon:y`
      |┘║└|
      |═╬═|
      |┬┇┬|`,tile:" r |rrr| r ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"rrrr",connect:"15p:3dp:79-bf",wall:182,poi:[[4,0,72],[4,0,152]]});this.riverCaveNS=this.metascreen({id:212,icon:y`
      |│║│|
      |│║│|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"19:3b",mod:"bridge"});this.riverCaveWE=this.metascreen({id:213,icon:y`
      |───|
      |═══|
      |───|`,tile:"   |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" r r",connect:"5d:7f",mod:"bridge"});this.riverCaveNS_bridge=this.metascreen({id:214,icon:y`
      |│║│|
      |├┇┤|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"r r ",connect:"19-3b",wall:135});this.riverCaveWE_bridge=this.metascreen({id:215,icon:y`
      |─┬─|
      |═┅═|
      |─┴─|`,tile:"   |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:" r r",connect:"5d-7f",wall:134});this.riverCaveSE=this.metascreen({id:216,icon:y`
      |┌──|
      |│╔═|
      |│║┌|`,tile:"   | rr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"  rr",connect:"9d:bf"});this.riverCaveWS=this.metascreen({id:217,icon:y`
      |──┐|
      |═╗│|
      |┐║│|`,tile:"   |rr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rr ",connect:"5b:79"});this.riverCaveNE=this.metascreen({id:218,icon:y`
      |│║└|
      |│╚═|
      |└──|`,tile:" r | rr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r  r",connect:"1f:3d"});this.riverCaveNW=this.metascreen({id:219,icon:y`
      |┘║│|
      |═╝│|
      |──┘|`,tile:" r |rr |   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rr  ",connect:"15:37"});this.riverCaveWE_passageN=this.metascreen({id:220,icon:y`╧
      |─┴─|
      |═══|
      |───|`,tile:" c |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"cr r",connect:"25d:7f"});this.riverCaveWE_passageS=this.metascreen({id:221,icon:y`╤
      |───|
      |═══|
      |─┬─|`,tile:"   |rrr| c ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rcr",connect:"5d:7af"});this.riverCaveNS_passageW=this.metascreen({id:222,icon:y`╢
      |│║│|
      |┤║│|
      |│║│|`,tile:" r |cr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rcr ",connect:"169:3b"});this.riverCaveNS_passageE=this.metascreen({id:223,icon:y`╟
      |│║│|
      |│║├|
      |│║│|`,tile:" r | rc| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r rc",connect:"19:3be"});this.wideHallNE=this.metascreen({id:224,icon:y`
      | ┃ |
      | ┗━|
      |   |`,tile:" w | ww|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w  w",connect:"2e"});this.goaWideHallNE=this.metascreen({id:224,icon:y`
      |│┃└|
      |│┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{}},edges:"w  w",connect:"1f|2e|3d"});this.goaWideHallNE_blockedLeft=this.metascreen({id:224,icon:y`
      |│┃└|
      | ┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{requires:[14],addWall:[97]}},edges:"w  w",connect:"1|f|2e|3d"});this.goaWideHallNE_blockedRight=this.metascreen({id:224,icon:y`
      |│┃ |
      |│┗━|
      |└──|`,tile:" w | ww|   ",tilesets:{labyrinth:{requires:[14],addWall:[13]}},edges:"w  w",connect:"1f|2e|3|d"});this.wideHallNW=this.metascreen({id:225,icon:y`
      | ┃ |
      |━┛ |
      |   |`,tile:" w |ww |   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"ww  ",connect:"26"});this.goaWideHallNW=this.metascreen({id:225,icon:y`
      |┘┃│|
      |━┛│|
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{requires:[14],removeWall:109}},edges:"ww  ",connect:"15|26|37"});this.goaWideHallNW_blockedRight=this.metascreen({id:225,icon:y`
      |┘┃│|
      |━┛ |
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{}},edges:"ww  ",connect:"15|26|3|7"});this.goaWideHallNW_blockedLeft=this.metascreen({id:225,icon:y`
      | ┃│|
      |━┛│|
      |──┘|`,tile:" w |ww |   ",tilesets:{labyrinth:{requires:[14],addWall:[1],removeWall:109}},edges:"ww  ",connect:"1|5|26|37"});this.wideHallSE=this.metascreen({id:226,icon:y`
      |   |
      | ┏━|
      | ┃ |`,tile:"   | ww| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"  ww",connect:"ae"});this.goaWideHallSE=this.metascreen({id:226,icon:y`
      |┌──|
      |│┏━|
      |│┃┌|`,tile:"   | ww| w ",tilesets:{labyrinth:{}},edges:"  ww",connect:"9d|ae|bf"});this.goaWideHallSE_blockedLeft=this.metascreen({id:226,icon:y`
      |┌──|
      | ┏━|
      |│┃┌|`,tile:"   | ww| w ",tilesets:{labyrinth:{requires:[14],addWall:[97]}},edges:"  ww",connect:"9|d|ae|bf"});this.goaWideHallSE_blockedRight=this.metascreen({id:226,icon:y`
      |┌──|
      |│┏━|
      |│┃ |`,tile:"   | ww| w ",tilesets:{labyrinth:{requires:[14],addWall:[221]}},edges:"  ww",connect:"9d|ae|b|f"});this.wideHallWS=this.metascreen({id:227,icon:y`
      |   |
      |━┓ |
      | ┃ |`,tile:"   |ww | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" ww ",connect:"6a"});this.goaWideHallWS=this.metascreen({id:227,icon:y`
      |──┐|
      |━┓│|
      |┐┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{requires:[14],removeWall:157}},edges:" ww ",connect:"5b|6a|79"});this.goaWideHallWS_blockedRight=this.metascreen({id:227,icon:y`
      |──┐|
      |━┓ |
      |┐┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{}},edges:" ww ",connect:"5|b|6a|79"});this.goaWideHallWS_blockedLeft=this.metascreen({id:227,icon:y`
      |──┐|
      |━┓│|
      | ┃│|`,tile:"   |ww | w ",tilesets:{labyrinth:{requires:[14],addWall:[209],removeWall:157}},edges:" ww ",connect:"5b|6a|7|9"});this.goaWideHallNS_stairs=this.metascreen({id:228,icon:y`
      |├┨│|
      |│┃│|
      |│┠┤|`,tile:" w | H | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"1239ab"});this.goaWideHallNS_stairsBlocked13=this.metascreen({id:228,icon:y`
      |└┨│|
      |╷┃╵|
      |│┠┐|`,tile:" w | H | w ",tilesets:{labyrinth:{requires:[14],addWall:[65,141]}},edges:"w w ",connect:"12ab|3|9"});this.goaWideHallNS_stairsBlocked24=this.metascreen({id:228,icon:y`
      |┌┨│|
      |│┃│|
      |│┠┘|`,tile:" w | H | w ",tilesets:{labyrinth:{requires:[14],addWall:[1,205]}},edges:"w w ",connect:"1|239a|b"});this.wideHallNS_deadEnds=this.metascreen({id:229,icon:y`
      | ╹ |
      |   |
      | ╻ |`,tile:" w |   | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w w ",connect:"2|a",match:e=>e(272,120)&&e(-48,120)});this.wideHall_deadEndN=this.metascreen({id:229,icon:y`
      | ╹ |
      |   |
      |   |`,tile:[" w |   |   "," w | w |   "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"w   ",connect:"2",match:e=>!e(272,120)&&e(-48,120)});this.wideHall_deadEndS=this.metascreen({id:229,icon:y`
      |   |
      |   |
      | ╻ |`,tile:["   |   | w ","   | w | w "],tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"  w ",connect:"a",match:e=>e(272,120)&&!e(-48,120)});this.goaWideHallNS_deadEnd=this.metascreen({id:229,icon:y`
      |│╹│|
      |├─┤|
      |│╻│|`,tile:" w | = | w ",tilesets:{labyrinth:{}},edges:"w w ",connect:"139b|2|a"});this.goaWideHallNS_deadEndBlocked24=this.metascreen({id:229,icon:y`
      |╵╹│|
      |┌─┘|
      |│╻╷|`,tile:" w | = | w ",tilesets:{labyrinth:{requires:[14],addWall:[97,173]}},edges:"w w ",connect:"1|2|39|a|b"});this.goaWideHallNS_deadEndBlocked13=this.metascreen({id:229,icon:y`
      |│╹╵|
      |└─┐|
      |╷╻│|`,tile:" w | = | w ",tilesets:{labyrinth:{requires:[14],addWall:[109,161]}},edges:"w w ",connect:"1b|2|3|9|a"});this.wideHallNWSE=this.metascreen({id:230,icon:y`
      | ┃ |
      |━╋━|
      | ┃ |`,tile:" w |www| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"wwww",connect:"26ae"});this.goaWideHallNWSE=this.metascreen({id:230,icon:y`
      |┘┃└|
      |━╋━|
      |┐┃┌|`,tile:" w |www| w ",tilesets:{labyrinth:{}},edges:"wwww",connect:"26ae|15|3d|79|bf"});this.goaWideHallNWSE_blocked13=this.metascreen({id:230,icon:y`
      |┘┃ |
      |━╋━|
      | ┃┌|`,tile:" w |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[13,209]}},edges:"wwww",connect:"26ae|15|3|d|7|9|bf"});this.goaWideHallNWSE_blocked24=this.metascreen({id:230,icon:y`
      | ┃└|
      |━╋━|
      |┐┃ |`,tile:" w |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[1,221]}},edges:"wwww",connect:"26ae|1|5|3d|79|b|f"});this.wideHallNWE=this.metascreen({id:231,icon:y`
      | ┃ |
      |━┻━|
      |   |`,tile:" w |www|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:"ww w",connect:"26e"});this.goaWideHallNWE=this.metascreen({id:231,icon:y`
      |┘┃└|
      |━┻━|
      |───|`,tile:" w |www|   ",tilesets:{labyrinth:{}},edges:"ww w",connect:"26e|15|3d|7f"});this.goaWideHallNWE_blockedTop=this.metascreen({id:231,icon:y`
      | ┃ |
      |━┻━|
      |───|`,tile:" w |www|   ",tilesets:{labyrinth:{requires:[14],addWall:[1,13]}},edges:"ww w",connect:"26e|1|5|3|d|7f"});this.wideHallWSE=this.metascreen({id:232,icon:y`
      |   |
      |━┳━|
      | ┃ |`,tile:"   |www| w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" www",connect:"6ae"});this.goaWideHallWSE=this.metascreen({id:232,icon:y`
      |───|
      |━┳━|
      |┐┃┌|`,tile:"   |www| w ",tilesets:{labyrinth:{}},edges:" www",connect:"6ae|5d|79|bf"});this.goaWideHallWSE_blockedBottom=this.metascreen({id:232,icon:y`
      |───|
      |━┳━|
      | ┃ |`,tile:"   |www| w ",tilesets:{labyrinth:{requires:[14],addWall:[209,221]}},edges:" www",connect:"6ae|5d|7|9|b|f"});this.wideHallNS_wallTop=this.metascreen({id:233,icon:y`
      | ┆ |
      | ┃ |
      | ┃ |`,tile:" n | w | w ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide","wall"],edges:"c w",connect:"2a",exits:[m0({left:6,width:4})],wall:55,statues:[10]});this.goaWideHallNS_wallTop=this.metascreen({id:233,icon:y`
      | ┆ |
      |╷┃╷|
      |│┃│|`,tile:" n | w | w ",tilesets:{labyrinth:{}},feature:["wall"],edges:"c w ",connect:"2ax|9|b",exits:[m0({left:6,width:4})],wall:55,statues:[10]});this.wideHallWE=this.metascreen({id:234,icon:y`
      |   |
      |━━━|
      |   |`,tile:"   |www|   ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["wide"],edges:" w w",connect:"6e"});this.goaWideHallWE=this.metascreen({id:234,icon:y`
      |───|
      |━━━|
      |───|`,tile:"   |www|   ",tilesets:{labyrinth:{}},edges:" w w",connect:"5d|6e|7f"});this.pitWE=this.metascreen({id:235,tile:"   |cpc|   ",icon:y`
      |   |
      |─╳─|
      |   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["pit"],edges:" c c",connect:"6e",platform:{type:"horizontal",coord:28728}});this.pitNS=this.metascreen({id:236,icon:y`
      | │ |
      | ╳ |
      | │ |`,tile:" c | p | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["pit"],edges:"c c ",connect:"2a",platform:{type:"vertical",coord:16504}});this.pitNS_unreachable=this.metascreen({id:236,icon:y`\n|   |\n|   |\n|   |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["empty"],placement:"manual",match:e=>!e(128,128),delete:!0});this.spikesNS_hallS=this.metascreen({id:237,icon:y`
      | ░ |
      | ░ |
      | │ |`,tile:" s | s | c ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"s c ",connect:"2a"});this.spikesNS_hallN=this.metascreen({id:238,icon:y`
      | │ |
      | ░ |
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" c | s | s ",feature:["spikes"],edges:"c s ",connect:"2a"});this.spikesNS_hallWE=this.metascreen({id:239,icon:y`
      | ░ |
      |─░─|
      | ░ |`,tile:" s |csc| s ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"scsc",connect:"26ae"});this.spikesNS_hallW=this.metascreen({id:-225,icon:y`
      | ░ |
      |─░ |
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" s |cs | s ",feature:["spikes"],edges:"scs ",connect:"26a",definition:e=>Xx(`L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R`,["L",e.metascreens.spikesNS_hallWE],["R",e.metascreens.spikesNS])});this.spikesNS_hallE=this.metascreen({id:-226,icon:y`
      | ░ |
      | ░─|
      | ░ |`,tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},tile:" s | sc| s ",feature:["spikes"],edges:"s sc",connect:"2ae",definition:e=>Xx(`L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R
         L L L L L L L L R R R R R R R R`,["L",e.metascreens.spikesNS],["R",e.metascreens.spikesNS_hallWE])});this.riverCave_deadEndsNS=this.metascreen({id:240,icon:y`
      | ╨ |
      |   |
      | ╥ |`,tile:" r |   | r ",placement:"manual",tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"r r ",connect:"1p:3p|9p:bp",poi:[[1,-48,72],[1,-48,152],[1,272,72],[1,272,152]]});this.riverCave_deadEndsN=this.metascreen({id:240,icon:y`
      | ╨ |
      |   |
      |   |`,tile:[" r |   |   "," r | r |   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"r   ",connect:"1p:3p",poi:[[1,-48,72],[1,-48,152]],match:e=>!e(264,72)&&!e(264,152),mod:"bridge"});this.riverCave_deadEndsS=this.metascreen({id:240,icon:y`
      |   |
      |   |
      | ╥ |`,tile:["   |   | r ","   | r | r "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"  r ",connect:"9p:bp",poi:[[1,272,72],[1,272,152]],match:e=>!e(-48,72)&&!e(-48,152),mod:"bridge"});this.riverCave_deadEndsWE=this.metascreen({id:241,icon:y`
      |   |
      |╡ ╞|
      |   |`,tile:"   |r r|   ",tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:" r r",connect:"5p:7p|dp:fp",poi:[[1,96,-40],[1,160,-40],[1,96,264],[1,160,264]]});this.riverCave_deadEndsW=this.metascreen({id:241,icon:y`
      |   |
      |╡  |
      |   |`,tile:["   |r  |   ","   |rr |   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:" r  ",connect:"5p:7p",poi:[[1,96,-40],[1,160,-40]],match:e=>!e(96,264)&&!e(160,264)});this.riverCave_deadEndsE=this.metascreen({id:241,icon:y`
      |   |
      |  ╞|
      |   |`,tile:["   |  r|   ","   | rr|   "],tilesets:{cave:{},fortress:{}},feature:["deadend","empty","river"],edges:"   r",connect:"dp:fp",poi:[[1,96,264],[1,160,264]],match:e=>!e(96,-40)&&!e(160,-40)});this.riverCaveN_bridge=this.metascreen({id:242,icon:y`
      | ┇ |
      | ╨ |
      |   |`,tile:[" r | r |   "," r |   |   "],tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"r   ",connect:"1-3",wall:23,match:e=>!e(208,72)&&!e(208,152)});this.riverCaveS_bridge=this.metascreen({id:242,icon:y`
      |   |
      | ╥ |
      | ┇ |`,tile:["   | r | r ","   |   | r "],tilesets:{cave:{},fortress:{}},feature:["river","bridge"],edges:"  r ",connect:"9-b",wall:198,match:e=>!e(16,72)&&!e(16,152)});this.riverCaveWSE=this.metascreen({id:243,icon:y`
      |───|
      |═╦═|
      |┐║┌|`,tile:"   |rrr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:" rrr",connect:"5d:79:bf"});this.riverCaveNWE=this.metascreen({id:244,icon:y`
      |┘║└|
      |═╩═|
      |───|`,tile:" r |rrr|   ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rr r",connect:"15p:3dp:7f",poi:[[4,0,72],[4,0,152]]});this.riverCaveNWS=this.metascreen({id:-241,icon:y`
      |┘║│|
      |═╣│|
      |┐║│|`,tile:" r |rr | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"rrr ",connect:"15p:3b:79",poi:[[4,0,72]],definition:e=>Xx(`A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         A A A A A A A A R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R
         B B B B B B B B R R R R R R R R`,["A",e.metascreens.riverCaveNWE],["B",e.metascreens.riverCaveWSE],["R",e.metascreens.riverCaveNS])});this.riverCaveNSE=this.metascreen({id:-242,icon:y`
      |│║└|
      |│╠═|
      |│║┌|`,tile:" r | rr| r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r rr",connect:"19:3dp:bf",poi:[[4,0,152]],definition:e=>Xx(`L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L A A A A A A A A
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B
         L L L L L L L L B B B B B B B B`,["A",e.metascreens.riverCaveNWE],["B",e.metascreens.riverCaveWSE],["L",e.metascreens.riverCaveNS])});this.riverCaveNS_blockedRight=this.metascreen({id:245,icon:y`
      |│║│|
      |│║ |
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"19:3p:bp",poi:[[0,64,152],[0,192,152]],mod:"block"});this.riverCaveNS_blockedLeft=this.metascreen({id:246,icon:y`
      |│║│|
      | ║│|
      |│║│|`,tile:" r | r | r ",tilesets:{cave:{},fortress:{}},feature:["river"],edges:"r r ",connect:"1p:3b:9p",poi:[[0,48,72],[0,176,72]],mod:"block"});this.spikesNS=this.metascreen({id:247,icon:y`
      | ░ |
      | ░ |
      | ░ |`,tile:" s | s | s ",tilesets:{cave:{},fortress:{},pyramid:{},iceCave:{}},feature:["spikes"],edges:"s s ",connect:"2a"});this.cryptArena_statues=this.metascreen({id:248,icon:y`<
      |&<&|
      |│ │|
      |└┬┘|`,tile:"   | a | c ",tilesets:{pyramid:{}},feature:["arena"],edges:"  c ",connect:"a",exits:[{...Sx(87),type:"crypt"}],flag:"custom:false",arena:2});this.pyramidArena_draygon=this.metascreen({id:249,icon:y`
      |┌─┐|
      |│╳│|
      |└┬┘|`,tile:"   | a | w ",tilesets:{pyramid:{}},feature:["arena","pit"],edges:"  w ",connect:"a",arena:3});this.cryptArena_draygon2=this.metascreen({id:250,icon:y`
      |┏┷┓|
      |┃&┃|
      |┗┳┛|`,tile:" x | a | w ",tilesets:{pyramid:{}},feature:["arena"],edges:"c w ",connect:"2a",exits:[m0({left:6,width:4})],flag:"custom:false",arena:4});this.cryptArena_entrance=this.metascreen({id:251,icon:y`
      | ┃ |
      | ┃ |
      | ╿ |`,tile:" w | w | x ",tilesets:{pyramid:{}},edges:"w n ",connect:"2a",exits:[E0()]});this.cryptTeleporter=this.metascreen({id:252,tilesets:{pyramid:{},tower:{}},exits:[E0({left:6,width:4}),T0(87,"teleporter")]});this.fortressArena_through=this.metascreen({id:253,icon:y`╽
      |┌┴┐|
      |│ │|
      |┕┳┙|`,tile:[" c | a | w "," n | a | w "],tilesets:{fortress:{},pyramid:{}},feature:["arena"],edges:"n w ",connect:"2a",exits:[m0()],arena:5});this.fortressTrap=this.metascreen({id:254,icon:y`
      |└─┘|
      | ╳ |
      |╶┬╴|`,tile:"   | x | n ",tilesets:{fortress:{},pyramid:{}},feature:["pit"],edges:"  n ",connect:"a",exits:[E0()]});this.shrine=this.metascreen({id:255,tilesets:{shrine:{}},exits:[E0({left:6,width:5}),V(104)]});this.inn=this.metascreen({id:256,tilesets:{house:{}},exits:[{...V(134),entrance:37992}]});this.toolShop=this.metascreen({id:257,tilesets:{house:{}},exits:[{...V(134),entrance:37992}]});this.armorShop=this.metascreen({id:258,tilesets:{house:{}},exits:[{...V(134),entrance:37992}]});for(let x in this){let t=this[x];t instanceof dt&&(t.name=x)}}metascreen(e){let x=this,t=new dt(this.rom,x.length,e);x[x.length++]=t,this.screensById.get(t.sid).push(t);for(let s in e.tilesets){let a=s,n=e.tilesets[a];if(n.requires)for(let i of n.requires)this.screensByFix.get(i).push(t);else this.rom.metatilesets[a].addScreen(t)}return t}getById(e,x){let t=this.screensById.has(e)?[...this.screensById.get(e)]:[];return x!=null&&(t=t.filter(s=>s.isCompatibleWithTileset(x))),t}registerFix(e,x){for(let t of this.screensByFix.get(e)){let s=(t.data.update||[]).find(a=>a[0]===e);if(s){if(x==null)throw new Error("Seed required for update");if(!s[1](t,x,this.rom))continue}for(let a in t.data.tilesets){let n=a,i=t.data.tilesets[n];if(!i.requires)continue;let o=i.requires.indexOf(e);o<0||(i.requires.splice(o,1),i.requires.length||this.rom.metatilesets[n].addScreen(t))}}this.registeredFixes.add(e)}isFixed(e){return this.registeredFixes.has(e)}renumber(e,x,t){if(e===x)return;Wd&&console.log(`renumber ${Te(e)} -> ${Te(x)}`);let s=this.screensById.get(x);if(s.length)throw new Error(`ID already used: ${Te(x)}: ${s.join(", ")}`);let a;for(let o of this.getById(e))t&&!o.tilesets().some(d=>t.has(d))||(o.data.definition&&(a=o.data.definition(this.rom),o.data.definition=void 0),o.unsafeSetId(x),s.push(o));this.screensById.delete(e);let n=this.rom.screens.getScreen(e);e>=0&&x<0&&(s[0].data.definition=ie(Uint8Array.from(n.tiles)));let i=n.clone(x);this.rom.screens.setScreen(x,i),n.used=!1,e<0&&(this.rom.screens.deleteScreen(e),a&&x>=0&&(i.tiles=Array.from(a))),this.rom.locations.renumberScreen(e,x)}checkExitTypes(){for(let e in this){let x=this[e],t=new Set;for(let s of x?.data?.exits||[])t.has(s.type)&&console.log(`duplicate: ${e} ${s.type}`),t.add(s.type)}}};function ie(r){return()=>r}var un=230492,Wt=class extends b0{constructor(x,t){super(x,t);this.mirrored=null;if(this.pointer=un+(this.id<<1),this.base=_0(x.prg,this.pointer)+196608,this.used=this.base>=229376,x.prg[this.base]===255){let s=_0(x.prg,this.base+1);for(let a=0;a<256;a++)if(_0(x.prg,un+(a<<1))===s){this.mirrored=a;break}if(this.mirrored==null)throw new Error(`could not find mirrored sprite for ${A(t)}: ${A(s)}`);this.size=0,this.frameMask=0,this.frames=0,this.sprites=[]}else this.mirrored=null,this.size=x.prg[this.base],this.frameMask=x.prg[this.base+1],this.frames=this.frameMask+1,this.sprites=O(this.frames,s=>{let a=this.base+2+s*4*this.size,n=[];for(let i=0;i<this.size&&x.prg[a+4*i]!==128;i++)n.push(o0(x.prg,a+4*i,4));return n})}patternBanks(x=0){if(!this.used)return[];let t=this;t.mirrored&&(t=this.rom.metasprites[t.mirrored]);let s=new Set;for(let a of t.sprites)for(let[n,,,i]of a){if(n===128)break;s.add(i+x>>>6&255)}return[...s]}palettes(){if(!this.used)return[];let x=this;x.mirrored&&(x=this.rom.metasprites[x.mirrored]);let t=new Set;for(let s of x.sprites)for(let[a,,n]of s){if(a===128)break;t.add(n&3)}return[...t]}};var zt=class{constructor(e){this.rom=e;this._all=[];this.grass=this.tileset(128,{patterns:[0,12]});this.town=this.tileset(132,{});this.cave=this.tileset(136,{});this.dolphinCave=this.tileset(136,{});this.pyramid=this.tileset(140,{});this.river=this.tileset(144,{animated:[0,1],patterns:[20,0]});this.sea=this.tileset(148,{});this.lime=this.tileset(148,{});this.mountain=this.tileset(148,{});this.shrine=this.tileset(152,{});this.desert=this.tileset(156,{});this.mountainRiver=this.tileset(156,{});this.swamp=this.tileset(160,{consolidated:!0});this.house=this.tileset(160,{});this.fortress=this.tileset(164,{});this.labyrinth=this.tileset(164,{});this.iceCave=this.tileset(168,{});this.tower=this.tileset(172,{});for(let x in this){let t=this[x];t instanceof Ht&&(t.name=x)}}tileset(e,x){let t=new Ht(this.rom,e,x);return this._all.push(t),t}[Symbol.iterator](){return this._all[Symbol.iterator]()}},Ht=class{constructor(e,x,t){this.rom=e;this.tilesetId=x;this.data=t;this._screens=new Set;this._cache=void 0}[Symbol.iterator](){return this._screens[Symbol.iterator]()}get cache(){return this._cache||(this._cache=new Ls(this)),this._cache}get tileset(){return this.rom.tilesets[this.tilesetId]}get empty(){let e=this.cache.empty;if(!e)throw new Error(`No empty screen for ${this.name}`);return e}effects(){return this.tileset.effects()}getTile(e){return this.tileset.getTile(e)}addScreen(e){this._screens.add(e),e.unsafeAddTileset(this),this.invalidate()}deleteScreen(e){this._screens.delete(e),e.unsafeRemoveTileset(this),this.invalidate()}getMetascreens(e){return this.cache.fromId.get(e)??[]}getExits(e){return this.cache.exits.get(e)}getMetascreensFromTileString(e){return this.cache.tiles.has(e)?this.cache.tiles.get(e):[]}getScreensWithOnlyFeatures(...e){let x=0;for(let s of e)x|=Jx[s];let t=[];for(let s of this)s.features&~x||t.push(s);return t}withMod(e,x){let t=[];for(let s of this.cache.tiles.get(e))s.data.mod===x&&t.push(s);return t}unreachableVariant(e){for(let x of this)if(x.sid===e.sid&&x.isEmpty())return x;return e}isBannedVertical(e,x){return this.cache.bannedNeighbors[0].has(e.uid<<16|x.uid)}isBannedHorizontal(e,x){return this.cache.bannedNeighbors[1].has(e.uid<<16|x.uid)}invalidate(){this._cache=void 0}},bn;(s=>(s.N=0,s.W=1,s.S=2,s.E=3))(bn||(bn={}));var Ls=class{constructor(e){this.tileset=e;this.fromId=new j(()=>[]);this.exits=new j(()=>[]);this.tiles=new j(()=>[]);this.bannedNeighbors=[new Set,new Set];let x;for(let t of e){t.sid>=0&&this.fromId.get(t.sid).push(t),!x&&t.data.edges==="    "&&t.data.placement!=="manual"&&t.hasFeature("empty")&&!t.data.exits?.length&&(x=t);for(let n of t.data.exits??[])this.exits.get(n.type).push(t);let s=typeof t.data.tile=="string"?[t.data.tile]:t.data.tile;for(let n of s??[])this.tiles.get(n.replace(/\|/g,"")).push(t);(t.hasFeature("ramp")||t.hasFeature("overpass")||t.hasFeature("pit")||t.isEmpty())&&this.banDeadEndNeighbor(t);let a=e.rom.metascreens;this.banDeadEndNeighbor(a.branchNWE_wall,1),this.banNeighbor(a.deadEndS_stairs,a.deadEndN_stairs,2),this.banNeighbor(a.deadEndNS_stairs,a.deadEndN_stairs,2),this.banNeighbor(a.deadEndS_stairs,a.deadEndNS_stairs,2),this.banNeighbor(a.deadEndNS_stairs,a.deadEndNS_stairs,2)}this.empty=x??e.rom.metascreens.caveEmpty}banDeadEndNeighbor(e,x=15){for(let t of this.tileset)if(!!t.hasFeature("deadend"))for(let s=0;s<4;s++){let a=1<<s;!(x&a)||e.data.edges?.[s]!==" "&&t.data.edges?.[s^2]!==" "&&this.banNeighbor(e,t,s)}}banNeighbor(e,x,t){this.bannedNeighbors[t&1].add((t&2?e:x).uid<<16|(t&2?x:e).uid)}};var{$04:zd,$05:Hd,$0e:mn,$1b:vn,$fe:Kt}=n0,Ut=class extends kx{constructor(x){super(205);this.rom=x;this.GoaSoldier=new W(this,11);this.LeafElder=new W(this,13);this.LeafElderDaughter=new W(this,17);this.LeafRabbit=new W(this,19);this.WindmillGuard=new W(this,20);this.SleepingWindmillGuard=new W(this,21);this.Akahana=new W(this,22);this.OakElder=new W(this,29);this.OakMother=new W(this,30);this.OakChild=new W(this,31);this.Aryllis=new W(this,35);this.AmazonesGuard=new W(this,37);this.AryllisRightAttendant=new W(this,38);this.AryllisLeftAttendant=new W(this,39);this.Nadare=new W(this,40);this.SoldierGuard=new W(this,45);this.PortoaThroneRoomBackDoorGuard=new W(this,51);this.PortoaPalaceFrontGuard=new W(this,52);this.PortoaQueen=new Bs(this,56);this.FortuneTeller=new W(this,57);this.WaterfallCaveAdventurers=new W(this,58);this.JoelElder=new W(this,61);this.Clark=new W(this,68);this.ShyronGuard=new W(this,78);this.Brokahana=new W(this,84);this.SaharaBunny=new W(this,89);this.Deo=new W(this,90);this.SaharaElder=new W(this,91);this.SaharaElderDaughter=new W(this,92);this.Zebu=new W(this,94);this.Tornel=new W(this,95);this.Stom=new W(this,96);this.MesiaRecording=new W(this,97);this.Asina=new W(this,98);this.HurtDolphin=new W(this,99);this.Fisherman=new W(this,100);this.StartledVillagerOutsideCave=new W(this,101);this.KensuInCabin=new W(this,104);this.Dolphin=new Ps(this,105);this.SleepingKensu=new W(this,107);this.KensuDisguisedAsDancer=new W(this,108);this.KensuDisguisedAsSoldier=new W(this,109);this.AztecaInShyron=new W(this,110);this.DeadAkahana=new W(this,112);this.DeadStomsGirlfriend=new W(this,113);this.DeadStom=new W(this,114);this.KensuInSwan=new W(this,116);this.SlimedKensu=new W(this,117);this.FishermanDaughter=new W(this,123);this.Kensu=new W(this,126);this.AkahanaInBrynmaer=new W(this,130);this.AztecaInPyramid=new W(this,131);this.SaberaDisguisedAsMesia=new W(this,132);this.StonedWaterfallCaveAdventurers=new W(this,133);this.StonedAkahana=new W(this,136);this.Mesia=new W(this,142);this.Vampire1=new W(this,192);this.Insect=new W(this,193);this.Kelbesque1=new W(this,194);this.Rage=new W(this,195);this.Kelbesque2=new W(this,197);this.Sabera2=new W(this,198);this.Mado2=new W(this,199);this.Karmine=new W(this,200);this.StatueOfMoon=new W(this,201);this.StatueOfSun=new W(this,202);this.Draygon=new W(this,203);this.Vampire2=new W(this,204);for(let s in this){let a=this[s];!this.hasOwnProperty(s)||!(a instanceof W)||(this[a.id]=a,a.name=g6(s))}for(let s=0;s<205;s++)this[s]||(this[s]=new W(this,s));let t=As.readAddress(x.prg);this.movementScripts=O(16,s=>{let a=t.plus(2*s).readAddress(x.prg).offset,n=[];for(;x.prg[a]<128;)n.push(x.prg[a++]);let i=x.prg[a];return{steps:n,terminate:i}})}write(){let x=this.rom.assembler();for(let n of this)!n||!n.used||n.assemble(x);N0(x,vn,44804,44969);let t=[];x.segment("1b","fe","ff");let s=0;for(let n of this.movementScripts){let i=(x.reloc(`MovementScript_${A(s++)}`),x.pc());x.byte(...n.steps,n.terminate),t.push(i)}let a=(x.reloc("MovementScriptTable"),x.pc());return x.word(...t),As.loc(x,"MovementScriptTablePtr"),x.word(a),As.plus(5).loc(x,"MovementScriptTablePlus1Ptr"),x.word({op:"+",args:[a,{op:"num",num:1}]}),[x.module()]}},W=class extends b0{constructor(x,t){super(x.rom,t);this.npcs=x;this.spawnConditions=new Map;this.localDialogs=new Map;let s=x.rom;if(t>204)throw new Error(`Unavailable: ${t}`);this._used=!Ud.has(t)&&(t<143||t>=192);let a=t<196?this.dialogPointer.readAddress(s.prg):null;a&&a.org===35641&&(a=null),this.data=o0(s.prg,this.dataBase.offset,4);let i=this.spawnPointer.readAddress(s.prg).offset,o;for(;this.used&&(o=s.prg[i++])!==255;){let d=ys.read(s.prg,i);i+=2*d.length,this.spawnConditions.set(o,d)}if(this.globalDialogs=[],a){let d=a.offset;for(;;){let[l,h]=w6.parse(s.prg,d);if(d+=4,l.condition&&this.globalDialogs.push(l),h)break}let c=[];for(;;){let l=s.prg[d++];if(l===255)break;c.push([l,s.prg[d++]])}c.length||c.push([-1,0]);let f=d;for(let[l,h]of c){let b=[];for(this.localDialogs.set(l,b),d=f+h;;){let[u,S]=mx.parse(s.prg,d);if(d+=u.byteLength(),b.push(u),S)break}}}}get dataBase(){let x=this.id&128?Hd:zd,t=33008|(this.id&252)<<6|(this.id&3)<<2;return d0.of(x,t)}get spawnPointer(){return d0.of(mn,34272+(this.id<<1))}get dialogPointer(){return d0.of(mn,35165+(this.id<<1))}get used(){return this._used}set used(x){if(x&&this.id>136&&this.id<192&&this.id!==142)throw new Error(`invalid: ${this.id}`);this._used=x}spawnConditionsBytes(){let x=[];for(let[t,s]of this.spawnConditions)x.push(t,...ys.bytes(s));return x.push(255),x}dialog(x){let t=x?x.id:-1,s=this.localDialogs.get(t);if(s)return s;throw new Error(`No local dialog for NPC ${A(this.id)} at ${A(t)}`)}spawns(x){let t=x.id,s=this.spawnConditions.get(x.id);if(s)return s;throw new Error(`No spawn condition for NPC ${A(this.id)} at ${A(t)}`)}hasDialog(){let x=Boolean(this.globalDialogs.length||this.localDialogs.size);if(this.id>142&&this.id!==195&&x)throw new Error(`invalid: ${this.id}`);return x}*allDialogs(){yield*this.globalDialogs;for(let x of this.localDialogs.values())yield*x}dialogBytes(){if(!this.hasDialog())return[];let x=[];function t(n){let i=[];for(let o=0;o<n.length;o++)i.push(...n[o].bytes(o===n.length-1));return i}this.globalDialogs.length?x.push(...t(this.globalDialogs)):x.push(128,0,0,0);let s=[],a=new Map;for(let[n,i]of this.localDialogs){let o=t(i),d=o.join(","),c=a.get(d);if(c!=null){x.push(n,c);continue}a.set(d,s.length),n!==-1&&x.push(n,s.length),s.push(...o)}return s.length&&x.push(255,...s),x}link(x){let t=this.rom.npcs[x];this.spawnConditions=t.spawnConditions,this.linkDialog(x)}linkDialog(x){let t=this.rom.npcs[x];this.globalDialogs=t.globalDialogs,this.localDialogs=t.localDialogs}localDialog(x,t){t==null&&(t=x,x=-1);let s=this.localDialogs.get(x);if(s==null||t>=s.length)throw new Error(`No local dialog ${t} for location ${A(x)}`);return s[t]}isParalyzable(){for(let x=217176;x<217196;x++)if(this.rom.prg[x]===this.id)return!1;return!0}assemble(x){if(!this.used)return;let t=A(this.id);this.dataBase.loc(x,"PersonData_${id}"),x.byte(...this.data),x.segment("0e","fe","ff"),x.reloc(`SpawnCondition_${t}`);let s=x.pc();if(x.byte(...this.spawnConditionsBytes()),this.spawnPointer.loc(x,`SpawnCondition_${t}_Pointer`),x.word(s),this.hasDialog()){x.segment("0e","fe","ff"),x.reloc(`Dialog_${t}`);let a=x.pc();x.byte(...this.dialogBytes()),this.dialogPointer.loc(x,`Dialog_${t}_Pointer`),x.word(a)}}},w6=class{constructor(e,x){this.condition=e;this.message=x}static of(e,x){let[t,s,a=0]=x;return new w6(e,W0.of({part:t,index:s,action:a}))}static parse(e,x=0){let t=P6(e,x),s=W0.from(e,x+2),a=t&1023,n=!!(t&32768);return t&8192&&(a=~a),[new w6(a,s),n]}bytes(e){let x=this.condition;return x<0&&(x=~x|8192),e&&(x|=32768),[x>>>8,x&255,...this.message.data]}},mx=class{constructor(e,x,t,s){this.condition=e;this.message=x;this.update=t;this.flags=s}clone(){return mx.parse(this.bytes(!1))[0]}static parse(e,x=0){let t=P6(e,x),s=W0.from(e,x+2),a=e[x+4];x+=5;let n=t&1023,i=!!(t&32768);t&8192&&(n=~n);let d=t&16384?bs.read(e,x):[];return[new mx(n,s,a,d),i]}static of(e,x,t=[]){let[s,a,n=0]=x;return new mx(e,W0.of({part:s,index:a,action:n}),0,t)}byteLength(){return 5+2*this.flags.length}bytes(e){let x=this.condition;return x<0&&(x=~x|8192),e&&(x|=32768),this.flags.length&&(x|=16384),[x>>>8,x&255,...this.message.data,this.update,...bs.bytes(this.flags)]}},Ud=new Set([49,59,60,102,103,106,115,116,130,134,135,137,138,139,140,141,196]),Bs=class extends W{get expectedSword(){return this.localDialog(3).condition&255}set expectedSword(e){this.localDialog(3).condition=512|e}},Ps=class extends W{constructor(x,t){super(x,t);let s=x.rom.prg,a=wn.readAddress(s).offset,n=i=>{let o=ix.from(s,a+5*i),d=s[a+5*i+4];return{entrance:o,movement:d}};this.spawnScripts=O(9,n),this.channelSpawn=Sn(gn.read(s)/5),this.evilSpiritIslandSpawn=Sn(yn.read(s)/5)}assemble(x){super.assemble(x),x.segment("fe"),x.org(54952),x.free(45),x.segment("fe","ff"),x.reloc("DolphinSpawnTable");let t=x.pc();for(;!this.spawnScripts[this.spawnScripts.length-1].entrance.used;)this.spawnScripts.pop();for(let s=0;s<this.rom.locations.AngrySea.entrances.length;s++){let a=this.spawnScripts[s];a?x.byte(...a.entrance.data,a.movement):x.byte(255,15,255,15,15)}gn.loc(x,"DolphinChannelSpawn"),x.byte(this.channelSpawn*5),yn.loc(x,"DolphinEvilSpiritIslandSpawn"),x.byte(this.evilSpiritIslandSpawn*5),wn.loc(x,"DolphinSpawnTablePtr"),x.word(t);for(let s=0;s<4;s++)Kd.plus(5*s).loc(x,`DolphinSpawnTablePlus${s+1}Ptr`),x.word({op:"+",args:[t,{op:"num",num:s+1}]})}},pn;(n=>(n.UP=0,n.RIGHT=2,n.DOWN=4,n.LEFT=6,n.DOLPHIN=255,n.DESPAWN=254))(pn||(pn={}));var gn=d0.of(Kt,54884),yn=d0.of(Kt,54892),wn=d0.of(Kt,54906),Kd=d0.of(Kt,54926),As=d0.of(vn,44627);function Sn(r){if(r!==Math.floor(r))throw new Error(`Expected integer: ${r}`);return r}var a0=class extends b0{constructor(x,t,s,a={}){super(x.rom,t);this.type=s;this.data=a;x[t]=this}},jt=class extends kx{constructor(x){super();this.rom=x;this.straightShotOptionalBounce=new a0(this,16,"projectile");this.straightShotNoBounce=new a0(this,17,"projectile");this.madoShuriken=new a0(this,22,"projectile");this.demonWallFire=new a0(this,23,"projectile");this.popcorn=new a0(this,27,"projectile");this.harpoonSource=new a0(this,29,"source");this.lasers=new a0(this,30,"projectile");this.paralysisPowder=new a0(this,31,"projectile");this.randomMovement=new a0(this,32,"monster",{movement:1});this.randomLargeStoner=new a0(this,33,"monster",{hasChild:!0,large:!0,movement:2});this.slowHoming=new a0(this,34,"monster",{hasChild:!0,movement:3});this.smallHoming1=new a0(this,36,"monster",{movement:3});this.smallHoming2=new a0(this,37,"monster",{movement:3});this.homingShooter1=new a0(this,38,"monster",{hasChild:!0,projectile:1,movement:3});this.homingShooter2=new a0(this,39,"monster",{hasChild:!0,projectile:1,movement:3});this.headShooter=new a0(this,40,"monster",{hasChild:!0,projectile:2,movement:3,metasprites:()=>[101,145]});this.puddle=new a0(this,41,"monster",{hasChild:!0,movement:5,metasprites:()=>[107,104]});this.soldier=new a0(this,42,"monster",{hasChild:!0,projectile:1,movement:4,metasprites:x=>[0,1,2,3].map(t=>t+x.data[31])});this.mimic=new a0(this,43,"monster",{movement:4});this.mothResidueSource=new a0(this,44,"source",{hasChild:!0});this.flailGuy=new a0(this,46,"monster",{hasChild:!0,large:!0,projectile:2,movement:3});this.dynaLaser=new a0(this,47,"projectile");this.guardianStatue=new a0(this,52,"source",{hasChild:!0});this.movingPlatform=new a0(this,56,"other");this.crumblingMovingPlatform=new a0(this,60,"other");this.erraticFlyer=new a0(this,64,"monster",{hasChild:!0,moth:!0,movement:4,placement:"moth"});this.skeleton=new a0(this,65,"monster",{hasChild:!0,movement:3});this.swampTomato=new a0(this,68,"monster",{movement:3});this.shootingFlyer=new a0(this,69,"monster",{hasChild:!0,bird:!0,projectile:2,movement:5,placement:"bird"});this.swampPlant=new a0(this,76,"monster",{hasChild:!0,stationary:!0,projectile:3,placement:"plant"});this.kraken=new a0(this,77,"monster",{hasChild:!0,stationary:!0,projectile:3});this.burt=new a0(this,78,"monster",{hasChild:!0,stationary:!0});this.dynaShot=new a0(this,87,"projectile",{});this.popcorn2=new a0(this,88,"projectile");this.towerSentinel=new a0(this,92,"monster",{hasChild:!0,projectile:3,movement:1});this.helicopter=new a0(this,93,"monster",{bird:!0,movement:6,placement:"bird"});this.whiteRobot=new a0(this,94,"monster",{hasChild:!0,projectile:1,movement:4,metasprites:x=>[0,1,2,3].map(t=>t+x.data[31])});this.vampire=new a0(this,96,"boss");this.vampireBat=new a0(this,97,"monster");this.kelbesque=new a0(this,99,"boss");this.kelbesqueRock=new a0(this,100,"projectile");this.sabera=new a0(this,102,"boss");this.mado=new a0(this,103,"boss");this.karmine=new a0(this,104,"boss");this.draygon1=new a0(this,106,"boss");this.draygon2=new a0(this,107,"boss");this.dyna=new a0(this,112,"boss");this.giantBug=new a0(this,127,"boss")}};var Vt=class extends kx{constructor(x){super(256);this.rom=x;this.mesiaSabera=new hx(this,42,"Mesia");this.sorcerorShot=new R(this,{id:63,scaling:37,type:"projectile"});this.wraith1=new R(this,{id:75,scaling:24,class:"wraith",displayName:"Wraith"});this.paralysisPowderSource=new R(this,{id:77,scaling:23,type:"projectile"});this.wraith2=new R(this,{id:79,scaling:28,class:"wraith",displayName:"Wraith"});this.blueSlime=new R(this,{id:80,scaling:1,class:"slime",displayName:"Slime"});this.weretiger=new R(this,{id:81,scaling:1,displayName:"Weretiger"});this.greenJelly=new R(this,{id:82,scaling:4,class:"jelly",displayName:"Slug"});this.redSlime=new R(this,{id:83,scaling:4,class:"slime",displayName:"Poison Slime"});this.rockGolem=new R(this,{id:84,scaling:4,class:"golem",displayName:"Mud Golem"});this.blueBat=new R(this,{id:85,scaling:4,displayName:"Bat"});this.greenWyvern=new R(this,{id:86,scaling:4,class:"wyvern",displayName:"Wyvern"});this.vampire1=new R(this,{id:87,scaling:5,type:"boss",displayName:"Vampire"});this.orc=new R(this,{id:88,scaling:6,displayName:"Axe Wereboar"});this.redMosquito=new R(this,{id:89,scaling:10,class:"mosquito",displayName:"Mosquito"});this.blueMushroom=new R(this,{id:90,scaling:10,class:"mushroom",displayName:"Mushroom"});this.swampTomato=new R(this,{id:91,scaling:10,displayName:"Pillbug"});this.blueMosquito=new R(this,{id:92,scaling:23,class:"mosquito",displayName:"Mosquito"});this.swampPlant=new R(this,{id:93,scaling:10,displayName:"Swamp Dandelion"});this.giantInsect=new R(this,{id:94,scaling:11,type:"boss",displayName:"Giant Insect"});this.largeBlueSlime=new R(this,{id:95,scaling:11,class:"slime",displayName:"Large Slime"});this.iceZombie=new R(this,{id:96,scaling:12,class:"zombie",displayName:"Ice Zombie"});this.greenBrain=new R(this,{id:97,scaling:12,class:"brain",displayName:"Brain"});this.greenSpider=new R(this,{id:98,scaling:12,class:"spider",displayName:"Spider"});this.redWyvern=new R(this,{id:99,scaling:12,class:"wyvern",displayName:"Wyvern"});this.soldier=new R(this,{id:100,scaling:14,class:"soldier",displayName:"Draygonia Soldier"});this.iceEntity=new R(this,{id:101,scaling:14,class:"entity",displayName:"Ice Plant"});this.redBrain=new R(this,{id:102,scaling:14,class:"brain",displayName:"Poison Brain"});this.iceGolem=new R(this,{id:103,scaling:14,class:"golem",displayName:"Ice Golem"});this.kelbesque1=new R(this,{id:104,scaling:15,type:"boss",displayName:"General Kelbesque"});this.largeRedSlime=new R(this,{id:105,scaling:18,class:"slime",displayName:"Large Poison Slime"});this.troll=new R(this,{id:106,scaling:18,displayName:"Troll"});this.redJelly=new R(this,{id:107,scaling:18,class:"jelly",displayName:"Poison Jelly"});this.medusa=new R(this,{id:108,scaling:19,displayName:"Medusa"});this.crab=new R(this,{id:109,scaling:19,displayName:"Crab"});this.medusaHead=new R(this,{id:110,scaling:20,displayName:"Flying Plant"});this.bird=new R(this,{id:111,scaling:20,class:"bird",displayName:"Bird"});this.redMushroom=new R(this,{id:113,scaling:21,class:"mushroom",displayName:"Poison Mushroom"});this.earthEntity=new R(this,{id:114,scaling:22,class:"entity",displayName:"Poison Plant"});this.mimic=new R(this,{id:115,scaling:22,displayName:"Mimic"});this.redSpider=new R(this,{id:116,scaling:22,class:"spider",displayName:"Paralyzing Spider"});this.fishman=new R(this,{id:117,scaling:25,displayName:"Mutant Fish"});this.jellyfish=new R(this,{id:118,scaling:25,displayName:"Jellyfish"});this.kraken=new R(this,{id:119,scaling:25,displayName:"Kraken"});this.darkGreenWyvern=new R(this,{id:120,scaling:27,class:"wyvern",displayName:"Wyvern Mage"});this.sandZombie=new R(this,{id:121,scaling:38,class:"zombie",displayName:"Sand Zombie"});this.wraithShadow1=new R(this,{id:123,scaling:28,class:"wraith",displayName:"Shadow"});this.moth=new R(this,{id:124,scaling:28,difficulty:3,displayName:"Butterfly"});this.sabera1=new R(this,{id:125,scaling:29,type:"boss",displayName:"General Sabera"});this.verticalPlatform=new hx(this,126);this.horizotalPlatform=new hx(this,127);this.archer=new R(this,{id:128,scaling:33,class:"soldier",displayName:"Draygonia Archer"});this.bomberBird=new R(this,{id:129,scaling:33,class:"bird",displayName:"Bomber Bird"});this.lavaBlob=new R(this,{id:130,scaling:37,class:"puddle",displayName:"Lava Blob"});this.flailGuy=new R(this,{id:132,scaling:37,displayName:"Flail Guy"});this.blueEye=new R(this,{id:133,scaling:37,class:"eye",displayName:"Beholder"});this.salamander=new R(this,{id:134,scaling:37,displayName:"Salamander"});this.sorceror=new R(this,{id:135,scaling:37,displayName:"Burt"});this.mado1=new R(this,{id:136,scaling:37,displayName:"General Mado"});this.knight=new R(this,{id:137,scaling:41,difficulty:1,displayName:"Ninja"});this.devil=new R(this,{id:138,scaling:41,displayName:"Devil Bat"});this.kelbesque2=new R(this,{id:139,scaling:41,type:"boss",displayName:"General Kelbesque"});this.wraithShadow2=new R(this,{id:140,scaling:41,class:"wraith",displayName:"Shadow"});this.glitch1=new hx(this,141);this.glitch2=new hx(this,142);this.guardianStatue=new hx(this,143);this.sabera2=new R(this,{id:144,scaling:41,type:"boss",displayName:"General Sabera"});this.tarantula=new R(this,{id:145,scaling:41,displayName:"Tarantula"});this.skeleton=new R(this,{id:146,scaling:41,displayName:"Skeleton"});this.mado2=new R(this,{id:147,scaling:41,type:"boss",displayName:"General Mado"});this.purpleEye=new R(this,{id:148,scaling:41,class:"eye",displayName:"Beholder"});this.flailKnight=new R(this,{id:149,scaling:41,displayName:"Flail Knight"});this.scorpion=new R(this,{id:150,scaling:41,displayName:"Scorpion"});this.karmine=new R(this,{id:151,scaling:41,type:"boss",displayName:"General Karmine"});this.sandBlob=new R(this,{id:152,scaling:44,class:"puddle",displayName:"Sand Blob"});this.mummy=new R(this,{id:153,scaling:44,displayName:"Mummy"});this.warlock=new R(this,{id:154,scaling:46,displayName:"Warlock"});this.draygon1=new R(this,{id:155,scaling:45,type:"boss",displayName:"Emperor Draygon"});this.statueOfSun=new hx(this,156);this.statueOfMoon=new hx(this,157);this.draygon2=new R(this,{id:158,scaling:47,type:"boss",displayName:"Emperor Draygon"});this.crumblingVerticalPlatform=new hx(this,159);this.brownRobot=new R(this,{id:160,scaling:47,difficulty:1,displayName:"Robot Sentry"});this.whiteRobot=new R(this,{id:161,scaling:47,displayName:"Robot Enforcer"});this.towerSentinel=new R(this,{id:162,scaling:47,displayName:"Tower Sentinel"});this.helicopter=new R(this,{id:163,scaling:47,displayName:"Robocopter"});this.dyna=new R(this,{id:164,scaling:47,type:"boss",displayName:"DYNA"});this.vampire2=new R(this,{id:165,scaling:28,type:"boss",displayName:"Vampire"});this.glitch3=new hx(this,166);this.dynaPod=new R(this,{id:180,scaling:47,type:"boss",displayName:"DYNA Defense Pod"});this.dynaCounter=new R(this,{id:184,scaling:47,type:"projectile"});this.dynaLaser=new R(this,{id:185,scaling:47,type:"projectile"});this.dynaBubble=new R(this,{id:186,scaling:47,type:"projectile"});this.vampire2Bat=new R(this,{id:188,scaling:28});this.brownRobotLaserSource=new R(this,{id:190,scaling:47,type:"projectile"});this.draygon2Fireball=new R(this,{id:191,scaling:47,type:"projectile"});this.vampire1Bat=new R(this,{id:193,scaling:5});this.giantInsectFireball=new R(this,{id:195,scaling:11,type:"projectile"});this.greenMosquito=new R(this,{id:196,scaling:11,displayName:"Mosquito"});this.kelbesque1Rock=new R(this,{id:197,scaling:15,type:"projectile"});this.sabera1Balls=new R(this,{id:198,scaling:29,type:"projectile"});this.kelbesque2Fire=new R(this,{id:199,scaling:41,type:"projectile"});this.sabera2Fire=new R(this,{id:200,scaling:41,type:"projectile"});this.sabera2Balls=new R(this,{id:201,scaling:41,type:"projectile"});this.karmineBalls=new R(this,{id:202,scaling:41,type:"projectile"});this.statueBalls=new R(this,{id:203,scaling:47,type:"projectile"});this.draygon1Lightning=new R(this,{id:204,scaling:45,type:"projectile"});this.draygon2Laser=new R(this,{id:205,scaling:47,type:"projectile"});this.draygon2Breath=new R(this,{id:206,scaling:47,type:"projectile"});this.birdBomb=new R(this,{id:224,scaling:33,type:"projectile"});this.greenMosquitoShot=new R(this,{id:226,scaling:11,type:"projectile"});this.paralysisBeam=new R(this,{id:227,scaling:25,type:"projectile"});this.stoneGaze=new R(this,{id:228,scaling:19,type:"projectile"});this.rockGolemRock=new R(this,{id:229,scaling:4,type:"projectile"});this.curseBeam=new R(this,{id:230,scaling:41,type:"projectile"});this.mpDrainWeb=new R(this,{id:231,scaling:41,type:"projectile"});this.fishmanTrident=new R(this,{id:232,scaling:25,type:"projectile"});this.orcAxe=new R(this,{id:233,scaling:6,type:"projectile"});this.swampPollen=new R(this,{id:234,scaling:10,type:"projectile"});this.paralysisPowder=new R(this,{id:235,scaling:23,type:"projectile"});this.soldierSword=new R(this,{id:236,scaling:14,type:"projectile"});this.iceGolemRock=new R(this,{id:237,scaling:14,type:"projectile"});this.trollAxe=new R(this,{id:238,scaling:18,type:"projectile"});this.krakenInk=new R(this,{id:239,scaling:25,type:"projectile"});this.archerArrow=new R(this,{id:240,scaling:33,type:"projectile"});this.knightSword=new R(this,{id:242,scaling:41,type:"projectile"});this.mothResidue=new R(this,{id:243,scaling:28,type:"projectile"});this.brownRobotLaser=new R(this,{id:244,scaling:47,type:"projectile"});this.whiteRobotLaser=new R(this,{id:245,scaling:47,type:"projectile"});this.towerSentinelLaser=new R(this,{id:246,scaling:47,type:"projectile"});this.skeletonShot=new R(this,{id:247,scaling:41,type:"projectile"});this.blobShot=new R(this,{id:248,scaling:37,type:"projectile"});this.flailKnightFlail=new R(this,{id:249,scaling:41,type:"projectile"});this.flailGuyFlail=new R(this,{id:250,scaling:37,type:"projectile"});this.madoShuriken=new R(this,{id:252,scaling:37,type:"projectile"});this.guardianStatueMissile=new R(this,{id:253,scaling:36,type:"projectile"});this.demonWallFire=new R(this,{id:254,scaling:37,type:"projectile"});for(let t in this){let s=this[t];s instanceof hx&&(s.name=tr(t))}for(let t=0;t<this.length;t++)this[t]||(this[t]=new hx(this,t))}write(){let x=[];for(let t of this)x.push(...t.write());if(this.rom.writeMonsterNames){let t=this.rom.assembler(),s=Math.max(...this.map(o=>o.displayName.length)),a=27;if(s>a)throw new Error(`Longest displayName length is greater than ${a}. (${s} > ${a})
Crystalis HUD can't comfortably fit that many characters.`);t.assign("ENEMY_NAME_LENGTH",s),t.export("ENEMY_NAME_LENGTH"),t.segment("1a"),t.reloc("EnemyNameBlocklist"),t.label("EnemyNameBlocklist"),t.export("EnemyNameBlocklist");let n=[this.dynaCounter,this.dynaLaser,this.dynaBubble],i=this.filter(o=>o.hp>0&&o.displayName=="").concat(n);t.byte(...i.map(o=>o.id)),t.assign("ENEMY_NAME_BLOCKLIST_LEN",i.length),t.export("ENEMY_NAME_BLOCKLIST_LEN"),x.push(t.module())}return x}};var Fx;(t=>(t.bit=(s,a)=>new _s(s,a),t.byte=s=>new Ns(s),t.address=s=>new Fs(s)))(Fx||(Fx={}));var _s=class{constructor(e,x){this.address=e;this.bit=x}get(e){return!!(e[this.address]&1<<this.bit)}set(e,x){let t=1<<this.bit;x?e[this.address]|=t:e[this.address]&=~t}},Ns=class{constructor(e){this.address=e}get(e){return e[this.address]}set(e,x){e[this.address]=x&255}},Fs=class{constructor(e){this.address=e}get(e){return e[this.address]<<16|e[this.address+1]<<8|e[this.address+2]}set(e,x){e[this.address]=x>>>16&255,e[this.address+1]=x>>>8&255,e[this.address+2]=x&255}};var Jt=class extends b0{constructor(x,t){super(x,t);this.base=(t&3)<<2|(t&252)<<6|16624,this.colors=o0(x.prg,this.base,4)}color(x){return this.colors[x]&63}};var Ne=class extends b0{constructor(x,t,s){super(x,t);this.pixels=s||o0(x.chr,t<<4,16)}pixelAt(x,t){return(this.pixels[x|8]>>t&1)<<1|this.pixels[x]>>t&1}flipH(){return new Ne(this.rom,-1,this.pixels.map(rr))}flipV(){return new Ne(this.rom,-1,O(16,x=>this.pixels[x&8|~x&7]))}flip(x){let t=this;return x&Ds.HORIZONTAL&&(t=t.flipH()),x&Ds.VERTICAL&&(t=t.flipV()),t}write(){let x=this.id<<4;return this.rom.chr.subarray(x,x+16).set(this.pixels),[]}},_e=class{constructor(e){this._all=[];this._all=O(e.chr.length>>4,x=>new Ne(e,x))}get(e,x){return x?this._all[e|x]:this._all[e]}set(e,x,t){this._all[e|x].pixels=t}[Symbol.iterator](){return this._all[Symbol.iterator]()}},O0=_e;O0.HUD_LF=Ax(`
    |L     ..|
    |L.    .#|
    |L.  FF.#|
    |L.  F..#|
    |LLL FF.#|
    | ...F..#|
    |    F ..|
    |    .   |
  `,{" ":2,L:1,F:1,"#":1,".":3}),O0.HUD_PW=Ax(`
    |PPP     |
    |P..P.   |
    |PPP.    |
    |P..     |
    |P.w.w.w |
    | .w.w.w |
    |  .w.w. |
    |   . .  |
  `,{" ":2,P:1,w:1,".":3}),O0.HUD_EY=Ax(`
    |EEE     |
    |E...    |
    |EEE Y.Y.|
    |E...Y.Y.|
    |EEE  Y. |
    | ... Y. |
    |     Y. |
    |        |
  `,{" ":2,E:1,Y:1,"#":1,".":3}),O0.HUD_LV=Ax(`
    |        |
    |L       |
    |L.      |
    |L.  v.v.|
    |L.  v.v.|
    |LLL  v. |
    | ... v. |
    |     .  |
  `,{" ":2,L:1,v:1,".":3}),O0.HUD_DL=Ax(`
    |        |
    |DD      |
    |D.D.L   |
    |D.D.L.  |
    |D.D.L.  |
    |DD. L.  |
    | .  LLL |
    |     ...|
  `,{" ":2,D:1,L:1,".":3}),O0.HUD_MP=Ax(`
    |M.  M   |
    |MM.MM.  |
    |M.M.M.  |
    |M. .PPP |
    |M. .P..P|
    |    PPP.|
    |    P.. |
    |    P.  |
  `,{" ":2,M:1,P:1,".":3}),O0.HUD_EX=Ax(`
    |EEE     |
    |E...    |
    |EEE     |
    |E...    |
    |EEE x.x.|
    | ... x. |
    |    x.x.|
    |     . .|
  `,{" ":2,E:1,x:1,".":3}),O0.HUD_CLOSE_RIGHT=Ax(`
    |________|
    |____oooo|
    |____o...|
    |__ooo...|
    |__o....o|
    |__o....o|
    |__o..oo |
    |__o..o  |
  `,{" ":0,".":1,_:2,o:3}),O0.HUD_CLOSE_LEFT=Ax(`
    |________|
    |oooo____|
    |...o____|
    |...ooo__|
    |o....o__|
    |o....o__|
    | oo..o__|
    |  o..o__|
  `,{" ":0,".":1,_:2,o:3}),O0.BLANK_TILE_TEMPLATE=`
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
    |        |
  `,O0.BLANK_TILES=[Ax(_e.BLANK_TILE_TEMPLATE,{" ":0}),Ax(_e.BLANK_TILE_TEMPLATE,{" ":1}),Ax(_e.BLANK_TILE_TEMPLATE,{" ":2}),Ax(_e.BLANK_TILE_TEMPLATE,{" ":3})];function Ax(r,e){let x=r.trim().replace(/^[^|]*\||\|[^|]*$/mg,"").replace(/\n/g,"");if(x.length!==64)throw new Error(`Bad CHR tile: ${x}`);let t=new Array(16).fill(0);for(let s=0,a="";a=x.charAt(s);++s){let n=s>>>3,i=n,o=n|8,d=~s&7,c=e[a]||0;c&1&&(t[i]|=1<<d),c&2&&(t[o]|=1<<d)}return t}var Ds=(x=>(x[x.HORIZONTAL=64]="HORIZONTAL",x[x.VERTICAL=128]="VERTICAL",x))(Ds||{});var Xt=class{constructor(e){this.rom=e;this.values=o0(e.prg,Tn.offset,jd)}write(){let e=this.rom.assembler();return Tn.loc(e),e.byte(...this.values),[e.module()]}},Tn=d0.of(n0.$1a,38884),jd=64;var{$0d:Yt,$fe:Qt,$ff:Zt}=n0,x7=class{constructor(e){this.rom=e;this.patk=new Array(48).fill(0);this.pdef=new Array(48).fill(0);this.php=new Array(48).fill(0);this.exp=new Array(48).fill(0);this.setPAtkFormula(x=>5+x*15/32),this.setPDefFormula(x=>x),this.setPhpFormula(x=>48+5.5*x),this.setExpScalingFactor(1)}setExpScalingFactor(e){this.setExpFormula(x=>Math.floor(4*2**((16+9*x)/32)*e))}setPAtkFormula(e){this.patk=this.patk.map((x,t)=>Math.round(8*e(t)))}setPDefFormula(e){this.pdef=this.pdef.map((x,t)=>Math.round(4*e(t)))}setPhpFormula(e){this.php=this.php.map((x,t)=>Math.min(255,Math.max(5,Math.round(e(t)))))}setExpFormula(e){this.exp=this.exp.map((x,t)=>{let s=e(t);return s<128?s:Math.min(255,128+(s>>4))})}write(){let e=this.rom.assembler();return Ux(e,[Yt,Qt,Zt],"DiffAtk"),e.byte(...this.patk),Ux(e,[Yt,Qt,Zt],"DiffDef"),e.byte(...this.pdef),Ux(e,[Yt,Qt,Zt],"DiffHP"),e.byte(...this.php),Ux(e,[Yt,Qt,Zt],"DiffExp"),e.byte(...this.exp),[e.module()]}};var Fe=class extends b0{constructor(x,t){super(x,t);this.used=!0;let s=(t>255?64+t:t)<<8;this.tiles=o0(x.prg,s,240)}clone(x){let t=new Fe(this.rom,x);return t.used=this.used,t.tiles=[...this.tiles],t}allTilesSet(){return new Set(this.tiles)}set2d(x,t){let s=x&15,a=x>>>4;for(let n=0;n<t.length;n++){let i=t[n];for(let o=0;o<i.length;o++){let d=i[o];d!=null&&(this.tiles[a+n<<4|s+o]=d)}}}get2d(x,t){let s=x&15,a=x>>>4,n=(t&15)+1,i=a+(t>>>4),o=[];for(let d=a;d<=i;d++){let c=d<<4|s;o.push(this.tiles.slice(c,c+n))}return o}assemble(x){let t=this.id.toString(16).padStart(2,"0"),s=this.tiles;if(this.rom.compressedMapData||this.id<256){let a=(this.id>>5).toString(16).padStart(2,"0");x.segment(a),a==="0a"&&(s=s.slice(192))}else x.segment("0a"),s=s.slice(0,192);x.org(32768|(this.id&63)<<8,`Screen_${t}`),x.byte(...s)}},e7=class extends Array{constructor(x){super(259);this.rom=x;this.unallocated=[];for(let t=0;t<259;t++)this[t]=new Fe(x,t)}getScreen(x){let t=x<0?this.unallocated:this,s=x<0?~x:x;return t[s]||(t[s]=new Fe(this.rom,x))}setScreen(x,t){let s=x<0?this.unallocated:this,a=x<0?~x:x;s[a]=t}deleteScreen(x){let t=x<0?this.unallocated:this,s=x<0?~x:x;delete t[s]}write(){let x=this.rom.assembler();for(let t of this)t?.used&&t.assemble(x);return[x.module()]}};var t7=class extends kx{constructor(x){super(44);this.rom=x;this.innBasePrice=20;this.toolShopScaling=new Array(48).fill(0);this.armorShopScaling=new Array(48).fill(0);for(let t=0;t<44;t++)this[t]=new Gs(x,t);if(x.shopDataTablesAddress!=null){let t=x.shopDataTablesAddress+21*x.shopCount+2*x.scalingLevels;this.basePrices=O(73,s=>s>=13&&s<39?_0(x.prg,t+2*(s-13)):0)}else this.basePrices=O(73,t=>_0(x.prg,r2+2*t)*2)}armorShops(){return O(11,x=>this[4*x])}toolShops(){return O(11,x=>this[4*x+1])}inns(){return O(11,x=>this[4*x+2])}pawnShops(){return O(11,x=>this[4*x+3])}write(){let x=this.rom.assembler();if(this.rescale){let t=function(s){x.export(s),x.label(s)};x.segment("10","fe","ff"),x.reloc("ShopData"),t("ShopData"),t("ArmorShopIdTable");for(let s of this.armorShops())for(let a=0;a<4;a++)x.byte(s.contents[a]??255);t("ToolShopIdTable");for(let s of this.toolShops())for(let a=0;a<4;a++)x.byte(s.contents[a]??255);t("ArmorShopPriceTable");for(let s of this.armorShops())for(let a=0;a<4;a++)x.byte(Math.round((s.prices[a]??0)*32));t("ToolShopPriceTable");for(let s of this.toolShops())for(let a=0;a<4;a++)x.byte(Math.round((s.prices[a]??0)*32));t("InnPrices");for(let s of this.inns())x.byte(Math.round((s.prices[0]??0)*32));t("ShopLocations");for(let s of this)x.byte(s.location);t("ToolShopScaling"),x.byte(...this.toolShopScaling),t("ArmorShopScaling"),x.byte(...this.armorShopScaling),t("BasePrices"),x.word(...this.basePrices.slice(13,39).map(s=>s??0)),t("InnBasePrice"),x.word(this.innBasePrice)}else{x.segment("10","fe","ff"),x.org(40356,"ShopData");for(let t of this.armorShops())for(let s=0;s<4;s++)x.byte(t.contents[s]??255);for(let t of this.armorShops())for(let s=0;s<4;s++)x.word(t.prices[s]??0);for(let t of this.toolShops())for(let s=0;s<4;s++)x.byte(t.contents[s]??255);for(let t of this.toolShops())for(let s=0;s<4;s++)x.word(t.prices[s]??0)}return[x.module()]}};var Vd=[0,1,2,3],Jd=[(r,e)=>r||x2,(r,e)=>r?r+4*e:t2,(r,e)=>0,(r,e)=>0],Xd=[4,4,0,0],Yd=[(r,e)=>r?r+8*e:e2,(r,e)=>r?r+12*e:s2,(r,e)=>r?r+16*e:a2,(r,e)=>0],En=[4,4,1,0],Gs=class extends b0{constructor(x,t){super(x,t);if(this.type=Vd[t&3],this.index=t>>>2,x.shopDataTablesAddress){let a=x.shopDataTablesAddress,n=x.shopCount,i=a+17*n;this.location=x.prg[i+t]}else{let a=255;for(let n=0;n<33&&a===255;n++){if(x.prg[Zd+n]!==this.index)continue;let i=x.prg[Qd+n];for(let o of x.locations[i].spawns){if(o.type!==4)continue;if(x.objects[o.id].data[25]===32+this.type){a=i;break}}}this.location=a}let s=x.shopDataTablesAddress?a=>x.prg[this.pricesAddress+a]/32:a=>_0(x.prg,this.pricesAddress+2*a);this.contents=o0(x.prg,this.contentsAddress,Xd[this.type]),this.prices=O(En[this.type],s),this.used=this.location!==255}get contentsAddress(){return Jd[this.type](this.rom.shopDataTablesAddress,this.rom.shopCount)+4*this.index}get pricesAddress(){let x=this.rom.shopDataTablesAddress;return Yd[this.type](x,this.rom.shopCount)+(x?1:2)*En[this.type]*this.index}updateShopkeeper(){throw new Error("not implemented")}},Qd=139092,Zd=139125,x2=138660,e2=138704,t2=138792,s2=138836,a2=138924,r2=138946;var{$0e:n2}=n0,s7=class extends Array{constructor(x){super(128);this.rom=x;this.checkCount=112;this.mimicCount=16;for(let t=0;t<128;t++)this[t]=t}setCheckCount(x){this.checkCount=x}setMimicCount(x){this.mimicCount=x}swap(x,t){if(x===t)return;let s=this[x];this[x]=this[t],this[t]=s}exportDigits(x,t,s){let a=s.toString().padStart(3,"0");x.assign(`${t}_HUN`,Number(a[0])),x.export(`${t}_HUN`),x.assign(`${t}_TEN`,Number(a[1])),x.export(`${t}_TEN`),x.assign(`${t}_ONE`,Number(a[2])),x.export(`${t}_ONE`)}write(){let x=this.rom.assembler();return Ux(x,[n2],"CheckToItemGetMap"),this.exportDigits(x,"CHECK_COUNT",this.checkCount),this.exportDigits(x,"MIMIC_COUNT",this.mimicCount),x.byte(...this),[x.module()]}};var{$0e:$s,$fe:i2,$ff:o2}=n0;var d2=115247,c2=115219,f2=121076,l2=121332,h2=121388,a7=class{constructor(e){this.rom=e;this.sages=O(4,x=>new Os(this,x)),this.resultTable=o0(e.prg,d2,64),e.telepathyTablesAddress?(this.groupsByLocation=[],this.minimumLevels=[]):(this.groupsByLocation=o0(e.prg,f2,256),this.minimumLevels=o0(e.prg,c2,7))}write(){let e=this.rom.telepathyTablesAddress,x=this.rom.assembler();if(x.segment($s.name,i2.name,o2.name),e){N0(x,$s,39156,39680);let t=this.sages.map((s,a)=>{x.reloc(`Telepathy_Sage_${a}`);let n=x.pc();return x.byte(...s.messageGroups[0].bytes()),n});x.org(33327,"Telepathy_ResultTable"),x.byte(...this.resultTable.map(s=>s<4?s:s>>>1)),x.reloc("TelepathyTable"),x.export("TelepathyTable"),x.label("TelepathyTable"),x.word(...t);for(let s=1;s<4;s++)for(let a=0;a<4;a++)x.byte(...this.sages[a].defaultMessages[s].data)}else{N0(x,$s,39500,39680),x.org(33327,"Telepathy_ResultTable"),x.byte(...this.resultTable),x.org(33299,"Telepathy_LevelsTable"),x.byte(...this.minimumLevels),x.org(39156,"Telepathy_LocationTable"),x.byte(...this.groupsByLocation),x.org(39468,"Telepathy_VanillaDefaultsTable");for(let s=0;s<4;s++)for(let a=0;a<4;a++){let n=this.sages[a];x.byte(...n.defaultMessages[s].data)}let t=[];for(let s=0;s<4;s++){let a=this.sages[s];for(let n=0,i=a.messageGroups.length;n<i;n++)x.reloc(`Telepathy_Sage_${s}_Group_${n}`),t[4*n+s]=x.pc(),x.byte(...a.messageGroups[n].bytes())}x.org(39412,"Telepathy_VanillaMainTable"),x.word(...t)}return[x.module()]}},Os=class{constructor(e,x){this.telepathy=e;this.sage=x;let t=e.rom,s,a,n;t.telepathyTablesAddress?(a=s=t.telepathyTablesAddress+2*x,n=1):(s=h2+2*x,a=l2+2*x,n=7),this.defaultMessages=O(4,i=>W0.from(t.prg,s+8*i)),this.messageGroups=O(n,i=>ct.from(t.prg,a+8*i))}},ct=class{constructor(e){this.messages=e}bytes(){let e=[];for(let x=0,t=this.messages.length;x<t;x++){let[s,a,n]=this.messages[x],i=s>=0?s:8192|~s;x===t-1&&(i|=32768),n&&(i|=16384),e.push(i>>=8,i&255,...a.data,...n?n.data:[])}return e}static from(e,x){let t=new ct([]);x=_0(e,x)+81920;let s=0;for(;!(s&32768);){s=P6(e,x),x+=2;let a=s&8191;s&8192&&(a=~a);let n=[a,W0.from(e,x)];x+=2,s&16384&&(n.push(W0.from(e,x)),x+=2),t.messages.push(n)}return t}};var r7=class extends b0{constructor(x,t){super(x,t);this.base=255865+(t<<3),this.pages=o0(x.prg,this.base,8)}};var Dx=class extends b0{constructor(x,t){super(x,t);this.effects=o0(x.prg,this.base,256)}get base(){return this.id<<8&8191|73728}get org(){return this.id<<8&8191|40960}write(){let x=this.rom.assembler();return x.segment("09","fe","ff"),x.org(this.org,`TileEffects_${this.id.toString(16)}_Tiles`),x.byte(...this.effects),[x.module()]}};Dx.PIT=1,Dx.NO_WALK=2,Dx.IMPASSIBLE=4,Dx.ALTERNATIVE=8,Dx.BEHIND=16,Dx.SLOPE=32,Dx.SLOW=64,Dx.PAIN=128;var De=class{constructor(e,x){this.tileset=e;this.id=x;this.copiedFrom=-1}get tiles(){return[0,1,2,3].map(e=>this.tileset.tiles[e][this.id])}setTiles(e){for(let x=0;x<4;x++){let t=e[x];t!=null&&(this.tileset.tiles[x][this.id]=t)}return this}get alternative(){let e=this.id<32?this.tileset.alternates[this.id]:this.id;return e!==this.id?e:null}setAlternative(e){return this.id>=32?this:(this.tileset.alternates[this.id]=e??this.id,this.tileset.effects().effects[this.id]|=8,this)}get attrs(){return this.tileset.attrs[this.id]}setAttrs(e){return this.tileset.attrs[this.id]=e,this}get effects(){return this.tileset.effects().effects[this.id]}setEffects(e){return this.tileset.effects().effects[this.id]=e,this}copyFrom(e,...x){let t=new De(this.tileset,e);return this.copiedFrom=e,this.setTiles(t.tiles),(this.id|t.id)<32&&this.setAlternative(t.alternative),this.setAttrs(t.attrs),this.setEffects(t.effects),this}replaceIn(...e){if(this.copiedFrom<0)throw new Error("Must copyFrom first.");for(let x of e)x.replace(this.copiedFrom,this.id);return this}};var n7=class{constructor(e){this.rom=e;this.tilesets=[];for(let x=128;x<176;x+=4)this.tilesets.push(this[x]=new qs(e,x))}[Symbol.iterator](){return this.tilesets[Symbol.iterator]()}},qs=class extends b0{constructor(x,t){super(x,t);this.tiles=O(4,s=>o0(x.prg,this.tileBase|s<<8,256)),this.attrs=O(256,s=>x.prg[this.attrBase|s>>2]>>((s&3)<<1)&3),this.alternates=o0(x.prg,this.alternatesBase,32)}get map(){return this.id&63}get tileBase(){return 65536|this.map<<8}get attrBase(){return 77824|this.map<<4}get alternatesBase(){return 81408|this.map<<3}getTile(x){return new De(this,x)}write(){let x=O(64,a=>{let n=a<<2;return this.attrs[n]&3|(this.attrs[n+1]&3)<<2|(this.attrs[n+2]&3)<<4|(this.attrs[n+3]&3)<<6}),t=this.rom.assembler(),s=`Tileset_${this.id.toString(16).padStart(2,"0")}`;return t.segment("08","09"),t.org(32768|this.map<<8,`${s}_Tiles`),t.byte(...[].concat(...this.tiles)),t.org(45056|this.map<<4,`${s}_Attrs`),t.byte(...x),t.org(48640|this.map<<3,`${s}_Alternates`),t.byte(...this.alternates),[t.module()]}effects(){let x=this.id>>>2&15;return this.id===168&&(x=2),this.id===172&&x--,this.rom.tileEffects[x]}};var i7=class{constructor(e){this.rom=e;this.locations=o0(e.prg,kn.offset,u2),this.thunderSwordWarp=[e.prg[251338],e.prg[251342]]}write(){let e=this.rom.assembler();return kn.loc(e),e.label("TownWarpTable"),e.byte(...this.locations),e.org(56460),e.instruction("lda","TownWarpTable,y"),e.org(54729),e.instruction("lda","#"+this.thunderSwordWarp[0]),e.org(54733),e.instruction("lda","#"+this.thunderSwordWarp[1]),[e.module()]}},kn=d0.of(n0.$fe,56408),u2=12;var b2=new Set([131,135,136,137,143,147,150,152,155,156,157,158,159,170,179,181,185,190,192]),o7=class extends b0{constructor(x,t){super(x,t);this.used=!b2.has(t),this.pointer=123258+((t&127)<<1),this.base=sr(x.prg,this.pointer,81920),this.conditions=[],this.message=W0.of({}),this.flags=[];let s,a=this.base;do{s=P6(x.prg,a);let n=s&4095;this.conditions.push(s&8192?~n:n),a+=2}while(!(s&32768));this.message=W0.from(x.prg,a);do{a+=2,s=P6(x.prg,a);let n=s&4095;this.flags.push(s&32768?~n:n)}while(!(s&16384))}bytes(){let x=[];this.conditions.length||this.conditions.push(-1);for(let t=0;t<this.conditions.length;t++){let s=this.conditions[t];s<0&&(s=~s|8192),t===this.conditions.length-1&&(s=s|32768),x.push(s>>>8,s&255)}x.push(...this.message.data),this.flags.length||this.flags.push(-1);for(let t=0;t<this.flags.length;t++){let s=this.flags[t];s<0&&(s=~s|32768),t===this.flags.length-1&&(s=s|16384),x.push(s>>>8,s&255)}return x}write(){if(!this.used)return[];let x=this.rom.assembler(),t=`Trigger_${A(this.id)}`;x.segment("0f"),x.reloc(t);let s=x.pc();return x.byte(...this.bytes()),x.org(41338+2*(this.id&127),t+"_Ptr"),x.word(s),[x.module()]}};var d7=class{constructor(e){this.rom=e;this.locations=o0(e.prg,Rn.offset,m2)}write(){let e=this.rom.assembler();return Rn.loc(e),e.label("WildWarpLocations"),e.byte(...this.locations),e.org(52185),e.instruction("lda","WildWarpLocations,y"),[e.module()]}},Rn=d0.of(n0.$fe,52204),m2=16;var{$0e:Ws,$0f:Mn,$10:p2}=n0,In=r=>Symbol(r),ex=class{constructor(e){this.modules=new Map;this.allocatedTriggers=new Map;let x=e[4]*16384,t=16+(e[6]&4?512:0),s=t+x;this.prg=e.subarray(t,s),this.chr=e.subarray(s),this.shopCount=ex.SHOP_COUNT.get(e),this.scalingLevels=ex.SCALING_LEVELS.get(e),this.uniqueItemTableAddress=ex.UNIQUE_ITEM_TABLE.get(e),this.shopDataTablesAddress=ex.SHOP_DATA_TABLES.get(e),this.telepathyTablesAddress=ex.TELEPATHY_TABLES.get(e),this.omitItemGetDataSuffix=ex.OMIT_ITEM_GET_DATA_SUFFIX.get(e),this.omitLocalDialogSuffix=ex.OMIT_LOCAL_DIALOG_SUFFIX.get(e),this.compressedMapData=ex.COMPRESSED_MAPDATA.get(e),this.writeMonsterNames=ex.WRITE_MONSTER_NAMES.get(e);for(let[a,n,i]of g2)this.prg[a]===n&&(this.prg[a]=i);this.tilesets=new n7(this),this.tileEffects=O(11,a=>new Dx(this,a+179)),this.screens=new e7(this),this.metatilesets=new zt(this),this.metascreens=new qt(this),this.triggers=O(67,a=>new o7(this,128|a)),this.patterns=new O0(this),this.palettes=O(256,a=>new Jt(this,a)),this.locations=new Ot(this),this.tileAnimations=O(4,a=>new r7(this,a)),this.hitboxes=O(24,a=>new Pt(this,a)),this.objectActions=new jt(this),this.objects=new Vt(this),this.adHocSpawns=O(96,a=>new Mt(this,a)),this.metasprites=O(256,a=>new Wt(this,a)),this.messages=new Be(this),this.telepathy=new a7(this),this.itemGets=new Gt(this),this.items=new Nt(this),this.shops=new t7(this),this.slots=new s7(this),this.npcs=new Ut(this),this.bossKills=O(14,a=>new Ct(this,a)),this.wildWarp=new d7(this),this.townWarp=new i7(this),this.coinDrops=new Lt(this),this.flags=new At(this),this.bosses=new It(this),this.scaling=new x7(this),this.randomNumbers=new Xt(this);for(let a of this.locations)a.used&&a.lazyInitialization()}trigger(e){if(e<128||e>255)throw new Error(`Bad trigger id $${A(e)}`);return this.triggers[e&127]}get projectiles(){let e=new Set;for(let x of this.objects.filter(t=>t instanceof R))x.child&&e.add(this.objects[this.adHocSpawns[x.child].objectId]);return[...e].sort((x,t)=>x.id-t.id)}get monsterGraphics(){let e={};for(let x of this.locations)if(!(!x.used||!x.hasSpawns)){for(let t of x.spawns)if(!(t.data[2]&7)){let s=t.data[2]&128?1:0,a=A(t.data[3]+80),n=e[a]=e[a]||{};n[`${s}:${x.spritePatterns[s].toString(16)}:${x.spritePalettes[s].toString(16)}`]={pal:x.spritePalettes[s],pat:x.spritePatterns[s],slot:s}}}return e}get locationMonsters(){let e={};for(let x of this.locations){if(!x.used||!x.hasSpawns)continue;let t=e["$"+A(x.id)]={};for(let s of x.spawns)if(!(s.data[2]&7)){let a=s.data[2]&128?1:0,n=s.data[3]+80;t[`${a}:${n.toString(16)}`]=(t[`${a}:${n.toString(16)}`]||0)+1}}return e}assembler(){return new I6}writeData(e=this.prg){let x=this.assembler();N0(x,Ws,34682,35165),N0(x,Ws,35557,39156),N0(x,Ws,40422,40960),N0(x,Mn,40960,41222),N0(x,Mn,41472,41920),N0(x,p2,37146,37992);let t=[...this.modules.values(),x.module()],s=o=>{for(let d of o)t.push(...d.write())};t.push(...this.locations.write()),t.push(...this.objects.write()),s(this.hitboxes),s(this.triggers),t.push(...this.npcs.write()),s(this.tilesets),s(this.tileEffects),s(this.adHocSpawns),t.push(...this.itemGets.write()),t.push(...this.slots.write()),t.push(...this.items.write()),t.push(...this.shops.write()),s(this.bossKills),s(this.patterns),t.push(...this.wildWarp.write()),t.push(...this.townWarp.write()),t.push(...this.coinDrops.write()),t.push(...this.scaling.write()),t.push(...this.bosses.write()),t.push(...this.randomNumbers.write()),t.push(...this.telepathy.write()),t.push(...this.messages.write()),t.push(...this.screens.write());let a=new p6;a.base(this.prg,0);for(let o of t)a.read(o);if(a.link().apply(e),e!==this.prg)return;let i=a.exports();this.uniqueItemTableAddress=i.get("KeyItemData").offset,this.shopCount=11,this.shopDataTablesAddress=i.get("ShopData")?.offset||0,ex.SHOP_COUNT.set(this.prg,this.shopCount),ex.SCALING_LEVELS.set(this.prg,this.scalingLevels),ex.UNIQUE_ITEM_TABLE.set(this.prg,this.uniqueItemTableAddress),ex.SHOP_DATA_TABLES.set(this.prg,this.shopDataTablesAddress||0),ex.OMIT_ITEM_GET_DATA_SUFFIX.set(this.prg,this.omitItemGetDataSuffix),ex.OMIT_LOCAL_DIALOG_SUFFIX.set(this.prg,this.omitLocalDialogSuffix),ex.COMPRESSED_MAPDATA.set(this.prg,this.compressedMapData),ex.WRITE_MONSTER_NAMES.set(this.prg,this.writeMonsterNames)}analyzeTiles(){}disjointTilesets(){let e=[];for(let t of this.locations){if(!t.used)continue;let s=t.tileset;for(let a of t.screens)for(let n of a)(e[n]||(e[n]=new Set)).add(s)}let x=O(256,()=>new X0);for(let t=0;t<e.length;t++)if(!!e[t])for(let s of this.screens[t].allTilesSet())x[s].union([...e[t]]);for(let t=0;t<x.length;t++){let s=x[t].sets().map(a=>[...a].map(A).join(" ")).join(" | ");console.log(`Tile ${A(t)}: ${s}`)}}swapMetatiles(e,...x){let t=new Map,s=O(256),a=new Map,n=c=>Array.isArray(c)?c[0]:c<0?~c:c;for(let c of x){for(let f=0;f<c.length-1;f++)if(Array.isArray(c[f])){let l=c[f];a.set(l[0],l[1]),c[f]=l[0]}for(let f=0;f<c.length-1;f++){let l=c[f],h=c[f+1];l<0||h<0||(t.set(h,l),s[h]=l)}}let i=new Set,o=new Set,d=new Set(e);for(let c of this.locations)if(!!c.used&&!!d.has(c.tileset)){o.add(c.tileEffects);for(let f of c.allScreens())i.add(f)}for(let c of i)for(let f=0,l=c.tiles.length;f<l;f++)c.tiles[f]=s[c.tiles[f]];for(let c of d){let f=this.tilesets[c];for(let l of x)for(let h=0;h<l.length-1;h++){let b=n(l[h]),u=n(l[h+1]);for(let S=0;S<4;S++)f.tiles[S][b]=f.tiles[S][u];if(f.attrs[b]=f.attrs[u],u<32&&f.alternates[u]!==u){if(b>=32)throw new Error(`Cannot unflag: ${c} ${b} ${u} ${f.alternates[u]}`);f.alternates[b]=f.alternates[u]}}for(let[l,h]of a)f.alternates[l]=h}for(let c of o){let f=this.tileEffects[c-179];for(let l of x)for(let h=0;h<l.length-1;h++){let b=n(l[h]),u=n(l[h+1]);f.effects[b]=f.effects[u]}for(let l of a.keys())f.effects[l]|=8}}moveFlag(e,x){function t(s){for(let a=0;a<s.length;a++)s[a]===e&&(s[a]=x),s[a]===~e&&(s[a]=~x)}for(let s of this.triggers)t(s.conditions),t(s.flags);for(let s of this.npcs){for(let a of s.spawnConditions.values())t(a);for(let a of[s.globalDialogs,...s.localDialogs.values()])for(let n of a)n.condition===e&&(n.condition=x),n.condition===~e&&(n.condition=~x)}if((e&-256)===512&&(x&-256)===512)for(let s of this.locations)for(let a of s.flags)a.flag===e&&(a.flag=x)}nextFreeTrigger(e){for(let x of this.triggers)if(!x.used)return e&&this.allocatedTriggers.set(e,x.id),x;throw new Error("Could not find an unused trigger.")}moveScreens(e,x){if(!this.compressedMapData)throw new Error("Must compress maps first.");let t=new Map,s=x<<8;for(;this.screens[s];)s++;let a=new Set(e);for(let i of a)for(let o of i){if(o.sid>=256){t.set(o.sid,o.sid);continue}let d=o.sid;if(!t.has(d)){let c=s++;t.set(d,c),t.set(c,c),this.metascreens.renumber(d,c,a)}}if(s>>>8!==x)throw new Error(`Out of space on page ${x}`);let n=new Set;for(let i of this.locations){if(!a.has(i.meta.tileset))continue;let o=!1;for(let d of i.screens)for(let c=0;c<d.length;c++){let f=t.get(d[c]);f!=null?(d[c]=f,o=!0):n.add(i.name)}if(o&&n.size)throw new Error(`Inconsistent move [${[...a].map(d=>d.name).join(", ")}] to plane ${x}: missed ${[...n].join(", ")}`)}}static async load(e,x){let t=await Cn(x);return e&&await e(t),new ex(t)}static async loadBytes(){return await Cn()}},Bx=ex;Bx.OMIT_ITEM_GET_DATA_SUFFIX=Fx.bit(82624,0),Bx.OMIT_LOCAL_DIALOG_SUFFIX=Fx.bit(82624,1),Bx.COMPRESSED_MAPDATA=Fx.bit(82624,2),Bx.WRITE_MONSTER_NAMES=Fx.bit(82624,3),Bx.SHOP_COUNT=Fx.byte(82625),Bx.SCALING_LEVELS=Fx.byte(82626),Bx.UNIQUE_ITEM_TABLE=Fx.address(82640),Bx.SHOP_DATA_TABLES=Fx.address(82643),Bx.TELEPATHY_TABLES=Fx.address(82646);function Cn(r){return r||(r=e=>document.body.appendChild(e)),new Promise(e=>{if(window.location.hash!=="#reset"){let t=localStorage.getItem("rom");if(t)return e(Uint8Array.from(new Array(t.length/2).fill(0).map((s,a)=>Number.parseInt(t[2*a]+t[2*a+1],16))))}let x=document.createElement("input");document.body.appendChild(x),x.type="file",x.addEventListener("change",()=>{let t=x.files[0],s=new FileReader;s.addEventListener("loadend",()=>{let a=new Uint8Array(s.result),n=Array.from(a,A).join("");localStorage.setItem("rom",n),x.remove(),e(a)}),s.readAsArrayBuffer(t)})})}var Ln=466849842,g2=[[83272,86,80],[83306,0,255],[83343,56,48],[83480,96,112],[83494,168,160],[83507,21,22],[83511,21,22],[84305,168,160],[84307,152,144],[84505,120,112],[84715,9,255],[84809,128,136],[84871,32,48],[84890,1,2],[84894,1,2],[85433,8,128],[85750,104,96],[87133,255,0],[87145,120,112],[88070,152,160],[88074,152,160],[88078,88,80],[88093,0,255],[88142,219,255],[88181,120,112],[88911,120,128],[89007,240,128],[89014,223,128],[89015,150,128],[89315,223,207],[89326,110,109],[89330,110,109],[89486,223,207],[89489,46,45],[89493,46,45],[89658,216,223],[89913,120,112],[89920,2,255],[89953,141,255],[89957,141,255],[91133,72,64],[91139,85,80],[91227,216,223],[91340,4,32],[91391,11,10],[91661,32,48],[91684,1,2],[91688,1,2],[93616,154,128],[93620,158,128],[93624,145,128],[93628,158,128],[93632,145,128],[93672,0,255],[93677,223,208],[93688,12,92],[93689,176,185],[93690,0,2],[93692,12,92],[93693,176,185],[93694,0,2],[93695,7,255],[93789,2,255],[93802,173,255],[93806,173,255],[94209,2,255],[94254,183,255],[94258,183,255],[94379,3,255],[94383,2,255],[94387,5,255],[94391,6,255],[94395,0,255],[94404,178,255],[94408,178,255],[94412,177,255],[94416,177,255],[94420,179,255],[94424,179,255],[94428,181,255],[94432,181,255],[94436,181,255],[94440,181,255],[95470,128,136],[96193,136,128],[96197,152,160],[96199,88,80],[96298,16,1],[96343,16,1],[96596,128,120],[96674,128,120],[97162,0,64],[97168,0,64],[97230,0,64],[97236,0,64],[97294,0,64],[97300,0,64],[97358,0,64],[97364,0,64],[106242,64,128],[106243,51,50],[106976,64,192],[106977,61,52],[118533,71,72],[119569,32,160],[119570,48,0],[118777,96,224],[182928,2,0],[193907,2,0],[195300,95,0]];var c7=r=>"",zs=r=>r===!0?!1:r,Hs=class{constructor(e,x){this.flag=e;this.opts=x;Hs.flags.set(e,this)}static all(){return[...this.flags.values()]}},Gx=Hs;Gx.flags=new Map;var ux=class{constructor(e,x,t,s){this.name=x;this.description=t;this.flags=s.map(a=>a instanceof Gx?[a,!0]:a),e.presets.set(An(x),this)}static all(){return T6.instance||(T6.instance=new T6),[...T6.instance.presets.values()]}get flagString(){return this._flagString==null&&(this._flagString=String(new $6(`@${this.name}`))),this._flagString}};function An(r){return r.toLowerCase().replace(/[^a-z]/g,"")}var T6=class{constructor(){this.presets=new Map;this.Casual=new ux(this,"Casual",`
      Basic flags for a relatively easy playthrough.  This is a good
      place to start.`,[A0.PreserveUniqueChecks,A0.NoShuffleMimics,A0.DecreaseEnemyDamage,A0.GuaranteeRefresh,A0.GuaranteeStartingSword,A0.ExperienceScalesFaster,A0.NoCommunityJokes,l0.NoThunderSwordWarp,P0.Shops,P0.Dyna,[P0.Maps,"!"],[P0.WildWarp,"!"],px.SpoilerLog]);this.Classic=new ux(this,"Classic",`
      Provides a relatively quick playthough with a reasonable amount of
      challenge.  Similar to older versions.`,[A0.GuaranteeStartingSword,A0.NoCommunityJokes,c0.StatueGlitch,[l0.NoThunderSwordWarp,"!"],[P0.Maps,"!"],px.SpoilerLog]);this.Standard=new ux(this,"Standard",`
      Well-balanced, standard race flags.`,[K0.RandomizeWeaknesses,l0.StoryMode,px.SpoilerLog]);this.NoBowMode=new ux(this,"No Bow Mode",`
      The tower is open from the start, as soon as you're ready for it.`,[K0.RandomizeWeaknesses,K0.TowerRobots,$0.MaxScalingInTower,l0.NoBowMode,px.SpoilerLog]);this.Advanced=new ux(this,"Advanced",`
      A balanced randomization with quite a bit more difficulty.`,[c0.GhettoFlight,c0.MtSabreRequirementSkip,c0.StatueGlitch,[c0.SwordChargeGlitch,"!"],z0.Barrier,z0.BattleMagic,z0.GasMask,$0.MaxScalingInTower,K0.RandomizeWeaknesses,K0.TowerRobots,l0.OrbsNotRequired,l0.StoryMode,H.RandomizeMaps,H.ShuffleAreas,H.ShuffleHouses,H.RandomizeTrades,H.RandomizeWallElements,H.UnidentifiedKeyItems,px.SpoilerLog]);this.WildWarp=new ux(this,"Wild Warp",`
      Significantly opens up the game right from the start with wild
      warp in logic.`,[A0.GuaranteeRefresh,H.RandomizeWildWarp,K0.RandomizeWeaknesses,K0.TowerRobots,l0.OrbsNotRequired,l0.StoryMode,px.SpoilerLog]);this.Mystery=new ux(this,"Mystery",`
      Even the options are random.`,[[H.ShuffleAreas,"?"],[H.ShuffleHouses,"?"],[H.RandomizeMaps,"?"],[H.RandomizeTrades,"?"],[H.UnidentifiedKeyItems,"?"],[H.RandomizeWallElements,"?"],[H.ShuffleGoaFloors,"?"],[H.RandomizeSpriteColors,"?"],[H.RandomizeWildWarp,"?"],[l0.OrbsNotRequired,"?"],[l0.NoBowMode,"?"],[l0.StoryMode,"?"],[l0.VanillaDolphin,"?"],[l0.NoThunderSwordWarp,"?"],[c0.RageSkip,"?"],[c0.TriggerSkip,"?"],[c0.StatueGlitch,"?"],[c0.GhettoFlight,"?"],[c0.SwordChargeGlitch,"?"],[c0.MtSabreRequirementSkip,"?"],[o6.RandomizeMusic,"?"],[o6.RandomizeMapColors,"?"],[K0.RandomizeWeaknesses,"?"],[K0.TowerRobots,"?"],[A0.NoShuffleMimics,"?"],[A0.PreserveUniqueChecks,"?"],[z0.Barrier,"?"],[z0.BattleMagic,"?"],[z0.GasMask,"?"],[P0.Dyna,"?"],[P0.BonusItems,"?"],[P0.Maps,"?"],px.SpoilerLog]);this.Hardcore=new ux(this,"Hardcore",`
      Not for the faint of heart.  Good luck.`,[z0.Barrier,z0.BattleMagic,$0.ExperienceScalesSlower,$0.MaxScalingInTower,$0.Permadeath,l0.OrbsNotRequired,l0.StoryMode,H.RandomizeMaps,H.ShuffleAreas,H.ShuffleHouses,H.RandomizeTrades,H.RandomizeWallElements,H.UnidentifiedKeyItems]);this.FullStupid=new ux(this,"The Full Stupid",`
      Only a few noble fools have ever completed this.  Be sure to record this
      because pics or it didn't happen.`,[z0.Barrier,z0.BattleMagic,$0.Blackout,$0.ExperienceScalesSlower,$0.MaxScalingInTower,$0.Permadeath,K0.RandomizeWeaknesses,K0.TowerRobots,l0.OrbsNotRequired,l0.StoryMode,H.RandomizeMaps,H.ShuffleAreas,H.ShuffleHouses,H.RandomizeTrades,H.RandomizeWallElements,H.ShuffleGoaFloors,H.UnidentifiedKeyItems]);this.Tournament2022Early=new ux(this,"Tournament 2022 Early Rounds",`
      Lots of potential complexity, but within reason.  Requires all swords and
      bosses, as well as a few glitches, but guarantees a starting sword.`,[A0.GuaranteeStartingSword,c0.StatueGlitch,c0.StatueGauntletSkip,[K0.RandomizeWeaknesses,"?"],l0.OrbsNotRequired,l0.StoryMode,[l0.VanillaDolphin,"?"],[l0.NoThunderSwordWarp,"?"],[H.RandomizeWallElements,"?"],[H.ShuffleGoaFloors,"?"],[H.RandomizeSpriteColors,"?"],[H.RandomizeTrades,"?"],[H.UnidentifiedKeyItems,"?"]]);this.Tournament2022Mid=new ux(this,"Tournament 2022 Mid Rounds",`
      Some additional challenges compared to the early rounds: some additional
      mystery flags and glitches, as well as max difficulty scaling in the
      tower.`,[[A0.GuaranteeStartingSword,"?"],[c0.GhettoFlight,"?"],[c0.StatueGlitch,"?"],[c0.MtSabreRequirementSkip,"?"],[c0.StatueGauntletSkip,"?"],$0.MaxScalingInTower,[$0.NoBuffMedicalHerb,"?"],[K0.RandomizeWeaknesses,"?"],[K0.TowerRobots,"?"],[z0.Barrier,"?"],[z0.BattleMagic,"?"],l0.StoryMode,[l0.VanillaDolphin,"?"],[l0.OrbsNotRequired,"?"],[l0.NoThunderSwordWarp,"?"],[H.RandomizeWallElements,"?"],[H.ShuffleGoaFloors,"?"],[H.RandomizeSpriteColors,"?"],[H.RandomizeTrades,"?"],[H.UnidentifiedKeyItems,"?"]]);this.Tournament2022Finals=new ux(this,"Tournament 2022 Finals Round",`
      Many of the more difficult mystery flags from the mid rounds are now
      always on, plus entrance shuffle.`,[[A0.GuaranteeStartingSword,"?"],c0.GhettoFlight,c0.StatueGlitch,c0.MtSabreRequirementSkip,c0.StatueGauntletSkip,$0.NoBuffMedicalHerb,$0.MaxScalingInTower,[K0.RandomizeWeaknesses,"?"],[K0.TowerRobots,"?"],z0.Barrier,z0.BattleMagic,l0.StoryMode,[l0.VanillaDolphin,"?"],[l0.OrbsNotRequired,"?"],[l0.NoThunderSwordWarp,"?"],H.ShuffleHouses,[H.RandomizeWallElements,"?"],[H.ShuffleGoaFloors,"?"],[H.RandomizeSpriteColors,"?"],[H.RandomizeTrades,"?"],[H.UnidentifiedKeyItems,"?"]])}static get(e){return this.instance||(this.instance=new T6),this.instance.presets.get(An(e))}},Us=class{constructor(){this.flags=new Map}static all(){return[...this.sections]}static flag(e,x){Us.sections.add(this.instance||(this.instance=new this));let t=new Gx(e,x);if(!e.startsWith(this.instance.prefix))throw new Error(`bad flag ${e} ${x}`);return this.instance.flags.set(e,t),t}},Cx=Us;Cx.sections=new Set;var Yx=class extends Cx{constructor(){super(...arguments);this.prefix="W";this.name="World"}},H=Yx;H.RandomizeMaps=Yx.flag("Wm",{name:"Randomize maps",text:`Individual maps are randomized.  For now this is only a subset of
           possible maps.  A randomized map will have all the same features
           (exits, chests, NPCs, etc) except things are moved around.`,hard:!0}),H.ShuffleAreas=Yx.flag("Wa",{name:"Shuffle areas",text:"Shuffles some or all area connections.",hard:!0}),H.ShuffleHouses=Yx.flag("Wh",{name:"Shuffle house entrances",text:`Shuffles all the house entrances, as well as a handful of other
           things, like the palace/fortress-type entrances at the top of
           several towns, and standalone houses.`,hard:!0}),H.RandomizeTrades=Yx.flag("Wt",{name:"Randomize trade-in items",text:`Items expected by various NPCs will be shuffled: specifically,
           Statue of Onyx, Kirisa Plant, Love Pendant, Ivory Statue, Fog
           Lamp, and Flute of Lime (for Akahana).  Rage will expect a
           random sword, and Tornel will expect a random bracelet.`,hard:!0}),H.UnidentifiedKeyItems=Yx.flag("Wu",{name:"Unidentified key items",text:`Item names will be generic and effects will be shuffled.  This
           includes keys, flutes, lamps, and statues.`,hard:!0}),H.RandomizeWallElements=Yx.flag("We",{name:"Randomize elements to break walls",text:`Walls will require a randomized element to break.  Normal rock and
           ice walls will indicate the required element by the color (light
           grey or yellow for wind, blue for fire, bright orange ("embers") for
           water, or dark grey ("steel") for thunder.  The element to break
           these walls is the same throughout an area.  Iron walls require a
           one-off random element, with no visual cue, and two walls in the
           same area may have different requirements.`}),H.ShuffleGoaFloors=Yx.flag("Wg",{name:"Shuffle Goa fortress floors",text:"The four areas of Goa fortress will appear in a random order."}),H.RandomizeSpriteColors=Yx.flag("Ws",{name:"Randomize sprite colors",text:`Monsters and NPCs will have different colors.  This is not an
           optional flag because it affects what monsters can be grouped
           together.`}),H.RandomizeWildWarp=Yx.flag("Ww",{name:"Randomize wild warp",text:`Wild warp will go to Mezame Shrine and 15 other random locations.
           These locations will be considered in-logic.`,excludes:["Vw"]});var oe=class extends Cx{constructor(){super(...arguments);this.prefix="R";this.name="Routing"}},l0=oe;l0.StoryMode=oe.flag("Rs",{name:"Story Mode",text:`Draygon 2 won't spawn unless you have all four swords and have
           defeated all major bosses of the tetrarchy.`}),l0.NoBowMode=oe.flag("Rb",{name:"No Bow mode",text:`No items are required to finish the game.  An exit is added from
           Mezame shrine directly to the Draygon 2 fight (and the normal entrance
           is removed).  Draygon 2 spawns automatically with no Bow of Truth.`}),l0.OrbsNotRequired=oe.flag("Ro",{name:"Orbs not required to break walls",text:"Walls can be broken and bridges formed with level 1 shots."}),l0.NoThunderSwordWarp=oe.flag("Rt",{name:"No Sword of Thunder warp",text:`Normally when acquiring the thunder sword, the player is instantly
           warped to a random town.  This flag disables the warp.  If set as
           "R!t", then the warp will always go to Shyron, like in vanilla.`,modes:"!"}),l0.VanillaDolphin=oe.flag("Rd",{name:"Vanilla Dolphin interactions",text:`By default, the randomizer changes a number of dolphin and boat
           interactions: (1) healing the dolphin and having the Shell Flute
           is no longer required before the fisherman spawns: instead, he
           will spawn as soon as you have the item he wants; (2) talking to
           Kensu in the beach cabin is no longer required for the Shell Flute
           to work: instead, the Shell Flute will always work, and Kensu will
           spawn after the Fog Lamp is turned in and will give a key item
           check.  This flag restores the vanilla interaction where healing
           and shell flute are required, and Kensu no longer drops an item.`});var S6=class extends Cx{constructor(){super(...arguments);this.prefix="G";this.name="Glitches";this.description=`
      By default, the randomizer disables all known glitches (except ghetto
      flight).  These flags selectively re-enable certain glitches.  Most of
      these flags have two modes: normally enabling a glitch will add it as
      possibly required by logic, but clicking a second time will add a '!'
      and enable the glitch outside of logic (e.g. "G!c").`}},c0=S6;c0.GhettoFlight=S6.flag("Gf",{name:"Ghetto flight",text:`Ghetto flight allows using Dolphin and Rabbit Boots to fly up the
           waterfalls in the Angry Sea (without calming the whirlpools).
           This is done by swimming up to a diagonal beach and jumping
           in a different direction immediately before disembarking.`}),c0.StatueGlitch=S6.flag("Gs",{name:"Statue glitch",text:`Statue glitch allows getting behind statues that block certain
           entrances: the guards in Portoa, Amazones, Oak, Goa, and Shyron,
           as well as the statues in the Waterfall Cave.  It is done by
           approaching the statue from the top right and holding down and
           left on the controller while mashing B.`,modes:"!"}),c0.MtSabreRequirementSkip=S6.flag("Gn",{name:"Mt Sabre requirements skip",text:`Entering Mt Sabre North normally requires (1) having Teleport,
           and (2) talking to the rabbit in Leaf after the abduction (via
           Telepathy).  Both of these requirements can be skipped: first by
           flying over the river in Cordel plain rather than crossing the
           bridge, and then by threading the needle between the hitboxes in
           Mt Sabre North.`,modes:"!"}),c0.StatueGauntletSkip=S6.flag("Gg",{name:"Statue gauntlet skip",text:`The shooting statues in front of Goa and Stxy normally require
           Barrier to pass safely.  With this flag, Flight can also be used
           by flying around the edge of the statue.`,modes:"!"}),c0.SwordChargeGlitch=S6.flag("Gc",{name:"Sword charge glitch",text:`Sword charge glitch allows charging one sword to the level of
           another sword by equipping the higher-level sword, re-entering
           the menu, changing to the lower-level sword without exiting the
           menu, creating a hard save, resetting, and then continuing.`,hard:!0,modes:"!"}),c0.TriggerSkip=S6.flag("Gt",{name:"Trigger skip",text:`A wide variety of triggers and exit squares can be skipped by
           using an invalid item every frame while walking.  This allows
           bypassing both Mt Sabre North entrance triggers, the Evil Spirit
           Island entrance trigger, triggers for guards to move, slopes,
           damage tiles, and seamless map transitions.`,hard:!0,modes:"!"}),c0.RageSkip=S6.flag("Gr",{name:"Rage skip",text:`Rage can be skipped by damage-boosting diagonally into the Lime
           Tree Lake screen.  This provides access to the area beyond the
           lake if flight or bridges are available.  For simplicity, the
           logic only assumes this is possible if there's a flyer.`,hard:!0,modes:"!"});var ft=class extends Cx{constructor(){super(...arguments);this.prefix="A";this.name="Aesthetics";this.description=`
      These flags don't directly affect gameplay or shuffling, but they do
      affect the experience significantly enough that there are three modes
      for each: "off", "optional" (no exclamation point), and "required"
      (exclamation point).  The first two are equivalent for seed generation
      purposes, so that you can play the same seed with either setting.
      Setting it to "!" will change the seed.`}},o6=ft;o6.RandomizeMusic=ft.flag("Am",{name:"Randomize background music",modes:"!",optional:zs}),o6.NoMusic=ft.flag("As",{name:"No background music",optional:c7}),o6.RandomizeMapColors=ft.flag("Ac",{name:"Randomize map colors",modes:"!",optional:zs});var f7=class extends Cx{constructor(){super(...arguments);this.prefix="M";this.name="Monsters"}},K0=f7;K0.RandomizeWeaknesses=f7.flag("Me",{name:"Randomize monster weaknesses",text:"Monster and boss elemental weaknesses are shuffled."}),K0.TowerRobots=f7.flag("Mt",{name:"Shuffle tower robots",text:`Tower robots will be shuffled into the normal pool.  At some
           point, normal monsters may be shuffled into the tower as well.`,hard:!0});var v6=class extends Cx{constructor(){super(...arguments);this.prefix="E";this.name="Easy Mode";this.description=`
      The following options make parts of the game easier.`}},A0=v6;A0.NoShuffleMimics=v6.flag("Et",{name:"Don't shuffle mimics.",text:"Mimics will be in their vanilla locations."}),A0.PreserveUniqueChecks=v6.flag("Eu",{name:"Keep unique items and consumables separate",text:`Normally all items and mimics are shuffled into a single pool and
           distributed from there.  If this flag is set, unique items
           (specifically, anything that cannot be sold) will only be found in
           either (a) checks that held unique items in vanilla, or (b) boss
           drops.  Chests containing consumables in vanilla may be safely
           ignored, but chests containing unique items in vanilla may still
           end up with non-unique items because of bosses like Vampire 2 that
           drop consumables.  If mimics are shuffled, they will only be in
           consumable locations.`}),A0.DecreaseEnemyDamage=v6.flag("Ed",{name:"Decrease enemy damage",text:`Enemy attack power will be significantly decreased in the early game
           (by a factor of 3).  The gap will narrow in the mid-game and eventually
           phase out at scaling level 40.`}),A0.GuaranteeStartingSword=v6.flag("Es",{name:"Guarantee starting sword",text:`The Leaf elder is guaranteed to give a sword.  It will not be
           required to deal with any enemies before finding the first sword.`}),A0.GuaranteeRefresh=v6.flag("Er",{name:"Guarantee refresh",text:`Guarantees the Refresh spell will be available before fighting
           Tetrarchs.`}),A0.ExperienceScalesFaster=v6.flag("Ex",{name:"Experience scales faster",text:'Less grinding will be required to "keep up" with the game difficulty.',excludes:["Hx"]}),A0.NoCommunityJokes=v6.flag("Ec",{name:"No community jokes",text:`Skip community jokes, such as funny/misspelled item, monster, or
           character names.  This will make it easier to look up information
           in guides/FAQs if necessary.`});var Ge=class extends Cx{constructor(){super(...arguments);this.prefix="N";this.name="No guarantees";this.description=`
      Removes various guarantees from the logic.`}},z0=Ge;z0.BattleMagic=Ge.flag("Nw",{name:"Battle magic not guaranteed",text:`Normally, the logic will guarantee that level 3 sword charges are
           available before fighting the tetrarchs (with the exception of Karmine,
           who only requires level 2).  This disables that check.`,hard:!0}),z0.MatchingSword=Ge.flag("Ns",{name:'Matching sword not guaranteed ("Tink Mode")',text:`Enables "tink strats", where wrong-element swords will still do a
           single damage per hit.  Player may be required to fight monsters
           (including bosses) with tinks.`,hard:!0}),z0.Barrier=Ge.flag("Nb",{name:"Barrier not guaranteed",text:`Normally, the logic will guarantee Barrier (or else refresh and shield
           ring) before entering Stxy, the Fortress, or fighting Karmine.  This
           disables that check.`,hard:!0}),z0.GasMask=Ge.flag("Ng",{name:"Gas mask not guaranteed",text:`The logic will not guarantee gas mask before needing to enter the swamp,
           nor will leather boots (or hazmat suit) be guaranteed to cross long
           stretches of spikes.  Gas mask is still guaranteed to kill the insect.`,hard:!0});var F6=class extends Cx{constructor(){super(...arguments);this.prefix="H";this.name="Hard mode"}},$0=F6;$0.NoBuffMedicalHerb=F6.flag("Hm",{name:"Don't buff medical herb or fruit of power",text:`Medical Herb is not buffed to heal 80 damage, which is helpful to make
           up for cases where Refresh is unavailable early.  Fruit of Power is not
           buffed to restore 56 MP.`,hard:!0}),$0.MaxScalingInTower=F6.flag("Ht",{name:"Max scaling level in tower",text:"Enemies in the tower spawn at max scaling level.",hard:!0}),$0.ExperienceScalesSlower=F6.flag("Hx",{name:"Experience scales slower",text:'More grinding will be required to "keep up" with the difficulty.',excludes:["Ex"],hard:!0}),$0.ChargeShotsOnly=F6.flag("Hc",{name:"Charge shots only",text:"Stabbing is completely ineffective.  Only charged shots work.",hard:!0}),$0.Blackout=F6.flag("Hz",{name:"Blackout",text:"All caves and fortresses are permanently dark.",hard:!0}),$0.Permadeath=F6.flag("Hh",{name:"Permadeath",text:"Hardcore mode: checkpoints and saves are removed.",hard:!0});var D6=class extends Cx{constructor(){super(...arguments);this.name="Vanilla";this.prefix="V";this.description=`
      Options to restore vanilla behavior changed by default.`}},P0=D6;P0.Dyna=D6.flag("Vd",{name:"Don't buff Dyna",text:`By default, we makes the Dyna fight a bit more of a challenge.
           Side pods will fire significantly more.  The safe spot has been
           removed.  The revenge beams pass through barrier.  Side pods can
           now be killed.  This flag prevents that change.`}),P0.BonusItems=D6.flag("Vb",{name:"Don't buff bonus items",text:`Leather Boots are changed to Speed Boots, which increase player walking
           speed (this allows climbing up the slope to access the Tornado Bracelet
           chest, which is taken into consideration by the logic).  Deo's pendant
           restores MP while moving.  Rabbit boots enable sword charging up to
           level 2 while walking (level 3 still requires being stationary, so as
           to prevent wasting tons of magic).`}),P0.Maps=D6.flag("Vm",{name:"Vanilla maps",text:`Normally the randomizer adds a new "East Cave" to Valley of Wind,
           borrowed from the GBC version of the game.  This cave contains two
           chests (one considered a key item) on the upper floor and exits to
           two random areas (chosen between Lime Tree Valley, Cordel Plain,
           Goa Valley, or Desert 2; the quicksand is removed from the entrances
           to Pyramid and Crypt), one unblocked on the lower floor, and one
           down the stairs and behind a rock wall from the upper floor.  This
           flag prevents adding that cave.  If set as "V!m" then a direct path
           will instead be added between Valley of Wind and Lime Tree Valley
           (as in earlier versions of the randomizer).`,modes:"!"}),P0.Shops=D6.flag("Vs",{name:"Vanilla shops",text:`By default, we disable shop glitch, shuffle shop contents, and tie
           the prices to the scaling level (item shops and inns increase by a
           factor of 2 every 10 scaling levels, armor shops decrease by a
           factor of 2 every 12 scaling levels).  This flag prevents all of
           these changes, restoring shops to be completely vanilla.`}),P0.WildWarp=D6.flag("Vw",{name:"Vanilla wild warp",text:`By default, Wild Warp is nerfed to only return to Mezame Shrine.
           This flag restores it to work like normal.  Note that this will put
           all wild warp locations in logic unless the flag is set as (V!w).`,modes:"!"}),P0.Hud=D6.flag("Vh",{name:"Vanilla HUD",text:`By default, the blue status bar (HUD) at the bottom of the screen
           is reorganized a bit, including displaying enemies' names and HP.
           This can be set either as Vh (which will optionally disable the
           changes, and will produce the same seed as not setting Vh) or as
           V!h (which requires all players to disable it to get the same
            seed).`,modes:"!",optional:zs});var lt=class extends Cx{constructor(){super(...arguments);this.prefix="Q";this.name="Quality of Life";this.description=`
      The following quality-of-life flags turn <i>off</i> improvements that
      are normally on by default.  They are optional and will not affect the
      seed generation.  They may be toggled freely in race mode.`}},G6=lt;G6.NoAutoEquip=lt.flag("Qa",{name:"Don't automatically equip orbs and bracelets",text:`Prevents adding a quality-of-life improvement to automatically equip
           the corresponding orb/bracelet whenever changing swords.`,optional:c7}),G6.NoControllerShortcuts=lt.flag("Qc",{name:"Disable controller shortcuts",text:`By default, we disable second controller input and instead enable
           some new shortcuts on controller 1: Start+A+B for wild warp, and
           Select+B to quickly change swords.  To support this, the action of
           the start and select buttons is changed slightly.  This flag
           disables this change and retains normal behavior.`,optional:c7}),G6.AudibleWallCues=lt.flag("Qw",{name:"Audible wall cues",text:`Provide an audible cue when failing to break a non-iron wall.
           The intended way to determine which sword is required for normal
           cave walls is by looking at the color.  This causes the level 3
           sword sound of the required element to play when the wall fails
           to break.  Note that fortress walls (iron in vanilla) do not give
           this hint, since there is no visual cue for them, either.`,optional:c7});var $e=class extends Cx{constructor(){super(...arguments);this.prefix="D";this.name="Debug Mode";this.description=`
      These options are helpful for exploring or debugging.  Note that,
      while they do not directly affect any randomization, they
      <i>do</i> factor into the seed to prevent cheating, and they
      will remove the option to generate a seed for racing.`}},px=$e;px.SpoilerLog=$e.flag("Ds",{name:"Generate a spoiler log",text:`Note: <b>this will change the placement of items</b> compared to a
           seed generated without this flag turned on.`}),px.TrainerMode=$e.flag("Dt",{name:"Trainer mode",text:`Installs a trainer for practicing certain parts of the game.
           At the start of the game, the player will have all swords, basic
           armors and shields, all worn items and magics, a selection of
           consumables, bow of truth, maximum cash, all warp points activated,
           and the Shyron massacre will have been triggered.  Wild warp is
           reconfigured to provide easy access to all bosses.  Additionally,
           the following button combinations are recognized:<ul>
             <li>Start+Up: increase player level
             <li>Start+Down: increase scaling level
             <li>Start+Left: get all balls
             <li>Start+Right: get all bracelets
             <li>Start+B+Down: get a full set of consumable items
             <li>Start+B+Left: get all advanced armors
             <li>Start+B+Right: get all advanced shields
           </ul>`}),px.NeverDie=$e.flag("Di",{name:"Player never dies"}),px.NoShuffle=$e.flag("Dn",{name:"Do not shuffle items",text:`Items will not be shuffled. WARNING: This disables the logic and
           is very likely to result in an unwinnable seed`});var $6=class{constructor(e="@Casual"){if(typeof e!="string"){this.flags=new Map;for(let[s,a]of e)this.set(s.flag,a);return}if(e.startsWith("@")){let s=T6.get(e.substring(1));if(!s)throw new X6(`Unknown preset: ${e}`);this.flags=new Map(s.flags);return}this.flags=new Map,e=e.replace(/[^A-Za-z0-9!?]/g,"");let x=/([A-Z])([a-z0-9!?]+)/g,t;for(;t=x.exec(e);){let[,s,a]=t,n=/([!?]|^)([a-z0-9]+)/g;for(;t=n.exec(a);){let[,i,o]=t;for(let d of o)this.set(s+d,i||!0)}}}filterOptional(){return new $6(new Map([...this.flags].map(([e,x])=>[e,e.opts.optional?e.opts.optional(x):x])))}filterRandom(e){function x(t,s){return s!=="?"?s:e.pick([!0,!1,...t.opts.modes||""])}return new $6(new Map([...this.flags].map(([t,s])=>[t,x(t,s)])))}toString(){let e=new j(()=>new j(()=>[]));for(let[t,s]of this.flags){if(t.flag.length!==2)throw new Error(`Bad flag ${t.flag}`);if(!s)continue;let a=e.get(t.flag[0]),n=s===!0?"":s;a.get(n).push(t.flag[1])}let x=[];for(let[t,s]of e.sortedEntries()){let a=t;for(let[n,i]of s.sortedEntries())a+=n+i.sort().join("");x.push(a)}return x.join(" ")}toggle(e){let x=Gx.flags.get(e);if(!x)return console.error(`Bad flag: ${e}`),!1;let t=this.flags.get(x)||!1,s=[!1,!0,...x.opts.modes||"","?",!1],a=s.indexOf(t);if(a<0)throw new Error(`Bad current mode ${t}`);let n=s[a+1];return this.flags.set(x,n),n}set(e,x){let t=Gx.flags.get(e);if(!t){console.error(`Bad flag: ${e}`);return}if(!x)this.flags.delete(t);else if(x===!0||x==="?"||t.opts.modes?.includes(x))this.flags.set(t,x);else{console.error(`Bad flag mode: ${e[0]}${x}${e.substring(1)}`);return}for(let s of t.opts.excludes||[])this.flags.delete(Gx.flags.get(s))}check(e,...x){let t=e instanceof Gx?e:Gx.flags.get(e);return x.length||x.push(!0),x.includes(t&&this.flags.get(t)||!1)}get(e){let x=e instanceof Gx?e:Gx.flags.get(e);return x&&this.flags.get(x)||!1}preserveUniqueChecks(){return this.check(A0.PreserveUniqueChecks)}shuffleMimics(){return this.check(A0.NoShuffleMimics,!1)}buffDeosPendant(){return this.check(P0.BonusItems,!1)}changeGasMaskToHazmatSuit(){return this.check(P0.BonusItems,!1)}slowDownTornado(){return this.check(P0.BonusItems,!1)}leatherBootsGiveSpeed(){return this.check(P0.BonusItems,!1)}rabbitBootsChargeWhileWalking(){return this.check(P0.BonusItems,!1)}shuffleSpritePalettes(){return this.check(H.RandomizeSpriteColors)}shuffleMonsters(){return!0}shuffleShops(){return this.check(P0.Shops,!1)}bargainHunting(){return this.shuffleShops()}shuffleTowerMonsters(){return this.check(K0.TowerRobots)}shuffleMonsterElements(){return this.check(K0.RandomizeWeaknesses)}shuffleBossElements(){return this.shuffleMonsterElements()}buffMedicalHerb(){return this.check($0.NoBuffMedicalHerb,!1)}decreaseEnemyDamage(){return this.check(A0.DecreaseEnemyDamage)}trainer(){return this.check(px.TrainerMode)}neverDie(){return this.check(px.NeverDie)}noShuffle(){return this.check(px.NoShuffle)}chargeShotsOnly(){return this.check($0.ChargeShotsOnly)}barrierRequiresCalmSea(){return!0}connectLimeTreeToLeaf(){return this.check(P0.Maps,"!")}addEastCave(){return this.check(P0.Maps,!1)}zebuStudentGivesItem(){return!this.shuffleAreas()&&!this.shuffleHouses()}fogLampNotRequired(){return this.check(l0.VanillaDolphin,!1)}storyMode(){return this.check(l0.StoryMode)}noBowMode(){return this.check(l0.NoBowMode)}requireHealedDolphinToRide(){return this.check(l0.VanillaDolphin)}saharaRabbitsRequireTelepathy(){return!0}teleportOnThunderSword(){return this.check(l0.NoThunderSwordWarp,!1,"!")}randomizeThunderTeleport(){return this.check(l0.NoThunderSwordWarp,!1)}orbsOptional(){return this.check(l0.OrbsNotRequired)}shuffleGoaFloors(){return this.check(H.ShuffleGoaFloors)}shuffleHouses(){return this.check(H.ShuffleHouses)}shuffleAreas(){return this.check(H.ShuffleAreas)}randomizeMaps(){return this.check(H.RandomizeMaps)}randomizeTrades(){return this.check(H.RandomizeTrades)}unidentifiedItems(){return this.check(H.UnidentifiedKeyItems)}randomizeWalls(){return this.check(H.RandomizeWallElements)}guaranteeSword(){return this.check(A0.GuaranteeStartingSword)}guaranteeSwordMagic(){return this.check(z0.BattleMagic,!1)}guaranteeMatchingSword(){return this.check(z0.MatchingSword,!1)}guaranteeGasMask(){return this.check(z0.GasMask,!1)}guaranteeBarrier(){return this.check(z0.Barrier,!1)}guaranteeRefresh(){return this.check(A0.GuaranteeRefresh)}communityJokes(){return this.check(A0.NoCommunityJokes,!1)}disableSwordChargeGlitch(){return this.check(c0.SwordChargeGlitch,!1)}disableTeleportSkip(){return this.check(c0.MtSabreRequirementSkip,!1)}disableRabbitSkip(){return this.check(c0.MtSabreRequirementSkip,!1)}disableShopGlitch(){return this.check(P0.Shops,!1)}disableStatueGlitch(){return this.check(c0.StatueGlitch,!1)}disableRageSkip(){return this.check(c0.RageSkip,!1)}disableTriggerGlitch(){return this.check(c0.TriggerSkip,!1)}disableFlightStatueSkip(){return this.check(c0.StatueGauntletSkip,!1)}assumeSwordChargeGlitch(){return this.check(c0.SwordChargeGlitch)}assumeGhettoFlight(){return this.check(c0.GhettoFlight)}assumeTeleportSkip(){return this.check(c0.MtSabreRequirementSkip)}assumeRabbitSkip(){return this.check(c0.MtSabreRequirementSkip)}assumeStatueGlitch(){return this.check(c0.StatueGlitch)}assumeTriggerGlitch(){return this.check(c0.TriggerSkip)}assumeFlightStatueSkip(){return this.check(c0.StatueGauntletSkip)}assumeWildWarp(){return this.check(P0.WildWarp,!0)||this.check(H.RandomizeWildWarp)}assumeRageSkip(){return this.check(c0.RageSkip)}nerfWildWarp(){return this.check(P0.WildWarp,!1)&&this.check(H.RandomizeWildWarp,!1)}allowWildWarp(){return!this.nerfWildWarp()}randomizeWildWarp(){return this.check(H.RandomizeWildWarp,!0)}blackoutMode(){return this.check($0.Blackout)}hardcoreMode(){return this.check($0.Permadeath)}buffDyna(){return!this.check(P0.Dyna)}maxScalingInTower(){return this.check($0.MaxScalingInTower)}expScalingFactor(){return this.check($0.ExperienceScalesSlower)?.25:this.check(A0.ExperienceScalesFaster)?2.5:1}autoEquipBracelet(e){return e==="early"||this.check(G6.NoAutoEquip,!1)}controllerShortcuts(e){return e==="early"||this.check(G6.NoControllerShortcuts,!1)}randomizeMusic(e){return this.check(o6.RandomizeMusic,e==="early"?"!":!0)}shuffleTilePalettes(e){return this.check(o6.RandomizeMapColors,e==="early"?"!":!0)}noMusic(e){return e==="late"&&this.check(o6.NoMusic)}audibleWallCues(e){return e==="late"&&this.check(G6.AudibleWallCues)}shouldColorSwordElements(){return!0}shouldUpdateHud(){return this.check(P0.Hud,!1)}hasStatTracking(){return!0}};var l7,y2=()=>{let r;l7=new Uint32Array(256);for(let e=0;e<256;e++){r=e;for(let x=0;x<8;x++)r=r&1?3988292384^r>>>1:r>>>1;l7[e]=r}};var w2=r=>r.split("").map(e=>e.charCodeAt(0)),de=r=>{l7||y2(),typeof r=="string"&&(r=w2(r));let e=-1;for(let x=0,t=r.length;x<t;x++)e=e>>>8^l7[(e^r[x])&255];return(e^-1)>>>0};var j7=za(require("fs"));function Pn(r,e,x){return new Ks(e,x).smudge(r)}function*S2(r){let e=0;for(;e<r.length;){let x=r.indexOf(`
`,e)+1||r.length;yield r.substring(e,x),e=x}}var Ks=class{constructor(e,x){this.cpu=e;this.prg=x}smudge(e){let x="";for(let t of S2(e))x+=this.smudgeLine(t);return x}smudgeLine(e){let x=/^([^;]*?)<@([0-9a-f]+)(?: (.*?))?@>(.*\n?)$/i.exec(e);if(x){let[,s,a,n,i]=x,o=parseInt(a,16),d=v2(this.cpu,this.prg,o,n);return s+d+i}let t="";for(;;){let s=/^([^;]*?)\[@([0-9a-f]+)(:[0-9]+|:[wdb])?@\](.*\n?)/i.exec(e);if(!s){t+=e;break}let[,a,n,i,o]=s;e=o,t+=a;let d=parseInt(n,16);t+=T2(this.prg,d,i)}return t}};function v2(r,e,x,t){let s=t,[a,n]=r.disasm(e[x])||["brk","imp"],i=r.argLen(n);return s||(i>0&&(s=e[x+1]),i>1&&(s=s|e[x+2]<<8)),a+(i?" "+r.format(n,s):"")}function T2(r,e,x){let t=r[e];if(x===":w")return t|=r[e+1]<<8,`($${Bn(t,4)})`;if(/:\d+/.test(x)){let s=parseInt(x.substring(1)),a='"';for(let n=0;n<s;n++){let i=String.fromCharCode(r[e+n]);'"\\'.includes(i)&&(i="\\"+i),a+=i}return a+='"',a}else return x===":d"?String(t):x===":b"?`%${t.toString(2).padStart(8,"0")}`:`$${Bn(t,2)}`}var js=class{constructor(e){this.plain=e}fix(e,x,t){}format(e,x){return this.plain}},ce=class extends js{constructor(x){super("");this.fix=x}static set(x){return new ce(t=>t.set(x))}},Oe=ce;Oe.push=new ce(x=>x.push()),Oe.alt=new ce(x=>x.alt()),Oe.pop=new ce(x=>x.pop()),Oe.merge=new ce(x=>x.merge());function Bn(r,e=2){return r.toString(16).padStart(e,"0")}var $x={of:(...r)=>{let e=0n;for(let x of r)e|=1n<<BigInt(x);return e},from:r=>{let e=0n;for(let x of r)e|=1n<<BigInt(x);return e},containsAll:(r,e)=>!(e&~r),with:(r,e)=>r|1n<<BigInt(e),without:(r,e)=>r&~(1n<<BigInt(e)),has:(r,e)=>!!(r&1n<<BigInt(e)),bits:r=>{let e=[],x=0;for(;r;){let t=Number(r&0xffffffffn),s=32;for(;t;){let a=Math.clz32(t)+1;s-=a,t<<=a,a===32&&(t=0),e.push(x|s)}r>>=32n,x+=32}return e},clone:r=>r,empty:r=>!r,difference:(r,e)=>r&~e};var h7=class{constructor(e){this.worlds=e;let x=new Set,t=new Set,s=new Map,a=new Map;for(let f=0;f<e.length;f++){let l=e[f],h=f<<24;for(let[b,u]of l.requirements){x.add(h|b);for(let S of u)for(let m of S)t.add(h|m)}for(let[b,u]of l.items)a.set(h|b,u);for(let[b,u]of l.slots)s.set(h|b,u)}this.itemInfos=new Map(a),this.slotInfos=new Map(s),this.progression=new Set(t);for(let f of a.keys())t.add(f);let n=new Set,i=new Set,o=new Set;for(let f of t)(x.has(f)?n:o).add(f);for(let f of x)t.has(f)||i.add(f);this.common=n.size,this.slots=new et([...n,...i]),this.items=new et([...n,...o]);let d=[],c=[];for(let f=0;f<e.length;f++){let l=f<<24;for(let[h,b]of e[f].requirements){let u=this.slots.index(l|h);if(u==null)throw new Error(`Provided a non-slot? ${A(h)}`);for(let S of b){let m=[...S].map(p=>this.items.index(l|p)??Nx());(d[u]||(d[u]=[])).push($x.from(m));for(let p of m)(c[p]||(c[p]=new Set)).add(u)}}}for(let f=0;f<this.slots.length;f++)if(!d[f]||!d[f].length){let l=this.slots.get(f)??NaN,h=this.checkName(l);console.error(`Nothing provided $${A(l)}: ${h} (index ${f})`)}this.graph=new xt(d),this.unlocks=new xt(c.map(gt))}async shuffle(e,x,t=200,s,a){s&&s.addTasks(Math.floor(t/10));for(let n=0;n<t;n++){s&&n%10===9&&(s.addCompleted(1),await new Promise(requestAnimationFrame));let i=new tt;this.prefill(i,x);let o=this.compressFill(i),d=this.itemPool(o.values(),x),c=$x.from(new Set(d)),f=Math.floor(n/5);if(!this.fillInternal(o,d,c,x,e,f))continue;let l=a?[]:void 0,h=this.traverse(u=>o.get(u),$x.of(),l);if(h.size!==this.slots.length){let u=g=>`${String(g).padStart(3)} ${this.slots.get(g).toString(16).padStart(3,"0")} ${this.checkName(this.slots.get(g))}`,S=g=>`${String(g).padStart(3)} ${this.items.get(g).toString(16).padStart(3,"0")} ${this.checkName(this.items.get(g))}`,m=new Set([...this.slots].map(g=>g[0]));for(let g of h)m.delete(g);let p=new Map;for(let g of m)p.set(u(g),this.graph.get(g).map(w=>`
    `+$x.bits(w).map(S).join(" & ")).join(""));console.error(`Initial fill never reached slots:
  ${[...p.keys()].sort().map(g=>g+p.get(g)).join(`
  `)}`);continue}this.expandFill(o,i);let b=this.fillNonProgression(i,e,x);if(b!=null){if(s&&s.addCompleted(Math.floor((t-n)/100)),a){for(let[u,S]of i){let m=this.checkName(u).replace(/^[0-9a-f]{3} /,"");a.addSlot(u,m,S)}if(l)for(let[u,...S]of l)(u<this.common||o.has(u))&&a.addCheck(this.slots.get(u),S.map(m=>this.items.get(m)))}return b}}return null}fillInternal(e,x,t,s,a,n){let i=new Set(e.keys());for(let o=x.pop();o!=null;o=x.pop()){if(!$x.has(t,o))continue;let d=this.itemInfoFromIndex(o);t=$x.without(t,o);let c=this.expandReachable(this.traverse(h=>e.get(h),t),a);s.shuffle(c);let f=!1,l=new Set(e.keys());for(let h of c){if(l.has(h))continue;l.add(h);let b=this.slotInfoFromIndex(h);if(!(!b||!this.fits(b,d,a))){e.set(h,o),f=!0;break}}if(!f){if(l.clear(),n-- >0){for(let h of c){if(l.has(h)||!e.has(h)||i.has(h))continue;l.add(h);let b=this.slotInfoFromIndex(h);if(!b||!this.fits(b,d,a))continue;let u=e.replace(h,o)??Nx();t=$x.with(t,u),x.push(u),s.shuffle(x),f=!0;break}if(f)continue}return!1}}return!0}expandReachable(e,x){let t=[];for(let s of e){let a=this.slotInfoFromIndex(s);!a||x.preserveUniqueChecks()&&!a.unique||_n(t,s,a.weight||1)}return t}itemPool(e,x){let t=new Set(e),s=[];for(let[a,n]of this.itemInfos){let i=this.items.index(a);i!=null&&(!this.progression.has(a)||t.has(i)||_n(s,i,n.weight||1))}return x.shuffle(s)}fits(e,x,t){if(t.preserveUniqueChecks()&&x.unique&&!e.unique)return!1;let s=x.preventLoss||e.preventLoss;return!(e.lossy&&x.losable&&s)}fillNonProgression(e,x,t){let s=[[],[],[]],a=[[],[]];for(let[d,c]of this.itemInfos){if(e.hasValue(d))continue;let f=2;c.losable&&c.preventLoss&&(f=1),x.preserveUniqueChecks()&&c.unique&&(f=0),s[f].push(d)}for(let[d,c]of this.slotInfos){if(e.has(d))continue;let f=c.lossy&&c.preventLoss?0:1;a[f].push(d)}for(let d of[...s,...a])t.shuffle(d);let n=d=>this.checkName(d),i=C0.count(C0.concat(...a)),o=C0.count(C0.concat(...s));if(o>i)throw console.log(`Slots ${i}:
  ${[...C0.concat(...a)].map(n).join(`
  `)}`),console.log(`Items ${o}:
  ${[...C0.concat(...s)].map(n).join(`
  `)}`),new Error("Too many items");for(let d of C0.concat(...s)){let c=!1;for(let f of[...a]){if(c)break;for(let l=0;l<f.length;l++)if(this.fits(this.slotInfos.get(f[l]),this.itemInfos.get(d),x)){e.set(f[l],d),c=!0,f.splice(l,1);break}}if(!c)return console.log(`Slots:
  ${[...C0.concat(...a)].map(n).join(`
  `)}`),console.error(`REROLL: Could not place item ${n(d)}`),null}return new Map(e)}traverse(e,x,t){x=$x.clone(x);let s=new Set,a=new Set;for(let n=0;n<this.slots.length;n++){if(this.graph.get(n)==null){console.dir(this);let i=this.slots.get(n);throw new Error(`Unreachable slot ${i?.toString(16)}`)}a.add(n)}for(let n of a){if(a.delete(n),s.has(n))continue;let i=this.graph.get(n);if(i==null)throw new Error(`Not in graph: ${n}`);for(let o=0,d=i.length;o<d;o++){if(!$x.containsAll(x,i[o]))continue;t&&t.push([n,...$x.bits(i[o])]),s.add(n);let c=[];n<this.common&&c.push(n);let f=e(n);f!=null&&c.push(f);for(let l of c){x=$x.with(x,l);for(let h of this.unlocks.get(l)||[]){if(this.graph.get(h)==null)throw console.dir(this),new Error(`Adding bad node ${h} from unlock ${l}`);a.add(h)}}break}}return s}expandFill(e,x){for(let[t,s]of e){let a=this.slots.get(t),n=this.items.get(s);if(a==null||n==null)throw new Error("missing");x.replace(a,n)}}compressFill(e){let x=new tt;for(let[t,s]of e){let a=this.slots.index(t),n=this.items.index(s);if(a==null||n==null)throw new Error(`Bad slot/item: ${t} ${a} ${s} ${n}`);x.set(a,n)}return x}checkName(e){return this.worlds[e>>>24].checkName(e&16777215)}prefill(e,x){for(let t=0;t<this.worlds.length;t++){let s=t<<24,a=this.worlds[t].prefill(x);for(let[n,i]of a)e.set(s|n,s|i)}}itemInfoFromIndex(e){let x=this.items.get(e);if(x==null)throw new Error(`Bad item: ${e}`);return this.itemInfoFromId(x)}itemInfoFromId(e){let x=this.itemInfos.get(e);if(x==null)throw new Error(`Missing info: ${A(e)}`);return x}slotInfoFromIndex(e){let x=this.slots.get(e);if(x==null)throw new Error(`Bad slot: ${e}`);return this.slotInfoFromId(x)}slotInfoFromId(e){let x=this.slotInfos.get(e);if(x!=null)return x}};function _n(r,e,x){for(let t=0;t<x;t++)r.push(e)}var u7=class{constructor(e,x,t,s=1){this.rom=e;this._width=t,this._height=x,this.element=document.createElement("div"),this.canvas=document.createElement("canvas"),this.element.appendChild(this.canvas),this.canvas.width=t,this.canvas.height=x,this.ctx=this.canvas.getContext("2d")||Nx(),this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.palettes=new Uint32Array(1024),this.layers=O(s,()=>new Uint32Array(t*x)),this.data=this.layers[0];for(let a=0;a<256;a++)for(let n=0;n<4;n++){let i=E2[e.palettes[a].color(n)];this.palettes[a<<2|n]=i|4278190080}}useLayer(e){this.data=this.layers[e]||Nx(`Bad layer: ${e}`)}resizeWidth(e,x){let t=new Uint32Array(x*this._height),s=Math.min(x,this._width);for(let a=0;a<this._height;a++)t.subarray(a*x,a+x+s).set(e.subarray(a*this._width,a*this._width+s));return t}resizeHeight(e,x){let t=new Uint32Array(this._width*x),s=this._width*Math.min(x,this._height);return t.subarray(0,s).set(e.subarray(0,s)),t}get width(){return this._width}set width(e){for(let x=0;x<this.layers.length;x++)this.layers[x]=this.resizeWidth(this.layers[x],e);this._width=e,this.canvas.width=e}get height(){return this._height}set height(e){for(let x=0;x<this.layers.length;x++)this.layers[x]=this.resizeHeight(this.layers[x],e);this._height=e,this.canvas.height=e}get minX(){return this._minX}get maxX(){return this._maxX}get minY(){return this._minY}get maxY(){return this._maxY}fill(e){this.data.fill(e)}clear(e){let x=e!=null?this.palettes[e<<2]:0;this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.layers[0].fill(x);for(let t=1;t<this.layers.length;t++)this.layers[t].fill(0)}toDataUrl(e=!1){return this.canvas.toDataURL("image/png")}render(){let e=this.canvas,x=this.ctx;for(let t=0;t<this.layers.length;t++){t&&(e=document.createElement("canvas"),e.width=this.canvas.width,e.height=this.canvas.height,x=e.getContext("2d")||Nx());let s=new Uint8Array(this.layers[t].buffer),a=x.getImageData(0,0,this._width,this._height);a.data.set(s),x.putImageData(a,0,0),t&&this.ctx.drawImage(e,0,0)}}rect(e,x,t,s,a){let n=Math.max(0,e),i=Math.max(0,x),o=Math.min(this._height,e+t),d=Math.min(this._width,x+s);for(e=n;e<o;e++)for(x=i;x<d;x++)this.data[e*this._width+x]=a}tile(e,x,t,s){if(x<0||e<0||x+8>=this._width||e+8>=this._height)return;let a=this.rom.patterns.get(t).flip(s<<6);for(let n=0;n<8;n++){let i=a.pixels[8|n]<<1,o=a.pixels[n];for(let d=7;d>=0;d--){let c=i&2|o&1;i>>>=1,o>>>=1,c&&(this.data[(e+n)*this._width+x+d]=this.palettes[s&1020|c])}}this._minX=Math.min(this._minX,x),this._maxX=Math.max(this._maxX,x+8),this._minY=Math.min(this._minY,e),this._maxY=Math.max(this._maxY,e+8)}metatile(e,x,t,s,a=0){let n=this.rom.locations[s],i=[...n.tilePatterns];n.animation&&(i[1]=this.rom.tileAnimations[n.animation].pages[a&7]);let o=[...n.tilePalettes,127],d=this.rom.tilesets[n.tileset],c=o[d.attrs[t]];for(let f=0;f<2;f++)for(let l=0;l<2;l++){let h=d.tiles[f<<1|l][t],b=i[h&128?1:0]<<6|h&127,u=x+(l<<3),S=e+(f<<3);this.tile(S,u,b,c<<2)}}metasprite(e,x,t,s,a=0,n=0){let i=this.rom.locations[s],o=this.rom.metasprites[t],d=[64,66,...i.spritePatterns],c=[0,1,...i.spritePalettes],f=!1;if(o.mirrored!=null&&(o=this.rom.metasprites[o.mirrored],f=!0),!o||!o.used)return;let l=n&o.frameMask;for(let[h,b,u,S]of o.sprites[l]){if(h==128)break;h=Nn(h),b=Nn(b),S=S+a&255;let m=d[S>>6],p=c[u&3]+176&255,g=m<<6|S&63;f&&(h=-8-h,u^=64),this.tile(e+b,x+h,g,p<<2|u>>6)}}text(e,x,t,s=18){for(let a=0;a<t.length;a++)this.tile(e,x+8*a,t.charCodeAt(a)|3840,s<<2)}},E2=[5395026,11796480,10485760,11599933,7602281,91,95,6208,12048,543240,26368,1196544,7153664,0,0,0,12899815,16728064,14421538,16729963,14090399,6818519,6588,21681,27227,35843,43776,2918400,10777088,0,0,0,16316664,16755516,16742785,16735173,16730354,14633471,4681215,46327,57599,58229,259115,7911470,15065624,7895160,0,0,16777215,16773822,16300216,16300248,16758527,16761855,13095423,10148607,8973816,8650717,12122296,16119980,16777136,16308472,0,0];function Nn(r){return r<128?r:r-256}function R0(r){return r}(x=>{function r({id:t},{x:s,y:a}){let n=s>>>8,i=s>>>4&15,o=a>>>8,d=a>>>4&15;return t<<16|o<<12|n<<8|d<<4|i}x.from=r;function e(t,s,a){let n=t;if(s){let i=(n&240)+(s<<4);for(;i>=240;){if((n&61440)>=61440)return-1;i-=240,n+=4096}for(;i<0;){if(!(n&61440))return-1;i+=240,n-=4096}n=n&-241|i}if(a){let i=(n&15)+a;for(;i>=16;){if((n&3840)>=1792)return-1;i-=16,n+=256}for(;i<0;){if(!(n&3840))return-1;i+=16,n-=256}n=n&-16|i}return n}x.add=e})(R0||(R0={}));var Fn=Symbol("[LocationMap data]"),O6=class extends u7{constructor(x,t=0){super(x,1,1,4);this.rom=x;this.flags=new Set;this._maxWidth=1/0;let s=x.locations[t];this.width=(s.used?s.width:1)*256,this.height=(s.used?s.height:1)*240,this.location=s;let a=n=>{let i=n.offsetX,o=n.offsetY,d=n.target;for(;d&&d!==this.element;)d=d.parentElement;if(!d)return;let c=i>>8,f=Math.floor(o/240),l=i-256*c>>4,h=o-240*f>>4,u=this.location.id<<16|f<<12|c<<8|h<<4|l;O6.setData(n,{tile:u,target:this})};this.element.addEventListener("mousemove",a),this.element.addEventListener("mousedown",a),this.element.addEventListener("mouseup",a),this.element.addEventListener("click",a),this.redraw()}static getData(x){return x[Fn]}static setData(x,t){x[Fn]=t}get id(){return this.location.id}set id(x){this.location=this.rom.locations[x],this.height=(this.location.used?this.location.height:1)*240,this.width=(this.location.used?this.location.width:1)*256,this.ensureWidth(),this.redraw()}get maxWidth(){return this._maxWidth}set maxWidth(x){this._maxWidth=x,this.ensureWidth()}ensureWidth(){if(this.width<=this._maxWidth){this.element.style.transform="",this.element.style.width="",this.element.style.height="";return}let x=this._maxWidth/this.width,t=(1-x)*50;this.element.style.transform=`translate(-${t}%,-${t}%) scale(${x})`,this.element.style.width=`${this.width*x}px`,this.element.style.height=`${this.height*x}px`}clearOverlay(){this.useLayer(1),this.fill(0),this.useLayer(3),this.fill(0),this.render()}overlayShade(x){this.useLayer(3),this.fill(x)}overlayArea(x,t,s){for(let a of x){if(a>>>16!==this.location.id)continue;let n=a>>>12&15,i=a>>>8&15,o=a>>>4&15,d=a&15,c=240*n+16*o,f=256*i+16*d;s!=null&&(this.useLayer(3),this.rect(c-1,f-1,18,18,0)),this.useLayer(1),x.has(R0.add(a,-1,0))||this.rect(c-1,f-1,2,18,t),x.has(R0.add(a,0,-1))||this.rect(c-1,f-1,18,2,t),x.has(R0.add(a,1,0))||this.rect(c+15,f-1,2,18,t),x.has(R0.add(a,0,1))||this.rect(c-1,f+15,18,2,t)}}redraw(){this.useLayer(0),this.clear(this.location.tilePalettes[0]);for(let x=0;x<this.location.height;x++)for(let t=0;t<this.location.width;t++){let s=this.location.screens[x][t];this.drawScreen(this.rom.screens[s],x,t)}this.useLayer(2);for(let x of this.location.spawns){let t=0,{x:s,y:a}=x;a-=x.yt&240;let n,i=0;if(x.isNpc()){let o=this.rom.npcs[x.id];if(!o||!o.data)continue;s+=8,a+=12,n=(i>>5)+2&3|o.data[3]}else if(x.isChest())n=170;else if(x.isMonster()){let o=this.rom.objects[x.monsterId];if(!o)continue;n=o.metasprite,o.action==41?n=i&32?107:104:[42,94].includes(o.action)&&(n=(i>>5)+2&3|o.data[31])}x.patternBank&&(t+=64),n!=null&&this.metasprite(a,s,n,this.location.id,t)}this.render()}drawScreen(x,t,s){let a=t*240,n=s*256,i=this.rom.tilesets[this.location.tileset],o,d=!1;for(let c of this.location.flags)if(c.xs===s&&c.ys===t){o=c.flag,this.rom.flags[o]?.logic.assumeTrue&&(d=!0);break}for(let c=0;c<240;c+=16)for(let f=0;f<16;f++){let l=x.tiles[c|f];l<32&&(this.flags.has(o)||d)&&(l=i.alternates[l]),this.metatile(a+c,n+f*16,l,this.location.id,0)}}};var Q;(c=>{function r(...f){return[[].concat(...f.map(([l])=>l))]}c.and=r;function e(...f){let l=[];for(let h of f){if(h===c.OPEN)return c.OPEN;h!==c.CLOSED&&l.push(...t(h))}return l.length?l:c.CLOSED}c.or=e;function x(f,l){if(f===c.OPEN)return t(l);if(l===c.OPEN)return t(f);if(f===c.CLOSED||l===c.CLOSED)return c.CLOSED;let h=new d;for(let b of f)for(let u of l)h.addList([...b,...u]);return t(h)}c.meet=x;function t(f){return f instanceof d?[...C0.map(f,l=>[...l])]:f}c.freeze=t;function s(f){return f instanceof d?f.label():f.map(l=>l.join("&")).join("|")}c.label=s;function a(f){let l=f[Symbol.iterator](),{value:h,done:b}=l.next();if(b||!l.next().done)return!1;let u=h[Symbol.iterator]();return Boolean(u.next().done)}c.isOpen=a;function n(f){let l=f[Symbol.iterator]();return Boolean(l.next().done)}c.isClosed=n,c.OPEN=[[]],c.CLOSED=[];class d{constructor(l){this.self=l;this.map=new Map}[Symbol.iterator](){return this.map.values()}addInternal(l,h){for(let b of h)if(Array.isArray(b))throw new Error;if(h.has(this.self)||this.map.has(l))return!1;for(let[b,u]of this.map){if(Dn(h,u))return!1;Dn(u,h)&&this.map.delete(b)}return this.map.set(l,h),!0}addRoute(l){return this.addInternal(l[b7],l.deps)}addAll(l){for(let h of l)this.addList(h)}addList(l){let h=[...new Set(l)].sort(),b=new Set(h);this.addInternal(h.join("&"),b)}restrict(l){let h=[...this.map.values()];this.map.clear();for(let b of h)for(let u of l)this.addList([...b,...u])}label(){return[this.map.keys()].join("|")}}c.Builder=d})(Q||(Q={}));function Dn(r,e){if(r.size<e.size)return!1;for(let x of e)if(!r.has(x))return!1;return!0}var b7=Symbol("depsLabel"),d6=class{constructor(e,x){this.target=e;let t=[...new Set(x)].sort();this.deps=new Set(t),this[b7]=t.join("&"),this.label=`${this.target}:${this[b7]}`}};b7;var m7=class{constructor(e){this.rom=e;this.tiles=new j(e=>k2(this.rom,e));this.bosses=new j(e=>new Js(e));this.statues=new Map;this.flags=new j(e=>new j(x=>new j(t=>new Qs(e,x,t))));this.meets=new j(e=>new j(x=>new Zs(e,x)));this._seamless=new j(e=>new Vs(e))}tile(e){return e&4?void 0:this.tiles.get(e)}boss(e,x){return x?this.rage||(this.rage=new Ys(e,this.rom.flags.RageSkip.id)):this.bosses.get(e)}statue(e){let x=Q.label(e),t=this.statues.get(x);return t||this.statues.set(x,t=new Xs(e)),t}flag(e,x,t){return e||(e=R2),this.flags.get(e).get(x).get(t)}meet(e,x){return this.meets.get(e).get(x)}seamless(e){return this._seamless.get(e)}label(e,x){return e.label?e.label(x):"Terrain"}},M0;(f=>{f.FLY=2,f.BLOCKED=4,f.SLOPE=32,f.PAIN=128,f.BITS=166,f.SWAMP=256,f.BARRIER=512,f.SLOPE8=1024,f.SLOPE9=2048,f.DOLPHIN=4096;function c(l,h){return l.label?.(h)??"Terrain"}f.label=c})(M0||(M0={}));var Vs=class{constructor(e){this._delegate=e;this.enter=e.enter,this.exit=e.exit}label(e){return`Seamless(${M0.label(this._delegate,e)})`}},fe=class{constructor(e,x=Q.OPEN){this.enter=e;this.exit=[[15,x]]}get kind(){return"Simple"}label(e){let x=[];return Q.isOpen(this.enter)||x.push(`enter = ${Ox(this.enter,e)}`),Q.isOpen(this.exit[0][1])||x.push(`exit = ${Ox(this.exit[0][1],e)}`),`${this.kind}(${x.join(", ")})`}},p7=class{constructor(e,x,t=4){this.enter=e;this.exit=x?[[15&~t,x],[t,Q.OPEN]]:[[15,Q.OPEN]]}get kind(){return"South"}label(e){if(this.exit.length===1)return fe.prototype.label.call(this,e);let x=[];return Q.isOpen(this.enter)||x.push(`enter = ${Ox(this.enter,e)}`),Q.isOpen(this.exit[0][1])||x.push(`other = ${Ox(this.exit[0][1],e)}`),Q.isOpen(this.exit[1][1])||x.push(`south = ${Ox(this.exit[1][1],e)}`),`${this.kind}(${x.join(", ")})`}};function k2(r,e){let x=Q.OPEN,t,s=4;return e&M0.DOLPHIN&&e&M0.FLY?(e&M0.SLOPE&&(t=r.flags.ClimbWaterfall.r),x=[[r.flags.CurrentlyRidingDolphin.c],[r.flags.Flight.c]]):(e&M0.SLOPE9?t=r.flags.ClimbSlope9.r:e&M0.SLOPE8?t=r.flags.ClimbSlope8.r:e&M0.SLOPE&&(t=r.flags.ClimbSlope10.r),e&M0.FLY&&(x=r.flags.Flight.r)),e&M0.SWAMP&&(x=x.map(a=>[r.flags.TravelSwamp.c,...a])),e&M0.PAIN&&(x=x.map(a=>[r.flags.CrossPain.c,...a])),e&M0.BARRIER&&(x=x.map(a=>[r.flags.ShootingStatue.c,...a]),t=r.flags.ShootingStatueSouth.r,s=1),new p7(x,t,s)}var Js=class extends fe{constructor(x){super(Q.OPEN,[[x]]);this._flag=x}get kind(){return"Boss"}},Xs=class extends p7{constructor(x){super(Q.OPEN,x);this._req=x}get kind(){return"Statue"}},Ys=class{constructor(e,x){this._rageFlag=e;this._rageSkipFlag=x;this.enter=Q.OPEN;this.exit=[[11,[[e],[x]]],[4,Q.OPEN]]}label(){return"Rage"}},Qs=class extends fe{constructor(e,x,t){if(e.exit.length!==1||t.exit.length!==1)throw console.error(e,t),new Error("bad flag");let s=[[x]],a=x>=0?Q.meet(t.enter,s):t.enter,n=x>=0?Q.meet(t.exit[0][1],s):t.exit[0][1];super(Q.or(e.enter,a),Q.or(e.exit[0][1],n))}get kind(){return"Flag"}},R2=new fe(Q.CLOSED,Q.CLOSED);function Gn(r){let e=[];for(let x=0;x<r.exit.length;x++)for(let t=0;t<4;t++)r.exit[x][0]&1<<t&&(e[t]=x);for(let x=0;x<4;x++)if(e[x]==null)throw new Error(`Bad terrain: ${r.exit.map(t=>t[0]).join(",")}`);return e}var Zs=class{constructor(e,x){this.left=e;this.right=x;let t=Gn(e),s=Gn(x),a=new Set,n=[];for(let i=0;i<4;i++)a.add(t[i]<<2|s[i]);for(let i of a){let[o,d]=e.exit[i>>2],[c,f]=x.exit[i&3];n.push([o&c,Q.meet(d,f)])}this.enter=Q.meet(e.enter,x.enter),this.exit=n}get kind(){return"Terrain"}label(e){if(this.exit.length===1)return fe.prototype.label.call(this,e);let x=[];Q.isOpen(this.enter)||x.push(`enter = ${Ox(this.enter,e)}`);for(let[t,s]of this.exit){let a=[t&1?"N":"",t&2?"W":"",t&4?"S":"",t&8?"E":""].join("");x.push(`exit${a} = ${Ox(s,e)}`)}return`${this.kind}(${x.join(", ")})`}};function Ox(r,e){let x=[...r],t=x.map(s=>C0.isEmpty(s)?"open":[...s].map(a=>e.flags[a]?.debug).join(" & ")).join(") | (");return x.length>1?`(${t})`:x.length?t:"never"}M0.debugLabel=Ox;typeof window=="object"&&(window.debugLabel=Ox);var g7=class{constructor(e,x){this.rom=e;this.world=x;this.element=document.createElement("div"),this.element.addEventListener("click",t=>this.click(t)),this.element.addEventListener("mousemove",t=>this.move(t)),this.renderArea(0)}click(e){let x=O6.getData(e);if(!x)return;let t=this.world.tiles.get(x.tile);if(t!=null){if(t.area===this.area){let s=t.exit!=null?this.world.tiles.get(t.exit):null;s&&s.area!==this.area&&(t=s)}t.area&&t.area!==this.area&&this.renderArea(t.area.id)}}move(e){let x=O6.getData(e);if(!x)return;let t=this.world.tiles.get(x.tile);if(t==null)return;let s=t.exit!=null&&!this.area.tiles.has(t.exit);x.target.element.style.cursor=s?"pointer":"default"}clear(){for(;this.element.childNodes.length;)this.element.childNodes[0].remove()}renderArea(e){this.clear();let x=document.createElement("select");x.appendChild(document.createElement("option")),x.children[0].textContent="Select location";for(let s of this.rom.locations){if(!s.used)continue;let a=this.world.locations[s.id]?.areas[Symbol.iterator]().next().value;if(a==null)continue;let n=document.createElement("option");n.textContent=`${A(s.id)} ${s.name}`,n.value=String(a.id),x.appendChild(n)}x.addEventListener("change",()=>{this.renderArea(Number(x.value))}),this.element.appendChild(x),this.area=this.world.areas[e];let t=document.createElement("pre");t.textContent=`Area ${e}
Locations: ${this.area.locations.size}
Tiles: ${this.area.tiles.size}
Terrain: ${M0.label(this.area.terrain,this.rom)}
Checks:
  ${[...new Set(this.area.checks.map(([s,a])=>`${s.debug}: ${Ox(a,this.rom)}`))].join(`
  `)}
Routes:
  ${Ox(this.area.routes,this.rom).split(" | ").join(`
  `).replace(/[()]/g,"")}`,this.element.appendChild(t);for(let s of this.area.locations){let a=this.rom.locations[s],n=document.createElement("h2");n.textContent=a.name,this.element.appendChild(n),this.element.appendChild(this.makeLocation(this.area,a))}}makeLocation(e,x){let t=new O6(this.rom,x.id);t.maxWidth=574,t.overlayShade(1426063360);for(let s of this.world.locations[x.id].areas)s!==e&&t.overlayArea(s.tiles,4294901760);return t.overlayArea(e.tiles,4278255615,0),t.render(),t.element}};var ht;(n=>{function r(i){switch(i){case 0:return"N";case 1:return"W";case 2:return"S";case 3:return"E"}throw new Error(`Bad direction: ${i}`)}n.name=r;function e(){return[0,1,2,3]}n.all=e,n.North=0,n.West=1,n.South=2,n.East=3})(ht||(ht={}));var Qx;(s=>{function r(a,n){return{*[Symbol.iterator](){let{x:i,y:o}=n;i+=8;for(let d of[-16,0]){let c=i+d;for(let f of[-16,0]){let l=o+f;yield R0.from(a,{x:c,y:l})}}}}}s.trigger=r;function e(a,...n){let i=new Set,o=[...a];for(let[d,c]of n)for(let f of o)i.add(R0.add(f,d,c));return i}s.adjust=e;function x(a){let n=[];for(let i=0;i<240;i++)n.push(a&-256|i);return n}s.screen=x;function t(a,...n){let i=new Set,o=[...a];for(let d of n)for(let c of o)i.add(c&65535|d.id<<16);return i}s.atLocation=t})(Qx||(Qx={}));function le(r){return r}(x=>{x.from=(t,s)=>typeof t=="number"||!s?Number(t)>>>8:t.id<<8|s.y>>>8<<4|s.x>>>8;function e(t){return t>>>8}x.fromTile=e})(le||(le={}));function Ix(r){return r}(x=>{function r(t,s){return t*(1<<24)+s}x.of=r;function e(t){return[Math.floor(t/(1<<24)),t%(1<<24)]}x.split=e})(Ix||(Ix={}));var[]=[A],y7=class{constructor(e,x,t=!1){this.rom=e;this.flagset=x;this.tracker=t;this.terrainFactory=new m7(this.rom);this.terrains=new Map;this.checks=new j(()=>new Set);this.slots=new Map;this.items=new Map;this.itemUses=new j(()=>[]);this.exits=new Map;this.exitSet=new Set;this.seamlessExits=new Set;this.tiles=new X0;this.neighbors=new j(()=>0);this.routes=new j(()=>new Q.Builder);this.routeEdges=new j(()=>new Y6);this.requirementMap=new j(e=>new Q.Builder(e));this.limeTreeEntranceLocation=-1;for(let s of e.items)for(let a of s.itemUseData)a.kind==="expect"?this.itemUses.get(a.want).push([s,a]):a.kind==="location"&&this.itemUses.get(~a.want).push([s,a]);this.aliases=new Map([[e.flags.ChangeAkahana,e.flags.Change],[e.flags.ChangeSoldier,e.flags.Change],[e.flags.ChangeStom,e.flags.Change],[e.flags.ChangeWoman,e.flags.Change],[e.flags.ParalyzedKensuInDanceHall,e.flags.Paralysis],[e.flags.ParalyzedKensuInTavern,e.flags.Paralysis]]),x.assumeTriggerGlitch()&&(this.seamlessExits.add=()=>this.seamlessExits);for(let s of e.locations)this.processLocation(s);this.addExtraChecks(),this.unionNeighbors(),this.recordExits(),this.buildNeighbors(),this.addAllRoutes(),this.consolidateChecks(),this.buildRequirementMap()}addExtraChecks(){let{locations:{Leaf_ToolShop:e,MezameShrine:x,Oak:t,Shyron_ToolShop:s},flags:{AbleToRideDolphin:a,BallOfFire:n,BallOfThunder:i,BallOfWater:o,BallOfWind:d,Barrier:c,BlizzardBracelet:f,BowOfMoon:l,BowOfSun:h,BreakStone:b,BreakIce:u,BreakIron:S,BrokenStatue:m,BuyHealing:p,BuyWarp:g,ClimbWaterfall:w,ClimbSlope8:M,ClimbSlope9:I,ClimbSlope10:P,CrossPain:k,CurrentlyRidingDolphin:N,Flight:D,FlameBracelet:e0,FormBridge:i0,GasMask:p0,GlowingLamp:F0,InjuredDolphin:g0,LeadingChild:D0,LeatherBoots:Z,Money:K,OpenedCrypt:U0,RabbitBoots:Tx,Refresh:S0,RepairedStatue:Z0,RescuedChild:V0,ShellFlute:gx,ShieldRing:qx,ShootingStatue:lx,ShootingStatueSouth:Ex,StormBracelet:H0,Sword:f6,SwordOfFire:yx,SwordOfThunder:Px,SwordOfWater:Lx,SwordOfWind:e6,TornadoBracelet:M6,TravelSwamp:t0,TriggerSkip:C,UsedBowOfMoon:z,UsedBowOfSun:r0,WildWarp:y0},items:{MedicalHerb:x0,WarpBoots:f0}}=this.rom,B=this.entrance(x),u0=this.entrance(t);this.addCheck([B],q6(l,h),[U0.id]),this.addCheck([B],l.r,[z.id]),this.addCheck([B],h.r,[r0.id]),this.addCheck([B],q6(a,gx),[N.id]),this.addCheck([u0],q6(D0),[V0.id]),this.addItemCheck([B],q6(F0,m),Z0.id,{lossy:!0,unique:!0});for(let bx of this.rom.shops){if(bx.location===e.id||bx.location===s.id||!bx.used||bx.type!==1)continue;let U6=[bx.location<<16|136];for(let K6 of bx.contents)K6===x0.id?this.addCheck(U6,K.r,[p.id]):K6===f0.id&&this.addCheck(U6,K.r,[g.id])}let Wx=e6.r,_x=yx.r,zx=Lx.r,l6=Px.r;if(!this.flagset.orbsOptional()){let bx=E6(d,M6),U6=E6(n,e0),K6=E6(o,f),V7=E6(i,H0);if(Wx=Q.meet(Wx,bx),_x=Q.meet(_x,U6),zx=Q.meet(zx,K6),l6=Q.meet(l6,V7),this.flagset.assumeSwordChargeGlitch()){let j6=function(ve){return J7.map(C6=>C6[0]===ve.c?C6:[ve.c,...C6])},J7=Q.or(Wx,_x,zx,l6);Wx=j6(e6),_x=j6(yx),zx=j6(Lx),l6=j6(Px)}}this.addCheck([B],Wx,[b.id]),this.addCheck([B],_x,[u.id]),this.addCheck([B],zx,[i0.id]),this.addCheck([B],l6,[S.id]),this.addCheck([B],E6(e6,yx,Lx,Px),[f6.id]),this.addCheck([B],D.r,[w.id,P.id]),this.addCheck([B],E6(D,Tx),[M.id]),this.addCheck([B],E6(D,Tx),[I.id]),this.addCheck([B],c.r,[lx.id,Ex.id]),this.addCheck([B],p0.r,[t0.id]);let pt=this.flagset.changeGasMaskToHazmatSuit()?p0:Z;if(this.addCheck([B],E6(D,Tx,pt),[k.id]),this.flagset.leatherBootsGiveSpeed()&&this.addCheck([B],Z.r,[M.id]),this.flagset.assumeGhettoFlight()&&this.addCheck([B],q6(N,Tx),[w.id]),this.flagset.fogLampNotRequired()){let bx=this.flagset.requireHealedDolphinToRide();this.addCheck([B],bx?g0.r:[[]],[a.id])}this.flagset.guaranteeBarrier()||this.addCheck([B],[[K.c,p.c],[K.c,qx.c],[K.c,S0.c]],[lx.id,Ex.id]),this.flagset.assumeFlightStatueSkip()&&this.addCheck([B],[[K.c,D.c]],[lx.id]),this.flagset.guaranteeGasMask()||this.addCheck([B],[[K.c,p.c],[K.c,S0.c]],[t0.id,k.id]),this.flagset.assumeWildWarp()&&this.addCheck([B],Q.OPEN,[y0.id]),this.flagset.assumeTriggerGlitch()&&(this.addCheck([B],Q.OPEN,[C.id]),this.addCheck([B],C.r,[k.id,M.id,I.id]))}addExtraRoutes(){let{flags:{BuyWarp:e,SwordOfThunder:x,Teleport:t,WildWarp:s},locations:{MezameShrine:a}}=this.rom;if(this.addRoute(new d6(this.entrance(a),[])),this.flagset.teleportOnThunderSword()){let n=this.rom.townWarp.thunderSwordWarp;this.addRoute(new d6(this.entrance(n[0],n[1]&31),[x.c,e.c])),this.addRoute(new d6(this.entrance(n[0],n[1]&31),[x.c,t.c]))}if(this.flagset.assumeWildWarp())for(let n of this.rom.wildWarp.locations){if(n===this.rom.locations.UndergroundChannel.id)continue;let i=this.entrance(n),o=this.terrains.get(i)??Nx("bad entrance");for(let d of o.enter)this.addRoute(new d6(i,[s.c,...d]))}}consolidateChecks(){for(let[e,x]of this.checks){let t=this.tiles.find(e);if(e!==t){for(let s of x)this.checks.get(t).add(s);this.checks.delete(e)}}}buildRequirementMap(){for(let[x,t]of this.checks)for(let{checks:s,requirement:a}of t)for(let n of s){let i=this.requirementMap.get(n);for(let o of a)for(let d of this.routes.get(x)||[])i.addList([...o,...d])}if(!$n)return;let e=[];for(let[x,t]of this.requirementMap){let s=a=>this.rom.flags[a].name;for(let a of t)e.push(`${s(x)}: ${[...a].map(s).join(" & ")}
`)}e.sort((x,t)=>x<t?-1:x>t?1:0),console.log(e.join(""))}getLocationList(e="Crystalis"){let x=$n?t=>t.debug:t=>t.name;return{worldName:e,requirements:this.requirementMap,items:this.items,slots:this.slots,checkName:t=>x(this.rom.flags[t]),prefill:t=>{let{Crystalis:s,MesiaInTower:a,LeafElder:n}=this.rom.flags,i=new Map([[a.id,s.id]]);return this.flagset.guaranteeSword()&&i.set(n.id,512|t.nextInt(4)),i}}}processLocation(e){!e.used||(this.processLocationTiles(e),this.processLocationSpawns(e),this.processLocationItemUses(e))}unionNeighbors(){for(let[e,x]of this.terrains){let t=R0.add(e,0,1);this.terrains.get(t)===x&&this.tiles.union([e,t]);let s=R0.add(e,1,0);this.terrains.get(s)===x&&this.tiles.union([e,s])}}addAllRoutes(){this.addExtraRoutes();for(let[e,x]of this.neighbors){let[t,s]=Ix.split(e),a=this.terrains.get(t),n=this.terrains.get(s);if(!a||!n)throw new Error(`missing terrain ${A(a?t:s)}`);for(let[i,o]of a.exit)if(!!(i&x))for(let d of o)for(let c of n.enter)this.addRoute(new d6(s,[...d,...c]),t)}if(typeof document=="object"){let e=document.getElementById("debug");e&&e.appendChild(new g7(this.rom,this.getWorldData()).element)}}getWorldData(){let e=0,x=new j(()=>({})),t=O(256,()=>({areas:new Set,tiles:new Set})),s=[];for(let a of this.tiles.sets()){let n=this.tiles.find(C0.first(a)),i=this.terrains.get(n);if(!i)continue;let o=this.routes.has(n)?Q.freeze(this.routes.get(n)):[];if(!o.length)continue;let d={checks:[],id:e++,locations:new Set,routes:o,terrain:i,tiles:new Set};s.push(d);for(let c of a){let f=c>>>16;d.locations.add(f),d.tiles.add(c),t[f].areas.add(d),t[f].tiles.add(c),x.get(c).area=d}}for(let[a,n]of this.exits)x.has(a)&&(x.get(a).exit=n);for(let[a,n]of this.checks){let i=x.get(a).area;if(!!i)for(let{checks:o,requirement:d}of n)for(let c of o){let f=this.rom.flags[c]||Nx();i.checks.push([f,d])}}return{tiles:x,areas:s,locations:t}}addRoute(e,x){if(x!=null){this.routeEdges.get(x).add(e);for(let i of this.routes.get(x))this.addRoute(new d6(e.target,[...i,...e.deps]));return}let t=new Y6,s=new Y6,a=e;t.add(a);let n=t[Symbol.iterator]();for(;;){let{value:i,done:o}=n.next();if(o)return;s.add(i),t.delete(i);let d=new Y6,c=i.target;if(this.routes.get(c).addRoute(i))for(let l of this.routeEdges.get(c))d.add(new d6(l.target,[...i.deps,...l.deps]));for(let l of d)s.has(l)||(t.delete(l),t.add(l))}}recordExits(){for(let[e,x]of this.exits)this.exitSet.add(Ix.of(this.tiles.find(e),this.tiles.find(x)));for(let e of this.exitSet){let[x,t]=Ix.split(e);if(this.terrains.get(x)!==this.terrains.get(t))continue;let s=Ix.of(t,x);this.exitSet.has(s)&&(this.tiles.union([x,t]),this.exitSet.delete(e),this.exitSet.delete(s))}}buildNeighbors(){for(let[e,x]of this.terrains){if(!x)continue;let t=R0.add(e,1,0),s=this.terrains.get(t);s&&s!==x&&this.handleAdjacentNeighbors(e,t,ht.North);let a=R0.add(e,0,1),n=this.terrains.get(a);n&&n!==x&&this.handleAdjacentNeighbors(e,a,ht.West)}for(let e of this.exitSet){let[x,t]=Ix.split(e);if(!this.terrains.has(x)||!this.terrains.has(t))continue;let s=Ix.of(this.tiles.find(x),this.tiles.find(t));this.neighbors.set(s,this.neighbors.get(s)|1)}}handleAdjacentNeighbors(e,x,t){let s=this.tiles.find(e),a=this.tiles.find(x);if(!this.seamlessExits.has(x)){let n=Ix.of(a,s);this.neighbors.set(n,this.neighbors.get(n)|1<<t)}if(!this.seamlessExits.has(e)){let n=t^2,i=Ix.of(s,a);this.neighbors.set(i,this.neighbors.get(i)|1<<n)}}processLocationTiles(e){let x=new Map,t=new Set,s=(e.id&248)===88;for(let d of e.spawns)if(d.isWall())x.set(le.from(e,d),d.id&3);else if(d.isMonster()&&d.id===63){let c=le.from(e,d)<<8|d.yt<<4;for(let f=4;f<=11;f++)for(let l=-3;l<=3;l++)t.add(R0.add(c,l,f))}let a=this.rom.tilesets[e.tileset],n=this.rom.tileEffects[e.tileEffects-179],i=d=>{let c=e.screens[(d&61440)>>>12][(d&3840)>>>8];return n.effects[this.rom.screens[c].tiles[d&255]]},o=(d,c,f)=>{if(d&=M0.BITS,e.id===26&&(d|=M0.SWAMP),(e.id===96||e.id===104)&&(d|=M0.DOLPHIN),e.id===100&&(c&61680)<4144&&(d|=M0.DOLPHIN),f&&(d|=M0.BARRIER),!(d&M0.DOLPHIN)&&d&M0.SLOPE){let l=c,h=0;for(;i(l)&M0.SLOPE;)l=R0.add(l,1,0),h++;h<6?d&=~M0.SLOPE:h<9?d|=M0.SLOPE8:h<10&&(d|=M0.SLOPE9)}if(d&M0.PAIN){for(let l of[[0,1],[1,0],[0,-1],[-1,0]])if(!(i(R0.add(c,...l))&(M0.PAIN|M0.FLY))){d&=~M0.PAIN;break}}return this.terrainFactory.tile(d)};for(let d=0,c=e.height;d<c;d++){let f=e.screens[d],l=e.id<<8|d<<4;for(let h=0,b=e.width;h<b;h++){let u=this.rom.screens[f[h]],S=l|h,m=S&255,p=x.get(S),g=s?this.rom.flags.AlwaysTrue.id:p!=null?this.wallCapability(p):e.flags.find(I=>I.screen===m)?.flag,w=e.pits.find(I=>I.fromScreen===S);w&&this.exits.set(S<<8|136,w.toScreen<<8|136);let M=this.rom.flags[g]?.logic??{};for(let I=0;I<240;I++){let P=S<<8|I,k=u.tiles[I];M.assumeTrue&&k<32&&(k=a.alternates[k]);let N=e.isShop()?0:n.effects[k],D=t.has(P),e0=o(N,P,D);if(k<32&&a.alternates[k]!==k&&g!=null&&!M.assumeTrue&&!M.assumeFalse){let i0=o(n.effects[a.alternates[k]],P,D);i0&&(e0=this.terrainFactory.flag(e0,M.track?g:-1,i0))}e0&&this.terrains.set(P,e0)}}}for(let d of e.exits){let{dest:c,entrance:f}=d,l=R0.from(e,d),h;if(d.isSeamless()){h=l&65535|c<<16;let b=R0.from(e,d);this.seamlessExits.add(b);let u=this.terrains.get(b);u&&this.terrains.set(b,this.terrainFactory.seamless(u))}else h=this.entrance(this.rom.locations[c],f&31);this.exits.set(l,h),c===this.rom.locations.LimeTreeLake.id&&this.rom.locations.LimeTreeLake.entrances[f].y>160&&(this.limeTreeEntranceLocation=e.id)}}processLocationSpawns(e){for(let x of e.spawns)x.isTrigger()?this.processTrigger(e,x):x.isNpc()?this.processNpc(e,x):x.isBoss()?this.processBoss(e,x):x.isChest()?this.processChest(e,x):x.isMonster()?this.processMonster(e,x):x.type===3&&x.id===224&&this.processKeyUse(Qx.screen(R0.from(e,x)),this.rom.flags.UsedWindmillKey.r)}processTrigger(e,x){let t=this.rom.trigger(x.id);if(!t)throw new Error(`Missing trigger ${x.id.toString(16)}`);let s=this.filterRequirements(t.conditions),a=this.filterAntiRequirements(t.conditions),n=R0.from(e,x),i=Qx.trigger(e,x),o=[];for(let d of t.flags){let c=this.flag(d);c?.logic.track&&o.push(c.id)}switch(o.length&&this.addCheck(i,s,o),t.message.action){case 25:t.id===134&&!this.flagset.assumeRabbitSkip()?i=Qx.adjust(i,[0,-1],[0,1]):t.id===186&&!this.flagset.assumeTeleportSkip()&&!this.flagset.disableTeleportSkip()&&(i=Qx.atLocation(i,this.rom.locations.CordelPlainEast,this.rom.locations.CordelPlainWest)),this.flagset.assumeTriggerGlitch()&&(a=Q.or(a,this.rom.flags.TriggerSkip.r)),this.addTerrain(i,this.terrainFactory.statue(a));break;case 29:this.addBossCheck(i,this.rom.bosses.Mado1,s);break;case 8:case 11:case 12:case 13:case 15:this.addItemGrantChecks(i,s,t.id);break;case 24:{let d=this.flagset.chargeShotsOnly()?Q.meet(s,q6(this.rom.flags.WarpBoots)):s;this.addItemCheck(i,d,this.rom.flags.StomFightReward.id,{lossy:!0,unique:!0});break}case 30:this.addItemCheck(i,s,this.rom.flags.MesiaInTower.id,{lossy:!0,unique:!0});break;case 31:this.handleBoat(n,e,s);break;case 27:e===this.rom.locations.Portoa_PalaceEntrance&&(i=Qx.adjust(i,[-2,0]),a=this.rom.flags.TalkedToFortuneTeller.r),this.handleMovingGuard(i,e,a);break}for(let[d,c]of this.itemUses.get(x.type<<8|x.id))this.processItemUse([R0.from(e,x)],Q.OPEN,d,c)}processNpc(e,x){let t=this.rom.npcs[x.id];if(!t||!t.used)throw new Error(`Unknown npc: ${A(x.id)}`);let s=t.spawnConditions.get(e.id)||[],a=this.filterRequirements(s),n=R0.from(e,x),i=[this.terrains.has(n)?n:this.walkableNeighbor(n)??n];for(let[c,f]of this.itemUses.get(x.type<<8|x.id))this.processItemUse(i,a,c,f);if(t===this.rom.npcs.SaberaDisguisedAsMesia&&this.addBossCheck(i,this.rom.bosses.Sabera1,a),t.data[2]&4&&!this.flagset.assumeStatueGlitch()){let c;c=this.filterAntiRequirements(s),t===this.rom.npcs.Rage?(i=Qx.adjust(i,[2,-1],[2,0],[2,1],[2,2]),i=Qx.adjust(i,[0,-6],[0,-2],[0,2],[0,6])):t===this.rom.npcs.PortoaThroneRoomBackDoorGuard?c=Q.or(this.rom.flags.MesiaRecording.r,q6(this.rom.flags.Paralysis,this.rom.flags.QueenNotInThroneRoom)):t===this.rom.npcs.SoldierGuard&&(c=void 0),c&&this.addTerrain(i,this.terrainFactory.statue(c))}if(t===this.rom.npcs.FortuneTeller&&(i=Qx.adjust(i,[0,0],[2,0])),Q.isClosed(a))return;let[[...o]]=a;for(let c of t.globalDialogs){let f=this.flag(~c.condition),l=this.flag(c.condition);if(f?.logic.assumeFalse||l?.logic.assumeTrue)return;f?.logic.track&&o.push(f.id)}let d=t.localDialogs.get(e.id)??t.localDialogs.get(-1)??[];for(let c of d){let f=[...o],l=this.flag(c.condition),h=this.flag(~c.condition);if(l?.logic.track&&f.push(l.id),!l?.logic.assumeFalse&&!h?.logic.assumeTrue&&this.processDialog(i,t,f,c),l?.logic.assumeTrue||h?.logic.assumeFalse)break;h?.logic.track&&o.push(h.id)}}processDialog(e,x,t,s){this.addCheckFromFlags(e,[t],s.flags);let a={lossy:!0,unique:!0};switch(s.message.action){case 8:this.processKeyUse(e,[t]);break;case 20:this.addItemCheck(e,[t],this.rom.flags.SlimedKensu.id,a);break;case 16:this.addItemCheck(e,[t],this.rom.flags.AsinaInBackRoom.id,a);break;case 17:this.addItemCheck(e,[t],256|x.data[1],a);break;case 3:case 10:this.addItemCheck(e,[t],256|x.data[0],a);break;case 9:let n=x.data[1];n!==255&&this.addItemCheck(e,[t],256|n,a);break;case 25:this.addItemCheck(e,[t],this.rom.flags.AkahanaFluteOfLimeTradein.id,a);break;case 26:this.addItemCheck(e,[t],this.rom.flags.Rage.id,a);break;case 27:break}}processLocationItemUses(e){for(let[x,t]of this.itemUses.get(~e.id))this.processItemUse([this.entrance(e)],Q.OPEN,x,t)}handleMovingGuard(e,x,t){if(this.flagset.assumeStatueGlitch())return;let s=[];for(let a of x.spawns.slice(0,2))if(a.isNpc()&&this.rom.npcs[a.id].isParalyzable()){s.push([this.rom.flags.Paralysis.c]);break}this.flagset.assumeTriggerGlitch()&&s.push([this.rom.flags.TriggerSkip.c]),this.addTerrain(e,this.terrainFactory.statue([...t,...s].map(gt)))}handleBoat(e,x,t){let s=this.walkableNeighbor(e);if(s==null)throw new Error("Could not find walkable neighbor.");let a=e>>8&240|e>>4&15,n=e>>4&240|e&15,i;for(let l of x.exits)l.yt===a&&l.xt<n&&(i=l);if(!i)throw new Error("Could not find boat exit");let o=this.rom.locations[i.dest];if(!o)throw new Error("Bad destination");let d=o.entrances[i.entrance],c=R0.from(o,d),f=c;for(;;){f=R0.add(f,0,-1);let l=this.walkableNeighbor(f);if(l!=null){let h={enter:Q.freeze(t),exit:[[15,Q.OPEN]]};this.addTerrain([s],h),this.exits.set(s,l),this.exitSet.add(Ix.of(s,l)),this.exits.set(c,l),this.exitSet.add(Ix.of(c,l)),this.terrains.set(c,this.terrainFactory.tile(0));return}}}addItemGrantChecks(e,x,t){let s=this.itemGrant(t),a=256|s;if(s==null)throw new Error(`missing item grant for ${t.toString(16)}`);let n=t>=128;this.addItemCheck(e,x,a,{lossy:!0,unique:!0,preventLoss:n})}addTerrain(e,x){for(let t of e){let s=this.terrains.get(t);s!=null&&this.terrains.set(t,this.terrainFactory.meet(s,x))}}addCheck(e,x,t){if(Q.isClosed(x))return;let s={requirement:Q.freeze(x),checks:t};for(let a of e)!this.terrains.has(a)||this.checks.get(a).add(s)}addItemCheck(e,x,t,s){this.addCheck(e,x,[t]),this.slots.set(t,s);let a=this.rom.itemGets[this.rom.slots[t&255]],n=this.rom.items[a.itemId],i=n?.unique,o=a.isLosable(),d=i||n===this.rom.items.OpelStatue,c=1;n===this.rom.items.SwordOfWind&&(c=5),n===this.rom.items.SwordOfFire&&(c=5),n===this.rom.items.SwordOfWater&&(c=10),n===this.rom.items.SwordOfThunder&&(c=15),n===this.rom.items.Flight&&(c=15),this.items.set(512|a.id,{unique:i,losable:o,preventLoss:d,weight:c})}addCheckFromFlags(e,x,t){let s=[];for(let a of t){let n=this.flag(a);n?.logic.track&&s.push(n.id)}s.length&&this.addCheck(e,x,s)}walkableNeighbor(e){if(this.isWalkable(e))return e;for(let x of[-1,1]){let t=R0.add(e,x,0),s=R0.add(e,0,x);if(this.isWalkable(t))return t;if(this.isWalkable(s))return s}}isWalkable(e){return!(this.getEffects(e)&M0.BITS)}ensurePassable(e){return this.isWalkable(e)?e:this.walkableNeighbor(e)??e}getEffects(e){let x=this.rom.locations[e>>>16],t=this.rom.tileEffects[x.tileEffects-179].effects,s=x.screens[(e&61440)>>>12][(e&3840)>>>8];return t[this.rom.screens[s].tiles[e&255]]}processBoss(e,x){let{bosses:t}=this.rom,{Rage:s,StatueOfSun:a,StatueOfMoon:n}=t,i=x.id===201,o=x.id===202,d=x.id===195,c=d?s:i?n:o?a:t.fromLocation(e.id),f=R0.from(e,x);if(!c||!c.flag)throw new Error(`Bad boss at ${e.name}`);let l=f&-256,h=this.terrainFactory.boss(c.flag.id,d),b=O(240,u=>l|u);this.addTerrain(b,h),!i&&!o&&this.addBossCheck(b,c)}addBossCheck(e,x,t=Q.OPEN){if(x.flag==null)throw new Error(`Expected a flag: ${x}`);let s=Q.meet(t,this.bossRequirements(x));x===this.rom.bosses.Draygon2?this.addCheck(e,s,[x.flag.id]):this.addItemCheck(e,s,x.flag.id,{lossy:!1,unique:!0})}processChest(e,x){if(this.rom.slots[x.id]>=112)return;let t=256|x.id,s=this.rom.slots[x.id];if(s>=112)return;let a=this.rom.items[s],n=this.flagset.preserveUniqueChecks()?!!a?.unique:!0;this.addItemCheck([R0.from(e,x)],Q.OPEN,t,{lossy:!1,unique:n})}processMonster(e,x){let t=this.rom.objects[x.monsterId];if(!(t instanceof R))return;let{Money:s,RageSkip:a,Sword:n,SwordOfWind:i,SwordOfFire:o,SwordOfWater:d,SwordOfThunder:c}=this.rom.flags;if(e.id===this.limeTreeEntranceLocation&&t.isBird()&&this.flagset.assumeRageSkip()&&this.addCheck([this.entrance(e)],Q.OPEN,[a.id]),!t.goldDrop)return;let f=[R0.from(e,x)];if(!this.flagset.guaranteeMatchingSword()){this.addCheck(f,n.r,[s.id]);return}let l=[i,o,d,c].filter((h,b)=>t.elements&1<<b);this.addCheck(f,E6(...l),[s.id])}processItemUse(e,x,t,s){e=new Set([...e].map(i=>this.walkableNeighbor(i)??i));let a=[[512|t.id]];t.itemUseData.some(i=>i.tradeNpc()===this.rom.npcs.Aryllis.id)&&a[0].push(this.rom.flags.Change.c),t===this.rom.items.MedicalHerb&&(a[0][0]=this.rom.flags.BuyHealing.c);let n=Q.meet(x,a);switch(this.addCheckFromFlags(e,n,s.flags),s.message.action){case 16:this.processKeyUse(e,n);break;case 8:case 11:case 12:case 13:case 15:case 28:this.addItemGrantChecks(e,n,t.id);break;case 2:this.addItemCheck(e,n,256|this.rom.npcs[s.want&255].data[1],{lossy:!0,unique:!0});break}}processKeyUse(e,x){let[t,...s]=new Set([...e].map(i=>le.from(i)));if(t==null||s.length)throw new Error("Expected one screen");let n=this.rom.locations[t>>>8].flags.find(i=>i.screen===(t&255));if(n==null)throw new Error("Expected flag on screen");this.addCheck(e,x,[n.flag])}bossRequirements(e){if(e===this.rom.bosses.Rage)return this.tracker&&this.flagset.randomizeTrades()?this.rom.flags.Sword.r:[[this.rom.npcs.Rage.dialog()[0].condition]];let x=e.object,t=new Q.Builder;if(this.tracker&&this.flagset.shuffleBossElements()||!this.flagset.guaranteeMatchingSword())t.addAll(this.rom.flags.Sword.r);else{let a=this.flagset.guaranteeSwordMagic()?e.swordLevel:1,n=this.rom.objects[x];for(let i=0;i<4;i++)n.isVulnerable(i)&&t.addAll(this.swordRequirement(i,a))}let s=[];if(e.npc!=null&&e.location!=null){let a=e.npc.spawns(this.rom.locations[e.location]);s.push(...this.filterRequirements(a)[0])}return e===this.rom.bosses.Insect?s.push(this.rom.flags.InsectFlute.c,this.rom.flags.GasMask.c):e===this.rom.bosses.Draygon2&&s.push(this.rom.flags.BowOfTruth.c),this.flagset.guaranteeRefresh()&&s.push(this.rom.flags.Refresh.c),t.restrict([s]),Q.freeze(t)}swordRequirement(e,x){let t=[this.rom.flags.SwordOfWind,this.rom.flags.SwordOfFire,this.rom.flags.SwordOfWater,this.rom.flags.SwordOfThunder][e];if(x===1)return t.r;let s=[[this.rom.flags.BallOfWind,this.rom.flags.TornadoBracelet],[this.rom.flags.BallOfFire,this.rom.flags.FlameBracelet],[this.rom.flags.BallOfWater,this.rom.flags.BlizzardBracelet],[this.rom.flags.BallOfThunder,this.rom.flags.StormBracelet]][e];return x===3?q6(t,...s):s.map(a=>[t.c,a.c])}itemGrant(e){for(let[x,t]of this.rom.itemGets.actionGrants)if(x===e)return t;throw new Error(`Could not find item grant ${e.toString(16)}`)}filterRequirements(e){let x=[];for(let t of e)if(t<0){if(this.flag(~t)?.logic?.assumeTrue)return Q.CLOSED}else{let s=this.flag(t);if(s?.logic.assumeFalse)return Q.CLOSED;s?.logic.track&&x.push(s.id)}return[x]}filterAntiRequirements(e){let x=[];for(let t of e)if(t>=0){if(this.flag(~t)?.logic?.assumeFalse)return Q.OPEN}else{let s=this.flag(~t);if(s?.logic.assumeTrue)return Q.OPEN;s?.logic.track&&x.push([s.id])}return x}flag(e){let x=e,t=this.rom.flags[x];return this.aliases.get(t)??t}entrance(e,x=0){return typeof e=="number"&&(e=this.rom.locations[e]),this.tiles.find(R0.from(e,e.entrances[x]))}wallCapability(e){switch(e){case 0:return this.rom.flags.BreakStone.id;case 1:return this.rom.flags.BreakIce.id;case 2:return this.rom.flags.FormBridge.id;case 3:return this.rom.flags.BreakIron.id;default:throw new Error(`bad wall type: ${e}`)}}};function q6(...r){return[r.map(e=>e.id)]}function E6(...r){return r.map(e=>[e.id])}var $n=!1;function qn(r){if(!r.compressedMapData){r.compressedMapData=!0;for(let e=0;e<3;e++)r.metascreens.renumber(256|e,320|e),delete r.screens[256|e]}}function Wn(r){if(!r.compressedMapData)throw new Error("Must compress first");let{grass:e,town:x,cave:t,dolphinCave:s,pyramid:a,river:n,sea:i,lime:o,mountain:d,shrine:c,desert:f,mountainRiver:l,swamp:h,house:b,fortress:u,labyrinth:S,iceCave:m,tower:p}=r.metatilesets;r.moveScreens([h],4),r.moveScreens([b],4),r.moveScreens([x],4),r.moveScreens([o],4),r.moveScreens([c],4),r.moveScreens([p],4),r.moveScreens([d,l],4),r.moveScreens([t,a,u,S,m],5);let[]=[i,s,e,n,f]}var[]=[N6];function zn(r,e){let n=r.objects[159],i=r.objects[127],o=r.objects[141];o.used=!0,o.name="Crumbling Horizontal Platform",o.sfx=n.sfx,n.data.forEach((f,l)=>o.data[l]=f),o.data[3]=i.data[3];let d=new Set([127-80,141-80]),c=new Set([126-80,159-80]);for(let f of r.locations){if(!f.pits.length)continue;let l=e.nextInt(3)<1;for(let h of f.spawns)!h.isMonster()||(c.has(h.id)&&(h.id=(l?159:126)-80),d.has(h.id)&&(h.id=(l?141:127)-80))}}var[]=[A];function Zx(r,e,...x){let t=e,s=0,a;for(;(a=x[s++])!=null;)if(typeof a=="number")r[t++]=a;else if(typeof a=="string")for(let n of a)r[t++]=n.charCodeAt(0);else throw new Error("bad data")}function Hn(r){r[107924]=255,r[118213]=168,r[106870]=255,r[108620]=255,r[120899]=160,r[122987]&=7,r[122991]&=7,r[122995]&=7,r[122999]&=7,r[123003]&=7,r[123012]&=7,r[123035]&=7,r[123065]&=7,r[123141]=47,r[123511]=0,r[123750]=64,r[123761]=0,r[123783]=0,r[123793]=0,Zx(r,106856,51,51),Zx(r,107662,51,51),r[105393]=112,r[105397]=113,r[105079]=114,r[105963]=115,r[106565]=116,r[106721]=117,r[106725]=118,r[106729]=119,r[108037]=120,r[107457]=121,r[107461]=122,r[107465]=123,Zx(r,123063,192,0),Zx(r,123690,192,0),Zx(r,123696,192,0),Zx(r,123702,192,0),Zx(r,123104,192,0),Zx(r,123110,192,0),r[116739]=0,Zx(r,116749,162,179),r[109190]=254,Zx(r,513749,37,41,57,58,59,71,60,62,132,70,178,66,180,65,255);for(let e of[231255,231287,231291,231319,231323,231387,231391,231419,231423,231451,231455,231525,231557,231561,231589])r[e]|=1;Zx(r,157038,"Simea",16,0,"     ",16,0)}function Un(r,e){ec(r),B2(r),L2(r),A2(r),P2(r,e),fc(r),lc(r),cc(r),N2(r),F2(r),O2(r),_2(r),J2(r),q2(r),nc(r,e),ac(r),e.requireHealedDolphinToRide()&&H2(r),e.saharaRabbitsRequireTelepathy()&&U2(r),V2(r,e),W2(r,e),z2(r),e.teleportOnThunderSword()?(K2(r),r.townWarp.thunderSwordWarp=[r.locations.Shyron.id,65]):j2(r),G2(r),e.fogLampNotRequired()&&$2(r,e),tc(r),sc(r),X2(r),Y2(r,e),e.disableRabbitSkip()&&Q2(r),e.disableFlightStatueSkip()&&Z2(r),rc(r,e),D2(r),e.chargeShotsOnly()&&ic(r),e.orbsOptional()&&oc(r),e.noBowMode()&&dc(r),xc(r),e.hardcoreMode()&&hc(r),e.shouldUpdateHud()&&(I2(r),r.writeMonsterNames=!0),e.shouldColorSwordElements()&&C2(r),e.hasStatTracking()&&M2(r)}function M2(r){for(let w=0;w<4;w++)r.patterns.set(5376,41+w,O0.BLANK_TILES[w]);if(r.prg[143082]===40)return;r.prg[143082]=40;let t=143364,s=144132,a=128-1;for(let w=t;w<s;w++)r.prg[w]>=41&&r.prg[w]<=45&&(r.prg[w]+=a);let n=42,i=160;for(let w=t;w<s;w+=192)r.prg[w+i]=n;let o=new Map([[66,i]]),d=142469,c=142546;for(let w=d;w<c;w++)o.has(r.prg[w])&&(r.prg[w]=o.get(r.prg[w]));for(let w=t;w<s;w+=192)for(let M=123;M<=127;M++)r.prg[w+M]==n+a&&(r.prg[w+M]=n);let f=3,l=2,h=144376,b=144440;for(let w=h;w<b;w++){let M=r.prg[w];for(let I=0;I<8;I+=2){let P=f<<I,k=l<<I;(M&P)==P&&(M=M&(255^3<<I)|k)}r.prg[w]=M}let u=144440,S=4*f,m=[15,48,15,17];for(let w=0;w<m.length;w++)r.prg[u+S+w]=m[w];r.prg[u+l*4+3]=8;let p=145114,g=145222;for(let w=p;w<g;w+=4)r.prg[w]+=128}function C2(r){function e(x,t){for(let s=0;s<=10;s++){if(s===8)continue;let a=r.patterns.get(s|x),n=[...a.pixels];for(let i=0;i<a.pixels.length;i++)a.pixels[i]=n[i^8],i>>>3===t&&(a.pixels[i]|=n[i])}}e(4240),e(4304),e(4368),e(4432),e(4496)}function I2(r){r.patterns.set(3584,0,O0.HUD_LF),r.patterns.set(3584,1,O0.HUD_PW),r.patterns.set(3584,2,O0.HUD_EY),r.patterns.set(3584,3,O0.HUD_LV),r.patterns.set(3584,4,O0.HUD_DL),r.patterns.set(3584,5,O0.HUD_MP),r.patterns.set(3584,6,O0.HUD_EX),r.patterns.set(3584,26,O0.HUD_CLOSE_LEFT),r.patterns.set(3584,27,O0.HUD_CLOSE_RIGHT)}function L2(r){r.items.GlowingLamp.itemUseData[0].message.action=11}function A2(r){let e=r.nextFreeTrigger("mezame");e.used=!0,e.conditions=[~r.flags.AlwaysTrue.id],e.message=W0.of({action:4}),e.flags=[r.flags.AlwaysTrue.id],r.locations.MezameShrine.spawns.push(v0.of({tile:136,type:2,id:e.id}))}function B2(r){let e=new Set([129,139,144,153,166,167,168,169,170,171,172,r.allocatedTriggers.get("zombie warp")]);for(let x of r.locations)!x.used||(x.spawns=x.spawns.filter(t=>!t.isTrigger()||!e.has(t.id)))}function P2(r,e){if(r.objects[16].atk=3,r.objects[17].atk=6,r.objects[18].atk=8,r.objects[24].atk=3,r.objects[19].atk=5,r.objects[25].atk=5,r.objects[23].atk=7,r.objects[26].atk=7,r.objects[20].atk=3,r.objects[21].atk=6,r.objects[22].atk=8,r.objects[28].atk=3,r.objects[29].atk=3,r.objects[30].atk=5,r.objects[27].atk=7,r.objects[31].atk=7,e.slowDownTornado()){let x=r.objects[18];x.speed=7,x.data[12]=96}}function _2(r){let e=r.trigger(160);e.used=!0,e.conditions=[],e.flags=[],e.message=W0.of({part:0,index:0,action:21}),r.objects[94].data[13]=254,r.items.InsectFlute.itemUseData[0].flags=[r.flags.UsedInsectFlute.id]}function N2(r){r.items.OpelStatue.selectedItemValue=0}function F2(r){for(let e of[96,100,101,102,103,104,105,106,107,108,109,111])for(let x of[0,1,2])r.patterns.set(e<<6,x,r.patterns.get(94<<6,x).pixels);r.objects[12].metasprite=169}function D2(r){for(let e in[4,5,8,9])r.tileEffects[188-179].effects[e]=24,r.tileEffects[181-179].effects[e]=24}function G2(r){let{tiles:e}=r.screens[161];e[40]=159,e[55]=35,e[56]=35,e[57]=33,e[71]=141,e[72]=143,e[86]=153,e[87]=154,e[88]=140}function $2(r,e){let{flags:{AlwaysTrue:x,InjuredDolphin:t,FogLamp:s,KensuInCabin:a,ReturnedFogLamp:n},items:{ShellFlute:i},locations:{BoatHouse:o,Portoa_FishermanHouse:d},npcs:c}=r,f=e.requireHealedDolphinToRide();i.itemUseData[0].want=f?t.id:x.id,c.KensuInCabin.data[0]=103,c.KensuInCabin.localDialogs.get(-1)[0].message.action=10,c.KensuInCabin.localDialogs.get(-1)[0].flags=[],c.KensuInCabin.spawnConditions.set(o.id,[n.id,~a.id]),c.Fisherman.spawnConditions.set(d.id,[s.id]),r.itemGets[100].flags=[],r.itemGets[103].copyFrom(r.itemGets[100])}function O2(r){for(let e of r.locations)for(let x of e.spawns)x.isChest()&&(x.timed=!1)}function q2(r){let e=r.locations;e.GoaFortress_Kelbesque.spawns[0].x-=16,e.GoaFortress_Zebu.spawns.splice(1,1),e.GoaFortress_Tornel.spawns.splice(2,1),e.GoaFortress_Asina.spawns.splice(2,1),e.GoaFortress_Kensu.spawns.splice(3,1),e.GoaFortress_Kensu.spawns.splice(1,1)}function W2(r,e){let{items:{AlarmFlute:x},flags:{TalkedToZebuStudent:t,ZebuStudent:s},locations:{MezameShrine:a,Leaf_StudentHouse:n,WaterfallCave4:i,ZebuCave:o},npcs:{WindmillGuard:d,Zebu:c}}=r;if(r.itemGets[49].inventoryRowStart=32,x.unique=!0,x.basePrice=0,e.zebuStudentGivesItem())d.data[1]=49;else{d.data[1]=255;let h=d.dialog(n)[0];h.condition=~t.id,h.flags.push(t.id),Kn(c.spawns(o),s.id,t.id),a.spawns.push(v0.of({screen:0,tile:155,type:2,id:49})),a.spawns.push(v0.of({screen:0,tile:149,type:2,id:73})),r.itemGets[73].itemId=r.items.MedicalHerb.id}let f=[[33,.72],[31,.9]],l=0;for(let h of r.shops)if(h.type===1)for(let b=0,u=h.contents.length;b<u;b++){if(h.contents[b]!==49)continue;let[S,m]=f[l++%f.length];h.contents[b]=S,r.shopDataTablesAddress&&(h.prices[b]=Math.round(h.prices[b]*m))}r.itemGets[91].itemId=29,i.spawn(25).id=16}function z2(r){let{flags:{Karmine:e,Mado1:x},npcs:{Brokahana:t}}=r,s=ja(t.localDialogs.get(-1))[0];if(s.condition!==~e.id)throw new Error(`Bad brokahana condition: ${s.condition}`);s.condition=~x.id}function H2(r){let{flags:{InjuredDolphin:e,ShellFlute:x},npcs:{Fisherman:t,FishermanDaughter:s}}=r;t.spawnConditions.set(214,[x.id,e.id]);let a=s.localDialogs.get(-1);a.unshift(a[0].clone()),a[0].condition=~e.id,a[1].condition=~x.id}function U2(r){let{flags:{Telepathy:e},npcs:{Deo:x,SaharaBunny:t}}=r;t.globalDialogs.push(w6.of(~e.id,[26,18])),x.globalDialogs.push(w6.of(~e.id,[26,19]))}function K2(r){let{flags:{WarpShyron:e}}=r;r.itemGets[3].flags.push(e.id)}function j2(r){r.itemGets[3].acquisitionAction.action=22}function V2(r,e){if(e.leatherBootsGiveSpeed()){let x=r.items[47];if(x.menuName="Speed Boots",x.messageName="Speed Boots",e.changeGasMaskToHazmatSuit()){let t=r.items[41];t.menuName="Hazmat Suit",t.messageName="Hazmat Suit"}}for(let x=5;x<12;x+=2)r.items[x].menuName=r.items[x].menuName.replace("Ball","Orb"),r.items[x].messageName=r.items[x].messageName.replace("Ball","Orb")}function J2(r){let{flags:{BallOfWind:e,TornadoBracelet:x},npcs:{Tornel:t}}=r,s=t.localDialogs.get(33),a=[s[0],s[2],s[2].clone(),s[1]];a[1].condition=~x.id,a[2].condition=~e.id,a[3].condition=-1,t.localDialogs.set(33,a)}function X2(r){let{CordelPlainEast:e,KirisaMeadow:x,UndergroundChannel:t}=r.locations;for(let s of[e,x,t])for(let a of s.spawns)a.isChest()&&(a.data[2]|=32)}function Y2(r,e){let{CordelPlainEast:x,CordelPlainWest:t}=r.locations;for(let s of x.spawns)(s.isChest()||e.disableTeleportSkip()&&s.isTrigger())&&t.spawns.push(s.clone())}function Q2(r){for(let e of r.locations.MtSabreNorth_Main.spawns)e.isTrigger()&&e.id===134&&e.x===1856&&(e.x+=16,e.y+=16)}function Z2(r){let e=r.hitboxes[r.objects.guardianStatueMissile.hitbox],x=r.hitboxes[6];r.objects.guardianStatueMissile.hitbox=x.id,x.x0=e.x0-6,x.w=e.w+12,x.y0=e.y0-2,x.h=e.h+4}function xc(r){r.messages.parts[32][15].text+=`
Item: [:ITEM:]`}function ec(r){let{flags:{WarpZombie:e},locations:{ZombieTown:x}}=r;r.flags.insertZombieWarpFlag();let t=r.messages.parts[33][0];t.text=[" {1a:Leaf}      {16:Brynmaer} {1d:Oak} ","{0c:Nadare}'s  {1e:Portoa}   {14:Amazones} ","{19:Joel}      Zombie   {20:Swan} ","{23:Shyron}    {18:Goa}      {21:Sahara}"].join(`
`);let s=r.nextFreeTrigger("zombie warp");s.used=!0,s.conditions=[],s.message=W0.of({}),s.flags=[e.id];for(let a of x.spawns)a.isTrigger()&&a.id===138&&(a.id=s.id);if(r.townWarp.locations.splice(7,0,x.id),r.townWarp.locations.pop()!==255)throw new Error("unexpected")}function tc(r){r.trigger(138).conditions=[~r.flags.CurrentlyRidingDolphin.id],r.messages.parts[29][16].text=`The cave entrance appears
to be underwater. You'll
need to swim.`}function sc(r){let e=r.nextFreeTrigger("channel item");e.used=!0,e.conditions=[r.flags.CurrentlyRidingDolphin.id,~r.flags.UndergroundChannelUnderwaterChest.id];let x=r.messages.alloc();x.text="Dolphin: {:HERO:}, I just found a [3b:Love Pendant] under the water!",e.message=W0.of({part:x.part,index:x.id,action:15});let t=r.locations.UndergroundChannel.spawns.find(s=>s.isChest());t.data[2]=2,t.yt++,t.id=e.id,r.itemGets.actionGrants.set(e.id,59)}function ac(r){let x=r.npcs[13].localDialogs.get(53)[0];x.message.action=23}function rc(r,e){let x=r.locations.LimeTreeLake,t=r.screens[r.metascreens.limeTreeLake.sid];if(e.disableRageSkip()){t.set2d(32,t.get2d(0,143)),t.set2d(42,t.get2d(58,1)),t.set2d(16,t.get2d(32,4)),t.set2d(26,t.get2d(42,5)),t.set2d(27,t.get2d(0,16));for(let a of x.spawns)a.tile+=32;let s=r.metascreens.limeTreeLake.findExitByType("cave");s.entrance+=8192,s.exits=s.exits.map(a=>a+32)}else t.set2d(144,[[118,118,118,118,119,120,null,null,null,null,121,122,118,118,118,118],[118,118,119,120,null,null,null,null,null,null,null,null,121,122,118,118]])}function nc(r,e){function x(x0,f0){let B=x0.indexOf(f0);if(B<0)throw new Error(`Could not find element ${f0} in ${x0}`);x0.splice(B,1)}function t(x0,f0){let B=x0.findIndex(f0);if(B<0)throw new Error(`Could not find element in ${x0}`);x0.splice(B,1)}let{locations:{BoatHouse:s,Brynmaer:a,Crypt_Draygon2:n,Joel_Shed:i,Leaf_ElderHouse:o,MtSabreNorth_SummitCave:d,MtSabreWest_Upper:c,PortoaPalace_ThroneRoom:f,Portoa_PalaceEntrance:l,Portoa_AsinaRoom:h,Portoa_FortuneTeller:b,Shyron_Temple:u,StomHouse:S,Swan_DanceHall:m,Swan_Tavern:p,WindmillCave:g,WaterfallCave4:w,WaterfallValleyNorth:M,ZebuCave:I,ZombieTown_HouseBasement:P},items:{GlowingLamp:k,KeyToPrison:N,LovePendant:D,StatueOfOnyx:e0},npcs:{Akahana:i0,AkahanaInBrynmaer:p0,Asina:F0,AztecaInShyron:g0,Clark:D0,Draygon:Z,FortuneTeller:K,Kensu:U0,KensuInCabin:Tx,KensuInSwan:S0,LeafElder:Z0,LeafRabbit:V0,OakChild:gx,OakElder:qx,OakMother:lx,PortoaPalaceFrontGuard:Ex,PortoaQueen:H0,PortoaThroneRoomBackDoorGuard:f6,Rage:yx,Stom:Px,StonedAkahana:Lx,Tornel:e6,WindmillGuard:M6,Zebu:t0},flags:C}=r;U0.localDialogs.delete(p.id),S0.link(U0.id),S0.used=!0,S0.data=[...U0.data],U0.data[0]=k.id,m.spawns.find(x0=>x0.isNpc()&&x0.id===U0.id).id=S0.id,D.itemUseData[0].want=256|S0.id,Lx.linkDialog(i0.id),p0.used=!0,p0.link(i0.id),p0.data=[...i0.data],a.spawns.find(x0=>x0.isNpc()&&x0.id===i0.id).id=p0.id,e0.itemUseData[0].want=256|p0.id,Z0.dialog(o).splice(0,0,...Z0.dialog(o).splice(2,1)),V0.dialog()[2].condition=C.RescuedLeafElder.id,V0.dialog()[2].flags.push(C.TalkedToLeafRabbit.id),V0.dialog()[3].flags.push(C.TalkedToLeafRabbit.id),M6.spawns(g)[1]=~C.WindmillGuardAlarmFluteTradein.id,x(i0.spawns(w),~C.BehindWhirlpool.id),x(Lx.spawns(w),~C.BehindWhirlpool.id);function z(x0){x0.reverse();for(let f0=0;f0<x0.length;f0++){let B=x0[f0+1];x0[f0].condition=B?~B.condition:-1}}for(let x0=0;x0<4;x0++){let f0=qx.dialog()[x0];f0.condition!==r.flags.OakElder.id&&(f0.message.action=3)}(()=>{let[x0,f0,B,u0]=lx.dialog();u0.condition=~C.RescuedChild.id,f0.condition=-1,lx.dialog().splice(0,4,u0,B,x0,f0)})();for(let x0 of[32,33,34,124,125])z(r.npcs[x0].dialog());gx.dialog().unshift(...gx.dialog().splice(1,1)),f6.spawnConditions.set(f.id,[~C.QueenNotInThroneRoom.id,~C.MesiaRecording.id]),Ex.dialog()[1].condition=C.MesiaRecording.id,H0.dialog()[3].condition=C.SwordOfWater.id,H0.dialog()[3].message.action=3,H0.dialog()[4].flags.push(C.PortoaQueenGoingAway.id),H0.spawns(f)[1]=~C.MesiaRecording.id,H0.spawns(h)[0]=C.MesiaRecording.id,H0.dialog()[1].condition=C.MesiaRecording.id,K.spawns(b)[1]=~C.MesiaRecording.id,D0.spawnConditions.set(P.id,[~C.Clark.id]),D0.spawnConditions.set(i.id,[C.Clark.id]),t0.localDialogs.set(I.id,[mx.of(~C.TalkedToZebuInCave.id,[0,26],[C.TalkedToZebuInCave.id]),mx.of(C.LeafVillagersRescued.id,[0,29]),mx.of(C.LeafAbduction.id,[0,28]),mx.of(C.ZebuAtWindmill.id,[0,29]),mx.of(C.UsedWindmillKey.id,[0,27,3]),mx.of(-1,[0,29])]),x(t0.spawns(I),~C.BehindWhirlpool.id),e6.spawnConditions.delete(c.id),Px.spawnConditions.delete(S.id),x(F0.spawns(h),~C.CalmedAngrySea.id);let r0=r.npcs[52];r0.spawnConditions.set(f.id,[C.MesiaRecording.id,~C.PortoaQueen.id]),r0.localDialogs.set(l.id,r0.localDialogs.get(-1)),r0.data[0]=r.items.FluteOfLime.id;let y0=r.messages.alloc();y0.text="The queen left this for you.",r0.localDialogs.set(f.id,[mx.of(~C.PortoaQueen.id,[y0.part,y0.id,3]),mx.of(-1,[10,14])]),f.spawns.push(v0.of({yt:3,xt:12,type:1,patternBank:1,id:r0.id})),H0.localDialogs.set(h.id,H0.dialog().splice(0,2)),H0.localDialogs.set(f.id,H0.dialog()),H0.localDialogs.delete(-1),Tx.spawnConditions.set(s.id,[~C.AbleToRideDolphin.id,C.ReturnedFogLamp.id]),Tx.dialog()[0].message.action=2,g0.spawns(u).push(~C.ShyronMassacre.id),r.trigger(130).conditions.push(~C.ShyronMassacre.id),yx.dialog()[0].condition=C.SwordOfWater.id,Z.spawnConditions.set(n.id,[~C.Draygon2.id]),t0.dialog(u).unshift(...t0.dialog(u).splice(1,1)),r.trigger(128).conditions=[~C.ShyronMassacre.id,C.TalkedToZebuInShyron.id,C.SwordOfThunder.id],r.trigger(129).conditions=[],e.barrierRequiresCalmSea()&&r.trigger(132).conditions.push(C.CalmedAngrySea.id),r.trigger(140).conditions.push(C.TalkedToZebuInCave.id),r.trigger(141).used=!1;for(let x0 of d.spawns)x0.isTrigger()&&x0.id===141&&(x0.id=178);t(M.spawns,x0=>x0.isTrigger()&&x0.id===141),r.trigger(178).conditions.push(C.Kelbesque1.id),r.trigger(178).flags.push(~C.LeafVillagersCurrentlyAbducted.id,~C.LeafElderCurrentlyAbducted.id,C.LeafVillagersRescued.id),r.trigger(140).conditions.push(~C.Kelbesque1.id),r.trigger(134).conditions.push(~C.Kelbesque1.id),x(N.itemUseData[0].flags,~C.LeafVillagersCurrentlyAbducted.id),Kn(r.trigger(187).conditions,~C.Rage.id,~C.MesiaRecording.id)}function ic(r){for(let e of[8,9,39])r.objects[e].collisionPlane=0;r.npcs.Brokahana.data[0]=r.items.FruitOfLime.id}function oc(r){for(let e of[16,20,24,29])r.objects[e].terrainSusceptibility&=-5,r.objects[e].level=2}function dc(r){let{flags:{UsedBowOfTruth:e},locations:{Crypt_Draygon2:x,MezameShrine:t}}=r,s;for(let a of t.spawns)a.isTrigger()&&a.tile===136&&(s=r.trigger(a.id));if(!s)throw new Error("Could not find start trigger");s.flags.push(e.id),r.tileEffects[185-179].effects[88]=0,t.meta.setExit(0,"door",[x.meta.id<<8|16,"edge:bottom"])}function cc(r){r.objects[51].elements=15}function fc(r){r.tileEffects[181-179].effects[116]=6,r.tileEffects[182-179].effects[70]=6}function lc(r){for(let e of r.objects)e instanceof R&&(e.isProjectile()||e.isBoss()||e.isFlyer()||e!==r.objects.mimic&&(e.terrainSusceptibility|=3))}function Kn(r,e,x){for(let t=0;t<r.length;t++)if(r[t]===e){r[t]=x;return}throw new Error(`Could not find ${e} in ${r.join(",")}`)}function hc(r){for(let e of r.locations)e.checkpoint=e.saveable=!1}function jn(r,e,x){if(!e.randomizeTrades())return;let{items:{StatueOfOnyx:t,FogLamp:s,LovePendant:a,KirisaPlant:n,IvoryStatue:i},locations:{Swan_DanceHall:o,PortoaPalace_ThroneRoom:d},npcs:{KensuInSwan:c}}=r,f=new Map,l=[[t,0,"Akahana"],[s,0,"Fisherman"],[a,0,"Kensu"],[n,0,"Aryllis"],[i,0,"Slimed Kensu"]],h=l.map(([S,m,p])=>{if(S.trades.indexOf(m)<0||m>=S.itemUseData.length)throw new Error(`not a trade: ${S} ${m}`);return[S.itemUseData[m],S.id,p]});x.shuffle(h);for(let[S,m]of l){let[p,g,w]=h.pop();S.itemUseData[m]=p,r.spoiler&&r.spoiler.addTrade(S.id,S.messageName,w),p.want===356&&e.fogLampNotRequired()&&([...r.npcs[100].spawnConditions.values()][0][0]=512|S.id),f.set(g,S.id)}r.itemGets.actionGrants=new Map([...r.itemGets.actionGrants].map(([S,m])=>[f.get(S)??S,m]));let b=r.items[x.nextInt(4)];r.npcs[195].localDialogs.get(-1)[0].condition=512|b.id,r.spoiler&&r.spoiler.addTrade(b.id,b.messageName,"Rage"),r.npcs.PortoaQueen.dialog(d)[1].condition=512|b.id;let u=r.items[x.nextInt(4)*2+6];for(let S of r.npcs[95].localDialogs.values())for(let m=2;m<S.length;m++)if(S[m].message.action===3){S[m-2].condition=~(512|u.id-1),S[m-1].condition=~(512|u.id),r.spoiler&&r.spoiler.addTrade(u.id,u.messageName,"Tornel");break}c.dialog(o)[0].message.mid="13:00"}function Vn(r){let e=new Map;for(let x of r.items)for(let t of x.trades)e.set(x.itemUseData[t].want&255,x.id);return e}function Xn(r){let{flags:{AkahanaStatueOfOnyxTradein:e,AsinaInBackRoom:x,BehindWhirlpool:t,KensuInSwan:s,MtSabreNorthSummit:a,MtSabreWestTornel:n,PortoaQueen:i,Rage:o,RepairedStatue:d,SlimedKensu:c,StomFightReward:f,UndergroundChannelUnderwaterChest:l,ZebuAtWindmill:h},npcs:{AkahanaInBrynmaer:b,Aryllis:u,Fisherman:S,PortoaQueen:m},locations:{PortoaPalace_ThroneRoom:p}}=r;K("03:06",",","");let g=Vn(r);function w(S0){let Z0=g.get(S0.id);if(!Z0)throw new Error(`No trade-in for ${S0.name}`);return r.items[Z0]}h.item.isMagic()||D0("00:1b"),K("00:1b","[41:Refresh]",Z(h.item));let M=w(b);K("02:01","an unusual statue",Jn(M)),K("02:02","a statue",`the ${w7(M)}`),K("02:02","[29:Gas Mask]",Z(e)),f.item.isMagic()||D0("03:01"),K("03:01","[43:Telepathy]",Z(f));let I=mc(r);K("03:01","[06:Tornado Bracelet]",Z(I)),K("05:0a","[06:Tornado Bracelet]",Z(I)),K("05:0a","[44:Teleport]",Z(n));let P=w(S);K("09:01","[35:Fog Lamp]",Z(P)),K("09:04","[35:Fog Lamp]",Z(P)),K("09:05","[35:Fog Lamp]",Z(P)),K("09:06","lamp",w7(P));let k=m.dialog(p)[1].condition;K("0a:0c","[28:Flute of Lime]",Z(i)),K("0a:0d","[02:Sword of Water]",Z(k)),x.item.isMagic()||D0("0b:01"),K("0b:01","[45:Recover]",Z(x)),t.item.isMagic()||(D0("0b:01"),D0("1d:12")),K("0b:01","[46:Barrier]",Z(t)),K("1d:12","[46:Barrier]",Z(t));let N=U0(79,78,77,76,71,70,69,68,75,74,73,72);N?K("0d:00","[35:Fog Lamp]",Z(N)):K("0d:00","that a [35:Fog Lamp] was","there was treasure");let D=r.npcs.Rage.dialog()[0].condition;K("0e:03","[02:Sword of Water]",Z(D)),K("0e:03","[09:Ball of Water]",Z(o)),K("10:0c","that's","is"),K("10:0c",/, is in the\+lighthouse/,"");let e0=w(u);K("12:05","[3c:Kirisa Plant]",Z(e0)),K("12:10","the plant",`the ${w7(e0)}`),K("12:10","[3c:Kirisa Plant]",Z(e0));let i0=`Our illustrious chief seeks ${Jn(e0)}.`;K("12:09",/[^]*/,i0),K("12:0a",/[^]*/,i0);let p0=w(r.npcs.KensuInSwan);K("13:02","[3b:Love Pendant]",Z(p0)),K("13:00","pendant",w7(p0)),s.item.isMagic()||D0("13:02"),K("13:02","[47:Change]",Z(s));let F0=w(r.npcs.SlimedKensu);K("18:06","[3d:Ivory Statue]",Z(F0)),K("18:07","[3d:Ivory Statue]",Z(F0)),K("18:06","It's in a room","{0b:Karmine} is"),c.item.isMagic()||K("18:07","teach","give"),K("18:07","[48:Flight]",Z(c)),a.item.isMagic()||D0("1c:10"),K("1c:10","[42:Paralysis]",Z(a)),K("20:06","Statue of Gold",Z(d));let g0=r.allocatedTriggers.get("channel item");g0!=null&&K(r.trigger(g0).message.mid,"[3b:Love Pendant]",Z(l));{let S0=r.messages.alloc();r.trigger(134).message.mid=S0.mid,S0.text="{:HERO:}, there's nothing to see here! Return to Zebu at once!",r.messages.parts[28][15].text="{:HERO:}, you cannot climb this yet! Seek out [44:Teleport] at once!"}function D0(S0){K(S0,/teach\s+you\s+the\s+magic\s+of/,"bestow upon you the")}function Z(S0){return typeof S0=="number"?S0=r.items[r.itemGets[S0&255].itemId]:S0 instanceof X||(S0=S0.item),`[${A(S0.id)}:${S0.messageName}]`}function K(S0,Z0,V0){let[gx,qx]=S0.split(":").map(Ex=>parseInt(Ex,16)),lx=r.messages.parts[gx][qx];lx.text=lx.text.replace(Z0,V0)}function U0(...S0){let Z0=[V0=>uc.has(V0),V0=>bc.has(V0),V0=>Tx(V0).unique];for(let V0 of Z0)for(let gx of S0){let lx=[...r.locations[gx].spawns].reverse();for(let Ex of lx){if(!Ex.isChest())continue;let H0=r.slots[Ex.id];if(H0<=72&&V0(H0))return r.items[H0]}}}function Tx(S0){let Z0=r.itemGets[S0];return r.items[Z0.itemId]}}var uc=new Set([62,63,64]),bc=new Set([0,1,2,3,65,66,67,68,69,70,71,72]);function mc(r){let{Tornel:e}=r.npcs;for(let x of e.localDialogs.values())for(let t=2;t<x.length;t++){let s=~x[t].condition;if(s>516&&s<=524&&!(s&1))return r.items[s&255]}return r.items.TornadoBracelet}function Jn(r){let e=r.rom.items;switch(r){case e.StatueOfOnyx:return"an unusual statue";case e.FluteOfLime:return"a rare instrument";case e.FogLamp:return"a brilliant lamp";case e.LovePendant:return"a beautiful charm";case e.KirisaPlant:return"a fragrant plant";case e.IvoryStatue:return"an exotic statue"}return Ss(),"a valuable item"}function w7(r){let e=r.rom.items;switch(r){case e.StatueOfOnyx:return"statue";case e.FluteOfLime:return"instrument";case e.FogLamp:return"lamp";case e.LovePendant:return"pendant";case e.KirisaPlant:return"plant";case e.IvoryStatue:return"statue"}return Ss(),"item"}function Qn(r){let{locations:{Portoa:e,PortoaPalace_ThroneRoom:x,Portoa_PalaceEntrance:t,UndergroundChannel:s,WaterfallCave2:a,WaterfallCave3:n}}=r;xa(t,"edge:bottom",183,e),xa(x,"door",146,s),xa(a,"stair:up",191,n),gc(r)}function xa(r,e,x,t){let[s,...a]=[...r.meta.exits()].filter(([,S])=>S===e);if(!s)throw new Error(`Could not find ${e} in ${r}`);if(a.length)throw new Error(`Ambiguous ${e} in ${r}`);let[n,i]=s[2],o=n>>>8;if(o===t.id)return;let d=n&255,c=r.rom.locations[o],l=c.meta.get(d).data.exits.find(S=>S.type===i);if(!l)throw new Error(`Bad entrance in ${c}`);let h=((l.entrance&61440)>>>8|(l.entrance&240)>>>4)+pc[l.dir];c.spawns.length>17&&c.spawns.pop();let b=t.spawns.findIndex(S=>S.isTrigger()&&S.id===x),u=b>=0?t.spawns.splice(b,1)[0]:v0.of({type:2,id:x});u.xt=(d&15)<<4|h&15,u.yt=d&240|h>>>4,c.spawns.push(u)}var pc=[16,0,0,0];function gc(r){let{locations:{MtSabreNorth_Main:e,ValleyOfWind:x}}=r;for(let t of Yn(x,17)){let s=r.locations[t>>>8],a=t&255;S7(s,a,r.flags.OpenedSealedCave)}for(let t of Yn(e,4)){let s=r.locations[t>>>8];if(s.data.fixed||s.spawns.length>15)continue;let a=t&255;S7(s,a,r.flags.OpenedPrison);let n=s.meta.get(a).findExitByType("cave").entrance,i=v0.of({screen:a,coord:n,type:2,id:173});if(s.spawns.push(i),s.spawns.length>15)continue;let o=v0.of({screen:a,coord:n-4112,type:4,id:44});s.spawns.splice(1,0,o)}}function Yn(r,e){let x=new Set([r,r.id<<8|e]),t=new Set;for(let a of r.meta.exits())a[0]===e&&(a[1]==="cave"||a[1]==="gate")&&t.add(a[2]);let s=[];for(let a of t){if(x.has(a[0]))continue;let n=r.rom.locations[a[0]>>>8],i=a[0]&255;if(!n.meta.customFlags.has(i)){if(a[1]==="cave"||a[1]==="gate"){let o=n.meta.get(i);o.flag==="custom:true"?s.push(a[0]):console.error(`No flag for ${o.name}`);continue}if(!x.has(n)){x.add(n);for(let o of n.meta.exits())o[1]==="cave"||o[1]==="gate"||t.add(o[2])}}}return console.log(`From ${r}: ${s.map(a=>a.toString(16))}`),s}function S7(r,e,x,t){x?r.meta.customFlags.set(e,x):r.meta.customFlags.delete(e),!t&&(r===r.rom.locations.CordelPlainEast?S7(r.rom.locations.CordelPlainWest,e,x,!0):r===r.rom.locations.CordelPlainWest&&S7(r.rom.locations.CordelPlainEast,e,x,!0))}function Zn(r){yc(r)}function yc(r){let{locations:{AngrySea:e},npcs:{Dolphin:x},metascreens:{beachCabinEntrance:t,beachCave:s,beachExitN:a,boatChannel:n}}=r;x.spawnScripts=[];let i=new Set(O(16,o=>o));for(let o=0;o<e.entrances.length;o++){let d=e.entrances[o],c=e.meta.get(d.screen),f;if(c===n){if(e.meta.get(d.screen-1)!==t)throw new Error(`Bad boatChannel entrance ${d}`);d=ix.of({screen:d.screen-1,tile:0}),c=t}c===t?f={entrance:ix.of({screen:d.screen-17,coord:47336}),movement:5}:c===s?f={entrance:ix.of({screen:d.screen,coord:59400}),movement:8}:c===a&&(f={entrance:ix.of({screen:d.screen,coord:55544}),movement:9}),f&&(i.delete(o),x.spawnScripts[o]=f)}[x.channelSpawn,x.evilSpiritIslandSpawn]=i,x.spawnScripts[x.channelSpawn]={entrance:ix.of({x:424,y:120}),movement:6},x.spawnScripts[x.evilSpiritIslandSpawn]={entrance:ix.of({x:424,y:120}),movement:7}}function ei(r){let e=new Set;for(let x of r.locations)for(let t of x.pits??[])e.add(t.dest<<8|t.toScreen);for(let x of e){let t=r.locations[x>>8],s=x&255,a=t.exits.filter(c=>c.screen===s),n=t.entrances.filter(c=>c.screen===s),i=new Map(a.map(c=>[c.tile,c])),o=new X0;for(let c of i.keys())for(let f of xi)i.has(c+f)&&o.union([c,c+f]);let d=o.map();for(let c of n)for(let f of xi){let l=d.get(c.tile+f);for(let h of l??[]){let b=i.get(h),u=jx.of({screen:x&255,tile:h+f,dest:b.dest,entrance:b.entrance});t.exits.push(u)}}}}var xi=[1,-1,16,-16];function ti(r,e){let x=[...r.townWarp.locations].filter(o=>o!==255),t=e.nextInt(x.length),s=x[t],a=64;(s===r.locations.Shyron.id||s===r.locations.Shyron_Temple.id)&&(a=65),r.townWarp.thunderSwordWarp=[s,a];let n=768-x.length+t,i=r.itemGets[3].flags;for(let o=0;o<i.length;o++)if(i[o]===765){i[o]=n;return}i.push(n)}function si(r,e,x){let t=new Set(O(256,n=>n).filter(n=>n in r.objects));for(let[n]of he)t.delete(n);for(let[n,i]of he)for(let o of t)r.objects[n].base===r.objects[o].base&&(he.set(o,i),t.delete(n));for(let n of[200,249,250])r.objects[n].attackType=n>240?254:255,r.objects[n].statusEffect=0;r.objects[125].elements|=8;let s=new Set([87,94,104,125,136,151,155,158]),a=new Set([80,83,95,105]);for(let[n,{sdef:i,swrd:o,hits:d,satk:c,dgld:f,sexp:l}]of he){let h=r.objects[n].data,b=s.has(n)?1:0;if(h[2]|=128,h[6]=d,h[7]=c,h[8]=i|o<<4,h[16]=h[16]&15|f<<4,h[17]=l,(b?e.shuffleBossElements():e.shuffleMonsterElements())&&!a.has(n)){let u=[...r.objects[n].elements.toString(2).padStart(4,"0")];x.shuffle(u),r.objects[n].elements=Number.parseInt(u.join(""),2)}}if(e.shuffleMonsterElements()){let n=x.nextInt(4);for(let i of a)r.objects[i].elements=1<<n}}var he=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,12,18,,110],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,100],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,120],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,110],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,110],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,110],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,120],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,120],[148,"m","Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,110],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,110],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,6,26,,73],[161,"m","Tower Defense Mech (2)",5,,8,36,,85],[162,"m","Tower Sentinel",,,1,,,32],[163,"m","Air Sentry",3,,2,26,,65],[165,"b","Vampire 2",3,,12,27,,100],[164,"b","Dyna",6,5,32,,,,],[180,"b","dyna pod",6,5,48,26,,,],[184,"p","dyna counter",15,,,42,,,],[185,"p","dyna laser",15,,,42,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,15],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,15],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map(([r,e,x,t=0,s=0,a=0,n=0,i=0,o=0])=>[r,{id:r,type:e,name:x,sdef:t,swrd:s,hits:a,satk:n,dgld:i,sexp:o}]));function wc(r){console.log("flip sabera entrance");let e=r[0];e.set2d(113,[[e.rom.metascreens.deadEndE_upStair],[e.rom.metascreens.caveEmpty]]),e.moveExits([129,"stair:down",113,"stair:up"]),r[1]=113,r[2]="stair:up"}function Sc(r,e){console.log("flip karmine entrance");let x=r[0],t=x.rom.metascreens;x.set2d(32,[[t.caveEmpty,t.hallNS],[t.deadEndE_upStair,t.hallNW]]),x.replaceMonsters(e),x.moveExits([48,"stair:down",48,"stair:up"]),r[2]="stair:up"}function vc(r){console.log("flip karmine exit");let e=r[0],x=e.rom.metascreens;e.set2d(1,[[x.deadEndS_stairs,x.caveEmpty]]),e.moveExits([2,"stair:down",1,"stair:up"]),r[1]=1,r[2]="stair:up"}function ea(r){console.log("flip generic exit");let e=r[0],x=e.rom.metascreens;e.width<2&&(e.width=2),e.set2d(0,[[x.hallSE,x.deadEndW_downStair]]),e.moveExits([0,"stair:up",1,"stair:down"]),r[1]=1,r[2]="stair:down"}function ta(r,e){r[3](r,e),r[3]=void 0}function ai(r,e){let x=r.locations,t=[0,1,2,3];e.shuffle(t);let s=[[x.GoaFortress_Kelbesque.meta,131,"stair:down"],[x.GoaFortress_Sabera.meta,129,"stair:down",wc],[x.GoaFortress_Mado1.meta,114,"stair:down"],[x.GoaFortress_Karmine1.meta,48,"stair:down",Sc]],a=[[x.GoaFortress_Zebu.meta,0,"stair:up",ea],[x.GoaFortress_Tornel.meta,0,"stair:up",ea],[x.GoaFortress_Asina.meta,0,"stair:up",ea],[x.GoaFortress_Kensu.meta,2,"stair:down",vc]],n=[[x.GoaFortress_Entrance.meta,0,"edge:top"]],i=[],o=!0,d=n[0];for(let c of t){let f=o||s[c][3]||n[n.length-1][3],l=f?e.pick([!1,!0]):!0;console.log(`FLOOR ${c}: up ${o} flexible ${!!f} reverse ${l}`);let h=l?a[c]:s[c];console.log(`push b ${r.locations[h[0].id].name}`),i.push(h),o!==(h[2]==="stair:down")&&(h[3]?ta(h,e):ta(d,e)),n.push(d=l?s[c]:a[c]),console.log(`push a ${r.locations[d[0].id].name}`),o=d[2]==="stair:up"}o&&ta(d,e),i.push([x.GoaFortress_Exit.meta,1,"stair:up"]);for(let c=0;c<n.length;c++)n[c][0].attach(n[c][1],i[c][0],i[c][1],n[c][2],i[c][2])}var Tc=6,Ec=33,sa=new Map([["pawn",54],["inn",55],["armor",56],["tool",57],["tavern",59]]),kc=new Set(["inn","armor","tool","pawn"]),ri=new Set([...kc,"house","tavern"]);function ni(r,e,x){let{locations:{Crypt_Hall1:t,Goa:s,GoaFortress_Exit:a,Shyron:n},metascreens:{squareTownNE_house:i,fortressTownEntrance:o,mountainPathE_gate:d}}=r,c=new Set([s.id,n.id]),f=new Set([i.data.id,o.data.id,d.data.id]);if(e.shuffleAreas())for(let g of[s,a,n,t])g.data.houseType="palace";let l=new j(()=>[]),h=new j(()=>[]),b=new j(()=>new Set);for(let g of r.locations){if(!g.used||g.data.houseType==null)continue;let w;for(let[M,I,P]of g.meta.exits()){let k=(M&240)<<4|g.meta.get(M).findExitByType(I).entrance>>>8;(!w||k>w[3])&&(w=[M,I,P,k])}for(let[M,I,P]of[w]){let k={type:g.data.houseType,inside:[g.id<<8|M,I],outside:P},N=P[0];h.get(N).push(k),l.get(g.data.houseType).push(k);let D=r.locations[N>>>8].screens[N>>>4&15][N&15];b.get(D).add(N)}}let u=new Map,S=new Map;for(let[g,w]of x.ishuffle(b))w.size>=2||f.has(g)?S.set(g,w):u.set(g,w);let m=new Set,p=l.get("inn");for(let[,g]of[...S,...u]){let w=new Map,M=!0;for(let I of g){for(let P of h.get(I)){let k=M&&ri.has(P.type)?[...ri].map(Z=>l.get(Z)):[l.get(w.get(P.outside[1])??P.type)];k=k.filter(Z=>Z.length),P.type==="palace"&&c.has(P.outside[0]>>>8)&&(k=k.map(Z=>Z.filter(K=>!c.has(K.inside[0]>>>8))));let N=[...g].every(Z=>!m.has(Z>>>8));!N&&k.length>1?k=k.filter(Z=>Z!==p):N&&k.some(Z=>Z===p)&&(k=[p]);let D=x.pickAndRemove(...k);if(D.type==="inn")for(let Z of g)m.add(Z>>>8);if(w.set(P.outside[1],D.type),r.spoiler&&r.spoiler.addHouse(D.inside[0]>>>8,P.outside[0]>>>8),cx.connect(r,P.outside,D.inside),!M||sa.get(P.type)===sa.get(D.type))continue;let e0=r.locations[P.outside[0]>>>8];if(e0.meta.tileset!==r.metatilesets.town)continue;let i0=cx.findExitTiles(r,P.outside);if(i0.length>1)continue;let p0=i0[0]-32;(i0[0]&240)<32&&(p0-=3856);let F0=p0>>8,g0=p0&255,D0=sa.get(D.type)??(e0.meta.get(F0).data.tallHouses?.includes(g0)?Ec:Tc);r.screens[e0.screens[F0>>4][F0&15]].tiles[g0]=D0}M=!1}}}var c6=class{constructor(e,x){this.height=e;this.width=x;this._coords=void 0;this.data=new Array((e<<1|1)*(x<<1|1)),this.row=this.width<<1|1}screens(){if(this._coords)return this._coords;let e=[];for(let x=0;x<this.height;x++)for(let t=0;t<this.width;t++)e.push(x<<12|t<<4);return this._coords=e}index(e){return((e&248)>>3)+this.row*(e>>>11)}index2(e,x){return(this.row<<1)*e+2*x}yx(e){let x=e%this.row;return[(e-x)/this.row/2,x/2]}coord(e){let x=e%this.row;return(e-x)/this.row<<11|x<<3}get(e){return this.data[this.index(e)]}set(e,x){this.data[this.index(e)]=x}get2(e,x){return this.data[this.index2(e,x)]}set2(e,x,t){this.data[this.index2(e,x)]=t}plus(e,x,t){return e+(this.row<<1)*x+2*t}x(e){return e%this.row/2}y(e){return Math.floor(e/this.row)/2}border(e,x){let t,s;return e&1?(s=x<<12|2048,t=e&2?this.width<<4:0):(s=e&2?this.height<<12:0,t=x<<4|8),s|t}randomBorder(e,x){let t,s;if(x!=null)x&1?(s=e.nextInt(this.height)<<12|2048,t=x&2?this.width<<4:0):(s=x&2?this.height<<12:0,t=e.nextInt(this.width)<<4|8);else{let a=this.width+this.height,n=e.nextInt(a<<1)-a,i=!1;n<0&&(n=~n,i=!0),n<this.width?(t=n<<4|8,s=i?this.height<<12:0):(s=n-this.width<<12|2048,t=i?this.width<<4:0)}return s|t}oppositeBorder(e){return e&8?e^this.height<<12:e^this.width<<4}furthestBorder(e){return(this.height<<12|this.width<<4)-e}edgeCoordination(e,x){let t=0;if((e&2056)!==2056)throw new Error(`Bad tile: ${A(e)}`);for(let s of[8,-8,2048,-2048]){let a=this.get(e+s);(x?a===x:a)&&t++}return t}isBorder(e){if(e&8){if(e&2048)return!1;let x=e>>>12;return!x||x===this.height}else if(e&2048){let x=e>>>4&15;return!x||x===this.width}return!1}partition(e){let x=new X0;for(let t=0;t<this.data.length;t+=this.row)for(let s=0;s<this.row;s++){let a=t+s,n=this.coord(a);if(!(e?.get(n)??this.data[a]))continue;x.find(n);let o=n-2048;t&&(e?.get(o)??this.data[a-this.row])&&x.union([n,o]);let d=n-8;s&&(e?.get(d)??this.data[a-1])&&x.union([n,d])}return x.map()}show(){let e=[];for(let x=0;x<this.data.length;x+=this.row){let t="";for(let s=0;s<this.row;s++)t+=this.data[x+s]||" ";e.push(t)}return e.join(`
`)}static writeGrid2d(e,x,t){let s=e.index(x);for(let a=0;a<t.length;a++){let n=t[a];for(let i=0;i<n.length;i++){let o=n[i];e.data[s+a*e.row+i]=o!==" "?o:""}}}};function ii(r){return r>>4&15|r>>8&240}function W6(r,e=1){return r-e*8}function x6(r,e=1){return r+e*8}function vx(r,e=1){return r-e*2048}function j0(r,e=1){return r+e*2048}var[]=[A],U={ok:!0,value:void 0},v7=class{constructor(e,x){this.rom=e;this.random=x;this.shuffles=[]}add(...e){this.shuffles.push(...e)}shuffleAll(){for(let e of this.shuffles)e.shuffle(this.random);for(let e of this.shuffles)e.meta&&e.finish();for(let e of this.rom.locations)e.meta.shufflePits(this.random)}toString(){return[...this.shuffles].sort((e,x)=>(e.badness||0)-(x.badness||0)).join(`
`)}},T7=class{constructor(e,x){this.maxAttempts=250;this.attempt=0;this.meta=void 0;this.grid=new c6(1,1);this.fixed=new Set;this.w=0;this.h=0;this.size=0;this.count=0;this.exitMap=[];this.loc=e,this.orig=e.meta,this.params=x??this.survey(this.orig)}toString(){return`${this.constructor.name}(${this.loc}): ${this.attempt}/${this.maxAttempts}`}get badness(){return this.attempt/this.maxAttempts}reset(){this.meta=void 0;let e=this.pickHeight(),x=this.pickWidth(),t=this.pickSize(),s=new c6(e,x);s.data.fill(""),Object.assign(this,{h:e,w:x,size:t,grid:s,fixed:new Set,count:0,exitMap:[]})}shuffle(e){if(!(!this.loc.used||this.meta||this.attempt>this.maxAttempts)){for(Object.assign(this,{random:e});++this.attempt<=this.maxAttempts;){this.reset();let x=this.build();if(x.ok)return;console.log(`Shuffle failed ${this.loc}: ${x.fail}`)}console.error(`Completely failed to map shuffle ${this.loc}`)}}finish(){!this.meta||this.meta===this.loc.meta||this.finishInternal()}finishInternal(){if(!this.meta)throw new Error("impossible");this.meta.transferFlags(this.loc.meta,this.random);let e=[];for(let[x,t,s]of this.exitMap)for(let[a,n,i]of e)if(x(a,n)){e.push([t,s,i]);break}this.meta.transferExits(this.loc.meta,this.random);for(let[x,t,s]of e){let a=this.meta.rom.locations[s[0]>>>8].meta,n=s[0]&255,i=s[1];this.meta.attach(x,a,n,t,i)}this.meta.transferSpawns(this.loc.meta,this.random),this.meta.transferPits(this.loc.meta),this.loc.meta=this.meta}pickHeight(){return Math.max(1,Math.min(16,this.orig.height+Math.floor((this.random.nextInt(6)-1)/3)))}pickWidth(){return Math.max(1,Math.min(8,this.orig.width+Math.floor((this.random.nextInt(6)-1)/3)))}pickSize(){return this.params.size+(this.random.nextInt(5)<2?1:0)}insertTile(e,x){let t=this.posToGrid(e);for(let s=0;s<3;s++)for(let a=0;a<3;a++){let n=t+s*2048+a*8;if(this.fixed.has(n))return!1;let i=this.grid.get(n);if(i&&i!==x[s*3+a])return!1}for(let s=0;s<3;s++)for(let a=0;a<3;a++){let n=t+s*2048+a*8;this.grid.set(n,x[s*3+a])}return!0}posToGrid(e,x=0){let t=e>>>4,s=e&15;return(t<<12|s<<4)+x}insertPattern(e,{top:x=0,bottom:t=0,left:s=0,right:a=0}={}){let n=e.length-1>>>1,i=e[0].length-1>>>1,o=x+t,d=s+a;if(this.h<n+o)return{ok:!1,fail:"too short"};if(this.w<i+d)return{ok:!1,fail:"too narrow"};let c=this.random.nextInt(this.h-n-1-o)+x,f=this.random.nextInt(this.w-i-1-o)+s,l=c+1<<12|f+1<<4;c6.writeGrid2d(this.grid,l,e);for(let h=12288;h<=20480;h+=2048)for(let b=48;b<=64;b+=8)this.fixed.add(l+(h|b));return{ok:!0,value:void 0}}extract(e,x,{h:t=3,w:s=3,replace:a=void 0}={}){let n=e.index(x),i="",o=n+t*e.row,{row:d}=e;for(let c=n;c<o;c+=d)for(let f=c;f<c+s;f++){if(a){let l=a.get(e.coord(f));if(l!=null){i+=l||" ";continue}}i+=e.data[f]||" "}return i}canSet(e,x){return this.canSetAll(new Map([[e,x]]))}canSetAll(e){let x=new Set;for(let t of e.keys()){if(this.fixed.has(t))return!1;let s=t&-2057,a=s>>>12,n=s>>>4&15;n<this.w&&a<this.h&&x.add(s),!(t&8)&&a<this.h&&n&&x.add(s-16),!(t&2048)&&n<this.w&&a&&x.add(s-4096),!(t&2056)&&n&&a&&x.add(s-4112)}for(let t of x){let s=this.extract(this.grid,t,{replace:e});if(!this.orig.tileset.getMetascreensFromTileString(s).length)return!1}return!0}addAllFixed(){for(let e=0;e<this.grid.data.length;e++)this.grid.data[e]&&this.fixed.add(this.grid.coord(e))}};var[]=[A],G=class extends T7{constructor(){super(...arguments);this.maxPartitions=1;this.minSpikes=2;this.maxSpikes=5;this.looseRefine=!1;this.addBlocks=!0;this.initialFillType="c";this.upEdgeType="c";this._requirePitDestination=!1;this.rivers=0;this.wides=0;this.walls=0;this.bridges=0}reset(){super.reset(),this.rivers=0,this.wides=0,this.walls=0,this.bridges=0}requirePitDestination(){return this._requirePitDestination=!0,this}survey(x){let t={meta:x,id:x.id,tileset:x.tileset,size:0,edges:[0,0,0,0],stairs:[0,0],features:{arena:0,bridge:0,over:0,pit:0,ramp:0,river:0,spike:0,statue:0,under:0,wall:0,wide:0}};if(x.id>=0)for(let s of x.rom.locations[x.id].spawns)s.isMonster()&&s.monsterId===143&&t.features.statue++;for(let s of x.allPos()){let a=x.get(s);(!a.isEmpty()||a.data.exits?.length)&&t.size++;for(let n of a.data.exits??[]){let{type:i}=n;if(i==="edge:top"){s>>>4===0&&t.edges[0]++;continue}else if(i==="edge:left"){(s&15)===0&&t.edges[1]++;continue}else if(i==="edge:bottom"){s>>>4===x.height-1&&t.edges[2]++;continue}else if(i==="edge:right"){(s&15)===x.width-1&&t.edges[3]++;continue}else{if(i==="crypt")continue;if(!i.startsWith("seamless")){if(n.dir&1)throw new Error(`Bad exit direction: ${n.dir}`);t.stairs[n.dir>>>1]++;continue}}}a.hasFeature("arena")&&t.features.arena++,a.hasFeature("bridge")&&t.features.bridge++,a.hasFeature("overpass")&&t.features.over++,a.hasFeature("pit")&&t.features.pit++,a.hasFeature("ramp")&&t.features.ramp++,a.hasFeature("spikes")&&t.features.spike++,a.hasFeature("underpass")&&t.features.under++,a.hasFeature("wall")&&t.features.wall++,a.hasFeature("river")&&t.features.river++,a.hasFeature("wide")&&t.features.wide++}return t.size<2&&(x.width>1||x.height>1)&&(t.size=2),t}build(){this.init();let x;if(x=this.fillGrid(),!x.ok||(x=this.preinfer(),!x.ok))return x;let t=this.inferScreens();return t.ok?(x=this.refineMetascreens(t.value),!x.ok||(x=this.checkMetascreens(t.value),!x.ok)?x:this._requirePitDestination&&!this.requireEligiblePitDestination(t.value)?{ok:!1,fail:"no eligible pit destination"}:(this.meta=t.value,U)):t}fillGrid(){let x;return x=this.initialFill(),!x.ok||(x=this.addEdges(),!x.ok)||(x=this.addEarlyFeatures(),!x.ok)||(x=this.refine(),!x.ok)?x:this.refineEdges()?(this.removeSpurs(),this.removeTightLoops(),x=this.addLateFeatures(),!x.ok||(x=this.addStairs(...this.params.stairs??[]),!x.ok)?x:U):{ok:!1,fail:"refineEdges"}}init(){}initialFill(){return this.fillCave(this.initialFillType),U}fillCave(x){for(let t=.5;t<this.h;t++)for(let s=.5;s<this.w;s++)t>1&&this.grid.set2(t-.5,s,x),s>1&&this.grid.set2(t,s-.5,x),this.grid.set2(t,s,x);this.count=this.h*this.w}addEdges(){if(!this.params.edges)return U;for(let x=0;x<4;x++){let t=this.params.edges[x]||0;if(!t)continue;let s=O(x&1?this.h:this.w,a=>this.grid.border(x,a));for(let a of this.random.ishuffle(s))if(!this.grid.get(a)&&(x&1?x===1?this.addLeftEdge(a)&&t--:this.addRightEdge(a)&&t--:x===0?this.addUpEdge(a)&&t--:this.addDownEdge(a)&&t--,!t))break;if(t)return{ok:!1,fail:`can't fit all edges shuffling ${this.loc}
missing ${t} ${x}`}}return U}addUpEdge(x){let t=x+2048,s=t-8,n=s-8-8,i=t+8,d=i+8+8;if(this.grid.isBorder(s)){if(this.grid.get(s))return!1}else if(this.grid.get(x-16)||this.grid.isBorder(n)&&this.grid.get(n))return!1;if(this.grid.isBorder(i)){if(this.grid.get(i))return!1}else if(this.grid.get(x+16)||this.grid.isBorder(d)&&this.grid.get(d))return!1;return this.fixed.add(x),this.grid.set(x,this.upEdgeType),this.grid.set(s,""),this.grid.set(i,""),!0}addDownEdge(x){let t=x-2048,s=t-8,a=t+8;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(a)&&this.grid.get(a)?!1:(this.fixed.add(x),this.grid.set(x,"n"),this.grid.set(s,""),this.grid.set(a,""),!0)}addLeftEdge(x){let t=x+8,s=t-2048,a=t+2048;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(a)&&this.grid.get(a)?!1:(this.fixed.add(x),this.grid.set(x,"c"),!0)}addRightEdge(x){let t=x-8,s=t-2048,a=t+2048;return!this.grid.get(t)||this.grid.isBorder(s)&&this.grid.get(s)||this.grid.isBorder(a)&&this.grid.get(a)?!1:(this.fixed.add(x),this.grid.set(x,"c"),!0)}addEarlyFeatures(){return this.addSpikes(this.params.features?.spike??0)?this.addOverpasses(this.params.features?.over??0)?U:{ok:!1,fail:"add overpasses"}:{ok:!1,fail:`add spikes
${this.grid.show()}`}}addLateFeatures(){return this.addArenas(this.params.features?.arena??0)?this.addUnderpasses(this.params.features?.under??0)?this.addPits(this.params.features?.pit??0)?this.addRamps(this.params.features?.ramp??0)?U:{ok:!1,fail:"addRamps"}:{ok:!1,fail:"addPits"}:{ok:!1,fail:"addUnderpasses"}:{ok:!1,fail:`addArenas
${this.grid.show()}`}}addArenas(x){if(!x)return!0;let t=this.grid;for(let s of this.random.ishuffle(this.grid.screens())){let a=s|2056;if(!this.isEligibleArena(a))continue;let n=this.extract(this.grid,s),i=n.substring(0,4)+"a"+n.substring(5);if(!this.orig.tileset.getMetascreensFromTileString(i).length){console.log(`no tile ${i}`);continue}if(this.fixed.add(a),t.set(a,"a"),x--,!x)return!0}return!1}isEligibleArena(x){let t=this.grid,s=x-8,a=s-8,n=x+8,i=n+8;return!(t.get(x)!=="c"&&t.get(x)!=="w"||t.get(s)||t.get(n)||!t.isBorder(s)&&t.get(a)||!t.isBorder(n)&&t.get(i))}addUnderpasses(x){return this.addStraightScreenLate(x,"b",2048)}addOverpasses(x){let t=0;for(;x;){let s=this.random.nextInt(this.h-2)+1,a=this.random.nextInt(this.w-2)+1,n=s<<12|a<<4|2056;if(this.grid.get(n)!=="c"){if(++t>10)throw new Error("Bad attempts");continue}this.grid.set(n,"b"),this.fixed.add(n),this.grid.set(n-8,""),this.grid.set(n+8,""),x--}return!0}addPits(x){return this.addStraightScreenLate(x,"p")}addRamps(x){return this.addStraightScreenLate(x,"/",8)}addStraightScreenLate(x,t,s){if(!x)return!0;for(let a of this.random.ishuffle(this.grid.screens())){let n=a|2056;if(this.grid.get(n)!=="c")continue;if(s){let c=n-s,f=n+s;if(this.grid.get(c)||this.grid.get(f))continue}let i=this.extract(this.grid,a),o=i.substring(0,4)+t+i.substring(5);if(!!this.orig.tileset.getMetascreensFromTileString(o).length&&(this.fixed.add(n),this.grid.set(n,t),x--,!x))return!0}return!1}addSpikes(x){if(!x)return!0;let t=0;for(;x>0;){if(++t>20)return!1;let s=Math.min(x,Math.floor(this.h*.6),this.maxSpikes);for(;s<x-1&&s>this.minSpikes;)this.random.next()<.2&&s--;let a=s>2&&this.w>3?this.random.nextInt(this.w-2)+1:this.random.nextInt(this.w);s>x-this.minSpikes&&(s>=this.h-2?s=this.h-2:s=x);let i=this.random.nextInt(this.h-s-2)+1<<12|a<<4|2056,o=i+(s-1<<12);for(let f=i-4096;s&&f<=o+4096;f+=2048)this.grid.get(f)!=="c"&&(s=0);if(!s)continue;let d=[i-8,i+8,o-8,o+8],c=this.tryClear(d);if(!!c.length){for(let f of c)this.grid.set(f,"");this.fixed.add(i-2048),this.fixed.add(i-4096),this.fixed.add(o+2048),this.fixed.add(o+4096);for(let f=i;f<=o;f+=2048)this.fixed.add(f),this.grid.set(f,"s");x-=s,t=0}}return x===0}canRemove(x){return x===this.initialFillType}tryClear(x){let t=new Map;for(let d of x){if(this.fixed.has(d))return[];t.set(d,"")}let s=this.grid.partition(t),[a]=s.values();if(a.size===s.size)return[...x];let n=new Set,i=new Set(s.values());for(let d of this.fixed)n.add(s.get(d));if(n.size>this.maxPartitions)return[];let o=[...x];for(let d of i)n.has(d)||o.push(...d);return o}refine(){let x=new Set;for(let s=0;s<this.grid.data.length;s++)this.grid.data[s]&&x.add(this.grid.coord(s));let t=0;for(;this.count>this.size;){if(t++>50)throw new Error("refine failed: attempts");let s=0;for(let a of this.random.ishuffle([...x])){if(this.grid.isBorder(a)||!this.canRemove(this.grid.get(a))||this.fixed.has(a))continue;if(s>3)break;let n=this.grid.partition(this.removalMap(a)),[i]=n.values();if(i.size===n.size&&n.size>1)s++,x.delete(a),(a&2056)===2056&&this.count--,this.grid.set(a,"");else{let o;for(let c of n.values())(!o||c.size>o.size)&&(o=c);if(![...this.fixed].every(c=>o.has(c)))continue;let d=[...o].filter(c=>(c&2056)==2056).length;if(d<this.size)continue;s++,x=o,this.count=d,this.grid.set(a,"");for(let[c,f]of n)f!==o&&this.grid.set(c,"")}}if(!s)return this.looseRefine?U:{ok:!1,fail:`refine ${this.count} > ${this.size}
${this.grid.show()}`}}return U}removalMap(x){return new Map([[x,""]])}refineEdges(){let x=[];for(let n=0;n<this.grid.data.length;n++){if(!this.grid.data[n])continue;let i=this.grid.coord(n);this.grid.isBorder(i)||this.fixed.has(i)||(i^i>>8)&8&&x.push(i)}this.random.shuffle(x);let t=this.grid.partition(new Map),s=t.size,a=new Set(t.values()).size;for(let n of x){let i=this.grid.partition(new Map([[n,""]])),[o]=i.values();(o.size===i.size||new Set(i.values()).size===a)&&i.size===s-1&&(s--,this.grid.set(n,""))}return!0}removeSpurs(){for(let x=0;x<this.h;x++)for(let t=0;t<this.w;t++){let s=x<<12|2056|t<<4;if(this.grid.get(s))continue;let a=s-2048,n=s+2048,i=s-8,o=s+8;(this.grid.get(a)||this.grid.get(n))&&(this.grid.get(i)||this.grid.get(o))&&(this.random.nextInt(2)?(this.grid.set(a,""),this.grid.set(n,"")):(this.grid.set(i,""),this.grid.set(o,"")))}}removeTightLoops(){for(let x=0;x<this.h-1;x++){let t=x<<12|2048;for(let s=0;s<this.w-1;s++){let a=t|s<<4|8;this.isTightLoop(a)&&this.breakTightLoop(a)}}}isTightLoop(x){for(let t=0;t<6144;t+=2048)for(let s=0;s<24;s+=8){let a=t|s;if(a!==2056&&this.grid.get(x+a)!=="c")return!1}return!0}breakTightLoop(x){let t=this.random.nextInt(65536),s=t&1?t&4096|8:t&16|2048;this.grid.set(x+s,"")}addStairs(x=0,t=0){let s=[x,t];if(!s[0]&&!s[1])return U;for(let a of this.random.ishuffle(this.grid.screens()))if(!!this.tryAddStair(a,s)&&!s[0]&&!s[1])return U;return{ok:!1,fail:"stairs"}}addEarlyStair(x,t){let s=[],a=x-8,n=x+8,i=x-2048,o=x+2048,d=[x-8,x+8];if(t==="<"){if(d.push(o),s.push([i,""]),this.grid.get(a)==="c"&&this.grid.get(n)==="c"&&this.random.nextInt(3))return s.push([o,""],[x,"<"]),s}else t===">"&&(d.push(i),s.push([o,""]));if(d=d.filter(f=>this.grid.get(f)==="c"),!d.length)return[];let c=this.random.nextInt(d.length);for(let f=0;f<d.length;f++)f!==c&&s.push([d[f],""]);return s.push([x,t]),s}tryAddStair(x,t){if(this.fixed.has(x|2056))return!1;let s=this.extract(this.grid,x),a=t[0]&&t[1],n=t[0]+t[1],i=this.random.nextInt(n)<t[0],o=[i?0:1];a&&o.push(i?1:0);for(let d of o){let c="<>"[d],f=s.substring(0,4)+c+s.substring(5);if(this.orig.tileset.getMetascreensFromTileString(f).length)return this.grid.set(x|2056,c),t[d]--,!0}return!1}tryConnect(x,t,s,a=1){for(;a-- >0;){let n=new Map,i=x;if((x&t&2056)!==2056)throw new Error(`bad start ${A(x)} or end ${A(t)}`);for(n.set(i,s);i!==t;){let o=[];for(let h of[8,-8,2048,-2048]){let b=i+h,u=i+2*h;this.fixed.has(u)||(n.get(u)??this.grid.get(u))||this.grid.isBorder(b)||o.push(h)}if(!o.length)break;let d=(t>>12)-(i>>12),c=(t&240)-(i&240),f=new Set(o);d<0&&f.delete(2048),d>0&&f.delete(-2048),c<0&&f.delete(8),c>0&&f.delete(-8),o.push(...f,...f);let l=this.random.pick(o);n.set(i+l,s),n.set(i=i+2*l,s)}if(i===t){for(let[o,d]of n)this.grid.set(o,d),(o&2056)===2056&&this.count++;return!0}}return!1}tryAddLoop(x,t=1){let s=new X0;for(let o=0;o<this.grid.data.length;o++){let d=this.grid.coord(o);this.grid.get(d)||this.grid.isBorder(d)||(this.grid.get(x6(d))||s.union([d,x6(d)]),this.grid.get(j0(d))||s.union([d,j0(d)]))}let a=new j(()=>[]);for(let o of this.grid.screens()){let d=o+2056;if(!!this.grid.get(d))for(let c of[8,-8,2048,-2048]){let f=d+c;if(this.grid.isBorder(f)||this.grid.get(f))continue;let l=d+2*c;if(this.grid.get(l))continue;let h=new Map([[f,x]]),b=this.extract(this.grid,o,{replace:h});this.orig.tileset.getMetascreensFromTileString(b).length&&a.get(s.find(l)).push([f,l])}}let n=new Map;for(let o of a.values())if(!(o.length<2))for(let[d]of o)n.set(d,o);let i=[...n.values()];if(!i.length)return!1;for(;t-- >0;){let o=this.random.pick(i),[[d,c],[f,l]]=this.random.ishuffle(o);if(this.grid.set(d,x),this.grid.set(f,x),this.tryConnect(c,l,x,5))return!0;this.grid.set(d,""),this.grid.set(f,"")}return!1}tryExtrude(x,t,s=1){for(;s--;)for(let a of this.random.ishuffle(this.grid.screens())){let n=a+2056;if(!this.grid.get(n))continue;let i=this.extract(this.grid,a);for(let o of this.random.ishuffle([0,1,2,3])){let d=n+qe[o],c=n+2*qe[o];if(this.grid.get(d)||this.grid.isBorder(d)||this.grid.get(c))continue;let f=aa[o],l=i.substring(0,f)+x+i.substring(f+1);if(this.orig.tileset.getMetascreensFromTileString(l).length){this.grid.set(d,x),this.grid.set(c,x);let h=this.tryContinueExtrude(x,t,c);if(h)return h;this.grid.set(c,""),this.grid.set(d,"")}}}return 0}tryContinueExtrude(x,t,s){let a=this.extract(this.grid,s-2056),n=this.orig.tileset.getMetascreensFromTileString(a).length>0;if(t===1)return n?1:0;if(n&&!this.random.nextInt(t))return 1;for(let i of this.random.ishuffle([0,1,2,3])){let o=s+qe[i],d=s+2*qe[i];if(this.grid.get(o)||this.grid.isBorder(o)||this.grid.get(d))continue;let c=aa[i],f=a.substring(0,c)+x+a.substring(c+1);if(this.orig.tileset.getMetascreensFromTileString(f).length){this.grid.set(o,x),this.grid.set(d,x);let l=this.tryContinueExtrude(x,t-1,d);if(l)return l+1;this.grid.set(d,""),this.grid.set(o,"")}if(n)break}return n?1:0}tryAdd(x={}){let t=this.orig.tileset,{attempts:s=1,char:a="c",start:n,loop:i=!1}=x;for(let o=0;o<s;o++){let d=n!=null?[n&61680]:this.random.ishuffle(this.grid.screens());for(let c of d){let f=c+2056;if(!this.grid.get(f))continue;let l=this.extract(this.grid,c);for(let h of this.random.ishuffle([0,1,2,3])){let b=f+qe[h],u=f+2*qe[h];if(this.fixed.has(b)||this.fixed.has(u))continue;let S=this.grid.get(b),m=this.grid.get(u);if(S&&(m||S!==a)||this.grid.isBorder(b))continue;if(!i){let w=this.extract(this.grid,u-2056,{replace:new Map([[b,""]])});if(/\S/.test(w))continue}let p=aa[h],g=l.substring(0,p)+a+l.substring(p+1);if(t.getMetascreensFromTileString(g).length){this.count++,this.grid.set(b,a),this.grid.set(u,a);let w=this.extract(this.grid,u-2056);if(t.getMetascreensFromTileString(w).length)return 1;this.grid.set(u,m),this.grid.set(b,S),this.count--}}}}return 0}preinfer(){let x;return this.params.features?.spike&&(x=this.preinferSpikes(),!x.ok)?x:U}preinferSpikes(){return U}inferScreens(){let x=[];for(let a of this.grid.screens()){let n=this.extract(this.grid,a),i=this.orig.tileset.getMetascreensFromTileString(n).filter(d=>!d.data.mod);if(!i.length){if(this.grid.show().length>1e5)debugger;return{ok:!1,fail:`infer screen ${A(a)}: [${n}]
${this.grid.show()}`}}let o=this.random.pick(i);x.push(o),o.hasFeature("wall")&&this.walls++,o.hasFeature("bridge")&&this.bridges++}let t=!0,s=new cx(this.params.id,this.orig.tileset,this.h,this.w);for(let a=0;a<this.h;a++)for(let n=0;n<this.w;n++){let i=x[a*this.w+n];if(s.set(a<<4|n,i),i.isEmpty()||(t=!1),a){let o=s.get(a-1<<4|n);if(this.orig.tileset.isBannedVertical(o,i))return{ok:!1,fail:`bad vertical neighbor at ${a}${n}: ${o.name} ${i.name}`}}if(n){let o=s.get(a<<4|n-1);if(this.orig.tileset.isBannedHorizontal(o,i))return{ok:!1,fail:`bad horizontal neighbor at ${a}${n}: ${o.name} ${i.name}`}}}return t?{ok:!1,fail:"all screens empty"}:{ok:!0,value:s}}refineMetascreens(x){let t=this.params.features?.bridge||0,s=this.params.features?.wall||0;for(let a of this.random.ishuffle(x.allPos())){let n=(a<<8|a<<4)&61680,i=this.extract(this.grid,n),o=x.get(a);if(!(this.bridges<=t&&o.hasFeature("bridge"))){if(this.addBlocks&&this.tryMeta(x,a,this.orig.tileset.withMod(i,"block"))){o.hasFeature("bridge")&&this.bridges--;continue}if(o.hasFeature("bridge")&&this.tryMeta(x,a,this.orig.tileset.withMod(i,"bridge"))){this.bridges--;continue}if(this.walls<s&&!o.hasFeature("wall")&&this.tryMeta(x,a,this.orig.tileset.withMod(i,"wall"))){this.walls++;continue}}}return this.bridges!==t?{ok:!1,fail:`refineMeta bridges want ${t} got ${this.bridges}
${x.show()}`}:this.walls!==s?{ok:!1,fail:`refineMeta walls want ${s} got ${this.walls}
${x.show()}`}:U}tryMeta(x,t,s){for(let a of s)if(!!this.checkMeta(x,new Map([[t,a]])))return x.set(t,a),!0;return!1}checkMeta(x,t){let s=t?{with:t}:{},a=x.traverse(s);return new Set(a.values()).size===this.maxPartitions}requireEligiblePitDestination(x){let t=!1,s=!1;for(let a of x.allPos()){let n=x.get(a);if(n.hasFeature("river")||n.hasFeature("empty"))continue;let i=(n.data.edges||"").split("").map(o=>o===" "?"":o);if(i[0]&&i[2]&&(t=!0),(i[1]&&i[3]||n.hasFeature("spikes"))&&(s=!0),t&&s)return!0}return!1}checkMetascreens(x){if(!this.params.features?.statue)return U;let t=0;for(let s of x.allPos()){let a=x.get(s);t+=a.data.statues?.length||0}return t<this.params.features.statue?{ok:!1,fail:"insufficient statue screens"}:U}},ue=class extends G{constructor(){super(...arguments);this.initialFillType="w";this.upEdgeType="n"}setUpEdgeType(x){return this.upEdgeType=x,this}isEligibleArena(x){return!(x&61440)&&super.isEligibleArena(x)}addEdges(){let x=this.grid,t=super.addEdges();if(!t.ok)return t;let s=this.params.features?.arena;if(!s)return U;let a=[];for(let n=0;n<this.w;n++){let i=n<<4|2056;x.get(i-2048)&&a.push(i)}if(a.length<s)return{ok:!1,fail:`not enough edges
${x.show()}`};for(let n of this.random.ishuffle(a)){if(!s)break;let i=n-8,o=i-8,d=o-8,c=o-2048,f=o+2048,l=n+8,h=l+8,b=h+8,u=h-2048,S=h+2048;!x.isBorder(i)&&(x.isBorder(d)&&x.get(d)||x.isBorder(c)&&x.get(c)||x.isBorder(f)&&x.get(f))||!x.isBorder(l)&&(x.isBorder(b)&&x.get(b)||x.isBorder(u)&&x.get(u)||x.isBorder(S)&&x.get(S))||(this.fixed.add(n),x.set(n,"a"),x.set(i,""),x.set(o,""),x.set(l,""),x.set(h,""),this.grid.set(n,"a"),s--)}return U}addArenas(){return!0}},E7=class extends G{refineMetascreens(e){for(let x=0;x<this.h;x++)for(let t=0;t<this.w;t++)this.grid.get(x<<12|t<<4|2056)==="a"&&e.set(x<<4|t,e.rom.metascreens.cryptArena_statues);return super.refineMetascreens(e)}isEligibleArena(e){return!this.grid.get(e-2048)&&super.isEligibleArena(e)}},aa=[1,3,7,5],qe=[-2048,-8,2048,8];var Rc=4656613057391769e-25,fi=2147483563-1,oi=40014,Mc=40692,k7=53668,di=52774,ci=12211,Cc=3791,R7=32,Ic=1+Math.floor(fi/R7),Lc=12e-8,Ac=1-Lc,be=class{constructor(e=Math.floor(Math.random()*4294967296)){this.idum=0;this.idum2=0;this.iy=0;this.iv=[];this.z1=null;this.seed(e)}static newSeed(){return Math.floor(Math.random()*4294967296)}seed(e){this.idum=Math.max(1,Math.floor(e)),this.idum2=this.idum,this.iy=0,this.iv=new Array(R7).fill(0);for(let x=R7+7;x>=0;x--){let t=Math.floor(this.idum/k7);this.idum=oi*(this.idum-t*k7)-t*ci,this.idum<0&&(this.idum+=2147483563),x<R7&&(this.iv[x]=this.idum)}this.iy=this.iv[0]}next(){let e=Math.floor(this.idum/k7);this.idum=oi*(this.idum-e*k7)-e*ci,this.idum<0&&(this.idum+=2147483563),e=Math.floor(this.idum2/di),this.idum2=Mc*(this.idum2-e*di)-e*Cc,this.idum2<0&&(this.idum2+=2147483399);let x=Math.floor(this.iy/Ic);return this.iy=this.iv[x]-this.idum2,this.iv[x]=this.idum,this.iy<1&&(this.iy+=fi),Math.min(Rc*this.iy,Ac)}nextInt(e){return Math.floor(this.next()*e)}nextNormal(e=0,x=1,t=-1/0,s=1/0){for(;;){let a=this.z1;if(a==null){let n=Math.sqrt(-2*Math.log(this.next())),i=Pc*this.next();a=n*Math.cos(i),this.z1=n*Math.sin(i)}else this.z1=null;if(a=e+a*x,a>=t&&a<=s)return a}}shuffle(e){for(let x=e.length;x;){let t=this.nextInt(x--);[e[x],e[t]]=[e[t],e[x]]}return e}*ishuffle(e){let x=[];if(!Array.isArray(e))if(Bc(e)){let t=e[Symbol.iterator]();for(let s=0;s<e.size;s++){let a=s+this.nextInt(e.size-s);for(;x.length<=a;)x.push(t.next().value);yield x[a],x[a]=x[s]}return}else e=[...e];if(!Array.isArray(e))throw new Error("impossible");for(let t=0;t<e.length;t++){let s=t+this.nextInt(e.length-t);yield s in x?x[s]:e[s],x[s]=t in x?x[t]:e[t]}}pick(e){if(!e.length)throw new Error("empty array");return e[this.nextInt(e.length)]}pickWeighted(e){if(!e.length)throw new Error("empty array");let x=0;for(let[s]of e)x+=s;let t=this.next()*x;for(let[s,a]of e){if(t<s)return a;t-=s}throw new Error("bad weights")}pickAndRemove(...e){let x=0;for(let s of e)x+=s.length;if(!x)throw new Error("empty arrays");let t=this.nextInt(x);for(let s of e){if(t<s.length)return s.splice(t,1)[0];t-=s.length}throw new Error("impossible")}bitGenerator(){let e=0,x=0;return()=>{e||(e=32,x=this.nextInt(4294967296)),e--;let t=!(x&1);return x>>>=1,t}}};function Bc(r){return"size"in r}var Pc=2*Math.PI;function M7(r,e,x=!1){let t=new na(r,e,x),s=new ra(e,t,x);return[t,s]}var ra=class extends G{constructor(x,t,s){super(x);this.location=x;this.under=t;this.reverse=s;this.downStairs=[]}init(){this.downStairs=[]}build(){return this.under.attempt<this.attempt&&(this.under.meta=void 0,this.under.shuffle(this.random),!this.under.meta)?{ok:!1,fail:"dependent failed"}:super.build()}finishInternal(){if(!this.meta||!this.under.meta)throw new Error("impossible");this.under.finish(),super.finishInternal();for(let[x,t]of C0.zip(this.under.upStairs,this.downStairs))this.meta.attach(t,this.under.meta,x)}addEarlyFeatures(){let x=super.addEarlyFeatures();if(!x.ok)return x;let t=16,s=0,a=16,n=0,i=1;for(let o of[...this.under.underBridges,-1,...this.under.upStairs]){if(o===-1){i=0;continue}let d=o>>>4,c=o&15;t=Math.min(c,t),s=Math.max(c,s),a=Math.min(d-i,a),n=Math.max(d+i,n)}x:for(let o=0;o<10;o++){let d=[],c=this.random.nextInt(this.w-(s-t))+t,l=this.random.nextInt(this.h-(n-a))+a-a<<4+(c-t);for(let h of this.under.underBridges){let b=h+l,u=b>>>4,S=b&15,m=u<<12|S<<4|2056;if(this.grid.get(m)!=="c")continue x;d.push([m,"b"]),d.push([m-8,""]),d.push([m+8,""])}for(let h of this.under.upStairsEffective){let b=h+l,u=b>>>4,S=b&15,m=u<<12|S<<4|2056;if(this.grid.get(m)!=="c")continue x;d.push([m,this.reverse?"<":">"]),d.push([m+(this.reverse?-2048:2048),""]);let p=this.addEarlyStair(m,this.reverse?"<":">");if(!p.length)continue x;d.push(...p)}for(let[h,b]of d)b&&this.fixed.add(h),(b==="<"||b===">")&&this.downStairs.push(ii(h)),this.grid.set(h,b);return U}return{ok:!1,fail:"add fixed stairs with early features"}}addStairs(x=0,t=0){return this.reverse?super.addStairs(x-this.under.upStairs.length,t):super.addStairs(x,t-this.under.upStairs.length)}addOverpasses(){return!0}},na=class extends G{constructor(x,t,s){super(x);this.loc=x;this.overpass=t;this.reverse=s;this.underBridges=[];this.upStairs=[];this.upStairsEffective=[]}init(){this.underBridges=[],this.upStairs=[],this.upStairsEffective=[]}build(){let x=super.build();if(!x.ok)return x;if(!this.meta)throw new Error("impossible");let t=this.reverse?"stair:down":"stair:up";for(let a of this.meta.allPos()){let n=this.meta.get(a);if(n.hasFeature("underpass")&&this.underBridges.push(a),n.hasFeature(t)){let i=0;for(let o of n.data.exits)o.type==="stair:up"&&o.entrance<32768&&(i=-16),o.type==="stair:down"&&o.entrance>32768&&(i=16);this.upStairsEffective.push(a+i),this.upStairs.push(a)}}if(!this.underBridges.length)throw new Error(`Expected bridge in ${this.loc}
${this.meta.show()}`);if(!this.upStairs.length)throw new Error(`Expected stair in ${this.loc}
${this.meta.show()}`);let s=0;for(let[,a,[n]]of this.orig.exits())a===t&&n>>>8===this.overpass.id&&s++;return this.upStairs=this.random.shuffle(this.upStairs).slice(0,s),U}};var me=class extends G{constructor(){super(...arguments);this.maxAttempts=400}refineEdges(){return!0}preinfer(){let x=[];for(let s=0;s<this.h;s++)for(let a=0;a<this.w;a++){let n=s<<12|a<<4|2056;this.grid.get(n)&&x.push(n)}let t=x.filter(s=>this.tryClear([s]).length===1);if(!t.length)return{ok:!1,fail:"all critical?"};for(let s=0;s<t.length;s++)for(let a=0;a<s;a++)if(this.tryClear([t[s],t[a]]).length>2)return super.preinfer();return{ok:!1,fail:"unable to find pair of mutually critical tiles"}}},C7=class extends me{removeTightLoops(){}};var k6=class{constructor(e,x,t){this.h=e;this.w=x;this.valid=t;this.fixed=new Set;this.size=0;this.data=new Uint8Array(e*x)}fill(){for(let e=0;e<this.h;e++)for(let x=0;x<this.w;x++){let t=e*this.w+x;e>0&&(this.data[t]|=1),x>0&&(this.data[t]|=2),e<this.h-1&&(this.data[t]|=4),x<this.w-1&&(this.data[t]|=8)}}isBorder(e,x){let t=e%this.w,s=(e-t)/this.w;return this.isBorder2(s,t,x)}isBorder2(e,x,t){if(t===0)return!e;if(t===1)return!x;if(t===2)return e>=this.h-1;if(t===3)return x>=this.w-1;throw new Error("bad direction")}delete2(e,x,t=e*this.w+x){if(this.fixed.has(t))return!1;let s=new Map;s.set(t,0);for(let a=0;a<4;a++){if(this.isBorder2(e,x,a))continue;let n=t+this.delta(a),i=this.data[n],o=i&~(1<<(a^2));if(i!==o){if(this.fixed.has(n))return!1;s.set(n,o)}}return this.try(s)}delete(e){let x=e%this.w,t=(e-x)/this.w;return this.delete2(t,x,e)}deleteEdge2(e,x,t,s=e*this.w+x){if(this.fixed.has(s))return!1;if(this.isBorder2(e,x,t))return this.data[s]&=~(1<<t),!0;let a=new Map,n=s+this.delta(t);return this.fixed.has(n)?!1:(a.set(s,this.data[s]&~(1<<t)),a.set(n,this.data[n]&~(1<<(t^2))),this.try(a))}deleteEdge(e,x){let t=e%this.w,s=(e-t)/this.w;return this.deleteEdge2(s,t,x,e)}refine(e,x){let t=0,s=new Set;for(let a=0;a<this.data.length;a++)this.data[a]&&t++,this.fixed.has(a)||s.add(a);for(;t>x;){let a=!1;for(let n of e.ishuffle(s)){if(t<=x)break;if(!this.data[n]){t--;continue}this.delete(n)&&(a=!0,t--)}if(!a)return!1}return!0}validate(){for(let e=0;e<this.h;e++)for(let x=0;x<this.w;x++){let t=e*this.w+x,s=this.data[t];if(e&&!(this.data[t-this.w]&4)!=!(s&1))throw new Error(`invalid above ${e}${x}`);if(x&&!(this.data[t-1]&8)!=!(s&2))throw new Error(`invalid left of ${e}${x}`)}}addEdge(e,x,t){let s=e*this.w+x;this.data[s]|=1<<t,this.isBorder2(e,x,t)||(this.data[s+this.delta(t)]|=1<<(t^2))}consolidate(e,x){let t=new Ze;for(let a=0;a<this.data.length;a++)!this.fixed.has(a)&&this.data[a]&&t.add(this.data[a]);let s=1e3;for(;t.unique()>x&&--s;){let a=[...t].sort((d,c)=>c[1]-d[1]),n=a[x][1],i=new Set(a.filter(d=>d[1]<=n).map(d=>d[0])),o=this.findEligibleConsolidates(i);if(!o.length)return[];for(let[d,c]of e.pick(o))this.data[d]&&t.delete(this.data[d]),c&&t.add(c),this.data[d]=c}return s?[...t].map(a=>a[0]):[]}consolidateFixed(e,x){let t=new Ze;for(let a=0;a<this.data.length;a++){let n=this.data[a];!this.fixed.has(a)&&x.has(n)&&t.add(n)}let s=1e3;for(;t.unique()&&--s;){let a=this.findEligibleConsolidates(x);if(!a.length)return!1;for(let[n,i]of e.pick(a)){let o=this.data[n];x.has(o)&&t.delete(o),x.has(i)&&t.add(i),this.data[n]=i}}return!!s}findEligibleConsolidates(e){let x=[],t=[];for(let s=0;s<this.data.length;s++){if(this.fixed.has(s))continue;let a=this.data[s];if(!!e.has(a))for(let n=0;n<4;n++){if(this.isBorder(s,n))continue;let i=this.delta(n);if(this.fixed.has(s+i))continue;let o=1<<n;if(e.has(a^o))continue;let d=1<<(n^2),c=this.data[s+i],f=new Map([[s,a^o],[s+i,c^d]]);if(!!this.check(f)&&(x.push(f),!e.has(c^d)&&e.has(c))){t.push(f);break}}}return t.length?t:x}try(e){if(!this.check(e))return!1;for(let[x,t]of e)this.data[x]=t;return!0}check(e){let x=new X0;for(let t=0;t<this.h;t++)for(let s=0;s<this.w;s++){let a=t*this.w+s,n=e?.get(a)??this.data[a];n&&x.union([a]),t>0&&n&1&&x.union([a,a-this.w]),s>0&&n&2&&x.union([a,a-1]),t<this.h-1&&n&4&&x.union([a,a+this.w]),s<this.w-1&&n&8&&x.union([a,a+1])}return x.roots().length===1}addPath(e,x){let t,s;if(!this.size)t=e.nextInt(this.h),s=e.nextInt(this.w);else{let d=[];for(let f=0;f<this.data.length;f++)this.data[f]&&this.data[f]!==15&&d.push(f);if(!d.length)return!1;let c=e.pick(d);s=c%this.w,t=(c-s)/this.w}let a=new Map,n=t*this.w+s,i=0,o=!0;for(;;){let d=!1,c=a.get(n)??this.data[n],f=!1;for(let l of e.ishuffle([0,1,2,3])){let h=1<<l;if(c&h)continue;let b=c|h;if(this.valid&&!this.valid.has(b))continue;let u=t+_c[l],S=s+Nc[l];if(u<0||S<0||u>=this.h||S>=this.w)continue;let m=u*this.w+S,p=a.get(m)??this.data[m],g=p|1<<(l^2);if(p){if(p===g||this.valid&&!this.valid.has(g))continue;d=!0}o=!this.valid||this.valid.has(g),a.set(n,b),a.set(m,g),s=S,t=u,n=m,f=!0;break}if(!f||d||this.data[n]||(this.size++||this.size++,o&&x&&this.size>=x)||o&&e.nextInt(15)<i++)break}if(!a.size||!o)return!1;for(let[d,c]of a)this.data[d]=c;return!0}toGrid(e){let x=new c6(this.h,this.w);for(let t=0;t<this.h;t++)for(let s=0;s<this.w;s++){let a=t*this.w+s,n=this.data[a];if(!n)continue;let i=t<<12|s<<4|2056;x.set(i,e);for(let o=0;o<4;o++){if(!(n&1<<o))continue;let d=o&1?8:2048;x.set(o&2?i+d:i-d,e)}}return x}delta(e){return(e&2?1:-1)*(e&1?1:this.w)}show(){let e=[];for(let x=0;x<this.h;x++){let t="";for(let s=0;s<this.w;s++)t+=" \u2575\u2574\u2518\u2577\u2502\u2510\u2524\u2576\u2514\u2500\u2534\u250C\u251C\u252C\u253C"[this.data[x*this.w+s]];e.push(t)}return e.join(`
`)}},I7=class{constructor(e,x,t){this.grid=e;this._i=x*e.w+t}get x(){return this._i%this.grid.w}get y(){return Math.floor(this._i/this.grid.w)}go(e){let x=this.grid.delta(e),t=this._i+x,s=1<<e,a=1<<(e^2);this.grid.data[this._i]|=s,this.grid.data[this._i=t]|=a}directedPath(e,x,t){for(;;){let s=this.y,a=this.x,n=[];if(x<s&&n.push(0),t<a&&n.push(1),x>s&&n.push(2),t>a&&n.push(3),!n.length)return;this.go(e.pick(n))}}},_c=[-1,0,1,0],Nc=[0,-1,0,1];var ut=class extends G{constructor(){super(...arguments);this.maxAttempts=250}initialFill(){let x;return x=this.initialFillEarly(),!x.ok||(this.initialFillLate(),x=this.connectEarlyToLate(),!x.ok)?x:(this.count=[...this.grid.screens()].filter(t=>this.grid.get(t+2056)).length,U)}initialFillEarly(){let x=new k6(this.h,this.w,this.getValidEarlyScreens()),t=0,s=this.targetEarly();for(;t++<20&&x.size<s;)x.addPath(this.random,s)&&(t=0);return this.grid.data=x.toGrid(this.early).data,this.addAllFixed(),U}initialFillLate(){for(let x=0;x<this.h;x++)for(let t=0;t<this.w;t++){let s=x<<12|t<<4|2056;this.grid.get(s)||this.grid.set(s,"c")}for(let x=0;x<this.h;x++)for(let t=0;t<this.w;t++)for(let s of[8,2048]){let a=x<<12|t<<4|2056,n=a+s,i=a+2*s;!this.grid.isBorder(n)&&!this.grid.get(n)&&this.grid.get(a)==="c"&&this.grid.get(i)==="c"&&this.grid.set(n,"c")}}connectEarlyToLate(){for(let x of this.random.ishuffle(this.grid.screens()))for(let t of[8,2048]){let s=x|2056,a=s+t,n=s+2*t;if(this.grid.isBorder(a)||this.grid.get(a))continue;this.grid.set(a,"c");let i=this.extract(this.grid,s-2056),o=this.extract(this.grid,n-2056);(!this.orig.tileset.getMetascreensFromTileString(i).length||!this.orig.tileset.getMetascreensFromTileString(o).length)&&this.grid.set(a,"")}return U}pruneDisconnected(){let x=new Set(this.grid.partition().values()),t=0;for(let s of x)if([...s].some(n=>this.grid.get(n)===this.early))t+=[...s].filter(n=>(n&2056)===2056).length;else for(let n of s){if(this.fixed.has(n))return{ok:!1,fail:`fixed tile ${A(n)} disconnected`};this.grid.set(n,"")}return t<this.params.size?(console.error(this.grid.show()),{ok:!1,fail:"too much disconnected"}):U}getValidEarlyScreens(){if(!this.validEarlyScreens){let x=new Set;for(let t of this.orig.tileset){let s=t.edgeIndex(this.early);s!=null&&x.add(s)}this.validEarlyScreens=x}return this.validEarlyScreens}addEarlyFeatures(){if(!this.addArenas(this.params.features?.arena??0))return{ok:!1,fail:"addArenas"};let x;return x=this.pruneDisconnected(),x.ok?super.addEarlyFeatures():x}},L7=class extends ut{constructor(){super(...arguments);this.early="w";this.maxAttempts=250}targetEarly(){let x=this.params.features?.wide;return x!=null?x+2+this.random.nextInt(3):0}initialFillEarly(){let x=new k6(this.h,this.w);x.fill();let t=O(x.data.length).slice(x.w),s=this.random.pick(t);if(!x.deleteEdge(s,1))return{ok:!1,fail:"initial stair"};if(!x.deleteEdge(s,2))return{ok:!1,fail:"initial stair"};if(!x.deleteEdge(s,3))return{ok:!1,fail:"initial stair"};x.fixed.add(s);let a=new Set(t);a.delete(s);let n=[];for(let c of this.random.ishuffle(a)){let f=function(S){return x.delete(S)?(x.fixed.add(S),!0):!1},l=this.params.features?.arena??0;if(n.length>=l)break;if(c>x.data.length-2*x.w||x.fixed.has(c))continue;let h=!x.isBorder(c,1),b=!x.isBorder(c,3);if(h&&x.fixed.has(c-1)||b&&x.fixed.has(c+1)||x.fixed.has(c-x.w)||x.fixed.has(c+x.w)||!(x.data[c]&4))continue;if(!f(c-x.w))return{ok:!1,fail:"initial arena"};if(h&&!f(c-1))return{ok:!1,fail:"initial arena"};if(b&&!f(c+1))return{ok:!1,fail:"initial arena"};let u=c+x.w;if((x.data[u]&5)!==5)return{ok:!1,fail:"initial arena"};if(!x.deleteEdge(u,1))return{ok:!1,fail:"initial arena"};if(!x.deleteEdge(u,3))return{ok:!1,fail:"initial arena"};x.deleteEdge(u+x.w,2),x.fixed.add(u),n.push(c),x.fixed.add(c)}if(!x.refine(this.random,this.targetEarly()))return{ok:!1,fail:"refine"};let i=new Set;for(let c=1;c<16;c++)this.getValidEarlyScreens().has(c)||i.add(c);if(!x.consolidateFixed(this.random,i))return{ok:!1,fail:"consolidate"};this.grid.data=x.toGrid("w").data;let o=(c,f)=>{let l=c%x.w,b=(c-l)/x.w<<12|l<<4|2056;this.grid.set(b,f);for(let u of[-2056,-2048,-2040,-8,0,8,2040,2048,2056])this.fixed.add(b+u)};o(s,">");for(let c of n)o(c,"a");let d=3;for(let c of this.grid.screens())this.grid.get(c+2056)&&d++;return this.size=d,U}addStairs(x,t){return super.addStairs(x,t?t-1:0)}addArenas(){return!0}connectEarlyToLate(){for(let x=0;x<this.h;x++){let t=x<<12|2056;for(let s=0;s<this.w;s++){let a=t|s<<4;this.grid.get(a)==="a"&&this.grid.set(a-2048,"c")}}return U}preinfer(){let x=new Map;for(let a=0;a<this.grid.data.length;a++)this.grid.data[a]==="w"&&x.set(this.grid.coord(a),"");let t=this.grid.partition(x),s=new Set;for(let[a,n]of t)this.grid.get(a)==="<"&&s.add(n);return s.size<2?{ok:!1,fail:"stairs bunched"}:U}refineMetascreens(x){for(let t of x.allPos())x.get(t).hasFeature("arena")&&x.set(t,x.rom.metascreens.fortressArena_through);return U}refineEdges(){return!0}};var R6=class extends ut{constructor(){super(...arguments);this.early="r";this.maxAttempts=250}targetEarly(){return this.params.features?.river??0}preinfer(){if([...this.orig.exits()].length<2)return U;let x=new Map;for(let a=0;a<this.grid.data.length;a++)this.grid.data[a]==="r"&&x.set(this.grid.coord(a),"");let t=this.grid.partition(x),s=[];for(let a=0;a<this.grid.data.length;a++)(this.grid.data[a]==="<"||this.grid.data[a]===">"||this.grid.data[a]&&this.grid.isBorder(this.grid.coord(a)))&&s.push(t.get(this.grid.coord(a)));return new Set(s).size<s.length?{ok:!1,fail:`river didn't matter
${this.grid.show()}`}:super.preinfer()}addLateFeatures(){return U}addArenas(x){if(!x)return!0;let t=this.grid;for(let s of this.random.ishuffle(this.grid.screens())){let a=s|2056,n=a-8,i=n-8,o=a+8,d=o+8,c=a-2048,f=a+2048;if(t.get(a)!=="c"||t.get(c)!=="c"||t.get(f)!=="c")continue;let l=t.isBorder(n)?"":this.extract(t,i-2056),h=t.isBorder(o)?"":this.extract(t,d-2056);if(!/[^ c]/.test(l+h)&&(t.isBorder(n)||(t.set(n,""),t.set(i,""),t.set(i-8,""),t.set(i-2048,""),t.set(i+2048,"")),t.isBorder(o)||(t.set(o,""),t.set(d,""),t.set(d+8,""),t.set(d-2048,""),t.set(d+2048,"")),this.fixed.add(a),this.fixed.add(c),this.fixed.add(f),t.set(a,"a"),x--,!x))return this.pruneDisconnected(),!0}return!1}},A7=class extends R6{constructor(){super(...arguments);this.addBlocks=!1}initialFillEarly(){let x=new k6(this.h,this.w,this.getValidEarlyScreens()),t=2+this.random.nextInt(this.w-4),s=2+this.random.nextInt(this.w-4),a=new I7(x,this.h-1,s);return a.go(0),a.directedPath(this.random,1,t),a.go(0),this.grid.data=x.toGrid("r").data,this.addAllFixed(),U}addEdges(){let x=-1,t=this.h-1<<12|2056;for(let n=0;n<this.w;n++)this.grid.get(t|n<<4)==="r"&&(x=n);if(x<0)throw new Error("no river on bottom edge");let s=t|this.random.nextInt(x)<<4,a=t|x+1+this.random.nextInt(this.w-1-x)<<4;return this.grid.set(s,">"),this.grid.set(s-8,""),this.grid.set(s+8,""),this.grid.set(a,">"),this.grid.set(a-8,""),this.grid.set(a+8,""),this.fixed.add(s),this.fixed.add(a),U}addStairs(){return U}checkMeta(x,t){let s=t?{flight:!0,with:t}:{flight:!0},a=x.traverse(s);return new Set(a.values()).size===this.maxPartitions}},B7=class extends G{constructor(){super(...arguments);this.addBlocks=!1}pickWidth(){return super.pickWidth()+this.random.nextInt(2)}initialFill(){let x=new j(()=>[]);for(let c of this.orig.tileset){if(!c.hasFeature("spikes")||!c.data.edges)continue;let f=0;for(let l=0;l<4;l++)c.data.edges[l]==="s"&&(f|=1<<l);x.get(f).push(...c.gridTiles())}let t=1+this.random.nextInt(this.w-2),s=1+this.random.nextInt(this.h-2),a=s<<4|t,n=this.posToGrid(a,2056),i=s<this.h/2?2:0;this.insertTile(a,this.random.pick(x.get(1<<i)));for(let c=4;c>=0;c--){a+=Fc[i],n=n+ia[i];let f=i^2,l=[];for(let[b,u]of x){if(!(b&1<<f))continue;let S=b&~(1<<f);if(!(c?!S:S))for(let m of u)l.push(b)}let h;for(let b of this.random.ishuffle(l))if(!this.grid.isBorder(n+ia[b])&&this.insertTile(a,this.random.pick(x.get(b)))){h=31-Math.clz32(b&~(1<<f));break}if(h==null)return{ok:!1,fail:"spikes"};i=h}let o=[];for(let c=3;c<this.h-3;c++)for(let f=1;f<this.w-1;f++)o.push(c<<12|f<<4|2056);let d=!1;for(let c of this.random.ishuffle(o))if(!this.grid.get(c)){for(let f of ia){if(this.grid.get(c+f)!=="c")continue;this.grid.set(c,"r");let l=2056&~Math.abs(f);this.grid.set(c+l,"r"),this.grid.set(c-l,"r");let h=this.random.pick([-l,l]);this.grid.set(c+2*h,"r"),this.grid.set(c+3*h,"r"),this.grid.set(c+2*h-f,"c"),d=!0;break}if(d)break}if(!d)return{ok:!1,fail:"nucleate river"};for(let c=5+this.random.nextInt(3);c>0;c--)if(!this.tryAdd({char:"c"}))return{ok:!1,fail:"fill cave"};for(let c=0;c<this.grid.data.length;c++)if(this.grid.data[c]&&this.grid.isBorder(this.grid.coord(c)))return{ok:!1,fail:"border"};return U}checkMeta(x,t){let s=t?{flight:!0,with:t}:{flight:!0},a=x.traverse(s);return new Set(a.values()).size===this.maxPartitions}refine(){return U}refineEdges(){return!0}addSpikes(x){return!0}refineMetascreens(x){let t=super.refineMetascreens(x);if(!t.ok)return t;function s(i){return[...new Set(i.values())].filter(d=>{for(let c of d)if(x.exitType(c)?.startsWith("stair"))return!0;return!1}).length}let a=s(x.traverse()),n=s(x.traverse({flight:!0}));return a===n?{ok:!1,fail:"flight not required"}:U}},ia=[-2048,-8,2048,8],Fc=[-16,-1,16,1],P7=class extends R6{constructor(){super(...arguments);this.addBlocks=!1}fillGrid(){let x=[],t=0;for(let o of this.random.ishuffle(O(this.w-2,d=>d+1))){if(x.length===1&&(o-x[0])**2<=1)continue;let d=this.h-1<<12|o<<4|2056;if(this.grid.set(d,"c"),this.grid.set(vx(d),"c"),this.grid.set(j0(d),"n"),this.fixed.add(d),this.fixed.add(vx(d)),this.fixed.add(j0(d)),x.push(o),t++,x.length===2)break}if(x.length<2)return{ok:!1,fail:"initial edges"};let s=this.w,a=this.random.nextInt(Math.abs(x[0]-x[1])-1)+Math.min(x[0],x[1])+1;for(let o=1;o<2*this.w;o++)o!==2*a+1&&(this.grid.set(this.h-2<<12|o<<3|2048,"r"),this.fixed.add(this.h-1<<12|o<<3|2048));let n=this.params.features.river;for(;s<n;){let o=this.tryAdd({char:"r"});if(!o)return{ok:!1,fail:`failed to extrude river
${this.grid.show()}`};s+=o,t+=o}let i=this.params.size;for(;t<i;){let o=this.tryAdd();if(!o)return{ok:!1,fail:"failed to extrude cave"};t+=o}return this.addStairs(...this.params.stairs??[])}checkMeta(){return!0}refineMetascreens(x){let t=super.refineMetascreens(x);if(!t.ok)return t;function s(o){let d=0;for(let c of new Set(o.values()))for(let f of c)if(x.exitType(f)==="edge:bottom"){d+=c.size;break}return d}let a=s(x.traverse({noFlagged:!0})),n=s(x.traverse());if(a===n)return{ok:!1,fail:"bridge didn't matter"};let i=s(x.traverse({flight:!0}));return n===i?{ok:!1,fail:"flight not required"}:U}},_7=class extends R6{constructor(){super(...arguments);this.pattern=["               "," rrrrrrrrrrrrr "," r           r "," r rrrrrrrrr r "," r r       r r "," r r rrrrr r r "," r r r   r r r "," r r r   r r r "," r r r   r r r "," r r r < r r r "," r r r c r r r "," r r rrrrr r r "," r r       r r "," r rrrrrrrrr r "," r           r "," rrrrrrrrrrrrr ","               "]}initialFill(){return this.insertPattern(this.pattern)}addEdges(){let x;for(let a=0;a<this.grid.data.length;a++)if(this.grid.data[a]==="r"){x=this.grid.coord(a)-2056;break}if(x==null)throw new Error("no corner");let t=[];for(let a=0;a<this.pattern.length;a++)for(let n=1;n<this.pattern[a].length-1;n++)!((n^a)&1)||this.pattern[a][n]===" "&&t.push(x+(a<<11|n<<3));let s=this.random.shuffle([..."ccrrrrrrrr"]);for(let a of this.random.ishuffle(t)){let n=s[s.length-1];if(!(n==="c"&&[...this.extract(this.grid,a-2056)].filter(i=>i==="r").length<4)&&(this.canSet(a,n)&&this.grid.set(a,s.pop()),!s.length))break}for(let a=0;a<6;a++)this.tryAdd({char:"c"});return U}refine(){let x=[...this.params.stairs??[]];if(x[0]--,x[0]||x[1]){let a=this.addStairs(...x);if(!a.ok)return a}let t=0;for(let a of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,a).replace(/ /g,"")==="c"&&(x[0]&&!this.grid.get(a+8)&&(this.grid.set(a+2056,"<"),x[0]--),this.fixed.add(a+2056),++t>=2))break;let s=this.grid.partition();return new Set(s.values()).size>1?{ok:!1,fail:"orphans"}:U}fillGrid(){let x;return x=this.initialFill(),!x.ok||(x=this.addEdges(),!x.ok)||(x=this.refine(),!x.ok)?x:U}checkMeta(x,t){let s=x.traverse(t?{with:t}:{}),a=[];for(let n of new Set(s.values())){let i=0;for(let o of new Set([...n]))x.exitType(o)&&i++;a.push(i)}return a.filter(n=>n>0).length===1}refineMetascreens(x){if(!this.checkMeta(x))return{ok:!1,fail:"initial checkMeta"};let t=super.refineMetascreens(x);if(!t.ok)return t;function s(i){let o=0;for(let d of new Set(i.values()))for(let c of d)if(x.exitType(c)){o+=d.size;break}return o}let a=s(x.traverse()),n=s(x.traverse({flight:!0}));return a===n?{ok:!1,fail:"flight not required"}:U}};var N7=class extends G{build(){let{h:e,w:x}=this,t=this.orig.rom,s=new k6(e,x);s.fill();let a=e*x<28?0:this.random.nextInt(e-1),n=this.random.nextInt(x),i=new Set;function o(k,N){s.delete2(k,N),i.add(k*s.w+N)}function d(k){return!k.startsWith("edge")}i.add(a*s.w+n),n&&o(a,n-1),n<s.w-1&&o(a,n+1),a&&(o(a-1,n),n&&o(a-1,n-1),n<s.w-1&&o(a-1,n+1));for(let k of i)s.fixed.add(k);let c=new Set;for(let k=0;k<4;k++){let N=k&1?e:x,D=this.random.shuffle(O(N)),e0=k&2?N:0,i0=this.params.edges?.[k]??0;for(;i0&&D.length;){let p0=k&1?D.pop():e0,F0=k&1?e0:D.pop(),g0=p0*s.w+F0;!s.data[g0]||s.fixed.has(g0)||(s.addEdge(p0,F0,k),c.add(p0<<4|F0),i0--)}if(i0)return{ok:!1,fail:`could not add all edges: ${k} ${i0}
${s.toGrid("c").show()}
${s.data}`}}let f=0,l=s.h*s.w*(this.random.next()*.15+.4);for(let k of this.random.ishuffle(O(s.data.length<<2))){let N=k>>>2,D=k&3;if(!s.isBorder(N,D)&&s.deleteEdge(N,D)&&++f>=l)break}let h=new Set,b=new Set,u=[],S=[],m;for(let k of this.orig.tileset){if(k.hasFeature("arena")){m=k;continue}else if(k.hasFeature("empty")){u[0]=k;continue}let N=k.edgeIndex("s");if(N==null)throw new Error("bad edges");let D=k.data.exits?.some(e0=>d(e0.type));(D?S:u)[N]=k,(k.sid<0?b:h).add(k.sid)}if(!m)throw new Error("never found arena");let p=s.consolidate(this.random,h.size),g=new Set(p.map(k=>u[k].sid));if(!g.size)return{ok:!1,fail:"consolidate failed"};let w=[...b].filter(k=>g.has(k)),M=[...h].filter(k=>!g.has(k));if(w.length>M.length)throw new Error("out of space");if(w.length){let k=-1;for(;t.metascreens.getById(k).length;)k--;let N=k;for(let D=0;D<w.length;D++)t.metascreens.renumber(M[D],k),t.metascreens.renumber(w[D],M[D]),k=w[D];t.metascreens.renumber(N,w[w.length-1])}let I=new cx(this.orig.id,this.orig.tileset,e,x);for(let k=0;k<s.h;k++)for(let N=0;N<s.w;N++){let D=k===a&&N===n;I.set(k<<4|N,D?m:u[s.data[k*s.w+N]])}let P=[...this.orig.exits()].filter(k=>d(k[1])).length;for(let k of this.random.ishuffle(I.allPos())){if(!P)break;if(c.has(k))continue;let N=k&15,D=k>>>4,e0=S[s.data[D*s.w+N]];!e0||(I.set(k,e0),P--)}return P?{ok:!1,fail:"could not place all doors"}:U}};function li(r){let{swamp:e}=r.metatilesets,x=r.metascreens,t=[[3,218,172],[4,228,170],[5,229,170],[6,230,170],[7,231,170],[8,240,170],[9,241,170],[10,242,170],[11,243,170],[12,220,170],[13,221,170]];for(let[s,a,n]of t)e.getTile(s).copyFrom(a).setAlternative(n);x.swampEmpty.screen.set2d(0,[[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[210,204],[210,204],[210,204],[210,226],[226,200]]),x.swampE.screen.set2d(76,[[8,9],[12,11],[3,3]]),x.swampWSE.screen.set2d(37,[[,,4],[8,9,5],[,10,6],[,11,7],[,3,3]]),x.swampW.screen.set2d(36,[[4],[],[6],[7,13],[3,3]]),x.swampWS.screen.set2d(71,[[8,9],[12,11],[3,3]]),x.registerFix(15,0)}var F7=class extends G{initialFill(){let x=this.size+3,t=this.random.nextInt(this.w)<<4|this.h-1<<12|2056;this.grid.isBorder(W6(t))||this.fixed.add(W6(t,2)),this.grid.isBorder(x6(t))||this.fixed.add(x6(t,2)),this.grid.set(t,">"),this.fixed.add(t),this.grid.set(vx(t),"w"),this.fixed.add(vx(t)),this.fixed.add(W6(t)),this.fixed.add(x6(t));let s=this.random.nextInt(this.w)<<4|2056,a=j0(s,2);if(this.grid.set(s,"<"),this.fixed.add(s),this.grid.set(j0(s),"w"),this.fixed.add(j0(s)),this.grid.set(a,"w"),this.fixed.add(a),this.grid.set(j0(a),"w"),this.fixed.add(j0(a)),this.fixed.add(W6(a)),this.fixed.add(x6(a)),!this.tryConnect(vx(t,2),j0(a,2),"w",10))return{ok:!1,fail:"initial connect"};for(;this.count<x;)if(!this.tryAddLoop("w",10))return{ok:!1,fail:"add loops"};return U}refine(){return U}refineEdges(){return!0}addArenas(){return!0}addStairs(){return U}refineMetascreens(x){console.log(x.show());for(let s=0;s<x.height;s++)for(let a=0;a<x.width;a++){let n=s<<4|a,i=x.get(n),o=i.edgeIndex("w");if(i.hasFeature("arena"))this.arena=n+16<<8|1;else if(o===5){if(n<16||!x.get(n-16).hasFeature("arena")){x.set(n,x.rom.metascreens.goaWideHallNS_stairs);let d=(n<<8|n<<4)&61680|2056;this.grid.set(d,"H")}}else o===1&&(this.stair=n<<8|2)}if(this.reachable=void 0,!this.checkMeta(x))return{ok:!1,fail:"initial meta check"};console.log(x.show());let t=this.orig.rom.metascreens.goaWideHallNS_deadEnd;for(let s=0;s<x.width;s++)for(let a=0;a<x.height;a++){let n=a<<12|s<<4|2056,i=0;for(;a+i<x.height&&this.grid.get(n+i*4096)==="H";)i++;if(!i)continue;let o=[new Map,new Map];for(let c=0;c<i;c++)o[c&1].set(a+c<<4|s,t);let d=!1;for(let c of this.random.ishuffle(o)){if(!c.size){d=!0;continue}if(!!this.checkMeta(x,c)){for(let[f,l]of c)x.set(f,l),this.grid.set(n+4096*((f>>4)-a),"=");d=!0;break}}if(!d)return{ok:!1,fail:"could not rectify hallway"};a+=i}return super.refineMetascreens(x)}checkMeta(x,t){let s=t?{with:t}:{},a=x.traverse(s),n=a.get(this.stair);return n!==a.get(this.arena)?(console.log(`stair not connected to arena
${x.show()}`),!1):this.reachable==null?n&&n.size<a.size*.95?(console.log("too small"),!1):(this.reachable=n?.size,!0):n?.size>this.reachable*.95}};function hi(r,e){let{metatilesets:{cave:x,fortress:t,iceCave:s,labyrinth:a,pyramid:n}}=r;r.metascreens.registerFix(14,1);{for(let o of[a,n])o.getTile(43).copyFrom(25).replaceIn(...o),o.getTile(186).copyFrom(27).replaceIn(...o);for(let o of[t,a,n,x])o.getTile(25).copyFrom(23).replaceIn(...o),o.getTile(27).copyFrom(24).replaceIn(...o);for(let o of[s,x,n])o.getTile(23).copyFrom(197),o.getTile(24).copyFrom(197);a.getTile(23).copyFrom(198).setAlternative(197),a.getTile(24).copyFrom(196).setAlternative(197)}let i=new j(()=>[]);for(let o of r.metatilesets.labyrinth)i.get(o.sid).push(o);for(let[o,d]of i){let c=r.screens[o],f=d.map(b=>b.data.tilesets.labyrinth?.removeWall),[l,...h]=new Set(f.filter(b=>b!=null));if(l!=null){if(c.set2d(l,[[197,197],[208,197]]),h.length)throw new Error("bad remove");for(let b=0;b<f.length;b++)f[b]==null&&(d[b].data.tilesets.labyrinth.addWall=[l])}if(!(d.length<2)){if(d.length>2){let b=e.pick(d.filter(u=>u.data.tilesets.labyrinth?.addWall));d.splice(d.indexOf(b),1),b.remove()}for(let b of d){let u=b.data.tilesets.labyrinth?.addWall;if(u!=null){b.data.mod="block";for(let S of u)c.set2d(S,[[23,23],[24,24]])}else b.flag="always"}}}}var D7=class{constructor(e){this.location=e}shuffle(e){if(this.meta)throw new Error("impossible");let x=this.location.meta;Dc(x,e),e.nextInt(2)&&Gc(this.location.rom);let t=[...x.exits()].filter(i=>i[1]==="stair:up"),s=[...x.exits()].filter(i=>i[1]==="stair:down");e.shuffle(t),e.shuffle(s);for(let i of[...x.exits()])if(i[2][0]>>>8!==this.location.id){let o=(i[1]==="stair:up"?t:s).pop();x.setExit(o[0],o[1],i[2])}if(t.length!==s.length)throw new Error("length mismatch");let a=e.shuffle([...s]);for(let i=0;i<s.length;i++)s[i]===a[i]&&(e.shuffle(a),i=-1);let n=this.location.id<<8;for(let i=0;i<t.length;i++)x.setExitOneWay(t[i][0],t[i][1],[n|s[i][0],s[i][1]]),x.setExitOneWay(a[i][0],a[i][1],[n|t[i][0],t[i][1]]);this.meta=x}finish(){}};function Dc(r,e){let x=e.nextInt(2)+6,t=e.nextInt(3)+2;if(x===7&&t===3)return;let{branchNWSE:s,branchNWE:a,branchWSE:n,branchNWE_upStair:i,deadEndW:o,deadEndE:d}=r.rom.metascreens,c=x<<4|t,f=n;x===7&&t===1&&(f=d),x===7&&t===5&&(f=o),r.set2d(99,[[s],[s],[s]]),r.set2d(c-16,[[a],[i],[f]]),r.moveExit(115,c)}function Gc(r){let e=r.locations.Pyramid_Draygon.meta,x=r.locations.Pyramid_Main.meta,{metascreens:{hallSE:t,deadEndW_downStair:s,wideHallNE:a,wideHallNW:n,fortressArena_through:i,deadEndS_stairs:o}}=r;e.width=2,e.set2d(0,[[null,o],[null,i],[a,n]]),e.moveExit(32,1),x.set2d(3,[[t,s]]),x.moveExit(3,4),x.attach(4,e,1)}function ui(r,e,x){let t=new oa(r),s=new da(e,t),a=new ca(x,s);return[t,s,a]}var oa=class extends G{constructor(){super(...arguments);this.patterns=[["     "," >cc ","   c ","   b ","   c "],["     "," cc> "," c   "," b   "," c   "],["   c ","   b ","   c "," >cc ","     "],[" c   "," b   "," c   "," cc> ","     "]]}initialFill(){let x=this.random.pick(this.patterns);this.count=3;let t=this.insertPattern(x,{top:1,bottom:1});if(!t.ok)return t;this.addAllFixed();for(let s=0;s<this.grid.data.length;s++){if(this.grid.data[s]!==">")continue;let a=this.grid.coord(s);this.stair=a>>>8&240|a>>>4&15}return U}addEdges(){let x=10;for(;this.count<this.size&&x;)this.tryAdd()||x--;return x?U:{ok:!1,fail:"addEdges"}}addEarlyFeatures(){let x=!1;for(let t of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,t)===" c  c  c "){this.grid.set(t+2056,"b"),x=!0;break}return x?super.addStairs(0,2):{ok:!1,fail:"could not add bridge"}}refine(){return U}addLateFeatures(){return U}addStairs(){return U}},da=class extends G{constructor(x,t){super(x);this.location=x;this.upper=t;this.maxAttempts=200}build(){return this.upper.attempt<this.attempt&&(this.upper.meta=void 0,this.upper.shuffle(this.random),!this.upper.meta)?{ok:!1,fail:"dependent failed"}:super.build()}initialFill(){let x=[],t=!0,s=this.upper.meta,a=this.upper.stair;if(s.get(a).isEmpty()||(a+=16,t=!1),a==null)throw new Error("no stair found");for(let w of s.allPos())s.get(w).hasFeature("overpass")&&x.push(w);this.random.shuffle(x);let n=a>>>4,i=a&15,o=i,d=n;for(let w of x){let M=w>>>4,I=w&15;n=Math.min(n,M),i=Math.min(i,I),o=Math.max(o,I),d=Math.max(d,M)}let c=d-n+1,f=o-i+1,l=n<<4|i,h=1+this.random.nextInt(this.w-f-2),u=(this.random.nextInt(this.h-c-(t?1:0))<<4|h)-l,S=(a&15)-i<f/2;a+=u;for(let w=0;w<x.length;w++)x[w]+=u;let m=t?"    <  c ":S?"    <c   ":"   c<    ";if(!this.insertTile(x[0],"   cbc   ")||!this.insertTile(x[1],"   cbc   "))throw new Error("Could not insert bridge tile");if(!this.insertTile(a,m)){let w=[-1,1,16,-16,15,17,-15,-17],M=!1;for(let I of this.random.ishuffle(w))if(this.insertTile(a+I,m)){a+=I,M=!0;break}if(!M)throw new Error("Could not insert stair")}this.stair=a,this.addAllFixed(),this.count=3;let p=S?1:-1,g=t?16:p;return!x.includes(a+p)&&!this.tryConnect(this.posToGrid(a+g,2056),this.posToGrid(x[0]-p,2056),"c",10)?{ok:!1,fail:"could not connect stair to bridge"}:this.tryConnect(this.posToGrid(x[0]+p,2056),this.posToGrid(x[1]+p,2056),"c",10)?U:{ok:!1,fail:"could not connect bridges"}}addEdges(){let x=100;for(;this.count<this.size-4&&x;)this.tryAdd()||x--;return x?U:{ok:!1,fail:"could not populate"}}refine(){return U}refineEdges(){return!0}addUnderpasses(){return!0}addArenas(){for(let x of this.random.ishuffle(this.grid.screens())){if(!(x&61440))continue;let t=x+2056;if(!(this.fixed.has(t)||this.grid.get(t))&&!(this.grid.get(W6(t,2))||this.grid.get(x6(t,2)))&&this.grid.get(j0(t,2))==="c"&&!!this.canSetAll(new Map([[j0(t),"c"],[t,"a"],[vx(t),"c"],[vx(t,2),"c"]])))return this.grid.set(j0(t),"c"),this.grid.set(t,"a"),this.grid.set(vx(t),"c"),this.fixed.add(t),this.fixed.add(vx(t,2)),!0}return!1}addStairs(x=0,t=0){return super.addStairs(x-1,t)}finishInternal(){if(!this.meta)throw new Error("impossible");this.upper.finish(),super.finishInternal();let x=this.upper.meta,t=this.upper.stair,s=this.stair;t!=null&&s!=null&&this.meta.attach(s,x,t,"stair:up","stair:down")}},ca=class extends G{constructor(x,t){super(x);this.main=t}build(){return this.main.attempt<this.attempt&&(this.main.meta=void 0,this.main.shuffle(this.random),!this.main.meta)?{ok:!1,fail:"dependent failed"}:super.build()}findArena(x){for(let t of x.allPos())if(x.get(t).hasFeature("arena"))return t;throw new Error("never found arena")}initialFill(){let x=this.main.meta,t=this.findArena(x),s=this.posToGrid(t,2056);return this.grid.set(s,"a"),this.grid.set(vx(s),"c"),this.grid.set(j0(s),"c"),this.fixed.add(s),this.fixed.add(j0(s)),this.fixed.add(j0(s,2)),U}addEdges(){let x=10,t=2+this.random.nextInt(2);for(;this.count<t&&x;)this.tryAdd()||x--;return x?U:{ok:!1,fail:"addEdges"}}refine(){return U}addLateFeatures(){return U}inferScreens(){let x=super.inferScreens();if(!x.ok)return x;let t=x.value,s=this.findArena(t),a=this.main.meta;return t.set(s+15,this.orig.tileset.unreachableVariant(a.get(s+15))),t.set(s+16,this.orig.tileset.unreachableVariant(a.get(s+16))),t.set(s+17,this.orig.tileset.unreachableVariant(a.get(s+17))),x}finishInternal(){if(!this.meta)throw new Error("impossible");this.main.finish();let x=this.main.meta,t=this.findArena(this.meta);super.finishInternal(),x.setExit(t,"seamless:up",[this.meta.id<<8|t,"seamless:down"]),this.meta.freeFlags=new Set(x.freeFlags)}reportFailure(){throw new Error("Completely failed to shuffle Karmine Kensu map")}},fa=class extends G{constructor(){super(...arguments);this.looseRefine=!0}pickWidth(){return 8}pickHeight(){return 5}initialFill(){if(this.grid.height!==5||this.grid.width!==8)throw new Error("bad size");return c6.writeGrid2d(this.grid,0,fa.PATTERN),this.count=36,U}addSpikes(){let x=this.random.nextInt(4);for(let a=1;a<10;a++)for(let n=0;n<4;n++){let i=2*n+5+a*17;if(n===x)this.grid.data[i]="c";else{let o=this.grid.coord(i);this.fixed.add(o),a===5&&(this.fixed.add(o+8),this.fixed.add(o+16),this.fixed.add(o-8),this.fixed.add(o-16))}}let t=0;for(let a of this.random.ishuffle(this.grid.screens())){if(t===3)break;let n=a|2056,i=vx(n),o=vx(n,2),d=j0(n),c=j0(n,2),f=W6(n),l=x6(n);if(this.grid.get(n)!=="c"||this.grid.get(i)==="s"||this.grid.get(o)==="s"||this.grid.get(d)==="s"||this.grid.get(c)==="s")continue;let h=[],b=[];for(let u of[d,f,l])this.grid.get(u)==="c"&&(this.grid.get(2*u-n)==="s"?b.push(u):h.push(u));if(!(b.length>1)&&!(!h.length&&!b.length)){for(;h.length+b.length>1&&!(h.length+b.length===2&&!h.includes(d)&&!b.includes(d));){let[u]=h.splice(this.random.nextInt(h.length),1);this.grid.set(u,"")}this.grid.set(i,""),this.fixed.add(n),this.grid.set(n,"<"),t++}}return new Set(this.grid.partition().values()).size===1}addStairs(){return U}},bt=fa;bt.PATTERN=["                 ","   ccccccccccc   ","   c c c c c c   "," ccc s s s s ccc "," c c s s s s c c "," ccccscscscscccc "," c c s s s s c c "," ccc s s s s ccc ","   c c c c c c   ","   ccccccccccc   ","                 "];function bi(r,e,x){let t=r.locations;$c(r,x);let s=new v7(r,x);s.add(),s.shuffles.length||s.add(new G(t.EastCave1),new G(t.EastCave2),new G(t.EastCave3),...M7(t.SealedCave1,t.SealedCave2),new G(t.SealedCave3),new G(t.SealedCave4),new G(t.SealedCave5),new G(t.SealedCave6),new G(t.SealedCave7),new G(t.SealedCave8),new G(t.WindmillCave),new G(t.ZebuCave),new N7(t.Swamp),new G(t.MtSabreWest_Cave1),new G(t.MtSabreWest_Cave2),new G(t.MtSabreWest_Cave3),new G(t.MtSabreWest_Cave4),new G(t.MtSabreWest_Cave5),new G(t.MtSabreWest_Cave6),new me(t.MtSabreWest_Cave7),new G(t.MtSabreNorth_Cave1),new G(t.MtSabreNorth_Cave2),new G(t.MtSabreNorth_Cave3),new G(t.MtSabreNorth_Cave4),new G(t.MtSabreNorth_Cave5),new G(t.MtSabreNorth_Cave6),new G(t.MtSabreNorth_Cave7),new G(t.MtSabreNorth_Cave8),new G(t.MtSabreNorth_Cave9),new G(t.MtSabreNorth_LeftCell2),new G(t.MtSabreNorth_SummitCave),new G(t.KirisaPlantCave1),new G(t.KirisaPlantCave2),new G(t.KirisaPlantCave3),new G(t.FogLampCave1),new G(t.FogLampCave2),new G(t.FogLampCave3),new C7(t.FogLampCaveDeadEnd),...M7(t.FogLampCave5,t.FogLampCave4,!0),...M7(t.FogLampCave7,t.FogLampCave6),new me(t.WaterfallCave1),new G(t.WaterfallCave2),new ue(t.WaterfallCave3),new A7(t.WaterfallCave4),new R6(t.EvilSpiritIsland2).requirePitDestination(),new me(t.EvilSpiritIsland3),new R6(t.EvilSpiritIsland4),new L7(t.SaberaPalace1).requirePitDestination(),new G(t.SaberaPalace2),new G(t.SaberaPalace2_West),new G(t.JoelSecretPassage),new G(t.MtHydra_Cave1),new G(t.MtHydra_Cave2),new G(t.MtHydra_Cave3),new G(t.MtHydra_Cave4),new G(t.MtHydra_Cave5),new G(t.MtHydra_Cave6),new ue(t.MtHydra_Cave7),new G(t.MtHydra_Cave8),new G(t.MtHydra_Cave9),new G(t.MtHydra_Cave10),new ue(t.Styx1).setUpEdgeType("c"),new P7(t.Styx2).requirePitDestination(),new G(t.Styx3),new _7(t.OasisCaveMain),new G(t.DesertCave1),new G(t.DesertCave2),new G(t.Pyramid_Branch),new D7(t.Pyramid_Main),new E7(t.Crypt_Entrance),new ue(t.Crypt_Hall1).setUpEdgeType("c"),new G(t.Crypt_DeadEndLeft),new G(t.Crypt_DeadEndRight),new G(t.Crypt_Branch),new G(t.Crypt_Hall2),new F7(t.GoaFortress_Kelbesque),new R6(t.GoaFortress_Sabera),new G(t.GoaFortress_Mado1).requirePitDestination(),new G(t.GoaFortress_Mado2),new G(t.GoaFortress_Mado3),new G(t.GoaFortress_Karmine1),new G(t.GoaFortress_Karmine2),new G(t.GoaFortress_Karmine4),new bt(t.GoaFortress_Karmine6),...ui(t.GoaFortress_Karmine3,t.GoaFortress_Karmine5,t.GoaFortress_Kensu),new B7(t.OasisCave_Entrance)),s.shuffleAll(),console.log(String(s))}function $c(r,e=new be(1)){ln(r),li(r),hi(r,e)}function mi(r,e,x){let t=[],s=[];for(let a of r.locations)if(!Oc.has(a.id)){for(let n of a.spawns)if(n.isChest()){let i=r.slots[n.id];if(i>=112&&s.push(n.id),e.preserveUniqueChecks()){let o=r.itemGets[i];if(r.items[o?.itemId]?.unique)continue}if(n.isInvisible())continue;t.push(n.id)}}x.shuffle(t),r.slots.setMimicCount(s.length),[...C0.zip(s,t,(a,n)=>r.slots.swap(a,n))]}var Oc=new Set([182]);function pi(r,e){for(let x of r.locations)(x.id&248)!==88&&x.meta.replaceMonsters(e)}var G7=class{constructor(e){this.rom=e;this.monsterConstraints=new Map;this.npcConstraints=new Map;this.allSpritePalettes=new Set;let x=new j(()=>[]);for(let t of e.locations)if(!!t.used)for(let s=0;s<t.spawns.length;s++){let a=t.spawns[s];!a.used||(a.isMonster()?x.get(a.monsterId).push([t,s,a]):(a.isNpc()||a.isBoss())&&x.get(~a.id).push([t,s,a]))}for(let[t,s]of x)if(t<0){let a=e.npcs[~t],n=[a.data[3]];if(!e.metasprites[n[0]])throw new Error(`bad NPC: ${~t}`);a.data[2]===208&&n.push(192);let o=a.data[2]<128?a.data[2]&112:0,d=this.computeConstraint(n,s,!0,o);~t===95&&(d=d.ignorePalette()),this.npcConstraints.set(~t,d)}else{let a=h0.ALL,n=this.rom.objects[t];for(let i of la(e,n)){let d=e.objectActions[i.action]?.data.metasprites||(()=>[i.metasprite]),c=this.computeConstraint(d(i),s,i.id===t,i.data[1]),f=a.meet(c);if(!f)throw new Error(`Bad meet for ${t} with ${i.id}`);if(f&&(a=f),i.data[4]&2){let l=this.computeConstraint([i.data[20]],s,!1,i.data[1]),h=a.meet(l);if(!h)throw new Error(`Bad meet for ${t} bonus ${i.id}`);a=h}}this.monsterConstraints.set(n.id,a),n.constraint=a}}getMonsterConstraint(e,x){let t=this.monsterConstraints.get(x)||h0.NONE;return(e&88)===88||!this.rom.objects[x].goldDrop?t:t.meet(h0.COIN)||h0.NONE}getNpcConstraint(e,x){let t=this.npcConstraints.get(x)||h0.NONE;return e===30&&x===96?t.meet(h0.STOM_FIGHT):e===160&&x===201?t.meet(h0.GUARDIAN_STATUE):t}shufflePalettes(e){let x=[...this.allSpritePalettes];for(let[t,s]of this.monsterConstraints)this.monsterConstraints.set(t,s.shufflePalette(e,x));for(let[t,s]of this.npcConstraints)this.npcConstraints.set(t,s.shufflePalette(e,x))}configure(e,x){if(!x.used)return;let t=this.rom.slots[x.id],s=x.isMonster()?this.monsterConstraints.get(x.monsterId):x.isNpc()?this.npcConstraints.get(x.id):x.isChest()?t<112?h0.TREASURE_CHEST:h0.MIMIC:void 0;if(!!s){if(s.shift===3||s.float.length>=2)throw new Error("don't know what to do with two floats");if(!s.float.length)x.patternBank=Number(s.shift===2);else if(s.float[0].has(e.spritePatterns[0]))x.patternBank=0;else if(s.float[0].has(e.spritePatterns[1]))x.patternBank=1;else if(x.isMonster())throw new Error("no matching pattern bank")}}computeConstraint(e,x,t,s=0){let a=new Set,n=new Set;for(let d of e.map(c=>this.rom.metasprites[c])){for(let c of d.palettes())n.add(c);for(let c of d.patternBanks(s))a.add(c)}t=t&&a.size==1&&[...a][0]===2;let i=new Map;for(let[d,,c]of x)i.set(c.patternBank&&t?~d.id:d.id,c);let o;for(let[d,c]of i){let f=this.rom.locations[d<0?~d:d];for(let h of n)h>1&&this.allSpritePalettes.add(f.spritePalettes[h-2]);let l=h0.fromSpawn(n,a,f,c,t);o=o?o.join(l):l,!t&&c.patternBank&&(o=o.shifted())}if(!o)throw new Error("Expected child to appear");return o}};function*la(r,e){yield e;let x=e.spawnedReplacement();x&&(yield*la(r,x));let t=e.spawnedChild();t&&(yield*la(r,t)),e.id===80&&(yield r.objects.largeBlueSlime),e.id===83&&(yield r.objects.largeRedSlime)}function yi(r,e,x){let t=new G7(r);e.shuffleSpritePalettes()&&t.shufflePalettes(x);let s=new ua(e,{});for(let a of r.locations)a.used&&s.populate(a);s.shuffle(x,t)}var ua=class{constructor(e,x){this.flags=e;this.report=x;this.monsters=[];this.used=[];this.locations=[]}populate(e){let{maxFlyers:x=0,nonFlyers:t={},skip:s=!1,tower:a=!1,fixedSlots:n={},...i}=gi[e.id]||{};for(let l of Object.keys(i))throw new Error(`Unexpected property '${l}' in MONSTER_ADJUSTMENTS[${e.id}]`);let o=s===!0||!this.flags.shuffleTowerMonsters()&&a||!e.spritePatterns||!e.spritePalettes,d=[],c=[],f=12;for(let l of o?[]:e.spawns){if(++f,!l.used||!l.isMonster())continue;let h=l.monsterId;if(!he.has(h)||he.get(h).type!=="m")continue;let b=e.rom.objects[h];if(!(b instanceof R))continue;let u=l.patternBank,S=e.spritePatterns[u],m=b.palettes(!0),p=m.includes(2)?e.spritePalettes[0]:void 0,g=m.includes(3)?e.spritePalettes[1]:void 0;d.push({id:h,pat:S,pal2:p,pal3:g,patBank:u}),(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+e.id.toString(16)),c.push(f)}(!d.length||s)&&(c=[]),this.locations.push({location:e,slots:c}),this.monsters.push(...d)}shuffle(e,x){let t=x.rom;for(this.report["pre-shuffle locations"]=this.locations.map(s=>s.location.id),this.report["pre-shuffle monsters"]=this.monsters.map(s=>s.id),e.shuffle(this.locations),e.shuffle(this.monsters),this.report["post-shuffle locations"]=this.locations.map(s=>s.location.id),this.report["post-shuffle monsters"]=this.monsters.map(s=>s.id);this.locations.length;){let{location:s,slots:a}=this.locations.pop(),n=this.report["$"+s.id.toString(16).padStart(2,"0")]=[],{maxFlyers:i=0,nonFlyers:o={},tower:d=!1}=gi[s.id]||{};if(d)continue;let c=i,f=h0.forLocation(s.id);s.bossId()!=null;for(let u of s.spawns)if(u.isChest()&&!u.isInvisible())t.slots[u.id]<112?f=f.meet(h0.TREASURE_CHEST,!0):f=f.meet(h0.MIMIC,!0);else if(u.isNpc()||u.isBoss()){let S=x.getNpcConstraint(s.id,u.id);f=f.meet(S,!0),u.isNpc()&&(u.id===107||u.id===104)&&(f=f.meet(h0.KENSU_CHEST,!0))}else if(u.isMonster()&&!(t.objects[u.monsterId]instanceof R)){let S=x.getMonsterConstraint(s.id,u.monsterId);f=f.meet(S,!0)}else u.isShootingWall(s)&&(f=f.meet(h0.SHOOTING_WALL,!0));n.push(`Initial pass: ${f.fixed.map(u=>u.size<1/0?"["+[...u].join(", ")+"]":"all")}`);let l=new Map,h=u=>{let S=t.objects[u.id];if(S.monsterClass){let N=l.get(S.monsterClass);if(N!=null&&N!==u.id)return!1}let m=ha.has(u.id),p=qc.has(u.id);if(m){if(!c)return!1;--c}let g=x.getMonsterConstraint(s.id,u.id),w=f.tryMeet(g);if(!w&&f.pal2.size<1/0&&f.pal3.size<1/0&&this.flags.shuffleSpritePalettes()&&(w=f.tryMeet(g,!0)),!w)return!1;let M;if(b){let N=t.objects[u.id];if(!(N instanceof R))throw new Error(`non-monster: ${N}`);if(M=b(N),M==null)return!1}n.push(`  Adding ${u.id.toString(16)}: ${w}`),f=w,S.monsterClass&&l.set(S.monsterClass,u.id);let I=0;if(m||p){for(let N=0;N<a.length;N++)if(a[N]in o){I=N;break}}else for(let N=0;N<a.length;N++)if(!(a[N]in o)){I=N;break}(this.report[`mon-${u.id.toString(16)}`]=this.report[`mon-${u.id.toString(16)}`]||[]).push("$"+s.id.toString(16));let P=a[I],k=s.spawns[P-13];return m?(k.data[0]=253,k.data[1]=255):b?(k.screen=M>>>8,k.tile=M&255):P in o&&(k.y+=o[P][0]*16,k.x+=o[P][1]*16),k.monsterId=u.id,n.push(`    slot ${P.toString(16)}: ${k}`),a.splice(I,1),!0},b=s.monstersMoved||a.length&&this.flags.randomizeMaps()?s.monsterPlacer(e):null;if(c&&a.length)for(let u=0;u<Math.min(40,this.monsters.length);u++)ha.has(this.monsters[u].id)&&h(this.monsters[u])&&this.monsters.splice(u,1);for(let u=0;u<this.monsters.length&&a.length;u++)if(h(this.monsters[u])){let[S]=this.monsters.splice(u,1);ha.has(S.id)||this.used.push(S),u--}for(let u=0;u<this.used.length&&a.length;u++)h(this.used[u])&&(this.used.push(...this.used.splice(u,1)),u--);if(f.fix(s,e),a.length){console.error(`Failed to fill location ${s.id.toString(16)} ${s.name}: ${a.length} remaining`);for(let u of a){let S=s.spawns[u-13];S.x=S.y=0,S.id=176,S.data[0]=254}}for(let u of s.spawns)x.configure(s,u)}}},ha=new Set([89,92,110,111,129,138,163,196]),qc=new Set([85,93,124,188,193]),gi={[3]:{fixedSlots:{pat1:96},maxFlyers:2},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},[26]:{fixedSlots:{pal3:35,pat1:79},maxFlyers:2,nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{fixedSlots:{pat1:80},maxFlyers:1},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{tower:!0},[90]:{tower:!0},[91]:{tower:!0},[96]:{fixedSlots:{pal3:8,pat1:82},maxFlyers:2,skip:!0},[100]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[104]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}};function ma(r,e,x){new ba(r,e,x).shuffle()}var ba=class{constructor(e,x,t){this.rom=e;this.flags=x;this.random=t}shuffle(){this.shuffleBackgrounds()}shuffleBackgrounds(){let e=new j(()=>[]);for(let t of this.rom.locations)!t.tilePalettes.some(s=>s!==154)||e.get(t.colorGroup).push(t);let x=[new Map,new Map];for(let t of e.values())for(let s of t)for(let a=0;a<2;a++)for(let n=0;n<2;n++){let i=x[a].get(s.tilePatterns[n]);i||x[a].set(s.tilePatterns[n],i=new Set),i.add(s.tilePalettes[a])}for(let t of e.values()){let s=t[0],a=[new Set,new Set];for(let o=0;o<2;o++)a[o]=new Set([...x[o].get(s.tilePatterns[0]),...x[o].get(s.tilePatterns[1])]);let n=this.random.pick([...a[0]]),i=this.random.pick([...a[1]]);for(let o of t)o.tilePalettes[0]=n,o.tilePalettes[1]=i}}};function We(r,e){e.eastCave?Wc(r,e.eastCave):e.classicLimeTreeToLeaf&&zc(r),Hc(r),Uc(r),Vc(r),Jc(r),Kc(r)}(e=>{function r(x,t){let s={};if(x.addEastCave()){s.eastCave={};let a=["cordel","lime","goa","desert"],n=t.nextInt(4);[s.eastCave.exit1]=a.splice(n,1),s.eastCave.exit2=t.pick(a)}else x.connectLimeTreeToLeaf()&&(s.classicLimeTreeToLeaf=!0);return s}e.generateOptions=r})(We||(We={}));function Wc(r,e){let{locations:{EastCave1:x,EastCave2:t,EastCave3:s,SealedCave1:a,ValleyOfWind:n},metascreens:{boundaryE_cave:i,branchNSE:o,branchNWE:d,branchNWSE:c,branchNWS:f,branchWSE:l,caveEmpty:h,deadEndE:b,deadEndE_downStair:u,deadEndE_upStair:S,deadEndN_stairs:m,deadEndS:p,deadEndS_stairs:g,deadEndW:w,deadEndW_downStair:M,hallNE:I,hallNS:P,hallNW:k,hallSE:N,hallWS:D,hallWE:e0,hallNS_entrance:i0,hallNS_ramp:p0,hallNS_wall:F0}}=r;r.locations.allocate(x),r.locations.allocate(t),e.exit2&&r.locations.allocate(s);for(let g0 of[x,t,s])g0.bgm=g0.originalBgm=23,g0.entrances=[],g0.exits=[],g0.pits=[],g0.spawns=[],g0.flags=[],g0.width=g0.height=1,g0.screens=[[128]],g0.tilePalettes=[26,27,5],g0.originalTilePalettes=[26,27,5],g0.tileset=136,g0.tileEffects=181,g0.tilePatterns=[20,2],g0.spritePatterns=[...a.spritePatterns],g0.spritePalettes=[...a.spritePalettes];x.meta=new cx(x.id,r.metatilesets.cave,5,5),x.meta.set2d(0,[[b,D,h,N,w],[h,P,N,k,h],[N,c,f,h,h],[P,p0,I,e0,D],[i0,I,w,S,k]]),t.meta=new cx(t.id,r.metatilesets.cave,5,5),t.meta.set2d(0,[[b,D,p,h,p],[h,P,P,h,P],[h,o,d,l,k],[h,p0,h,I,D],[b,k,h,h,m]]),n.meta.set2d(51,[[i]]),r.tileEffects[0].effects[192]=0,x.meta.attach(67,t.meta,68),x.meta.attach(64,n.meta,51),e.exit1&&(x.meta.set2d(4,[[M]]),wi(x,4,e.exit1)),e.exit2&&(s.meta=new cx(s.id,r.metatilesets.cave,3,1),s.meta.set2d(0,[[g],[F0],[i0]]),s.spawns.push(v0.from([24,7,35,0])),s.flags.push(r6.of({screen:16,flag:r.flags.alloc(512)})),t.meta.set2d(64,[[u]]),t.meta.attach(64,s.meta,0),wi(s,32,e.exit2)),x.spawns.push(v0.of({screen:33,tile:135,timed:!0,id:2}),v0.of({screen:18,tile:136,timed:!1,id:2}),v0.of({screen:19,tile:137,timed:!0,id:2}),v0.of({screen:50,tile:104,timed:!1,id:2}),v0.of({screen:65,tile:136,timed:!0,id:2}),v0.of({screen:51,tile:152,timed:!0,id:2}),v0.of({screen:3,tile:136,timed:!0,id:2})),t.spawns.push(v0.of({screen:1,tile:136,timed:!0,id:2}),v0.of({screen:17,tile:72,timed:!1,id:2}),v0.of({screen:18,tile:119,timed:!0,id:2}),v0.of({screen:20,tile:40,timed:!1,id:2}),v0.of({screen:35,tile:133,timed:!0,id:2}),v0.of({screen:49,tile:136,timed:!0,id:2}),v0.of({screen:51,tile:138,timed:!1,id:2}),v0.of({screen:52,tile:152,timed:!0,id:2}),v0.of({screen:65,tile:130,timed:!0,id:2}),v0.of({y:272,x:1144,type:2,id:89}),v0.of({y:112,x:264,type:2,id:124})),r.slots.swap(49,89)}function wi(r,e,x){let{locations:{CordelPlainEast:t,CordelPlainWest:s,Desert2:a,GoaValley:n,LimeTreeValley:i},metascreens:{bendNE:o,bendSE:d,boundaryN_trees:c,boundaryW_cave:f,cornerNE:l,cornerNW:h,cornerSE:b,cornerSE_cave:u,cornerSW:S}}=r.rom,m,p;switch(x){case"lime":m=i,p=16,m.resizeScreens(0,1,0,0),m.meta.spliceColumns(0,1,2,[[h,c],[f,d],[S,b]]);break;case"cordel":let g=[[f,d],[S,b]];m=t,p=85,m.meta.set2d(85,g),s.meta.set2d(85,g);break;case"goa":m=n,p=17,m.meta.set2d(1,[[h,l],[f,o]]);break;case"desert":m=a,p=83,m.meta.set2d(83,[[u]]);break}r.meta.attach(e,m.meta,p)}function zc(r){let{locations:{ValleyOfWind:e,LimeTreeValley:x},metascreens:{exitE:t,exitW_southwest:s,overworldEmpty_alt:a}}=r;e.meta.set2d(84,[[t]]),x.meta.set2d(16,[[s],[a]]),e.meta.attach(84,x.meta,16)}function Hc(r){let{TowerEntrance:e,Crypt_Teleporter:x}=r.locations;x.meta.attach(0,e.meta,0,"teleporter","teleporter")}function Uc(r){let{flags:{OpenedSwanGate:e},locations:{SwanGate:x},npcs:{SoldierGuard:t}}=r;x.spawns.push(v0.of({xt:10,yt:2,type:1,id:45}),v0.of({xt:11,yt:2,type:1,id:45})),t.localDialogs.get(x.id)[0].flags.push(e.id)}function Kc(r){jc(r.locations.SaberaPalace2_West,r.locations.SaberaPalace2,0,1,16,32,48,49,65,81,97)}function jc(r,e,...x){r.rom.locations.allocate(r,e),r.bgm=e.bgm,r.entrances=[],r.exits=[],r.pits=[],r.spawns=[],r.flags=[],r.width=r.height=1,r.screens=[[128]],r.tilePalettes=Ie(e.tilePalettes),r.originalTilePalettes=Ie(e.originalTilePalettes),r.tileset=e.tileset,r.tileEffects=e.tileEffects,r.tilePatterns=Ie(e.tilePatterns),r.spritePatterns=Ie(e.spritePatterns),r.spritePalettes=Ie(e.spritePalettes);let s=0,a=0;for(let i of x)s=Math.max(s,(i>>>4)+1),a=Math.max(a,(i&15)+1);r.meta=new cx(r.id,e.meta.tileset,s,a);for(let i of x)r.meta.set(i,e.meta.get(i)),e.meta.set(i,e.meta.tileset.empty);let n=new Set(x);r.flags=e.flags.filter(i=>n.has(i.screen)),e.flags=e.flags.filter(i=>!n.has(i.screen)),r.spawns=e.spawns.filter(i=>n.has(i.screen)),e.spawns=e.spawns.filter(i=>!n.has(i.screen)),e.meta.moveExitsAndPitsTo(r.meta)}function Vc(r){let e=r.locations.GoaFortress_Kensu.meta;for(let[x,t]of e.exits())x<16||t.startsWith("seamless")||e.deleteExit(x,t)}function Jc(r){r.locations.ZebuCave.spawns.find(e=>e.isTrigger()).yt+=3}var Xc=["!Random Key","!Curious Key","!Bronze Key","!Silver Key","!Golden Key","!Ancient Key","!Small Key","!Shiny Key","!Mysterious Key","!Magic Key","!Backdoor Key","!Skeleton Key","Piano Key","Encryption Key","Private Key","Public Key","Key Card","Any Key","Space Bar","Return Key","Imaginary Key","Giant Key","Out of Key","Key of C","Key of G","Key of B Flat","Key of F Sharp","Lockpick","Transponder Key","Sharp Key","Flat Key","Locke and Key","Major Key","Minor Key","Cookie","Turkey","Monkey","Ctrl Key","Escape Key","Car Key","Clock Key","Florida Key","Key Lime Pie","Keystone","Answer Key"],Yc=["!Random Flute","!Wooden Flute","!Metal Flute","!Piccolo","Horn of Plenty","!Ocarina","Fairy Ocarina","Ocarina of Time","!Pan Pipes","!Bugle","!Bagpipes","Kazoo","Lute","Harp","Guitar","Electric Guitar","!Tin Whistle","Magic Whistle","Dog Whistle","!Recorder","!Accordion","!Harmonica","Sousaphone","Trumpet","French Horn","Trombone","Euphonium","Tuba","Clarinet","Saxophone","Oboe","Bassoon","Violin","Viola","Cello","Theramin","Synthesizer","Moog Synth","Piano","Harpsichord","Pipe Organ","Note Block","Snare Drum","Xylophone","Marimba","Tambourine","Tornelsbane","Flute of Power"],Qc=["!Random Lamp","!Bronze Lamp","!Silver Lamp","!Gold Lamp","!Oil Lamp","!Magic Lamp","Genie Lamp","Dull Lamp","Desk Lamp","Shimmering Lamp","Broken Lamp","Brass Lantern","Overhead Lamp","Pedestal Lamp","Incubation Lamp","Fluorescent Lamp","Ultraviolet Lamp","Heat Lamp","Recessed Lighting","Laser Pointer","Spotlight","Flashlight","Search Light","Batsignal","Candelabra","Chandelier","Birthday Candle","Tallow Candle","Wax Candle","Tanning Bed","CRT"],Zc=["!Random Statue","!Rusty Statue","!Forbidden Statue","Golden Idol","!Strange Statue","!Glass Statue","!Copper Statue","!White Statue","Invisible Statue","Burt Figurine","Draygon Figurine","Karmine Figurine","Mado Figurine","Sabera Figurine","Kelbesque Figurine","Flail Guy Trophy","Metroid Amiibo","Model of Dyna","Jeff Peters Statue","M. Toki Statue","Statue of Liberty","Colossus of Rhodes","Mattrick Figurine","Dragondarch Statue","Overswarm Statue","Trueblue83 Statue","TheAxeMan Idol","Acmlm Figurine","CodeGorilla Trophy"],xf=["!Random Bow","Crossbow","Autocrossbow","Long Bow","Compound Bow","Silver Arrows","Wooden Bow","Violin Bow","Tae Bo","Botox","Bo Derek","Bo Diddley","Bo Dallas","Rainbow","Hair Bow","Bow Tie","!Bow of Earth","!Bow of Stars","!Bow of Wind","!Bow of Fire","!Bow of Water","!Bow of Thunder","!Bow of Light","!Bow of Darkness","Bow of Lies","Bow of Life","Bow of Death","Bow of Freedom","JBowe","KLINGSBO","LILLABO","SVALBO","Buriza-Do Kyanon","Windforce","Eaglehorn"];function Si(r,e,x){if(!e.unidentifiedItems())return;let t=(...d)=>d.map(c=>r.items[c]),s=t(50,51,52),a=t(39,40,49,54),n=t(53,57),i=t(37,56,58,61),o=t(62,63,64);for(let[d,[...c]]of[[s,Xc],[a,Yc],[n,Qc],[i,Zc],[o,xf]]){let f=(e.communityJokes()?c:c.filter(h=>h.startsWith("!"))).map(h=>h.replace(/^!/,""));x.shuffle(f);let l=x.shuffle([0,1,2,3]);for(let h of d){let b=f.pop();r.spoiler&&r.spoiler.addUnidentifiedItem(h.id,h.messageName,b),h.menuName=h.messageName=b,h.palette=l.pop()}}}var ef=new Map([["Sword of Wind",["Sord of Wind","Sowrd of Wind","Sword of Wien"]],["Sword of Fire",["Sword of Frirer"]],["Sword of Water",["Horde of Otters"]],["Sword of Thunder",["Sorg of Chunker"]],["Flame Bracelet",["Fame Bracelet"]],["Storm Bracelet",["Stom Bracelet"]],["Sacred Shield",["Scared Shield"]],["Bow of Truth",["Bow of Strewth"]],["Statue of Onyx",["Statue of Onxy"]],["Ivory Statue",["Ivory Statute"]],["Fog Lamp",["Frog Lamp","Smog Lamp","Dog Lamp","Bog Lamp","Fog Lump"]],["Glowing Lamp",["Glowing Lump"]],["Key to Stxy",["Key to Styx"]],["Insect Flute",["Bug Flute","Bug Whistle"]],["Flute of Lime",["Flute of Grime"]],["Iron Necklace",["I Ron Necklace"]],["Shield Ring",["Sho Ring"]],["Deo's Pendant",["Rabbit Necklace","Bunny Pendant"]],["Speed Boots",["Hermes Sandals"]],["Rabbit Boots",["Deo's Boots","Jumping Boots","Rabid Boots"]],["Alarm Flute",["Pocket Rooster","Alarm Clock"]],["Shell Flute",["Conch Shell","Dolphin Flute"]],["Eye Glasses",["3D Glasses","X-Ray Goggles"]],["Kirisa Plant",["Kilika Plant"]],["Refresh",["Refresherize","Cure","Cura","Curaga"]],["Recover",["Recoverize","Esuna"]],["Paralysis",["Paralycize","Stop","Pew Pew"]],["Telepathy",["Telepathize","Clairvoyance","ESP","Head Talk"]],["Teleport",["Teleportate","Warp","Go"]],["Change",["Changeify","Transform","Disguise"]],["Barrier",["Barrierize","Protect","Wall","Shield"]],["Flight",["Flyify","Blight","Super Jump"]],["Fruit of Lime",["Fruit of Crime","Gold Needle","Soft"]],["Medical Herb",["Potion","Hi Potion"]],["Fruit of Repun",["Anti-Slime Pill","Maiden's Kiss"]]]),tf=new Map([["Aryllis",["Mimic Queen"]],["Akahana",["Steve","Jerkahana","Mashamahana"]],["Asina",["Athena","Jrowina"]],["Azteca",["Steve"]],["Clark",["Steve","Fred","Mattrick","Clarktrick"]],["Deo",["Steve"]],["Kelbesque",["Linebacker"]],["Kensu",["Steve","Jerksu"]],["Karmine",["Slimelord"]],["Nadare",["Steve"]],["Mado",["Steve"]],["Rage",["Steve"]],["Sabera",["Flamelord"]],["Stom",["Steve"]],["Tornel",["Steve"]],["Zebu",["Steve","Pervy Old Man"]]]),sf=new Map([["Poison Slime",["Mattrick Slime"]],["Mud Golem",["Bear"]],["Axe Wereboar",["The Axeman"]],["Pillbug",["Tomato"]],["Ice Golem",["Polar Bear"]],["Flail Guy",["Kfal's Dude"]],["Flail Knight",["Kfal's Knight"]],["Flying Plant",["Obnoxious Turnip"]],["Beholder",["Floating Eye"]],["Burt",["Bert","Bort","Sorceror"]],["Mummy",["Tornel Hugger"]],["Robot Sentry",["C-3PO","T-1000","Johnny 5"]],["Robot Enforcer",["ED-209","R2-D2","Agent Smith"]],["Robocopter",["Cylon Drone","Megatron","Roflcopter","Roflcopter","Roflcopter"]],["DYNA",["GLaDOS","HAL-9000","Multivac"]]]);function vi(r,e,x){!e.communityJokes()||(af(r,e,x),nf(r,x),of(r,x))}function af(r,e,x){if(e.unidentifiedItems()||"sphereAnalysis"in globalThis)return;let t=x.next()<.05?r.items:[r.items[x.nextInt(72)]];for(let s of t){if(!s)continue;let a=ef.get(s.messageName)||[],n=Math.floor(x.nextInt(3*a.length+1)/3);n<a.length?s.messageName=s.menuName=a[n]:s.messageName===s.menuName&&(s.messageName=s.menuName=pa(s.messageName,x))}}function pa(r,e){let x=r.split(""),t=e.nextInt(x.length-1);return x[t]===" "||x[t+1]===" "?r:(x[t].toUpperCase()===x[t]?x.splice(t+1,1):[x[t],x[t+1]]=[x[t+1],x[t]],x.join(""))}function Ti(r,e){for(let x of r.messages.parts)for(let t of x)t.text=e(t.text);r.messages.personNames=r.messages.personNames.map(e),rf(r,e)}function Ei(r,e){return x=>x.includes(r)?x.split(r).join(e):x}function rf(r,e){for(let x of r.objects)x.displayName&&(x.displayName=e(x.displayName))}function nf(r,e){let x=r.messages.parts[0][24];x.text="Rachel: "+x.text.replace("is the village of","village is");let t=[...tf].flatMap(([i,o])=>["",...o,...o].map(d=>[i,d])),[s,a]=e.pick(t),n=a||pa(s,e);n!==s&&Ti(r,Ei(s,n))}function of(r,e){for(let x=0;x<10;x++){let[t,s]=e.pick([...sf]),n=e.pick(["",...s,...s,...s])||pa(t,e);n!==t&&Ti(r,Ei(t,n))}}function ki(r){let{locations:e}=r,{CordelPlainEast:x,CordelPlainWest:t,WaterfallValleyNorth:s,WaterfallValleySouth:a,MezameShrine:n,MtSabreWest_Cave1:i}=e;x.meta.reconcileExits(t.meta);for(let o of s.meta.allPos()){let d=s.meta.get(o),c=a.meta.get(o);d.isEmpty()&&!c.isEmpty()?s.meta.set(o,c):c.isEmpty()&&!d.isEmpty()&&a.meta.set(o,d)}for(let o of e)!o.used||(o.exits=[],o.entrances=[],o.meta.writeEntrance0());n.meta.getExit(0,"door")||n.meta.attach(0,n.meta,0,"door","door");for(let o of e)!o.used||o!==i&&(o.meta.write(),o===t&&i.used&&i.meta.write())}var $7=class{constructor(e){this.rom=e;this.slots=[];this.route=[];this.mazes=[];this.trades=[];this.walls=[];this.unidentifiedItems=[];this.wildWarps=[];this.houses=[];this.flags=""}addCheck(e,x){this.route.push(new ga(this,e,x))}addSlot(e,x,t){this.slots[e&255]=new ya(this.rom,e&255,x,t&255)}addMaze(e,x,t){this.mazes.push({id:e,name:x,maze:t})}addTrade(e,x,t){this.trades.push({itemId:e,item:x,npc:t})}addUnidentifiedItem(e,x,t){this.unidentifiedItems.push({itemId:e,oldName:x,newName:t})}addWall(e,x,t){this.walls.push({location:e,oldElement:x,newElement:t})}addWildWarp(e,x){this.wildWarps.push({id:e,name:x})}addHouse(e,x){this.houses.push({houseId:e,townId:x,house:this.rom.locations[e].name,town:this.rom.locations[x].name})}formatCondition(e){return this.rom.flags[e]?.name}formatConditionList(e){let x=[];for(let t of e){let s=this.rom.flags[t];s?.logic.track&&x.push(s.name)}return x.join(", ")}},ga=class{constructor(e,x,t){this.spoiler=e;this.condition=x;this.deps=t}toString(){let e=0;return(this.condition&-128)===256&&(e=512|this.spoiler.rom.slots[this.condition&255]),`${this.spoiler.formatCondition(this.condition)}${e?` (${this.spoiler.formatCondition(e)})`:""}: [${this.spoiler.formatConditionList(this.deps)}]`}},ya=class{constructor(e,x,t,s){this.slot=x;this.slotName=t;this.item=s;this.itemName=Ri(e,s),this.originalItem=Ri(e,x)}toString(){return`${this.itemName}: ${this.slotName} (${this.originalItem})`}};function Ri(r,e){return e>=112?"Mimic":r.items[r.itemGets[e].itemId].messageName}var ze=typeof __VERSION__=="object"?__VERSION__:{},wa=ze.STATUS||"unstable",He=ze.VERSION||"HEAD",$b=ze.LABEL||"HEAD",Mi=ze.HASH||"HEAD",Ob=ze.DATE||new Date,qb=ze.PREV||"";var Ii=new Map([["stair:up","C"],["edge:top","N"],["edge:left","W"],["edge:right","E"],["cave","C"],["door","C"],["door2","C"],["door3","C"],["fortress","F"]]),Sa=new Map([["N","S"],["S","N"],["E","W"],["W","E"],["C","X"],["X","C"],["F","O"],["O","F"]]);function df(r,[e,x,[t,s]]){let a=Ii.get(x)||Sa.get(Ii.get(s)),n=!1,i=r.id.toString(16),o=(r.id<<8|e).toString(16)+" "+x,d=r.rom.locations[t>>>8],c=t&255,f=t.toString(16)+" "+s,l=d.id.toString(16),h={loc:d,pos:c,type:s,area:l,key:f,reverse:null,origRev:null,get conn(){return Sa.get(a)},set conn(u){a=Sa.get(u)},get shuffle(){return n},set shuffle(u){if(u&&!a)throw new Error("shuffle without conn");n=u}},b={loc:r,pos:e,type:x,key:o,reverse:h,area:i,origRev:h,get conn(){return a},set conn(u){a=u},get shuffle(){return n},set shuffle(u){if(u&&!a)throw new Error("shuffle without conn");n=u}};return h.reverse=h.origRev=b,b}function Li(r,e){return typeof e=="string"?r.type===e:typeof e=="number"?r.pos===e:e instanceof N6?r.reverse.loc===e:e.every(x=>Li(r,x))}function Ai(r,e,x){if(!e.shuffleAreas())return;let{locations:t}=r,s=new Map,a=new j(()=>[]);for(let p of r.locations)for(let g of p.meta.exits()){if(p===t.CordelPlainEast&&(g[0]&15)<5||p===t.CordelPlainWest&&(g[0]&15)>4||p.isTower())continue;let w=df(p,g);if(w.loc!==t.Portoa_FortuneTeller&&w.reverse.loc!==t.Portoa_FortuneTeller&&!s.has(w.key)){if(s.has(w.reverse.key))throw new Error(`Inconsistent exits: ${w.key} | ${w.reverse.key}`);s.set(w.key,w),s.set(w.reverse.key,w.reverse),a.get(w.loc).push(w),a.get(w.reverse.loc).push(w.reverse)}}function n(p,...g){let w=[];for(let M of a.get(p))for(let I of g)if(Li(M,I)){w.push(M);break}return w}for(let p of n(t.ValleyOfWind,"door","windmill"))p.area="windmill";for(let p of n(t.AngrySea,100))p.area="lighthouse";n(t.Portoa_FishermanIsland,"edge:right")[0].oneWay=!0;function i(p,...g){for(let w of n(p,...g))w.shuffle=!0}function o(...p){let g=new Set(p);for(let w of p)for(let M of a.get(w))g.has(M.reverse.loc)||(M.shuffle=!0)}if(o(t.Leaf_OutsideStart),i(t.ValleyOfWind,"cave","door","edge:bottom","edge:top","edge:left","edge:right"),o(t.WindmillCave),o(t.EastCave1,t.EastCave2,t.EastCave3),o(t.ZebuCave,t.MtSabreWest_Cave1),o(t.CordelPlainWest,t.CordelPlainEast),o(t.WaterfallValleyNorth,t.WaterfallValleySouth),o(t.KirisaMeadow),o(t.LimeTreeLake),i(t.Portoa_FishermanIsland,"edge:right"),i(t.PortoaPalace_ThroneRoom,"door"),i(t.Joel,"edge:bottom"),o(t.JoelSecretPassage),i(t.EvilSpiritIsland1,"stair:up"),i(t.ZombieTown,"cave"),i(t.AngrySea,"edge:top"),o(t.SwanGate),i(t.GoaValley,"edge:left"),o(t.Desert1),o(t.GoaFortressBasement),o(t.DesertCave1),o(t.SaharaOutsideCave),o(t.DesertCave2),i(t.Desert2,"stair:down"),!e.shuffleHouses()){let p=[[t.ZombieTown,"fortress"],[t.MtHydra,"gate"],[t.Desert2,"fortress"],[t.Goa,"edge:top"],[t.Portoa,"fortress"],[t.Shyron,"fortress"],[t.GoaValley,"fortress"],[t.OasisCave_Entrance,"stair:up"],[t.MtHydra_OutsideShyron,"gate"],[t.Crypt_Entrance,"crypt"]];for(let[g,w]of p){let[M]=n(g,w);M.conn="F",M.shuffle=!0}}{let[p]=n(t.Oak,"edge:bottom");p.conn="X",p.shuffle=!0}let d=new X0;for(let p of s.values())p.shuffle||d.union([p.area,p.reverse.area]);let c=new j(()=>[]);for(let p of s.values())!p.shuffle||c.get(p.area=d.find(p.area)).push(p);let f=a.get(t.MezameShrine)[0].area;function l(){let p=new Set,g=new Map,w=[];for(let I of[f,...c.keys()]){if(p.has(I))continue;let P=new Set([I]),k=[];for(let N of P){p.add(N);for(let D of c.get(N))g.set(D,w.length),k.push(D),!(D.oneWay||p.has(D.reverse.area))&&P.add(D.reverse.area)}w.push(k)}let M=0;for(let I=1;I<w.length;I++)w[I].length<w[M].length&&(M=I);return[w.length,g,w[M]]}let h=new j(()=>[]);for(let p of s.values())!p.shuffle||!p.conn||h.get(p.conn).push(p);for(let p of"NWCF"){let g=h.get(p),w=x.shuffle([...g]).map(M=>M.reverse);for(let M=0;M<w.length;M++){let I=g[M],P=w[M];[I.reverse,P.reverse]=[P,I]}}let b=0,[u,S,m]=l();for(;b-- >0||u>1;){let p=x.pick(m),g=h.get(p.conn);if(u>1){let P=S.get(p);g=g.filter(k=>S.get(k)!==P)}let w=x.pick(g),M=p.reverse,I=w.reverse;if(p.reverse=I,I.reverse=p,w.reverse=M,M.reverse=w,[u,S,m]=l(),b<-10)debugger}for(let p of s.values()){if(p.reverse!==p.origRev){let g=function(w){return`${w.loc.name} ${w.type}(${w.pos.toString(16)})`};console.log(`${g(p)}  =>  ${g(p.reverse)}  (was ${g(p.origRev)})`)}p.loc.meta.attach(p.pos,p.reverse.loc.meta,p.reverse.pos,p.type,p.reverse.type)}}function Bi(r){for(let e of r.locations){let x=new Set;for(let t of e.spawns)if(!!t.isTrigger()&&x.has(t.coord))throw new Error(`Overlapping triggers on ${e} at ${t.coord.toString(16)}`)}}var O7=class{constructor(e,x,t,s){this.name=e,this.converter=x,this.nssdata=t,this.description=s}static async init(e,x,t,s){let a=await t;return new O7(e,x,a,s)}static applyPatch(e,x,t){if(!O7.isCustom(e))return;let s=t?262144:0;for(let[a,n]of pe.getChr(e.converter))for(let i of n)for(let o=0;o<16;++o)x[i+o+s]=e.nssdata.chrdata[a*16+o];for(let[a,n]of pe.getPalette(e.converter))for(let i of n)switch(a){case"color0":x[i]=e.nssdata.palette[0];break;case"color1":x[i]=e.nssdata.palette[1];break;case"color2":x[i]=e.nssdata.palette[2];break;case"color3":x[i]=e.nssdata.palette[3];break;case"metasprite":x[i+s]=0;break}}},Ue=O7;Ue.isCustom=e=>e.name!="Simea";function F(r,e,x){return 262160+r*8192+e*4096+x*16}var pe=class{constructor(){this.chrMapping=new Map;this.paletteMapping=new Map;this.simeaChrMapping=this.generateSimeaMapping(),this.simeaPaletteMapping=this.generateSimeaPalette(),this.chrMapping.set("simea",this.simeaChrMapping),this.paletteMapping.set("simea",this.simeaPaletteMapping)}static getChr(e){return this.instance||(this.instance=new pe),this.instance.chrMapping.get(e)}static getPalette(e){return this.instance||(this.instance=new pe),this.instance.paletteMapping.get(e)}generateSimeaPalette(){let e=new Map,x=27888+16;return e.set("color0",[x+0]),e.set("color1",[x+1]),e.set("color2",[x+2]),e.set("color3",[x+3]),e.set("metasprite",[245844+16]),e}generateSimeaMapping(){let t=new Map;t.set(0,[F(8,0,26)]),t.set(1,[F(8,0,27)]),t.set(16,[F(8,0,0)]),t.set(17,[F(8,0,1)]),t.set(32,[F(8,0,32)]),t.set(33,[F(8,0,33)]),t.set(2,[F(8,0,28)]),t.set(3,[F(8,0,29)]),t.set(18,[F(8,0,2)]),t.set(19,[F(8,0,3)]),t.set(20,[F(8,0,4)]),t.set(21,[F(8,0,5)]),t.set(34,[F(8,0,34)]),t.set(35,[F(8,0,35)]),t.set(36,[F(8,0,36)]),t.set(37,[F(8,0,37)]),t.set(6,[F(8,0,30)]),t.set(7,[F(8,0,31)]),t.set(22,[F(8,0,6)]),t.set(23,[F(8,0,7)]),t.set(38,[F(8,0,38)]),t.set(39,[F(8,0,39)]),t.set(64,[F(8,0,20)]),t.set(65,[F(8,0,21)]),t.set(80,[F(8,0,52)]),t.set(81,[F(8,0,53)]),t.set(50,[F(8,0,60)]),t.set(51,[F(8,0,61)]),t.set(66,[F(8,0,24)]),t.set(67,[F(8,0,25)]),t.set(82,[F(8,0,56)]),t.set(68,[F(8,0,22)]),t.set(69,[F(8,0,23)]),t.set(84,[F(8,0,54)]),t.set(112,[F(8,0,14)]),t.set(113,[F(8,0,15)]),t.set(128,[F(8,0,46)]),t.set(129,[F(8,0,47)]),t.set(114,[F(8,0,18)]),t.set(115,[F(8,0,19)]),t.set(130,[F(8,0,48)]),t.set(131,[F(8,0,51)]),t.set(116,[F(8,0,16)]),t.set(117,[F(8,0,17)]),t.set(133,[F(8,0,49)]),t.set(160,[F(8,0,8)]),t.set(161,[F(8,0,9)]),t.set(176,[F(8,0,40)]),t.set(146,[F(8,0,58)]),t.set(147,[F(8,0,59)]),t.set(162,[F(8,0,12)]),t.set(163,[F(8,0,13)]),t.set(178,[F(8,0,44)]),t.set(179,[F(8,0,45)]),t.set(164,[F(8,0,10)]),t.set(165,[F(8,0,11)]),t.set(181,[F(8,0,43)]);let s=new Map(t);for(let[n,i]of s){let o=n+8,d=i.map(c=>c+1024);t.set(o,d)}t.set(192,[F(11,1,0)]),t.set(193,[F(11,1,1)]),t.set(208,[F(11,1,2)]),t.set(209,[F(11,1,3)]),t.set(224,[F(11,1,4)]),t.set(225,[F(11,1,5)]),t.set(194,[F(11,1,36)]),t.set(195,[F(11,1,37)]),t.set(210,[F(11,1,6)]),t.set(211,[F(11,1,7)]),t.set(226,[F(11,1,38)]),t.set(227,[F(11,1,39)]),t.set(196,[F(11,1,32)]),t.set(197,[F(11,1,33)]),t.set(212,[F(11,1,34)]),t.set(213,[F(11,1,35)]),t.set(214,[F(11,1,20)]),t.set(215,[F(11,1,21)]),t.set(230,[F(11,1,22)]),t.set(231,[F(11,1,23)]),t.set(54,[F(11,1,12)]),t.set(55,[F(11,1,13)]),t.set(70,[F(11,1,50)]),t.set(71,[F(11,1,51)]),t.set(86,[F(11,1,46)]),t.set(87,[F(11,1,47)]),t.set(102,[F(11,1,18)]),t.set(103,[F(11,1,19)]),t.set(118,[F(11,1,8)]),t.set(119,[F(11,1,9)]),t.set(134,[F(11,1,40)]),t.set(135,[F(11,1,41)]),t.set(150,[F(11,1,44)]),t.set(151,[F(11,1,45)]),t.set(166,[F(11,1,10)]),t.set(167,[F(11,1,11)]),t.set(182,[F(11,1,42)]),t.set(183,[F(11,1,43)]);let a=n=>[F(8,0,n)+1024*2,F(8,0,n)+1024*3,F(8,1,n),F(8,1,n)+1024,F(8,1,n)+1024*2];return t.set(240,a(16)),t.set(241,a(17)),t.set(242,a(18)),t.set(243,a(19)),t.set(244,a(20)),t.set(245,a(21)),t.set(246,a(22)),t.set(247,a(23)),t.set(248,[F(8,1,237)]),t.set(249,a(25)),t.set(250,a(26)),t.set(252,a(48)),t.set(253,a(49)),t.set(254,a(50)),t.set(255,a(51)),t}};var va=!0,Pi=In("asm");function Ni(r){return r?/^[0-9a-f]{1,8}$/i.test(r)?Number.parseInt(r,16):de(r):be.newSeed()}var{}={watchArray:ws};function cf(r,e){let x={_ALLOW_TELEPORT_OUT_OF_BOSS:r.hardcoreMode()&&r.shuffleBossElements(),_ALLOW_TELEPORT_OUT_OF_TOWER:!0,_AUDIBLE_WALLS:r.audibleWallCues(e),_AUTO_EQUIP_BRACELET:r.autoEquipBracelet(e),_BARRIER_REQUIRES_CALM_SEA:!0,_BUFF_DEOS_PENDANT:r.buffDeosPendant(),_BUFF_DYNA:r.buffDyna(),_CHECK_FLAG0:!0,_CTRL1_SHORTCUTS:r.controllerShortcuts(e),_CUSTOM_SHOOTING_WALLS:!0,_DISABLE_SHOP_GLITCH:r.disableShopGlitch(),_DISABLE_STATUE_GLITCH:r.disableStatueGlitch(),_DISABLE_SWORD_CHARGE_GLITCH:r.disableSwordChargeGlitch(),_DISABLE_TRIGGER_SKIP:r.disableTriggerGlitch(),_DISABLE_WARP_BOOTS_REUSE:r.disableShopGlitch(),_DISABLE_WILD_WARP:!1,_EXPAND_PRG:va,_EXTRA_EXTENDED_SCREENS:!0,_EXTRA_PITY_MP:!0,_FIX_BLIZZARD_SPAWN:!0,_FIX_COIN_SPRITES:!0,_FIX_OPEL_STATUE:!0,_FIX_SHAKING:!0,_FIX_SWORD_MANA_CHECK:!0,_FIX_VAMPIRE:!0,_HAZMAT_SUIT:r.changeGasMaskToHazmatSuit(),_LEATHER_BOOTS_GIVE_SPEED:r.leatherBootsGiveSpeed(),_MAX_SCALING_IN_TOWER:r.maxScalingInTower(),_MONEY_AT_START:r.shuffleHouses()||r.shuffleAreas(),_NERF_FLIGHT:!0,_NERF_MADO:!0,_NEVER_DIE:r.neverDie(),_NORMALIZE_SHOP_PRICES:r.shuffleShops(),_PITY_HP_AND_MP:!0,_PROGRESSIVE_BRACELET:!0,_RABBIT_BOOTS_CHARGE_WHILE_WALKING:r.rabbitBootsChargeWhileWalking(),_RANDOM_FLYER_SPAWNS:!0,_REQUIRE_HEALED_DOLPHIN_TO_RIDE:r.requireHealedDolphinToRide(),_REVERSIBLE_SWAN_GATE:!0,_SAHARA_RABBITS_REQUIRE_TELEPATHY:r.saharaRabbitsRequireTelepathy(),_SIMPLIFY_INVISIBLE_CHESTS:!0,_SOFT_RESET_SHORTCUT:!0,_STATS_TRACKING:r.hasStatTracking(),_TELEPORT_ON_THUNDER_SWORD:r.teleportOnThunderSword(),_TINK_MODE:!r.guaranteeMatchingSword(),_TRAINER:r.trainer(),_TWELFTH_WARP_POINT:!0,_UNIDENTIFIED_ITEMS:r.unidentifiedItems(),_ENEMY_HP:r.shouldUpdateHud(),_UPDATE_HUD:r.shouldUpdateHud(),_WARP_FLAGS_TABLE:!0,_ZEBU_STUDENT_GIVES_ITEM:r.zebuStudentGivesItem()};return Object.keys(x).filter(t=>x[t]).map(t=>`.define ${t} ${x[t]}
`).join("")}function ff(r,e){for(let x of e)Ue.applyPatch(x,r,va)}async function Fi(r,e,x,t,s,a,n){let i=16+(r[6]&4?512:0)+(r[4]<<14)+(r[5]<<13);if(r.length>i&&(r=r.slice(0,i)),va&&r.length<524288){if(r.length<524288){let u=new Uint8Array(r.length+262144);u.subarray(0,262160).set(r.subarray(0,262160)),u.subarray(524304).set(r.subarray(262160)),u[4]<<=1,r=u}let l=r.subarray(16),h=Pn(await t.read("crystalis.s"),h6.P02,l),b=p6.assemble(h);l.subarray(0,b.length).set(b),l.subarray(507904,524288).set(l.subarray(245760,262144))}if(Hn(r.subarray(16)),typeof e!="number")throw new Error("Bad seed");let o=de(e.toString(16).padStart(8,"0")+String(x.filterOptional()))>>>0,d=new be(o),c=s||[],f=[];for(let l=0;l<5;l++)try{return await lf(r,x,e,d,t,a,n,c)}catch(h){f.push(h),console.error(`Attempt ${l+1} failed: ${h.stack}`)}throw new Error(`Shuffle failed: ${f.map(l=>l.stack).join(`

`)}`)}async function lf(r,e,x,t,s,a,n,i){let o=String(e),d=e.filterRandom(t),c=new Bx(r),f=String(d);c.flags.defrag(),qn(c),Wn(c),typeof window=="object"&&(window.rom=c),c.spoiler=new $7(c),a&&(a.spoiler=c.spoiler),f!==o&&(c.spoiler.flags=f),Un(c,d),fn(c),We(c,We.generateOptions(d,t)),c.scalingLevels=48,d.shuffleShops()&&uf(c,d,t),d.shuffleGoaFloors()&&ai(c,t),bf(c),mf(c,d,t),zn(c,t),d.nerfWildWarp()&&c.wildWarp.locations.fill(0),d.randomizeWildWarp()&&gf(c,d,t),d.randomizeThunderTeleport()&&ti(c,t),si(c,d,t),Si(c,d,t),vi(c,d,t),jn(c,d,t),d.shuffleHouses()&&ni(c,d,t),d.shuffleAreas()&&Ai(c,d,t),Qn(c),d.randomizeMaps()&&bi(c,d,t),ki(c),pi(c,t),d.shuffleMimics()&&mi(c,d,t),d.shuffleMonsters()&&yi(c,d,t);let l=new y7(c,d),h=new h7([l.getLocationList()]);if(!d.noShuffle()){let p=await h.shuffle(d,t,void 0,n,c.spoiler);if(p){for(let[g,w]of p)c.slots[g&255]=w&255;c.slots.setCheckCount(p.size)}else return[r,-1]}d.shuffleShops()&&Ef(c,d.bargainHunting()?t:void 0),d.buffMedicalHerb()&&(c.items.MedicalHerb.value=80,c.items.FruitOfPower.value=56),d.storyMode()&&Sf(c),d.blackoutMode()&&wf(c),hf(c,d,t),Xn(c),Zn(c),Bi(c),d.buffDyna()&&yf(c,d),d.trainer()&&(c.wildWarp.locations=[10,26,53,72,109,110,140,170,172,176,182,159,166,88,92,0]),d.randomizeMusic("early")&&_i(c,d,t),d.shuffleTilePalettes("early")&&ma(c,d,t),Tf(c,d),t.shuffle(c.randomNumbers.values);async function b(p){async function g(k){return new b6(await s.read(k),k,{lineContinuations:!0})}let w=cf(d,p),M=new I6(h6.P02),I=new Ce;I.enter(Ee.concat(new b6(w,"flags.s"),await g("init.s"),await g("alloc.s"),await g("stattracker.s"),await g("preshuffle.s"),await g("postparse.s"),await g("postshuffle.s")));let P=new Me(I,M);return M.tokens(P),M.module()}c.messages.compress();let u=r.slice(16);c.modules.set(Pi,await b("early")),c.writeData(u),c.modules.set(Pi,await b("late"));let S=i?.some(p=>Ue.isCustom(p))||!1,m=vf(r,x,o,u,S);return d.randomizeMusic("late")&&_i(c,d,t),d.noMusic("late")&&pf(c),d.shuffleTilePalettes("late")&&ma(c,d,t),ei(c),c.writeData(),ff(r,i),[r,m]}function hf(r,e,x){let{}={rom:r,flags:e,random:x};r.messages.parts[2][2].text=`
{01:Akahana} is handed a statue.#
Thanks for finding that.
I was totally gonna sell
it for tons of cash.#
Here, have this lame
[29:Gas Mask] or something.`,r.messages.parts[0][14].text="It's dangerous to go alone! Take this.",r.messages.parts[0][14].fixText()}function uf(r,e,x){let t={[0]:{contents:[],shops:[]},[1]:{contents:[],shops:[]}};for(let s of r.shops){if(!s.used||s.location===255)continue;let a=t[s.type];a&&(a.contents.push(...s.contents.filter(n=>n!==255)),a.shops.push(s),s.contents=[])}for(let s of Object.values(t)){let a=null,n=[...s.contents];for(x.shuffle(n);n.length;){(!a||!a.length)&&(a&&n.shift(),a=[...s.shops,...s.shops,...s.shops,...s.shops],x.shuffle(a));let i=n[0],o=a[0];o.contents.length<4&&!o.contents.includes(i)&&(o.contents.push(i),n.shift()),a.shift()}}for(let s of Object.values(t))for(let a of s.shops){for(;a.contents.length<4;)a.contents.push(255);a.contents.sort((n,i)=>n-i)}}function bf(r){for(let e of r.locations)if(!!e.used){for(let x of e.spawns)if(x.isWall()){let t=x.id&15;x.id=t|t<<4;let s=x.isShootingWall(e);x.data[2]=s?51:35}}}function mf(r,e,x){if(!e.randomizeWalls())return;let t=[[5,56],[17],[106],[20]];function s(n){return n.data[2]&32?n.id>>>4&3:n.id&3}let a=new j(()=>[]);for(let n of r.locations)a.get(n.data.area).push(n);for(let n of a.values()){let i=x.nextInt(4),o=x.pick(t[i]),d=!1;for(let c of n)for(let f of c.spawns)if(f.isWall()){let l=s(f);if(l===2)continue;if(l===3){let h=x.nextInt(4);r.spoiler&&r.spoiler.addWall(c.name,l,h),f.data[2]|=32,f.id=48|h}else!d&&r.spoiler&&(r.spoiler.addWall(c.name,l,i),d=!0),f.data[2]|=32,f.id=l<<4|i,c.tilePalettes[2]=o}}}function pf(r){for(let e of[...r.locations,...r.bosses.musics])e.bgm=0}function _i(r,e,x){let t=new j(()=>[]),s=new Set;for(let i of r.locations){if(i.id===95||i.id===0||!i.used)continue;let o=i.musicGroup;s.add(i.bgm),t.get(o).push(i)}for(let i of r.bosses.musics)t.set(i,[i]),s.add(i.bgm);let a=[...s],n=new Set;for(let i of t.values()){let o=x.pick(a);for(let d of i)d.bgm=o,n.add(d)}}function gf(r,e,x){let t=[];for(let s of r.locations)s&&s.used&&s.id&&!s.isShop()&&(s.id&248)!==88&&s!==r.locations.Crypt_Draygon2&&s!==r.locations.Crypt_Teleporter&&s!==r.locations.MesiaShrine&&s!==r.locations.LimeTreeLake&&t.push(s);x.shuffle(t),r.wildWarp.locations=[];for(let s of[...t.slice(0,15).sort((a,n)=>a.id-n.id)])r.wildWarp.locations.push(s.id),r.spoiler&&r.spoiler.addWildWarp(s.id,s.name);r.wildWarp.locations.push(0)}function yf(r,e){r.objects[184].collisionPlane=1,r.objects[184].immobile=!0,r.objects[185].collisionPlane=1,r.objects[185].immobile=!0,r.objects[51].collisionPlane=2,r.adHocSpawns[40].slotRangeLower=28,r.adHocSpawns[41].slotRangeUpper=28,r.adHocSpawns[42].slotRangeUpper=28}function wf(r){let e=new Set([r.metatilesets.cave.tilesetId,r.metatilesets.fortress.tilesetId,r.metatilesets.iceCave.tilesetId,r.metatilesets.labyrinth.tilesetId,r.metatilesets.pyramid.tilesetId]);for(let x of r.locations)e.has(x.tileset)&&x.tilePalettes.fill(154)}var Sf=r=>{let e=[r.flags.Kelbesque1.id,r.flags.Sabera1.id,r.flags.Mado1.id,r.flags.Kelbesque2.id,r.flags.Sabera2.id,r.flags.Mado2.id,r.flags.Karmine.id,r.flags.Draygon1.id,r.flags.SwordOfWind.id,r.flags.SwordOfFire.id,r.flags.SwordOfWater.id,r.flags.SwordOfThunder.id];r.npcs[203].spawnConditions.get(166).push(...e)};function vf(r,e,x,t,s){let a=de(t),n=a.toString(16).padStart(8,"0").toUpperCase(),i=wa==="unstable"?Mi.substring(0,7).padStart(7,"0").toUpperCase()+"     ":He.substring(0,12).padEnd(12," "),o=e.toString(16).padStart(8,"0").toUpperCase(),d=(l,...h)=>{l+=16;for(let b of h)if(typeof b=="string")for(let u of b)r[l++]=u.charCodeAt(0);else if(typeof b=="number")r[l++]=b;else throw new Error(`Bad value: ${b}`)},c=(l,h)=>{let b=[];for(let u=0;u<l.length||u<h.length;u++)b.push(l[u]||" "),b.push(h[u]||" ");return b.join("")};d(161743,c("  VERSION     SEED      ",`  ${i}${o}`));let f;if(x.length>46){if(x.length>92)throw new Error("Flag string way too long!");f=x.substring(46,92).padEnd(46," "),x=x.substring(0,46)}return x=x.padEnd(46," "),d(161791,c(x.substring(0,23),x.substring(23))),f&&d(161839,c(f.substring(0,23),f.substring(23))),s&&d(161923,126),d(161925,c(n.substring(0,4),n.substring(4))),d(153366,"RANDOMIZER"),wa==="unstable"&&d(153404,"BETA"),a}function Tf(r,e){e.decreaseEnemyDamage()&&r.scaling.setPhpFormula(x=>16+6*x),r.scaling.setExpScalingFactor(e.expScalingFactor()),e.disableShopGlitch()?r.coinDrops.values=[0,5,10,15,25,40,65,105,170,275,445,600,700,800,900,1e3]:r.coinDrops.values=[0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800],r.items.CarapaceShield.defense=r.items.TannedHide.defense=3,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=9,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=13,r.items.PsychoArmor.defense=r.items.PsychoShield.defense=20,r.items.CeramicSuit.defense=r.items.BattleShield.defense=32,r.items.CarapaceShield.defense=r.items.TannedHide.defense=2,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=10,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=14,r.items.BattleArmor.defense=24}var Ef=(r,e)=>{for(let t of r.shops)if(t.type!==3)for(let s=0,a=t.prices.length;s<a;s++)t.contents[s]<128?t.prices[s]=e?e.nextNormal(1,.3,.5,1.5):1:t.type!==2?t.prices[s]=0:t.prices[s]=e?e.nextNormal(1,.5,.375,1.625):1;let x=O(48,t=>t);r.shops.rescale=!0,r.shops.toolShopScaling=x.map(t=>Math.round(8*2**(t/10))),r.shops.armorShopScaling=x.map(t=>Math.round(8*2**((47-t)/12)));for(let t=13;t<39;t++)r.items[t].basePrice=kf[t]},kf={13:4,14:16,15:50,16:325,17:1e3,18:2e3,19:4e3,21:6,22:20,23:75,24:250,25:1e3,26:4800,29:25,30:30,31:45,32:40,33:36,34:200,35:150,36:65,38:300},[]=[A];var Mf={};V6(Mf,{default:()=>Ta});var Ta=J6("GzQNAIyTJQZZOfL/bcvfv83qHkqFkYygH76oc0LyoIwkaOuwAzavOMwD/uv3Q1NAEraqQpJVOfvu7kxeMYAFhg8FZpcKibKKrOhDNt8xBysFFqKPDVmWIWYJANIZflRxBDpDmEAh3zb0V22Jzo5DbbgnNJpPNEiQOYQYltK7zUGiPdTPoJUkhbSfOf0DzWUnq6o2VenbP5wzlDQo6wF27GDPjfPNgvZ8h6DNc6QD8zV9iLFm7rcohK9hMAaRSx+AO61MSRGOeOhzCtCEKUC3feg0MCU1SjT6OjVfDr6OwjtWrf+zNmHGdHf5arUOuzdj7pk2TguoljSi2p88wkkvL2eoDdwyeOARCVn3t5yzM4Pz0iESdam5RP6VD2/MP35+ERyK1rKsLctzQoQ+mvKkmBUsIsgxP+QnApoYWtK0Gv26VGrcjzs52E5gHHnsrSwYw4GBw20qq/w3dmMzYLW2bh5xP930HV7vmy9c+YnxzftmwtS9PNK6+2AsQYJy/u2dtAqBt1ieWaaV3/387O2HJ4++PoM0+v+tujv//Oz5F0+EnT9xUgd/3IS1P4Ob2A+84yGi451VBldKva39ynQ+Nyu51dilBQ/9KlQOvi4lYN/9g1HxIXIkRZ2IFszXl41ufJCxQ20qJFQw6Pu9jmkz3qy2mcGTrGEUlwP/91h9t4RtIfjvOKkFi9V3n3z8htqo4x4fnxRXiqDM4wkCmp1sx8cArNzZcxfuZMsANRM8tR9cvwTMvKvBA5Wwc4DMPWR4b88xWFn3INEHzdnoWjqRysOV8UOB+elAoRSmBCeH7NIMYZo3GjXclqchL2iAFagGykQ0LVsWiYTrx9MUOy3hRvvu5lQuMcwHoU19+3GuClYJkE2SPulf25ps80QPbmvxNGIy9VUBo5JveJn3THlq7ZQTdyk/8WhQaFMddWwumCPQpiMu64txQDWhpESglWqSJVyih5cXqQIjh/pYfAabMtw5SrmXe9Qms6yP41OlsaF731ils2AIwQLUxezn3dSlryRv2Sr4qWdt0chT7LPlj5WCBFOOCDkx//LshZ/g+s9o8OvZaA/v93sItrtb/CVhLF+oohRlKADYmH/dpIJSeJc4u2E4UkM18Ew3kQjUWfm+xovNJAaN15bIwASs/B9ubOzUlAF5Kt288pnKWDyaBC884KTXp16qRoWMhn7gMDAfWFxi09nznWU6k9hnSLpfHe/JFsUq+52fXgrg6yW7uNPGCEMtFruZpGJYLPtDziQkKcJv4F/48fMLQVkMHfPHlXIVzfByir/0emIdbC6O7GNzalEEUwuWj12GgZ2xLKerZXxrRCICebCQ0RCLnvSAMh8hBjQu5+hIJu+iwzhEdSoueRBCQI5Dn2QQY+FAVw4XalrQXHCcIT/lB1vqj3Y+2cl9o+jR63aUAxDyEbgY0kVz6RhSgLHNZRmvD7XY7pQSQ9emFibny4rNZ1wulqEXxqXBg88GnXzA1+SXT26tmPv5jt5s00FEgawYklGBVPJCg7iV/nJJ3MSBy/FVpGPqO4vtTn/1ZbDdHo87qXjHg5DPiptiZA/mdJiseNU7MMhLEBOJjd43PWztbw33g2FkZnSleMXYkX9aBjGlNmbrZRKSSVvZcxXlOuSH65tSilns5zmiPd4M6fyGTwJg9XApufcxKxEg+92rKWqnVkqtuhA+bZJT7bNLwMHrUsebp6v9Qph/fZE5ftneBnel5TFcqLazwGoRLLD+76YpuqEn0dim54pILg==");var If={};V6(If,{default:()=>Ea});var Ea=J6("GwdGUdROTgoRRdlg9RFaFNjG9MGeaI9hTpu+MXtBmvZCCJ8c2Csovi5Efdt8QEG693XWv36+ZrvJxnKDnkrb8C4sPXedlfGI6GJLXo28hDTfd0sfo+KnYHOoUMLatx4Xl/pvEkUr7AxR3RwjfYzqvRsn3A6U3qVtMiAF2CAtO3j97301lTIAboYCpAwlu3Lu1RJUiJ2di0rjNuOce9+d/Xj8GuFjiZnE9QAL5cB1eO/9TYATQScuO21luwupVexcuuvVujX0/+11tmqR+XOhW5z5+yj1eOIRptokG1qR7I+9/XdSnfn3TvdtJQT+IpAI1nNXoMT3mmfCPfzNMfj+qLPaf/8AAAAPZKgDZhxNroS9HrXEvzAGJJbBV1dqT5hy/cWZ2ZV/R1wbNwlSan0ZfB3RI49Kb2yJp8cYgoA+EOjfKMWdqUVJ+OyE1ek++yiA5cgnI105Ss2T+6lvyJ/zhbU1+Qvu8guc2cLtvpy8/gW+KFdNbo44ySCwNF/JXu7ywzabMt2282ZS5a/bvVKUS+fF0ksvIE9fC77jFGFsKk4LCTHqYb+1XbmWIkbetsZ/wwdMJGjjNceFxbY6kkF9eN9iZoq4i5JwGBs1ejpyOQ98CwCJAGnPZ7xBHCyJZ51utOhgcM/8U6UpV1JnZVFULY2+R7m+vpIfdEVAH9fi7TkPdeab/A+pPdXNN+e3M6URcsmNPwRV18bd4CpCeh8SRbsCLuN1YSRGFGwcUaiLFj+HR+fIHEnxalYcic9g3GN05bd/oSp6zSZTMBZkEsluAgdoyIFgvoV3bMO557eS4KaCZRq4hHHe05XXlE7NwadjJo06BOzPFWJnTUyCgXoephfgZJydb40ytM5J4FK7BCEuX2rmH6NRKTpMlJ3J0XfYnqm4zqOD9Og8WM9kKyO0Zljy6s351YYoAmteollvrO/FFZw7+WRs1OeMzWoiqYZuWOc/W+E94gOAbin62Y+Io1u0HDTxkfHpwLTcTmgUVVRnpH8iSGmChxKs/EU1HKISOlQ1nDC1MOHq4UFohIVp84CEWLYOSIzUDBVbd+g4esKJqzdMlFZ40NpZ7STcj3B/xgYgpS8ygJVDhaiEDlUNJ0wtTLj6wGl7jzuRPedRVAAeSxY5mgRFvWJoR60O7W88VJs3+dAv86FvbYTGsjEM02YqWLZSQVqmgm07FRw7qeDaTQVlNSkfnT+09kStVYufJU/2CWZgTXEkcHr5OG4zaAfvrc79f2lNRcg0P16SaU3yt/Xhj5NO3hSi7H82a9GdjPsxfq5xqvSDlPpQAFbuQwFEpQ8FUNU+FMDU+lAAV//iMRyhMVCz0WHTDUybqWHZSg1pmRq27dRw7KSGazc1lFVqaOvQVpqzx0pHM2X5ixn5nYL7CX7uMaH0g5T6UABW7kMBRKUPBVDVPhTA1PpQAFfvQwFCY0lYac03tozVdx8F+QJEJQyIShgQlTAgKmFAVMKAqAxGC5eRGXXadZA8X3v4sRJ73Fx1svU3lg3ecjO/1wWVMDbXw9FqhlvcuPjb/ZdPXXL9SG1tbSTOl1JTtKMzfJs/nnTEbi15jct/vvVnzPlaFdFs8KG0FqXHRSTQ2h9X8BsFjA1Im9bDa6cyRAtDjZGmBumIOCR03R22/HjzAwJn3OL6PwRN5kHj5gtPJaRHrVpVZ1V2r5+X1cDZnM/xvI+Iip+aCnpYp8jamK1H4tvW7lykx5HmP1uVnIakcz0rPcLjOfg+nXBPUzNe871QQ0VZEGpknu3BCh16Fv3XZ4rQF7BdpCiAJf66ErODQXKFknrj4RIJWvSzayYKs+cWrCN3wr+bXU/BVpoxceL6lWQDFz7Q9n1RIpBJXd7asNaG7AK2zVfBHx/Vjpnarh2etcsogAF9ODWZ1r6SCpjvpRHOBdM5FoBy3globC89gqYsneLVVOVwfsSm/4qb+abKkYbGK/ZHm1Px+OV0Da/dw9uBsm3OrMEQJWwoIpEJnvec73I2DGn1o+LVGYLdHxuvMdTG4GMib4VOIRSP5XeFe6YxMRL31/sj8q1c79vca++ffQy0CVGvq7QVdpjS5ucwDW2yXEwMCEKR12TJZiyBw7fu2ggEoHt15B28FBgJnG0sOrgmcOpd6qJdgRoKbjOTipbbVN3P1c6Z+G7rcwv0Z5UA4lHYdasi0kOYAhGuJdMTg1G1BwAzB+rFI5f/7CCspAY0h6J7FMTlak9Zm7sG2sDkqicrpR5LkhuzhJ4V1miyLP6FcRanNeOOuRiIBp4VQiybSgDDP26f1LaQleo391qy/qeWhQoKUwNa2Qm0q+fjuO2NoCqwvwN6AgeEob02ZSb616rNGG8TV8FbEFKqsqIaRLq1Ntnbn+9HDMkDcFl3gnQRiMPw1HWByyBDCOQkVE7Qm59bN2fDI+/1nHufDKUV+3fgSSLvB2HMwTmE0TtgdCT9qLAwA3/0lYMZeFLPiGX5iZd///k+LLGdPGAlNCysud9Md9JIY3GEmzm/pd2x/BCenUiIBoMT5Os+pySEgymH597zcLYhM7nYTJy7SS3btYJrGjY79wkfXYLpE70WGjVcuORjIcYJQqBcOEpmZBagb/b5oDDUsAiGLsNi3PjDdVj/RcgAqP6ujBDKNXL9QVErzj5SGWrXnlbgL8agpoGZ+WU7zSrRwaOYZEYEX8XwUU/0RLPNSrWL4gYzMyy6TRVV2eymhhZf6FyNagT3Fkv+gUcVsyguiWp/iL0fVaICY3XoLkJPRLS3pVt3jVw9vyYn4bQ1PLwElOKPI8/Y3H2mJByGscy4tFEDkTJmmq33HK4Lqn1mpPHneuz8WID+Ys0Sd04RLzk2yX5WT3CclNFgQPThfj+mESS2ijh0jhtGbw98rbpW4r+eoL6efRL9iH+SCmnMR7T30mv4QODRfFlbdmW3HEFnlppWKEF9BHvTAkFS2xjphFCKvHq85RZ1gsRO/ki6yAidvKGc2M21m5h0XnJ8S9EMb9oq6OLlWL/Ou930VB8ziICT+AWrMiQx23L9s19QT2jZS4/g8YIjdDDzKD948xRx9EYiB60ihWTnvtDGi5p2+UJC+IyemWFN/kyQM+SxjN4Fj8mo8APBR2k9/FRYqAjMdns2w5xRZDEn+fulzYh38TvnOsTlmSfNaWFN45y1RWuIow7ahRNBXkOGy9dcTy26DsTXzMG8XVPsumzNvcvFCGueL81yxF38z78Bv39sKfjBBliP8ZuCZKm/3xDkbOlSLXTogRE7xJO4khlK2E7C6yeRXb8QMv1fj5cvQnQMEoVBfpar53F3Hn14hriGRZnsxZuUYbaKyjgiiA/iH77dttWnDX+oJZgFWAdT/8pocmYddA+doabDmrKWKhsYXSkh5JgiGI7w5nqMWM9pgkzE8yckWC0lsCKQrtxj6jN0k6IOhMXjbwopCIdjEfegDIZooZyS0v2ySyzBO8Fl4F6UIwSEGFWnqkDrqiRugMH81zYESg+ZZughGCg/3I3aFcMk64F9JMV+BQ2fpnS0JOC0Yeda1ZYtbwJGBHagB5I1PepAjwHYWTfd2Euh2zFzssuncgTrUU087hRj7FGOiICQCpcHuZHQGf+rHdakdNu/eIAuIX5Atc/2TIIQH4E/0OWRf5ERxXojbxL7M3IMkEaCbvubMrjYlUzI6GW5NV4L6QEdLOh1C4bZixJm0W5pTOxB9S8mUPnqV8l5G00YCTvpcLHYJZeW4+U1UvYRDuPBfmmGOL3cSrFddXuMn7LkTnwSRRlgGvi80YcBacoSYKideKoQ9ODEPy5UoXayR4RUNlXxFOpGmhChaBq1TZGypUVDJwGLAhomsSZJTDYfOo9XN6Mk5vwG8DMOzqOOk55zOvc45xm4yKd0bk0fjEkSQflq13Weeyd5u4QzjKMzsoFgbEnfECFFpyfo7lN2yPrVQZXHnGjCnfsPBJ1+wzxF+llh9F5lCkDdJiLkqr57KjJDeM4o7I8P+qp4f7TEtelF4d6W6rrb0Irj3ujonNx+MH58u/ZTymK8ch5zeNQC4Oi9U+jliJ3k4S0BFOD2W61yeh6WYo/9YZ499c1BRGropZEeerggfsOq0tBC4v/yQzEFVyw89KoxhKSy1sTB0dr+zWNlsdoUvck3gcOE6+tJkuoHoUp66uaxIkDGXopCQNvqxo9hnhbZ7KXhn1EoQzBXHieBosH23g4KMjaNwAxzF/R4DUBmCO1rQZRBtqDKPLuO2S0+3mwkqidSVq/xmDK8kR3a+MQrV/JZWNe5RlpAfSNcCFtU+F8lmVVplcOlKACixC5G/Lm3f6pwxStXUSD49fJVvPAPsu8jQPP5Znr1W6WxBN+fCtJ+NRJPU/hZhnQdZFkqWiaAiyt4RaYa5SUXuTwziCFziOEjA+jOmmIucnSueE46RDDhxiDcUKSMpr6oL/GJP28Q4lYlKfAyArcsfu0ZC5VTQ3ldTK6o0WBxbRKJVV4vxELjTW/aAjMmxBP5gHFn6obMkPM+rnLGKpFTAN1v5Y8wMk0/9F3XjQnv2x7UGNd2Kwkj3ZPBKueClxXVslYrimlI/jfoR8J8dW3M06ND+MgtGhSVOybwumhbxyXloqV0TjSU7XhZ67iZfgx7In97rqGbWUG7rMKEsN1J/+hQmvF0G+tvL99CxFDnjSJDSq/6IGohVhm69zd0Rka3m9n7O9/2rdhhju7arkP6L0T9aiVRDDcIzumGcCtZuD/RSwx7m0K/UvGPeoyze1Nuz3muQzGA3udWnIzJKIZcY0gtMbrfvE4rayJrzaX9gHJLAp3P7kWHtdWc9Es4nJWY1x14VD1/h0B1f/LrSKKfJrGF0Xab2KHdvXMLqmcNI15/cwdqTwiTqjvIflZJyzHxHy0yhok2uwdmK4dl8JSdEJphnhs9lv3jE2f03p1iDexxlFxJyAf3N9FMrg8mFIklNdgm73l8rTNx5ArFhKojyrBmESpJaEJsEJqjmUaXQH60+QWXCdtlTYFywvnlyH/ltluxsL699qdtGxEfhuY9iBEHnB4fbavxw25d8WCzn/JbUUzkNmqjM4fMVlMkWMrJNtS7TYY1r+gerid6THLi4SBT/PjY2A+dZHYfraRtwix4M85K20nRzDwkK8unQxaETAt/n21DepuOIlMPZcria/vnFNLN82e3FUZDIM2ce20j8ovpZbqhi4gxujcHDQmsTdFwnmA8tTZ9FCfF20mm0Epx0AV3IxAT6l/hqLJ8j7flltG+pe2rVjpMBMqjH13rTLpz+HVnhfloXlZNXyUWm9Zu3txamTsnOVoSrx4I08f7BbramA+U/l6gW3Ra0+ORsiktqqosqFFsjqEXH8WX3FjaseQI7gftDvdDh6JfGpxD1JN8821is4TSjE81tHs1/qO2IR7B1FCXOwz2T8kvbVA7zSm9+6apeqFCwJ1APnleeCodNx6IY3VUa7eZWyTflCdEqBBwP1WQxh7aeOKl353P8fkwHEpMLs+LrdFovmaF5q4OfaW7Jd/yRkNPYaS/+uDYw2xl1TmQCNpWheBPZ54vLzyy1lRu8ojso47cAu50fuqVXtXpo05QvO80/tWVGior5GljDzBdWdn0McvZFPwhCA6Dn8D8cUa2wODslARtArW8kFLC8dOc4By8SMjhGEpr7vN7pfc1PkUIKCvzlYzyFxNsSlkmmScsXl1+gcmQai683jve23unVsNGOJrh4p8xiDA5mpmgcn02u5GtlVCrt/YGJt76gRYFVRYH90guq2S2b5JihN9cNEDwW0VuR5JAgGnjuvpDzUFJJuSjdxzkfGO3Eg6HwQb4Bub2/DjrA2memx4QkFfawwsAiUAHIU4ZkY26cf8T4s/go65Rkm75uG7Th6KJKTJShOJnMFOeQPY33JpnGeU898vmOm3+VusK2YXdm0YM6QlgQ47zenGUat1MQr81KdJCO5VKVKie5VxG4Xo54Vg6vFHuIqR/eO9wxron8AqPvSXqDOuPaEmmfnXdBbQx46OAqtSayimNWnqEUamexKFGRt9l6ZttrxpafxqTBhFrLg36HZcZXpNm6k6+OXVLphDJaEPRWfHgviGj2IlPjkk295z3jr0Q/9I1SDxARTiWn4X9klESP3yojGXY5XJn6MVptU56vTE2jGfYe5DTOqLIdDy3kf8VB+wHtw5niCMatdtkuoJMbAJTUZYPkdex8R6ypUEIRwDU/uIBv+Sf2/QDQVwvvq+v2ft+k5plFixG39d8pDhSUIDsFpjPEgR9rqwckcfGnJ1pz2u3Nh5OB4Z6GgCq/FE1lgexQdwPV2Z9Y+OEByvlmF5M3TI+FziKc83pjsfbgnNdEv+ptHp64shnEc8zV76pM0Tgo/jNbsbG7GxS283E6bcmZuJUj3Q1jqqU2Bc8ihsuvNTLrFVKc3aVyhHTu/7SuvPSOnGoM8nlQY4BkT//B+Ec3r4clMKK/EiKajSvd9Mv77akVJim/J4EXugviJ6OcP+neqq3Wjv1qRlHbqMR6k6x1s1eW8CPR4/0dif0DADCb4WccDKVxJKgc32GtK8K6xJslmw6PhQJH0/o2197Rf5IrR7NJ1vzkfQIgp142DVbUgQSEq1QtCzRkyByfdf1Qt3GR2p1TA5JcZYjqxYkTx1igywHkwoWGsaxnGYi34NANo7xKjTkGqzmFL2j/4uSstbRgGjOsG4l83EqFVWfMLIAhjwTUD2w5fSjB9rAeFJNAo6N7jFj");var Af={};V6(Af,{default:()=>ka});var ka=J6("G6gtIJwFdrPLg2tdIZAVIuqHO6pEWJ0eoeVmPiBHUsty+s/nNUpW1cnWhmhDLhBfeFM4o9xXfdP22bupdJkNLP3oSbIth6hocm3AC+4OwbelvXcup5fSvaR0UnplQeSzRXKQPDb+h00tx/6iSMfQNFdUiN1V7fn9//fPrMCTldc7Y0lWxsrIAYD9q8DKVcI6oA64ow6x7a6joru2umVM6+2t/bZCGIYsA2rn7677M4rFcsUvh430YCplR16xlAbwQSk2qXeZGLa2yPvh4aXUVpXDS3euJVPBx50OvN/R970/x49e7h3AcPRUQC2O9efw0jlSnohcpPW59zuKNzuiLMw9nkWf7C3OX6SMWPZnr2lHVbNd96YuBWI7Cqr/0EBxHeEmMyNxFch+kHS3nJ2FpdgwuagrJVNwrsUDFK4gneUwKnqJAB8vwWAvItYy5rU+Zk9GXoq8ExK+kDY6bwRxTUVWgy8XfLvgTwYXssU/SHQqWTungi5S60my2gEeIm37urYEPt1ljXaS3IJ6CN9JKM2u+c4R7Xf21dtlB68TSh07ifWL0TkQ0VXAVdQNKIfEzxlAS2EDcV759QbLua3t+qRyWtpPY4+TVUP1j1UrIXacMsEfx6vzcuRjMC9N86TZrmi9UidJJznlTCB1k+J5iNl+XBzFZZIgU2k4hhK04IvGM3csa7jU3AwyauUI/zjVKRtQ1WNJZNwa5+KuRHX+rYZyzjzIMT+lR190pegk5ZogKVU4ECXRRwBSqjPW3Tp7kEXWVv4eINnIcKeewUs5hj1DCxweSsOpEV6T8F1cvN+vyTm0+0cMH/QpCZDtDZKCx9g4ZJX+Pzag4hcKTo71a63G2GQ6sR4FNccEDflQlbgTm+KNRbH5Y8+4z509ushvm447MIqctQbUECLQT5e4Tt3sh+1aBK38RwDEUkvLpel3FUM20A0ZR88CNr3oY4hzLY7vPD0wjs278XEXQwtzSG1agE4A5q1keVPxnVxJppfCrXfuWS6vBau2ptQH5KZeSoSPGvxAz0g0jYY2IRUS+Ek6XbZcrQLn4VGMdGQERNwOEjUhatlECOaY9T8HMT59eekCKcs72LaX9nRNiWGw2H8kEKtQnLEEYju8wchAGEr4JH8o+AWuV3Lf9yVxKs7UhO17f2RzgAbW/gvK626E7gSd4JNoCPwEQ7Caz0OWFRCZHmdeIN3IGtBaOdrkTz/c129Hmf0sgseb4rrsuoCSpQ1u9+j0tD6A9PJcTaL8KWnl9iKox2wVGnRptbfYbU9wbXjFXB+3FWLb0e4cnC/J8a77dUEYZ2yD3O5zveRY8bAS14EfrrwNfmWc8TlFOo2WIdUI0xK8KTusrbPuHjs+gjlIoxwd0jC6y0MH+JEkdhQfSA8jFRTLpqL08M6LfiX8n9ua/91sW+RNdHDB5XPwSMvVUgRVXSyjz3dSE+ojXKEGtG0Wr2IWUHpVA91XSqqTCj+nBGjqobgIuVbNsVXWMMUWkGG9IRsx0GCYaGYhHS6xGUh5XPKgkd1coqqQIMWpplXEONRIoIxJkzMuitfC8tKzcSHPgxK5kvisOplijFNqllP2vrXNaB2goS8QRAdhIGyCrQLM0zLI9FWZzRYfLZbTSlStn/0HdG9vLc/2eAFOyzqbcmdzJQllyME/BkvCu6X5gUhl1GF2vPkPqeKuJuJvRHcThQOQdkvd/U4d7srdFhvkoYui5bMTLU5MI1z24QNZGxArQYBfy/Yz4dTIhlTGDgh28YfPR5+DAtkGq4lXbrVaz4V/siAReMkk+YQBkeCmnR8EL49eH3zczeA7e0I+tSznaTsoK9CaxygbV1p61+MR/wvkmLpACEo+P4usFFICI7+Ag37euBMWujqb5XV3iI3aF1GgyoTaGSYmbbHaQhTSDgCTa2HqREw7scyxYKJk+0cQlh1JByMwzcVCUGL+5O0i20IWa8zEe1nTDSyjaMBSlIH3h6NndvXYbkWGpgOOOxIVRxSq51Yalf4eqyWJJ5B63ozCVtGwDmG2SQd+nPiDjJBJ/KaC/90o/jMSDtQd7uw0p+GWHMaF6zIlaCypWTCQ44h4o876ox9IZSvMjLH6fPypEf16jF02jnFUEsYFsxGJ58hHGLxV6YMPnsA0ZiuvNfEcmVcOJGaYeXqIIYNKpwuiQTRB5TlNU+mphHTYclcFUTCVcHBYMuz4eAIfBlUKbggPosRhVxC4jKFaNOeR8nFmaxaUZrfUfr7FSnmqs+WMccpw/Bvw0vE2dZJ7EIK4aqSDaf8t5rzRyg0QyzRc81TqRr9VGZtaTgGuz0gqgwMydJzR4qVJmuSOh+9RlGDrDKrRUlT+rWAPuJnW1mKyHL4JxNu33EMXEY6SVKdA+BAmRz9AtfPo3w8wpyRSG5q62nHMbjO2GTAMlnQCkhSchzOf+c9iOsvqgIfcikOMRBVUYGyUDH+l2gmFZSjzkMGTYpZC3QqHfdfg8MaNlyLJ27L8+vsCNRJ18sgEDrkSBDVMDzUrjoLmPTpL4opmYVCTUUizyUMIQ8n5IkVGaQyYuq1lYqDmUYwz8pGdQcmYPImybPq645T5eztBLWl2qNOcwUvL6pCNImmfdCNjQmpc3avZN7Npsg9Yz3JWE+cyHVVeGM4wkBacqZuxZicooYHOaIeTmMBnFLkEuMBLG/RjUnZigFLmdrZMa26tUtIEO+fqf5k3bLvFGTPxVd5Gh20Vz7TVqlz40h02zFJt3kPBK69aKwR3+yVkrov1xoerU24JoBcLcCsnZBwuyKdSg1EZTuo1XeENoTbeks8H7zTEucygct1p316Cwb/Blj+pHtNwdfrk9FK/2eKdRzqC2uGaZ0m9y/n0TW1J7aJY2nA/xDYUdXnULUyMVl9AUFLFr3CrErRp5kdkik1GBqxHrdRgDLCrnBQA0NK2Mn3ymkvwdipwQ13scaYvySLPdGXx/aWMF4e7aAhrxVsYcLYmnUD5Hi+w3RZDtDet6+kBs4OJt9BSajWyMA2Cd0+UCjgVCaYjpYTLYJ+zwYZsDNOckk77atidl8lM3ipzUghSkV4dAH/B20M5oCUahNkOAAnE6tl7HFDiW49+wJXIWREet50TtpBG/fRlYl+a3W07HcjmrFvnDqrvK/LwLFfjDmN9OCl29g/JaEVaNUWZq3QmEYXeZP2YmFe71rJvCO490pAzNGRG3ygpIXcCHcSvnTqgg2Az0Oi5YlRLYu8Rbr10LCbsidScfQSLpLIKMeGA5h2CeP2wnwF6TOu2QAub0qt/FEwiIcO0cmwdOz2IaknhrmljyLIp1BGyxWlHvWZCCZaHIQGPmp/eiuwZHZ11t2RY8Rl7UTyFs0VV2KS1XyMAFqBjocmrGrApFot2NMjZhQ4ym0CurARxf06LOUDW92hb80Opco/r1z9OzGbmxiI156zB6H75o0SQos/ELiZCOMRR3agfEB+Socidkaam9bWG5zyRa6jObbarrY86HYxsQ+BG7Bq2x3RKW7IQBa8ZR8pecuoiErwV7AYAcJrR7c+YFHstn3+l6RRTp9xjMg/D/Snz8p3qokcAXi7wrX5KOOZs8/ERHirUXvNdtv2Hn7Rt3mrrYpcKdO+AtoicCU9cS+HDTnPUC7C34NxlYIIUrp48oD6cZjq/dS2UKCg+fvBcEudAm9K0n3bRNMKT8eROKQ4ZcU4auEKypKxnYDrBHiw3fzgMyMZ29udZo6xjpS3vN5y2iSvKlDgVmPWmjxoBEVwf52Z9J63w3GOzmY1xPMjpRGMwrrYdRDdrbHKDgiDvvV+ZOyoFBc18HneiuyEmisvv2AehKx55kK5t9zqzP+pCZxCW54xK5pvpjIwYRkqhIShMhLsxPQ6v+JjHHV0gGmjUZAoLa0bvV6zecEN7LuecIVLvQtojoVJ/Vi/c2aYWWQ0AKRBUulPtLp2VTljPKYtj1D5wBc54mnqphsdYIIaWeuOckDH0O3qVdRuXW3xmOX1GFxcimCtLoeipL6ttTsK1wEbIyYxtABqp1dnc6BeQkJSfj6t5f4XFF0va2pCMmoAUIkQXjo9jJo2q1lhlIAxoRHB0WmqRbbFawP6LqnwYt4nwiCEllTGkmeiKADxhSLyKRqJaCRy8gDYweTBZUalekQaHDPlJLiPSokZJJbCfPBTf5pUo6FPjcc9tuQexfRQXSsv9ibKUm0lgWk/QjuXRN67PGZsCQIH5mVVqVfAcgz29E8v2JaWMm3ZEK0tyojGw19dgdUmFgCsgx6xM7VH3PseVYg8uhlaSBAf6uCjOqcerOgL5gbsHWnAeHG1da5abYRvsyg1a4Dfdm8ou8Kqu9Fv9d4aIiKYHhoM9Mr3kXDzVyvEksI30Z1Csc19hskQEy3B2r3flw7kje8ZjFnkMKw/hYFIVR9EgD4ZqkAmP/YrIXcSGXCnXk1yjCr48SvfL5qu+fcZfIvabVcwdsccbp0++UbnfcRUZ6UOBccSswnwRszNh2abss+vLxe6Hn1PflOP5bHjw5QhThVgmrHY8r/FWN4+XsrC3kKbnev5Xtdm4nKmmvN+zgDdp5/bWCX2VbgR8FArMIFLjzrmMGVd1GOmZQDaVt9D5oKdIkDIS1R+qpeH3292X+utbRU/+ePbeO6/WciaF07eEQ7I7FRs6H4XF27ke08QhhGkQCEIO15+9qnx2FiTSnAZWk/P0H4GElIwiJcrkVKjSQitttE+08Kfjknhhes4qSljF7YF22milhSoVcsqUKJKRkuQAqsAEElIyipTKmUqzPtBKG+3LtCyRk5OTk5OTk5OTk5OTk5f8hNffTFrZcqGYG5gE5JZm9dfmswIX8KC1+6KC+9YfFFNetEqjDrAPCEIR5WYFD4CaWKGUWveAGffHnJWJ2hZm1FSNUqyljryENJt1mYpXxljqyh+dd5dazYVU6PFjanoMuLpcKSzX1JifZN5fri1LEXoZNVV3unKnkmACWDz6qdquXrlSSTHpdH9QK7ayVfBAaJXA940rIRRThkHLJI960uxKS9X3eqnuSD2BzrSZSuZVMafWUAoYAMHkqwwy7GVtYURJZrME");var Pf={};V6(Pf,{default:()=>Ra});var Ra=J6("G1AWAKwG7Ib4AN28QhgZvMbtprN54+O/ql4BaXHpo039uy+npwYpZOCUduNQCX1oSec4RQbbrVti+LbJUGUqD0EG/amqpPdtgx+wvkhrkJ0VhWBtOkzz1QYU/hupJlRYmf80V1qiAroKJS7vzc9fwMv1csDcmc2KLbMidEi+ta1TfQy1ljY31n8iKgFENMs2fXNqbE/OvenUaNew7YE1nADdTFbD/TQ4cmkI+O0OR2NMFkaudvugeXCGJZuRa6Uy/zedOZSvWkrua8W2I2Nh9fB/borQOwmO9QsS5DZeGPGgshEVL2fGSuTodJVp037uC8BIhuEiLUaoWVKDtpItQUhDkJyfAGAe58LxWdLfHWOCl3/Z7eL+avmoFPuxDucr7+VeMcbR95FSoun5wyHcT+6kZRiXhDL5eTPY0wu/R2Oj5PBV+Ejx+YgCW3TiG4j+V9PWhPTcOSxwyfxKIFBFZAgL6/9pkSPUVFIEhUBp4Uqv5BTS16PI+z4B0Lp5Y9oRO8NATkodvaAqv3j3OSiCpER3XqFiMNDu8ByoOhzMxlNwI/5/bobrFWb5bgNk8omJLJYnf6yEVFg+7ou7r2X5SAAmb83Qm+8T3OwgI8EStoeu+8vyEVUstIL2e0iwoIjDqv4NgXpvMXDkJFC1xoQCWLo9je08cJJOMQ8ls+nG2c+/m5e1fXff4UpEJkVJpecnjogbKAloXs41zNa5a5QDdObwQky3QBISlJbasC+7a1u6bf3FBgK0q9SQlkEFC5fBRDUeQm0GJJqNlLGRBuhLSYZ2yVbt0faekggoCtZwztB1ENUnqUmffSWjnuZFSIi7rTBs3ED5paaxBzmxJUQmZj2I32Ovke4gEJSm149ihFZgklPK5JR7JRDohjTKdGjCgeBIt5gw9qlgPQ/RnRk4lRHquqnwa9+HHG7Bt8ZwCBFstZSVVNS/K117YsJY1Z2K+cgz+1wW9qZ/k8uRfqeJoNSVh+DTbLXg1nfXUNQkd3pycIJAXfRGcciSbibSUpIjEECCRUX+P6iGQ0SncZKkUKyjS9Q5VxUJKexaSc7w2YnwoqDMaP6R8TsyX2VGlBIphNAsSLHKNlT3v4MJXj6ec0TIi8upOMT4MVANIhQsq4pYhBRnGHsTiFgjSBH+IHriZfk3ZzjJAYS88dObvDDcgEeWThV7ESh/HaxMOZJBbfrkzyKvF6kpFWptUnt4X16xw1PirStf+fZu8psvGHViSsHOFAx7gpaVugaT3uZYaicUPjiLKLkpvG+9TLA5BSQbNBi0vF5ANluTQM0Dm3fXKRitWVS5d/fXumYXl6v2AAMFnhPzCCc5EYRGPix+k0dIo4Ek/V6wiLzgc7zUng1l2s5dM1uhN7c2S4mhS0Pm2n3fbhgSlzcRKiFIKmKQJEke7xpOFqq3vcp9CNOwY4Y/GTZunmZnBw5sJg9slBJMSH0VkuGt9MxteOkrb3ntO4gM+i0UBtSKVXb4dpw5blNAEgk3cDglsWzWhqaLkvAhMdCsZMyMsDeW6DBvml1Cg4LadkW4Z0yQlhYlKYjp/kI9DFt/0EjnEoXxKyn5Nrk02FA0jKrcWfervuG+tUyHqJepuiJkMaB+bX1qMVBOAWmJ60tANxeC6Tzw3u9sQPuEZAE/g7pSrudil6bV9S5tTsiZ8JqFPucnEEErqAmkqbgfcsLhkTG5MzBLvI7/xndXu8lHpUkEbVdrpU2piJC9jsKCKYUMmg2FZAK8kv7VVm14mtIVfNDa9EXBuat8Mi24OP0MV8w8+HrpM+B3DXSvD4+EUJ8uU6XGc7zr6bUwSlwyJZpgmsHJWCUVLFMlMRonUIkCMYr/LM1XO8mK1gd4Rqsllp4If1KMcRAdqL6FaBXKx6lDkKsSVeJUW6KjmdF+QcODkaiWt1PHrZ77SZu5qG/8BBU1tRw5aj5/j1Tp4wWk4fnshuH6EvVeKag0n5CYQromr50LquUr5a7F68bXqvCU1Ay26+TyxAjlQycZAa3CRUhxhLG3wmB0oNVnlq7MXm+QIgRtxiQY5sP+zP+94TANMcMRoemF8pk08VHB4UchUWotZRaUnC+40U6l1OHXXbbaZVR2dNrmP/EOVcYhHJUPEzKJWIjZiDJUEnKo4pDDYsuu8xqPz9DWFKtlQi1iWy2fXy3vmOBwtmNxeUnuOxKXoZksMo19TlDpdMptFwU9QQUEC1i5n1UWAaMa2H2+SbHtuI79SE7AqlO5lUZ/LkKQcU04N2H0wZDmUYy6LgNraVBjCu8iARgUKilTvfUKMQ5uVtG4Ks1aWwtbmHj2GljM31WJ7uLz0aEDWLuaUM684NQIEHe0IZksPAHGmyJ3H9BsYlt1gaAyimvxzIkujoiBz4ludmAbAnkkkGxfTGzO4m2j4bnAWInaDUinVEf4CwB2bU9XXQMVXqp07X+xhjgEvKVaWByndVR8Pt5Ee4NIzRdpKHU1wWT5ioGTi0gbkIuculTSQfISIUBkLSgmXcZNdsK59llcvg+EQS2vw6OZU2cBGY2eUTMjUXt/CpmLirX+dqvaDOjCVGSmPnplayQlzH/xag+xRgWuA1PZnCjWwJlwCkZsSBrQfuiYSIvpXEpQ47zaotE4G3fOBz8IhZLWJRDZ/IssERdCPGhvwviPaLU4LY5Q1GSSJoZ4rVqBR0EV5Ig4TS/t5pgmY+hVqscxxjwNgTRkuuWJeZkcUGqfAA==");var Nf={};V6(Nf,{default:()=>Ma});var Ma=J6("");var Df={};V6(Df,{default:()=>Ca});var Ca=J6("Gw1QICwKbDdqF8CU0Tt+WgZL1yJREzyPS6f7jXotqOTu2OoxIsFXmLkTyf36rdPVmLeLgVUYXcMvMQosX2bj3bNMaf1rX+RyUFEZIRxV98Pmm+edy+ktm3R+w1uV6tpxSiMyGmxlxcBqRD6CSCdTFuFxOAxuRvzYJfuw3zWsDdS+NzMtZgMc4UhZW7mCjCEcveQzRUpSvNfvt25nZ6fgRewCqNo70AD0MDLuv/m70GDpFrijjHchnQkSlbKETFJlySkIpU1y1ng/QCp39+BWZFmWy5IniRhyOu6w20Zyq9lX8B6FOkBYzqlGcVeGcad7eYokXaFYSuFfU36CY25FN5mziOG7haGlckfa+25T6L88GoKdtJB79S4kYH4yPITy1OXGS+XlCU6SMp83C0ABlnHwc/CdwOCSbF01mvj/Cc17f7cTcO9KtXUDJP8wwf6K8GmXIhxeLURiLWNGB/w5fjC72NDkauvUF1sB/Zo/dkh8y7qozwPHlpBtSs8LvNpsXq/hNjJv+1j3aByknyxxiD+BFXOdJg+n/3uBDCcXIOup5aewklCUPzVkoSfJpeQGZhEPSn6SGWjUDS1awgn3DMckknn5BoVF4mgH3eua9HY7B/f8FrcBL2II+J1cRRBPHFXzegfW73P4WuMgb2nZ3j4yxu4SO4+9nBoCWe2+/A2C0sak7s5ExUrLRLd+HrTuDDkzV6s3lchfFysL97BMAWRsyrYP90Lz3NPXLYFPILQaUbAl3+3OyyPPD7pMqO53HsfCMtHPC0gYooNICoSstnOCCDwxANwzwHfAOD/bKmVQv+bV+sYzY/xa8qI0ySdMMMbL62zbvTpsrzvu0uhj5hy6H283dygvZ05BKkyhgh9EYg8WR/vwmWauhfO5/prifPgsMG8B+SvOcahu7Iqz6z4wXgK6OjaQ79UNTQ+xDbLHeGeA/M+C/ML1GA9GW/WXSB/rF+Oy8kvl9WjYs2ybwE5arcYViDn1dSLj+hKEHLzSOIBeeQFI1Ba5/RBBi5ymhCmofDBlnDC4fn4TE2T+VbVv+dm+Rgl0DohFxxQdgDYDue/tRZf9I057qrKnRj4PxTutAffTuoECJXsZ075WO/hQX70oO4LaLQAB7P+zQ4t4KG4xFiOBWmI1Hm/JV/H3Lpl9cW1uj5B2uVst21+/aDkbhIIiqUN1ZrfkJ5M8/ROwvlnopaWALxYlf29CcXv8r+um8ZMKAXpJCEdw3S0BtP9DHHobncksBL1XHzstZpLQHOJKvtZL7RCm6JiFijPQveTobvdyGbL6E+DfUC+H2DfKkzeleNZV4ICUakirYKljWLEENoc1fZl9XFByk73XZ8gpmmr5gvKCqgmXteaRvZkGMEaKZcUCGIBlaRMWP007YKRzlvNvw/OGTEu9rOQbbf7ZL28gLO7yuXEaEzvwiceo5dKX3D6LCZy6c1Rz689pIdDydIEppcV2JQypukbgMvXQZmDGwpgffOQgpIRQDjtLa/+R8HDQyPt3kmOh04vmLWJ/GdVrZSoCk9toX0eMJWc3h8JMihnceev2xlUIEz35+2NLzgwaJnuCS8I4QBJhkWDU5pQ1nVZ3U1NDOe/zdTEJ8HY1Zukk9N8+jgnOZTQDZu48+v5j0wDo9GAhXXjD9Vvsa7QpDvEvmpTdjLRsDeOri32Utn1kfKZkg8/JAH18UBoMoSMbdFiBjDao1Lf1FhT/b823kCERYujrtPYaaX1t++bd7cG6CstZPaStCmV9sBOLXl1scv2QhQn5zcmU871CrfatNaZte8lcvxc0enuOLXo3EZxj/kn7K+33Xo90slEwYyAjpEvC0VB6gh2w7SKubHelVHw23KeUBzbGrF0rdsiLPbTZc6O3WsCjFp6oH2bpEDVxx0cHFdGggZv24rfVsLkl9i/bIItHu4CMaYIyMb/MgbWlHPgmG8gw17bts2XNGWwVH3mazSnRuXsRn9DgNsqdOQtLorTZXgzCTcCcpDQSnd6dEVCoLgtP5AIoF8K8bgdiVQjngCyd1HKDIlIKlAPhCzPARHtNMROyDJ8SphRRmrQVbzLi6jrbdVITeCpGbi6JaBBaEh2JRFtiQoZWkqeR6ZC9AFh1sFlwSo8GEZHy5vwLzD8OmqbMtAx4/D5I8cbH6CQZIHdX25oCDexNkpm4UC0aBSj08NAQc6MjKOTqGQkPbhWxNkRZnjEs6DGCk0yXB+2KuyeNAdsyJOTugCy2mj1UQmI6YQFNaTZK/TH0HIl4R9ZhrQuNYg2T2DnSee+mNdGjdAfgI/c8OQLS6CgdBjWSJaAu0Q8V4kI7Eait2wAyOiSRG604WPD01zZNtUIc9ahuTtzIMIHwPVB4DHiUruKFac9DxFpEd/wgpWZL8l0pWFOrMBEv4kwKmCfVgQOQpSt+9UUEfbtwE8buOzf4ybpFESRK1WP0I6zWIWRGua8oyQqik7VFmjx0R+YgoRDfGtRXDWcu5Pb6k3uLK3/3VcHlCSGqy/jkkN/dxilqV4kRVF3lco1gSqQRJzGhZyex2+weHNwl0gEtAIU9ijoJSVgJmKJhrxVJUnnw9e7lgU22TivrY6uOd0DunU1qNgeaiow/Nexh92qpq53wWDu3ah4V61+JoV5bieWY3VYdsD6LzIdt1oi91sK07in6Z9KbL61KTxOYMfTxDeCkOuHjHW5sT7A5UgJkXhSwvgzNRrFhf22986Fg7kHLEgQ5k5asSkG7agOeuoONgDreJnjImtakZJnHLNlJ17IqTmMq8mmj+3D93UL2CvO5GOGChtL6h3imT5XBvgf/dkAzOiu6jZpX2j/cQh0sXajt25T44UFaDt4cqj2kOu43FLmmer2oGo91Z8oiIEOE40IqhvLAKILpWnNdo9IMzg903frS0gyRsC6NnA5KblCveHWh+LL4oU1gD1iBZNXQrJbJxZc5FNFuAcBMETUyn+rJpAywAfJrBpQNV+4Zwn3uKpV+jQFfl/OQr4d0klNFd+zkE1lbdEs84ROPeir9MssWNWu4QoRBVKwBlnXPwwZ7uOF+b7EllqbuViM1b9/eDZ4Aw6UoTCz1mrT8nGiv11L0gp8EaaZ6XzVM+vyfgLXQYuyKEO6O/R9gmVAojCyo6V+MgQzwizUycXLG6YtcUG9XP9/3bCEbLhoFZNNZeVBoogxYWjYG5VrtgH0wFEKShss0/vhLOrK+clXStwOmjnUtfLMbMYgtMIp/OzZym0NWDIhI+TahjsyPf9kvbbW/nzaoKJm0vRvCRyiKcpilafNWWFl+dOjTxiFUgO1LOx21FgXuo15/6EIJrqQEtzCiZByQkPBk1ZEOOvf6IIOlWycZ96FJxrk1btFpUPRkx/ZMXMpGvR+ld1wc4VR79KqtVObCvPNvJ+3IAu1aRy4o38dn4uJ5x3y//y9223BIIKOhOYx4jRwCvEAlJVnj524CxDrL9RxPJ0hn9dZhuFF4F1QGJgQPttQlyO86+8pq747TfxksuNp3pKcEsaF+w6i9vWglabK/yvcInBIjvBPk5UvMjY/cQo8oL015e7xzmvQ0gplYsiEDTjgs0yOZ5g7bY4MK1tR5kzjMtHfrEDEj3lPXiPVKl4N1ntcMl3p3YIlbvnocM+RtNTJDbZWiEa3Zn/a4H6fXMAu/4bFCFWsW6W1BzCVvqpEZinV+gsGHMmEiaiC7YoY8+pCjCg1L+0W3GgGd72jPuXahdp15RN08HlOkOfYlNBBtS8xPdUgX0h4GAz6j3UMAZBspFZl26eSusKkhZt6uJdi2yLqr2w8H2lQHK5XOOtfOS9nClkeJO6whZFkJY6U+mTCHnVEe+FjZp5EoU4UCKldfa/W8wQ47tDbGNaAotLtoJGqktc4ko33a6g4i7XOEX3Jx6seSehTchGUExQgtqOVSo1ZXIpYrmiZa9DTxdM0R46mJm2ZWhygTBb4rKg5UQezV1wTQXnV1xPbX0NrWQkr2WpAXSlxF/dLSfLXkNWW040NrkX3dPu2NLh9hvasQZYMuthizXAP8m1IE3XOcv2limpw67mrz0lFD1YaeblxLr+nWZXYMXbL2gCDEQxV5kzjT+PqhstmepQ1lXbUpJtcOBc/5QaxWOb700OWJGnIhFck1OZSjIKVjKIS0bHrmc3FICNMtkaWkmKrSSO6KUsl3MsOSzGAl0IyVTYZV/lElykyv9kboxqRsqBiFWcuCUuQiSTtrYiSb4JurvEyXTFTxZbqH99gpwvi3o1yR5aUwOMYRybDJUJuLWqngPvlefkbIKvLwy++K+zV8OjJeLfV9GBLS+NA5Q+Cv6UL8onGJqn2zgEnnuokVcq+178QGH5qyyqCeiSUlZ7lyn76CKF8ipATlpP7f1ZNQniZIS/c1U28OZOb7E1FI4pu/yTG3TRwAK82+M9R2Zc0c/wf4BCgcZh6lL1xY8ZTRTm0uWFRzvSo+BwwgMF0Fd+/55bl2GdP976/6ZMjJwRYNFNmfK8831+TcV8b2TB0BxylKpMYYU2NMRvrWHa+bY6pcMNt2/D+npPBFnlj56uxlacQG9yihjlLwC2bheeL4xU3gB+Xz+Yu9/gHLa7QOiJ7TlSqdM4XOe8d+veMVgQ/TPpi+IdCmP3r31cRGzVE4PyaOCU1EnHoC0KTKWUuWo/ej1wu3FvSqUeZ6S3iOkdCrrdTeu/Be799mGslwBHyRUiQqs8NZhizaM+TH0qLrKo2Gh/cDYP+4/JtpZplnSxbZmpWsVmqgSaevT1t4uKPPg0fqiAM8izCee/jq+d/ZhMIpPHw9RoxHZmkxt1NA6sRyRMdrNxiCYOXhfF6M9iMTWzYmLjvgXd/xjndInluvRmzXbNp//DLe6kTAtMnnhEhQm+lquf21u4rgwlPJdkPBDW2oaF4V5qKsyqhBHnT3vDwaYmvNt/VsqDZ4urXdEnCQbVBP9C4c3QUBpeFpldAMyOgymi9Mv99J7KbBd+gYrVnbCTNOYwboIwFCTUmJ4n/PEwzH/SIsKNdqZGkN9Rl/xgp8pvNP6hdB+si+sqKEMUIqC5/3dVE9RQDJe9lwXXlMlayHUIz6jOtjGc0l+pX35/zGyBaSFDwkX3+BcH808/KaNDR4aQWLB/ziuJePy/8E2gwDr5Na0qHk9f3SWldC+O8fYPwfnFJf6fS6jYHlHb9ykl9sTh6uSrlbqg+3rq8Oba4ym/JeltTtbI11DRwW0h0e2oGOSSaPXLL3raZc/kCiSkC+QszD2+CQWT9+Bw4JGNBxLHKR0VwtnnBy92nMDGC+aunLfPVbZ6bBZXa3KZ0AFgzMXktY+aE8yVxVkK9ToT3OIsaYTeY/KPYspvkndk4vT/cpR6EiIZxKWkw4dKfEhENXSmQeIl9ZoSvzG+QrxCMMMAGTV4D4gKK/X5HrMUIIHpwqAfkKcT0LTF4B4vqV+ZWsJGlbbRkzxrVqcpj02ArxdJXdtDJgEQsMTWQO0/NOEeqOTILnoQKb0zJDdAXVrFQ9x0JXy/47BfRqtP0CovvcILJ9BmduIHHk6PDFfXjtvZLgVl3Na9ucts4pEXNsT565vsru97Tbc1iCTFcGZ4EO6VcaKPnUrcpeMYRnFg6Z9YLq98PI4GbKeguqLGhGZUToYycgV1CB56EyIvSxE1bErQjxUBkR+tgJKzTEdj2Bv0+8VflkyFunEZ5g13YsfPtHVnzK2OIsx3QqI0OpnG8uN6ws45XD2Ux82iHaj7rk+WjmJD07Qdcvktb357u3yToXM6frAbjsVHLzuHx9GlFdMSgzxRbw+oxayH/eSuXRlDiSR2GVTemtXbZ4jQeUU8PGfYLEqiGjqeQgCtWaHOawjJ9ZoyLuzxBwc7xTAbYFtzm+kbaiYSHbUTJMwD94U6W9zLV1t4PIdP3DgchK1YCeAUZCIPRV0Nq758tz7WjS1hLjs/Qk8zrMWBTv+eKYstrBAz7WjHoNS1AjbUDhnlY5o2PDsXvIY/oOwXO5dqksEmRtb8N/c0qPhX0q07aqxE0PelnF76IXshbcFublpUw0c1rLjIRp1TBsutLjar2RkthhnNR39rdyu/S3cptDR/TfkRgOX3j97Vc/txZujoEr7erze3m+8Pg/YvXuBzKEJCzAl4iwj6rwTnBgZvCxjmyq3YKP9W/ldkuwUkc9rMnTeg8rlWP7NWfhZTDqZS97GLSPyLXBPjYPp40Nh/O0on/UqJC59kkiKxAK+XLK6MCrpavQLjzz6MlG8mz9tzfs3aJC9EC4TnfKs0/d//j+9LSBj1UjepC9O88jPxi/n0bevKc0OsoJYKqKViZGIut6HWDT9bpUNqFzjlBf2fZBGcKByKg/NLBt4u39kXg/sd0gOPbs5fNGOg19uiQzRXV9Yaee/L8MibOaAWYMzPf3x/L/BZAWLDVp4XVR2IbUlSAKUMCWPrk4QGq0tSlPURTFlql6A73QF8PKCvbrdpIjdrfBBq38sbMpvYlM1qe4Qlz30dr/kT4ksskggxOt7rfjOX2FEjDYOv3MmHKU/ctoimo3M9qvvvsY12+WSle22nbACHZz6FRmGOzgGnCxXdPjnF1um3wWuPfJYeEBRrt/84DIS1Um8yVJW5rOsMfYrvVsElDHNEzYIANLiD7XVS1nZ8p51/txfyzkSWDtaSWAwPHGRY0nMTzcqjq2LioHbP8wCiFg9bbliXs4iPOJ8t+juEWcptLXmZmOHSX5TQAvYW/JK3uOjMOj/2z057+EhG8aKmPjtwzYGPrbFFPzt/vIm/apacsLA2fcj7cjDVFu0xV6zkM80z0Oj6yfJt6cVYfs2ubo7BFUg4wY1OXjavYdUiK+74F1g5JInEbQqdmqsrJxtmqsmqU6F2rY7piS7yaVFwwz35efBvGGyg3JRnW2aqQKUwgk43iigr5nLkLy17NYQ2LZ+/x+tQsIQ4vpDpaOuoqTeFBZJB9UdADa/0f7J1Prx7npI8uRELokWZWdH8Om+EufP0/i/oh8QrSuTYrCu0hWi92p7oaQRyMqiG824inUO3HyDBmUVmHTU6Lg/BxGRnxCRdltYZj0p0Om94TdbSS29vzXF+cH0l2SFJa6gQyglgL45aUxSkLXaNx36UU/w/v/CFvVxFO1q4prpdcq5aENTVMHcugsm4RzK9cCr24xDWtdqCb8f/MmPA6J+mS5/Et8YPjxCyxHPNcK/O9F5oshg+nmtTx5lRM2tZ9D5vFcFmltj5Y2cVavAm7gPKk6JVn/APwmCa6kdaV5mGTTwZ1reX29s9tWx3grz7qhaGCYIVRXMv9GL8wHJEFsGN2BISjMNHftW98ZXz9Or5unqOQGm2w11nYb9QMptENDBqnGPktTVevYCFxPg/+ueB0QWj5x6h0lAheHrnups7+VW6l8eAPcDbxoKqG/7FMGvr+htDTpuiKSbCZbS5kXP6/448P6je7z5XoEvXjiG/p1k7vqrSrZCaVfzV+UMRcwZlP/aCKd0H582CntfxLtm0B3w40s9fBCdArb99g2QVdzM021YSZ1wSZ5OSsj2TrHjtSXCFlelNF74AMukQc5FGJQO73mg+A9RcnVbvn7U+Zm11J7GnX0YeS7ld2MveUfAAYYwj09nXwZtoW3fxo/EgVko4y7rj7pBr0YT1KS8Pvx+7or2xxblj5mAJLZVW7TcvlinHlVxhM4cqFxtR9JfcFZHW7PwFgo8iDaZaMva2ZwxvrJ0JsT86QGa0xZUsoNutV64Yf7DmzePw==");var $f={};V6($f,{default:()=>Ia});var Ia=J6("");var ho=za(lo()),E4={crystalis:Ia,alloc:Ta,init:Ea,postparse:ka,postshuffle:Ra,preshuffle:Ma,stattracker:Ca},K7=class{constructor(e="js/"){this.path=e}async read(e){let x=(0,ho.default)(E4[e.replace(/\.s$/,"")]);return new TextDecoder().decode(x)}};var qa=r=>{console.log(`Crystalis Randomizer v${He}
Usage: cryr [OPTIONS...] rom.nes

Options
  --flags=FLAGSET    Specify the flagset.
  --preset=PRESET    Specify the preset by name.
                     Spaces and capitalization are ignored.
  --seed=SEED        Specify the seed.
  --output=PATTERN   Specify the output filename pattern.
                     May include placeholders:
                       %n: input base filename
                       %v: cryr version hash
                       %s: seed
                       %f: flagset
                       %c: checksum
                     The default pattern is "%n_%c".
  --count=NUMBER     Number of shuffled roms to generate.
                     This flag is not compatible with specifying
                     a seed manually, nor with output patterns
                     that don't include %s or %c.
  --force            Don't fail due to wrong input file checksum.

Flags
  The randomizer supports a number of options, documented in detail
  at https://crystalisrandomizer.com.  Spaces are ignored.

Presets
${ux.all().map(k4).join(`

`)}`),process.exit(r)},k4=({description:r,flagString:e,name:x})=>{let s=68-x.length-6,a=Z7(e,s),n=Z7(r,68-2),i=`
`+" ".repeat(x.length+5);return`  ${x}: "${a.join(i)}"
  ${n.join(`
  `)}`},R4=(...r)=>{let e="@Standard",x=1,t="",s="%n_%c",a=!1;for(;r[0]&&r[0].startsWith("--");){let o=r.shift().substring(2),d,c=o.indexOf("=");if(c>=0?(d=o.substring(c+1),o=o.substring(0,c)):d=r.shift(),o=="flags"&&d)e=d;else if(o=="preset"&&d)e="@"+d.replace(/ /g,"");else if(o=="output"&&d)s=d;else if(o=="seed"&&d)t=d;else if(o=="count"&&d)x=Number(d);else if(o=="force")a=!0,cr(),d!=null&&r.unshift(d);else if(o=="help")qa(0);else if(o=="version"||o=="-v")console.log(He),process.exit(0);else if(o=="list-presets"){for(let{name:f}of ux.all())console.log(f.replace(/ /g,""));process.exit(0)}else console.error(`Bad argument: ${o}`),qa(1)}r.length!=1&&qa(1),x>1&&(t&&Wa("Cannot specify both --count and --seed"),/%[sc]/.test(s)||Wa("--output must have a %c or %s placeholder when --count is given"));let n=new $6(e),i=new Uint8Array(j7.readFileSync(r[0]).buffer);return de(i)!=Ln&&(console.error(`WARNING: Bad CRC for input rom: ${de(i).toString(16)}`),a||Wa("Run with --force to proceed anyway"),console.error("Proceeding anyway")),Promise.all(new Array(x).fill(0).map(async()=>{let o=Ni(t);console.log(`Seed: ${o.toString(16)}`);let d=i.slice(),[c,f]=await Fi(d,o,n,new K7),l=r[0].replace(".nes",""),h=String(n).replace(/ /g,""),u=M4(s,{c:f,n:l,s:o,v:He,f:h,"%":"%"})+".nes";await new Promise((S,m)=>j7.writeFile(u,c,p=>p?m(p):S(""))),console.log(`Wrote ${u}`)}))};function Wa(r){throw console.error(r),process.exit(2)}function M4(r,e){let x=[];for(;r;){let t=r.indexOf("%");if(t<0)x.push(r),r="";else{x.push(r.substring(0,t));let s=r[t+1];if(!(s in e))throw new Error(`Bad placeholder: %${s}`);x.push(e[s]),r=r.substring(t+2)}}return x.join("")}process.on("unhandledRejection",r=>{console.error(typeof r=="string"?r:r instanceof X6?r.message:r.stack),process.exit(1)});var C4=async()=>{try{await R4(...process.argv.slice(2))}catch(r){throw r instanceof X6&&(console.error(r.message),console.error("Try passing --help for documentation."),process.exit(1)),r}};C4().then(()=>process.exit(0));
