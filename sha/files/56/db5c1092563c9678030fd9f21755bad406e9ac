import{A as Ge,B as me,C as ht,D as Rt,E as ur,F as mr,G as J,H as Be,I as ms,J as ns,K as di,L as it,M as Ue,N as pr,O as xr,P as gr,Q as wr,R as br,a as Fe,b as po,c as xo,d as go,e as si,f as or,g as U,h as he,i as us,j as rs,k as ii,l as ar,m as ri,n as ni,o as oi,p as lr,q as ai,r as dr,s as cr,t as fr,u as le,v as ee,w as hr,x as qt,y as li,z as Ye}from"./chunk-3ZKKPXVI.js";var Si=Fe(yi=>{function Gr(r){this.buffer=r,this.pos=0}Gr.prototype.read=function(r,s,e){this.pos+e>this.buffer.length&&(e=this.buffer.length-this.pos);for(var t=0;t<e;t++)r[s+t]=this.buffer[this.pos+t];return this.pos+=e,e};yi.BrotliInput=Gr;function Br(r){this.buffer=r,this.pos=0}Br.prototype.write=function(r,s){if(this.pos+s>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(r.subarray(0,s),this.pos),this.pos+=s,s};yi.BrotliOutput=Br});var Pr=Fe((xf,Lr)=>{var Ft=4096,No=2*Ft+32,Ar=2*Ft-1,Do=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function Gt(r){this.buf_=new Uint8Array(No),this.input_=r,this.reset()}Gt.READ_SIZE=Ft;Gt.IBUF_MASK=Ar;Gt.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var r=0;r<4;r++)this.val_|=this.buf_[this.pos_]<<8*r,++this.pos_;return this.bit_end_pos_>0};Gt.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var r=this.buf_ptr_,s=this.input_.read(this.buf_,r,Ft);if(s<0)throw new Error("Unexpected end of input");if(s<Ft){this.eos_=1;for(var e=0;e<32;e++)this.buf_[r+s+e]=0}if(r===0){for(var e=0;e<32;e++)this.buf_[(Ft<<1)+e]=this.buf_[e];this.buf_ptr_=Ft}else this.buf_ptr_=0;this.bit_end_pos_+=s<<3}};Gt.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[this.pos_&Ar]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};Gt.prototype.readBits=function(r){32-this.bit_pos_<r&&this.fillBitWindow();var s=this.val_>>>this.bit_pos_&Do[r];return this.bit_pos_+=r,s};Lr.exports=Gt});var Nr=Fe(As=>{"use strict";As.byteLength=Uo;As.toByteArray=qo;As.fromByteArray=jo;var Je=[],Ae=[],zo=typeof Uint8Array<"u"?Uint8Array:Array,vi="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(Bt=0,Or=vi.length;Bt<Or;++Bt)Je[Bt]=vi[Bt],Ae[vi.charCodeAt(Bt)]=Bt;var Bt,Or;Ae["-".charCodeAt(0)]=62;Ae["_".charCodeAt(0)]=63;function Wr(r){var s=r.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=r.indexOf("=");e===-1&&(e=s);var t=e===s?0:4-e%4;return[e,t]}function Uo(r){var s=Wr(r),e=s[0],t=s[1];return(e+t)*3/4-t}function Ho(r,s,e){return(s+e)*3/4-e}function qo(r){var s,e=Wr(r),t=e[0],i=e[1],n=new zo(Ho(r,t,i)),o=0,a=i>0?t-4:t,l;for(l=0;l<a;l+=4)s=Ae[r.charCodeAt(l)]<<18|Ae[r.charCodeAt(l+1)]<<12|Ae[r.charCodeAt(l+2)]<<6|Ae[r.charCodeAt(l+3)],n[o++]=s>>16&255,n[o++]=s>>8&255,n[o++]=s&255;return i===2&&(s=Ae[r.charCodeAt(l)]<<2|Ae[r.charCodeAt(l+1)]>>4,n[o++]=s&255),i===1&&(s=Ae[r.charCodeAt(l)]<<10|Ae[r.charCodeAt(l+1)]<<4|Ae[r.charCodeAt(l+2)]>>2,n[o++]=s>>8&255,n[o++]=s&255),n}function Ko(r){return Je[r>>18&63]+Je[r>>12&63]+Je[r>>6&63]+Je[r&63]}function Vo(r,s,e){for(var t,i=[],n=s;n<e;n+=3)t=(r[n]<<16&16711680)+(r[n+1]<<8&65280)+(r[n+2]&255),i.push(Ko(t));return i.join("")}function jo(r){for(var s,e=r.length,t=e%3,i=[],n=16383,o=0,a=e-t;o<a;o+=n)i.push(Vo(r,o,o+n>a?a:o+n));return t===1?(s=r[e-1],i.push(Je[s>>2]+Je[s<<4&63]+"==")):t===2&&(s=(r[e-2]<<8)+r[e-1],i.push(Je[s>>10]+Je[s>>4&63]+Je[s<<2&63]+"=")),i.join("")}});var zr=Fe((wf,Dr)=>{Dr.exports=""});var Hr=Fe(Ur=>{var Yo=Nr();Ur.init=function(){var r=Ci().BrotliDecompressBuffer,s=Yo.toByteArray(zr());return r(s)}});var ki=Fe(At=>{var Zo=Hr();At.init=function(){At.dictionary=Zo.init()};At.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);At.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);At.minDictionaryWordLength=4;At.maxDictionaryWordLength=24});var Ri=Fe(Ei=>{function Yt(r,s){this.bits=r,this.value=s}Ei.HuffmanCode=Yt;var jt=15;function qr(r,s){for(var e=1<<s-1;r&e;)e>>=1;return(r&e-1)+e}function Kr(r,s,e,t,i){do t-=e,r[s+t]=new Yt(i.bits,i.value);while(t>0)}function Jo(r,s,e){for(var t=1<<s-e;s<jt&&(t-=r[s],!(t<=0));)++s,t<<=1;return s-e}Ei.BrotliBuildHuffmanTable=function(r,s,e,t,i){var n=s,o,a,l,c,d,f,u,h,p,m,g,y=new Int32Array(jt+1),w=new Int32Array(jt+1);for(g=new Int32Array(i),l=0;l<i;l++)y[t[l]]++;for(w[1]=0,a=1;a<jt;a++)w[a+1]=w[a]+y[a];for(l=0;l<i;l++)t[l]!==0&&(g[w[t[l]]++]=l);if(h=e,p=1<<h,m=p,w[jt]===1){for(c=0;c<m;++c)r[s+c]=new Yt(0,g[0]&65535);return m}for(c=0,l=0,a=1,d=2;a<=e;++a,d<<=1)for(;y[a]>0;--y[a])o=new Yt(a&255,g[l++]&65535),Kr(r,s+c,d,p,o),c=qr(c,a);for(u=m-1,f=-1,a=e+1,d=2;a<=jt;++a,d<<=1)for(;y[a]>0;--y[a])(c&u)!==f&&(s+=p,h=Jo(y,a,e),p=1<<h,m+=p,f=c&u,r[n+f]=new Yt(h+e&255,s-n-f&65535)),o=new Yt(a-e&255,g[l++]&65535),Kr(r,s+(c>>e),d,p,o),c=qr(c,a);return m}});var Vr=Fe(Ti=>{Ti.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Ti.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])});var jr=Fe(Zt=>{function T(r,s){this.offset=r,this.nbits=s}Zt.kBlockLengthPrefixCode=[new T(1,2),new T(5,2),new T(9,2),new T(13,2),new T(17,3),new T(25,3),new T(33,3),new T(41,3),new T(49,4),new T(65,4),new T(81,4),new T(97,4),new T(113,5),new T(145,5),new T(177,5),new T(209,5),new T(241,6),new T(305,6),new T(369,7),new T(497,8),new T(753,9),new T(1265,10),new T(2289,11),new T(4337,12),new T(8433,13),new T(16625,24)];Zt.kInsertLengthPrefixCode=[new T(0,0),new T(1,0),new T(2,0),new T(3,0),new T(4,0),new T(5,0),new T(6,1),new T(8,1),new T(10,2),new T(14,2),new T(18,3),new T(26,3),new T(34,4),new T(50,4),new T(66,5),new T(98,5),new T(130,6),new T(194,7),new T(322,8),new T(578,9),new T(1090,10),new T(2114,12),new T(6210,14),new T(22594,24)];Zt.kCopyLengthPrefixCode=[new T(2,0),new T(3,0),new T(4,0),new T(5,0),new T(6,0),new T(7,0),new T(8,0),new T(9,0),new T(10,1),new T(12,1),new T(14,2),new T(18,2),new T(22,3),new T(30,3),new T(38,4),new T(54,4),new T(70,5),new T(102,5),new T(134,6),new T(198,7),new T(326,8),new T(582,9),new T(1094,10),new T(2118,24)];Zt.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];Zt.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]});var Xr=Fe(Ls=>{var Xo=ki(),B=0,Yr=1,Qo=2,_o=3,$o=4,ea=5,ta=6,sa=7,ia=8,Jr=9,ae=10,de=11,Mi=12,ra=13,na=14,oa=15,aa=16,la=17,da=18,ca=20;function v(r,s,e){this.prefix=new Uint8Array(r.length),this.transform=s,this.suffix=new Uint8Array(e.length);for(var t=0;t<r.length;t++)this.prefix[t]=r.charCodeAt(t);for(var t=0;t<e.length;t++)this.suffix[t]=e.charCodeAt(t)}var ls=[new v("",B,""),new v("",B," "),new v(" ",B," "),new v("",Mi,""),new v("",ae," "),new v("",B," the "),new v(" ",B,""),new v("s ",B," "),new v("",B," of "),new v("",ae,""),new v("",B," and "),new v("",ra,""),new v("",Yr,""),new v(", ",B," "),new v("",B,", "),new v(" ",ae," "),new v("",B," in "),new v("",B," to "),new v("e ",B," "),new v("",B,'"'),new v("",B,"."),new v("",B,'">'),new v("",B,`
`),new v("",_o,""),new v("",B,"]"),new v("",B," for "),new v("",na,""),new v("",Qo,""),new v("",B," a "),new v("",B," that "),new v(" ",ae,""),new v("",B,". "),new v(".",B,""),new v(" ",B,", "),new v("",oa,""),new v("",B," with "),new v("",B,"'"),new v("",B," from "),new v("",B," by "),new v("",aa,""),new v("",la,""),new v(" the ",B,""),new v("",$o,""),new v("",B,". The "),new v("",de,""),new v("",B," on "),new v("",B," as "),new v("",B," is "),new v("",sa,""),new v("",Yr,"ing "),new v("",B,`
	`),new v("",B,":"),new v(" ",B,". "),new v("",B,"ed "),new v("",ca,""),new v("",da,""),new v("",ta,""),new v("",B,"("),new v("",ae,", "),new v("",ia,""),new v("",B," at "),new v("",B,"ly "),new v(" the ",B," of "),new v("",ea,""),new v("",Jr,""),new v(" ",ae,", "),new v("",ae,'"'),new v(".",B,"("),new v("",de," "),new v("",ae,'">'),new v("",B,'="'),new v(" ",B,"."),new v(".com/",B,""),new v(" the ",B," of the "),new v("",ae,"'"),new v("",B,". This "),new v("",B,","),new v(".",B," "),new v("",ae,"("),new v("",ae,"."),new v("",B," not "),new v(" ",B,'="'),new v("",B,"er "),new v(" ",de," "),new v("",B,"al "),new v(" ",de,""),new v("",B,"='"),new v("",de,'"'),new v("",ae,". "),new v(" ",B,"("),new v("",B,"ful "),new v(" ",ae,". "),new v("",B,"ive "),new v("",B,"less "),new v("",de,"'"),new v("",B,"est "),new v(" ",ae,"."),new v("",de,'">'),new v(" ",B,"='"),new v("",ae,","),new v("",B,"ize "),new v("",de,"."),new v("\xC2\xA0",B,""),new v(" ",B,","),new v("",ae,'="'),new v("",de,'="'),new v("",B,"ous "),new v("",de,", "),new v("",ae,"='"),new v(" ",ae,","),new v(" ",de,'="'),new v(" ",de,", "),new v("",de,","),new v("",de,"("),new v("",de,". "),new v(" ",de,"."),new v("",de,"='"),new v(" ",de,". "),new v(" ",ae,'="'),new v(" ",de,"='"),new v(" ",ae,"='")];Ls.kTransforms=ls;Ls.kNumTransforms=ls.length;function Zr(r,s){return r[s]<192?(r[s]>=97&&r[s]<=122&&(r[s]^=32),1):r[s]<224?(r[s+1]^=32,2):(r[s+2]^=5,3)}Ls.transformDictionaryWord=function(r,s,e,t,i){var n=ls[i].prefix,o=ls[i].suffix,a=ls[i].transform,l=a<Mi?0:a-(Mi-1),c=0,d=s,f;l>t&&(l=t);for(var u=0;u<n.length;)r[s++]=n[u++];for(e+=l,t-=l,a<=Jr&&(t-=a),c=0;c<t;c++)r[s++]=Xo.dictionary[e+c];if(f=s-t,a===ae)Zr(r,f);else if(a===de)for(;t>0;){var h=Zr(r,f);f+=h,t-=h}for(var p=0;p<o.length;)r[s++]=o[p++];return s-d}});var Ci=Fe(Ws=>{var sn=Si().BrotliInput,fa=Si().BrotliOutput,Qt=Pr(),Xt=ki(),ce=Ri().HuffmanCode,rn=Ri().BrotliBuildHuffmanTable,Jt=Vr(),mt=jr(),Qr=Xr(),ha=8,_r=16,ua=256,ma=704,pa=26,$r=6,en=2,Fi=8,xa=255,pt=1080,Gi=18,ga=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),Bi=16,wa=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),ba=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),ya=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function nn(r){var s;return r.readBits(1)===0?16:(s=r.readBits(3),s>0?17+s:(s=r.readBits(3),s>0?8+s:17))}function on(r){if(r.readBits(1)){var s=r.readBits(3);return s===0?1:r.readBits(s)+(1<<s)}return 0}function Sa(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function an(r){var s=new Sa,e,t,i;if(s.input_end=r.readBits(1),s.input_end&&r.readBits(1))return s;if(e=r.readBits(2)+4,e===7){if(s.is_metadata=!0,r.readBits(1)!==0)throw new Error("Invalid reserved bit");if(t=r.readBits(2),t===0)return s;for(i=0;i<t;i++){var n=r.readBits(8);if(i+1===t&&t>1&&n===0)throw new Error("Invalid size byte");s.meta_block_length|=n<<i*8}}else for(i=0;i<e;++i){var o=r.readBits(4);if(i+1===e&&e>4&&o===0)throw new Error("Invalid size nibble");s.meta_block_length|=o<<i*4}return++s.meta_block_length,!s.input_end&&!s.is_metadata&&(s.is_uncompressed=r.readBits(1)),s}function _t(r,s,e){var t=s,i;return e.fillBitWindow(),s+=e.val_>>>e.bit_pos_&xa,i=r[s].bits-Fi,i>0&&(e.bit_pos_+=Fi,s+=r[s].value,s+=e.val_>>>e.bit_pos_&(1<<i)-1),e.bit_pos_+=r[s].bits,r[s].value}function va(r,s,e,t){for(var i=0,n=ha,o=0,a=0,l=32768,c=[],d=0;d<32;d++)c.push(new ce(0,0));for(rn(c,0,5,r,Gi);i<s&&l>0;){var f=0,u;if(t.readMoreInput(),t.fillBitWindow(),f+=t.val_>>>t.bit_pos_&31,t.bit_pos_+=c[f].bits,u=c[f].value&255,u<_r)o=0,e[i++]=u,u!==0&&(n=u,l-=32768>>u);else{var h=u-14,p,m,g=0;if(u===_r&&(g=n),a!==g&&(o=0,a=g),p=o,o>0&&(o-=2,o<<=h),o+=t.readBits(h)+3,m=o-p,i+m>s)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var y=0;y<m;y++)e[i+y]=a;i+=m,a!==0&&(l-=m<<15-a)}}if(l!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+l);for(;i<s;i++)e[i]=0}function Os(r,s,e,t){var i=0,n,o=new Uint8Array(r);if(t.readMoreInput(),n=t.readBits(2),n===1){for(var a,l=r-1,c=0,d=new Int32Array(4),f=t.readBits(2)+1;l;)l>>=1,++c;for(a=0;a<f;++a)d[a]=t.readBits(c)%r,o[d[a]]=2;switch(o[d[0]]=1,f){case 1:break;case 3:if(d[0]===d[1]||d[0]===d[2]||d[1]===d[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(d[0]===d[1])throw new Error("[ReadHuffmanCode] invalid symbols");o[d[1]]=1;break;case 4:if(d[0]===d[1]||d[0]===d[2]||d[0]===d[3]||d[1]===d[2]||d[1]===d[3]||d[2]===d[3])throw new Error("[ReadHuffmanCode] invalid symbols");t.readBits(1)?(o[d[2]]=3,o[d[3]]=3):o[d[0]]=2;break}}else{var a,u=new Uint8Array(Gi),h=32,p=0,m=[new ce(2,0),new ce(2,4),new ce(2,3),new ce(3,2),new ce(2,0),new ce(2,4),new ce(2,3),new ce(4,1),new ce(2,0),new ce(2,4),new ce(2,3),new ce(3,2),new ce(2,0),new ce(2,4),new ce(2,3),new ce(4,5)];for(a=n;a<Gi&&h>0;++a){var g=ga[a],y=0,w;t.fillBitWindow(),y+=t.val_>>>t.bit_pos_&15,t.bit_pos_+=m[y].bits,w=m[y].value,u[g]=w,w!==0&&(h-=32>>w,++p)}if(!(p===1||h===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");va(u,r,o,t)}if(i=rn(s,e,Fi,o,r),i===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return i}function Ps(r,s,e){var t,i;return t=_t(r,s,e),i=mt.kBlockLengthPrefixCode[t].nbits,mt.kBlockLengthPrefixCode[t].offset+e.readBits(i)}function Ca(r,s,e){var t;return r<Bi?(e+=wa[r],e&=3,t=s[e]+ba[r]):t=r-Bi+1,t}function ka(r,s){for(var e=r[s],t=s;t;--t)r[t]=r[t-1];r[0]=e}function Ea(r,s){var e=new Uint8Array(256),t;for(t=0;t<256;++t)e[t]=t;for(t=0;t<s;++t){var i=r[t];r[t]=e[i],i&&ka(e,i)}}function Lt(r,s){this.alphabet_size=r,this.num_htrees=s,this.codes=new Array(s+s*ya[r+31>>>5]),this.htrees=new Uint32Array(s)}Lt.prototype.decode=function(r){var s,e,t=0;for(s=0;s<this.num_htrees;++s)this.htrees[s]=t,e=Os(this.alphabet_size,this.codes,t,r),t+=e};function tn(r,s){var e={num_htrees:null,context_map:null},t,i=0,n,o;s.readMoreInput();var a=e.num_htrees=on(s)+1,l=e.context_map=new Uint8Array(r);if(a<=1)return e;for(t=s.readBits(1),t&&(i=s.readBits(4)+1),n=[],o=0;o<pt;o++)n[o]=new ce(0,0);for(Os(a+i,n,0,s),o=0;o<r;){var c;if(s.readMoreInput(),c=_t(n,0,s),c===0)l[o]=0,++o;else if(c<=i)for(var d=1+(1<<c)+s.readBits(c);--d;){if(o>=r)throw new Error("[DecodeContextMap] i >= context_map_size");l[o]=0,++o}else l[o]=c-i,++o}return s.readBits(1)&&Ea(l,r),e}function Ii(r,s,e,t,i,n,o){var a=e*2,l=e,c=_t(s,e*pt,o),d;c===0?d=i[a+(n[l]&1)]:c===1?d=i[a+(n[l]-1&1)]+1:d=c-2,d>=r&&(d-=r),t[e]=d,i[a+(n[l]&1)]=d,++n[l]}function Ra(r,s,e,t,i,n){var o=i+1,a=e&i,l=n.pos_&Qt.IBUF_MASK,c;if(s<8||n.bit_pos_+(s<<3)<n.bit_end_pos_){for(;s-- >0;)n.readMoreInput(),t[a++]=n.readBits(8),a===o&&(r.write(t,o),a=0);return}if(n.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;n.bit_pos_<32;)t[a]=n.val_>>>n.bit_pos_,n.bit_pos_+=8,++a,--s;if(c=n.bit_end_pos_-n.bit_pos_>>3,l+c>Qt.IBUF_MASK){for(var d=Qt.IBUF_MASK+1-l,f=0;f<d;f++)t[a+f]=n.buf_[l+f];c-=d,a+=d,s-=d,l=0}for(var f=0;f<c;f++)t[a+f]=n.buf_[l+f];if(a+=c,s-=c,a>=o){r.write(t,o),a-=o;for(var f=0;f<a;f++)t[f]=t[o+f]}for(;a+s>=o;){if(c=o-a,n.input_.read(t,a,c)<c)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");r.write(t,o),s-=c,a=0}if(n.input_.read(t,a,s)<s)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");n.reset()}function Ta(r){var s=r.bit_pos_+7&-8,e=r.readBits(s-r.bit_pos_);return e==0}function ln(r){var s=new sn(r),e=new Qt(s);nn(e);var t=an(e);return t.meta_block_length}Ws.BrotliDecompressedSize=ln;function Ma(r,s){var e=new sn(r);s==null&&(s=ln(r));var t=new Uint8Array(s),i=new fa(t);return dn(e,i),i.pos<i.buffer.length&&(i.buffer=i.buffer.subarray(0,i.pos)),i.buffer}Ws.BrotliDecompressBuffer=Ma;function dn(r,s){var e,t=0,i=0,n=0,o,a=0,l,c,d,f,u=[16,15,11,4],h=0,p=0,m=0,g=[new Lt(0,0),new Lt(0,0),new Lt(0,0)],y,w,b,x=128+Qt.READ_SIZE;b=new Qt(r),n=nn(b),o=(1<<n)-16,l=1<<n,c=l-1,d=new Uint8Array(l+x+Xt.maxDictionaryWordLength),f=l,y=[],w=[];for(var E=0;E<3*pt;E++)y[E]=new ce(0,0),w[E]=new ce(0,0);for(;!i;){var k=0,A,S=[1<<28,1<<28,1<<28],M=[0],G=[1,1,1],Z=[0,1,0,1,0,1],Q=[0],_,ie,K,ue,N=null,L=null,ke,Ee=null,q,pe=0,fe=null,We=0,_e=0,we=null,Re=0,oe=0,vt=0,Te,$e;for(e=0;e<3;++e)g[e].codes=null,g[e].htrees=null;b.readMoreInput();var Ne=an(b);if(k=Ne.meta_block_length,t+k>s.buffer.length){var ct=new Uint8Array(t+k);ct.set(s.buffer),s.buffer=ct}if(i=Ne.input_end,A=Ne.is_uncompressed,Ne.is_metadata){for(Ta(b);k>0;--k)b.readMoreInput(),b.readBits(8);continue}if(k!==0){if(A){b.bit_pos_=b.bit_pos_+7&-8,Ra(s,k,t,d,c,b),t+=k;continue}for(e=0;e<3;++e)G[e]=on(b)+1,G[e]>=2&&(Os(G[e]+2,y,e*pt,b),Os(pa,w,e*pt,b),S[e]=Ps(w,e*pt,b),Q[e]=1);for(b.readMoreInput(),_=b.readBits(2),ie=Bi+(b.readBits(4)<<_),K=(1<<_)-1,ue=ie+(48<<_),L=new Uint8Array(G[0]),e=0;e<G[0];++e)b.readMoreInput(),L[e]=b.readBits(2)<<1;var Ut=tn(G[0]<<$r,b);ke=Ut.num_htrees,N=Ut.context_map;var je=tn(G[2]<<en,b);for(q=je.num_htrees,Ee=je.context_map,g[0]=new Lt(ua,ke),g[1]=new Lt(ma,G[1]),g[2]=new Lt(ue,q),e=0;e<3;++e)g[e].decode(b);for(fe=0,we=0,Te=L[M[0]],oe=Jt.lookupOffsets[Te],vt=Jt.lookupOffsets[Te+1],$e=g[1].htrees[0];k>0;){var O,et,Me,tt,H,Y,W,ye,De,Ie,ze;for(b.readMoreInput(),S[1]===0&&(Ii(G[1],y,1,M,Z,Q,b),S[1]=Ps(w,pt,b),$e=g[1].htrees[M[1]]),--S[1],O=_t(g[1].codes,$e,b),et=O>>6,et>=2?(et-=2,W=-1):W=0,Me=mt.kInsertRangeLut[et]+(O>>3&7),tt=mt.kCopyRangeLut[et]+(O&7),H=mt.kInsertLengthPrefixCode[Me].offset+b.readBits(mt.kInsertLengthPrefixCode[Me].nbits),Y=mt.kCopyLengthPrefixCode[tt].offset+b.readBits(mt.kCopyLengthPrefixCode[tt].nbits),p=d[t-1&c],m=d[t-2&c],Ie=0;Ie<H;++Ie)b.readMoreInput(),S[0]===0&&(Ii(G[0],y,0,M,Z,Q,b),S[0]=Ps(w,0,b),pe=M[0]<<$r,fe=pe,Te=L[M[0]],oe=Jt.lookupOffsets[Te],vt=Jt.lookupOffsets[Te+1]),De=Jt.lookup[oe+p]|Jt.lookup[vt+m],We=N[fe+De],--S[0],m=p,p=_t(g[0].codes,g[0].htrees[We],b),d[t&c]=p,(t&c)===c&&s.write(d,l),++t;if(k-=H,k<=0)break;if(W<0){var De;if(b.readMoreInput(),S[2]===0&&(Ii(G[2],y,2,M,Z,Q,b),S[2]=Ps(w,2*pt,b),_e=M[2]<<en,we=_e),--S[2],De=(Y>4?3:Y-2)&255,Re=Ee[we+De],W=_t(g[2].codes,g[2].htrees[Re],b),W>=ie){var st,hs,xe;W-=ie,hs=W&K,W>>=_,st=(W>>1)+1,xe=(2+(W&1)<<st)-4,W=ie+(xe+b.readBits(st)<<_)+hs}}if(ye=Ca(W,u,h),ye<0)throw new Error("[BrotliDecompress] invalid distance");if(t<o&&a!==o?a=t:a=o,ze=t&c,ye>a)if(Y>=Xt.minDictionaryWordLength&&Y<=Xt.maxDictionaryWordLength){var xe=Xt.offsetsByLength[Y],Ct=ye-a-1,kt=Xt.sizeBitsByLength[Y],ei=(1<<kt)-1,ti=Ct&ei,Et=Ct>>kt;if(xe+=ti*Y,Et<Qr.kNumTransforms){var Ht=Qr.transformDictionaryWord(d,ze,xe,Y,Et);if(ze+=Ht,t+=Ht,k-=Ht,ze>=f){s.write(d,l);for(var ft=0;ft<ze-f;ft++)d[ft]=d[f+ft]}}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+k)}else throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+k);else{if(W>0&&(u[h&3]=ye,++h),Y>k)throw new Error("Invalid backward reference. pos: "+t+" distance: "+ye+" len: "+Y+" bytes left: "+k);for(Ie=0;Ie<Y;++Ie)d[t&c]=d[t-ye&c],(t&c)===c&&s.write(d,l),++t,--k}p=d[t-1&c],m=d[t-2&c]}t&=1073741823}}s.write(d,t&c)}Ws.BrotliDecompress=dn;Xt.init()});var fn=Fe((Rf,cn)=>{cn.exports=Ci().BrotliDecompressBuffer});var ps,wo=()=>{let r;ps=new Uint32Array(256);for(let s=0;s<256;s++){r=s;for(let e=0;e<8;e++)r=r&1?3988292384^r>>>1:r>>>1;ps[s]=r}};var bo=r=>r.split("").map(s=>s.charCodeAt(0)),xs=r=>{ps||wo(),typeof r=="string"&&(r=bo(r));let s=-1;for(let e=0,t=r.length;e<t;e++)s=s>>>8^ps[(s^r[e])&255];return(s^-1)>>>0};var yo=4656613057391769e-25,Cr=2147483563-1,yr=40014,So=40692,gs=53668,Sr=52774,vr=12211,vo=3791,ws=32,Co=1+Math.floor(Cr/ws),ko=12e-8,Eo=1-ko,Tt=class{constructor(s=Math.floor(Math.random()*4294967296)){this.idum=0;this.idum2=0;this.iy=0;this.iv=[];this.z1=null;this.seed(s)}static newSeed(){return Math.floor(Math.random()*4294967296)}seed(s){this.idum=Math.max(1,Math.floor(s)),this.idum2=this.idum,this.iy=0,this.iv=new Array(ws).fill(0);for(let e=ws+7;e>=0;e--){let t=Math.floor(this.idum/gs);this.idum=yr*(this.idum-t*gs)-t*vr,this.idum<0&&(this.idum+=2147483563),e<ws&&(this.iv[e]=this.idum)}this.iy=this.iv[0]}next(){let s=Math.floor(this.idum/gs);this.idum=yr*(this.idum-s*gs)-s*vr,this.idum<0&&(this.idum+=2147483563),s=Math.floor(this.idum2/Sr),this.idum2=So*(this.idum2-s*Sr)-s*vo,this.idum2<0&&(this.idum2+=2147483399);let e=Math.floor(this.iy/Co);return this.iy=this.iv[e]-this.idum2,this.iv[e]=this.idum,this.iy<1&&(this.iy+=Cr),Math.min(yo*this.iy,Eo)}nextInt(s){return Math.floor(this.next()*s)}nextNormal(s=0,e=1,t=-1/0,i=1/0){for(;;){let n=this.z1;if(n==null){let o=Math.sqrt(-2*Math.log(this.next())),a=To*this.next();n=o*Math.cos(a),this.z1=o*Math.sin(a)}else this.z1=null;if(n=s+n*e,n>=t&&n<=i)return n}}shuffle(s){for(let e=s.length;e;){let t=this.nextInt(e--);[s[e],s[t]]=[s[t],s[e]]}return s}*ishuffle(s){let e=[];if(!Array.isArray(s))if(Ro(s)){let t=s[Symbol.iterator]();for(let i=0;i<s.size;i++){let n=i+this.nextInt(s.size-i);for(;e.length<=n;)e.push(t.next().value);yield e[n],e[n]=e[i]}return}else s=[...s];if(!Array.isArray(s))throw new Error("impossible");for(let t=0;t<s.length;t++){let i=t+this.nextInt(s.length-t);yield i in e?e[i]:s[i],e[i]=t in e?e[t]:s[t]}}pick(s){if(!s.length)throw new Error("empty array");return s[this.nextInt(s.length)]}pickWeighted(s){if(!s.length)throw new Error("empty array");let e=0;for(let[i]of s)e+=i;let t=this.next()*e;for(let[i,n]of s){if(t<i)return n;t-=i}throw new Error("bad weights")}pickAndRemove(...s){let e=0;for(let i of s)e+=i.length;if(!e)throw new Error("empty arrays");let t=this.nextInt(e);for(let i of s){if(t<i.length)return i.splice(t,1)[0];t-=i.length}throw new Error("impossible")}bitGenerator(){let s=0,e=0;return()=>{s||(s=32,e=this.nextInt(4294967296)),s--;let t=!(e&1);return e>>>=1,t}}};function Ro(r){return"size"in r}var To=2*Math.PI;var Ze=class{constructor(s,e){this.height=s;this.width=e;this._coords=void 0;this.data=new Array((s<<1|1)*(e<<1|1)),this.row=this.width<<1|1}screens(){if(this._coords)return this._coords;let s=[];for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++)s.push(e<<12|t<<4);return this._coords=s}index(s){return((s&248)>>3)+this.row*(s>>>11)}index2(s,e){return(this.row<<1)*s+2*e}yx(s){let e=s%this.row;return[(s-e)/this.row/2,e/2]}coord(s){let e=s%this.row;return(s-e)/this.row<<11|e<<3}get(s){return this.data[this.index(s)]}set(s,e){this.data[this.index(s)]=e}get2(s,e){return this.data[this.index2(s,e)]}set2(s,e,t){this.data[this.index2(s,e)]=t}plus(s,e,t){return s+(this.row<<1)*e+2*t}x(s){return s%this.row/2}y(s){return Math.floor(s/this.row)/2}border(s,e){let t,i;return s&1?(i=e<<12|2048,t=s&2?this.width<<4:0):(i=s&2?this.height<<12:0,t=e<<4|8),i|t}randomBorder(s,e){let t,i;if(e!=null)e&1?(i=s.nextInt(this.height)<<12|2048,t=e&2?this.width<<4:0):(i=e&2?this.height<<12:0,t=s.nextInt(this.width)<<4|8);else{let n=this.width+this.height,o=s.nextInt(n<<1)-n,a=!1;o<0&&(o=~o,a=!0),o<this.width?(t=o<<4|8,i=a?this.height<<12:0):(i=o-this.width<<12|2048,t=a?this.width<<4:0)}return i|t}oppositeBorder(s){return s&8?s^this.height<<12:s^this.width<<4}furthestBorder(s){return(this.height<<12|this.width<<4)-s}edgeCoordination(s,e){let t=0;if((s&2056)!==2056)throw new Error(`Bad tile: ${ee(s)}`);for(let i of[8,-8,2048,-2048]){let n=this.get(s+i);(e?n===e:n)&&t++}return t}isBorder(s){if(s&8){if(s&2048)return!1;let e=s>>>12;return!e||e===this.height}else if(s&2048){let e=s>>>4&15;return!e||e===this.width}return!1}partition(s){let e=new Ge;for(let t=0;t<this.data.length;t+=this.row)for(let i=0;i<this.row;i++){let n=t+i,o=this.coord(n);if(!(s?.get(o)??this.data[n]))continue;e.find(o);let l=o-2048;t&&(s?.get(l)??this.data[n-this.row])&&e.union([o,l]);let c=o-8;i&&(s?.get(c)??this.data[n-1])&&e.union([o,c])}return e.map()}show(){let s=[];for(let e=0;e<this.data.length;e+=this.row){let t="";for(let i=0;i<this.row;i++)t+=this.data[e+i]||" ";s.push(t)}return s.join(`
`)}static writeGrid2d(s,e,t){let i=s.index(e);for(let n=0;n<t.length;n++){let o=t[n];for(let a=0;a<o.length;a++){let l=o[a];s.data[i+n*s.row+a]=l!==" "?l:""}}}};function kr(r){return r>>4&15|r>>8&240}function ut(r,s=1){return r-s*8}function He(r,s=1){return r+s*8}function be(r,s=1){return r-s*2048}function re(r,s=1){return r+s*2048}var[]=[ee],F={ok:!0,value:void 0},bs=class{constructor(s,e){this.rom=s;this.random=e;this.shuffles=[]}add(...s){this.shuffles.push(...s)}shuffleAll(){for(let s of this.shuffles)s.shuffle(this.random);for(let s of this.shuffles)s.meta&&s.finish();for(let s of this.rom.locations)s.meta.shufflePits(this.random)}toString(){return[...this.shuffles].sort((s,e)=>(s.badness||0)-(e.badness||0)).join(`
`)}},ys=class{constructor(s,e){this.maxAttempts=250;this.attempt=0;this.meta=void 0;this.grid=new Ze(1,1);this.fixed=new Set;this.w=0;this.h=0;this.size=0;this.count=0;this.exitMap=[];this.loc=s,this.orig=s.meta,this.params=e??this.survey(this.orig)}toString(){return`${this.constructor.name}(${this.loc}): ${this.attempt}/${this.maxAttempts}`}get badness(){return this.attempt/this.maxAttempts}reset(){this.meta=void 0;let s=this.pickHeight(),e=this.pickWidth(),t=this.pickSize(),i=new Ze(s,e);i.data.fill(""),Object.assign(this,{h:s,w:e,size:t,grid:i,fixed:new Set,count:0,exitMap:[]})}shuffle(s){if(!(!this.loc.used||this.meta||this.attempt>this.maxAttempts)){for(Object.assign(this,{random:s});++this.attempt<=this.maxAttempts;){this.reset();let e=this.build();if(e.ok)return;console.log(`Shuffle failed ${this.loc}: ${e.fail}`)}console.error(`Completely failed to map shuffle ${this.loc}`)}}finish(){!this.meta||this.meta===this.loc.meta||this.finishInternal()}finishInternal(){if(!this.meta)throw new Error("impossible");this.meta.transferFlags(this.loc.meta,this.random);let s=[];for(let[e,t,i]of this.exitMap)for(let[n,o,a]of s)if(e(n,o)){s.push([t,i,a]);break}this.meta.transferExits(this.loc.meta,this.random);for(let[e,t,i]of s){let n=this.meta.rom.locations[i[0]>>>8].meta,o=i[0]&255,a=i[1];this.meta.attach(e,n,o,t,a)}this.meta.transferSpawns(this.loc.meta,this.random),this.meta.transferPits(this.loc.meta),this.loc.meta=this.meta}pickHeight(){return Math.max(1,Math.min(16,this.orig.height+Math.floor((this.random.nextInt(6)-1)/3)))}pickWidth(){return Math.max(1,Math.min(8,this.orig.width+Math.floor((this.random.nextInt(6)-1)/3)))}pickSize(){return this.params.size+(this.random.nextInt(5)<2?1:0)}insertTile(s,e){let t=this.posToGrid(s);for(let i=0;i<3;i++)for(let n=0;n<3;n++){let o=t+i*2048+n*8;if(this.fixed.has(o))return!1;let a=this.grid.get(o);if(a&&a!==e[i*3+n])return!1}for(let i=0;i<3;i++)for(let n=0;n<3;n++){let o=t+i*2048+n*8;this.grid.set(o,e[i*3+n])}return!0}posToGrid(s,e=0){let t=s>>>4,i=s&15;return(t<<12|i<<4)+e}insertPattern(s,{top:e=0,bottom:t=0,left:i=0,right:n=0}={}){let o=s.length-1>>>1,a=s[0].length-1>>>1,l=e+t,c=i+n;if(this.h<o+l)return{ok:!1,fail:"too short"};if(this.w<a+c)return{ok:!1,fail:"too narrow"};let d=this.random.nextInt(this.h-o-1-l)+e,f=this.random.nextInt(this.w-a-1-l)+i,u=d+1<<12|f+1<<4;Ze.writeGrid2d(this.grid,u,s);for(let h=12288;h<=20480;h+=2048)for(let p=48;p<=64;p+=8)this.fixed.add(u+(h|p));return{ok:!0,value:void 0}}extract(s,e,{h:t=3,w:i=3,replace:n=void 0}={}){let o=s.index(e),a="",l=o+t*s.row,{row:c}=s;for(let d=o;d<l;d+=c)for(let f=d;f<d+i;f++){if(n){let u=n.get(s.coord(f));if(u!=null){a+=u||" ";continue}}a+=s.data[f]||" "}return a}canSet(s,e){return this.canSetAll(new Map([[s,e]]))}canSetAll(s){let e=new Set;for(let t of s.keys()){if(this.fixed.has(t))return!1;let i=t&-2057,n=i>>>12,o=i>>>4&15;o<this.w&&n<this.h&&e.add(i),!(t&8)&&n<this.h&&o&&e.add(i-16),!(t&2048)&&o<this.w&&n&&e.add(i-4096),!(t&2056)&&o&&n&&e.add(i-4112)}for(let t of e){let i=this.extract(this.grid,t,{replace:s});if(!this.orig.tileset.getMetascreensFromTileString(i).length)return!1}return!0}addAllFixed(){for(let s=0;s<this.grid.data.length;s++)this.grid.data[s]&&this.fixed.add(this.grid.coord(s))}};var[]=[ee],R=class extends ys{constructor(){super(...arguments);this.maxPartitions=1;this.minSpikes=2;this.maxSpikes=5;this.looseRefine=!1;this.addBlocks=!0;this.initialFillType="c";this.upEdgeType="c";this._requirePitDestination=!1;this.rivers=0;this.wides=0;this.walls=0;this.bridges=0}reset(){super.reset(),this.rivers=0,this.wides=0,this.walls=0,this.bridges=0}requirePitDestination(){return this._requirePitDestination=!0,this}survey(e){let t={meta:e,id:e.id,tileset:e.tileset,size:0,edges:[0,0,0,0],stairs:[0,0],features:{arena:0,bridge:0,over:0,pit:0,ramp:0,river:0,spike:0,statue:0,under:0,wall:0,wide:0}};if(e.id>=0)for(let i of e.rom.locations[e.id].spawns)i.isMonster()&&i.monsterId===143&&t.features.statue++;for(let i of e.allPos()){let n=e.get(i);(!n.isEmpty()||n.data.exits?.length)&&t.size++;for(let o of n.data.exits??[]){let{type:a}=o;if(a==="edge:top"){i>>>4===0&&t.edges[0]++;continue}else if(a==="edge:left"){(i&15)===0&&t.edges[1]++;continue}else if(a==="edge:bottom"){i>>>4===e.height-1&&t.edges[2]++;continue}else if(a==="edge:right"){(i&15)===e.width-1&&t.edges[3]++;continue}else{if(a==="crypt")continue;if(!a.startsWith("seamless")){if(o.dir&1)throw new Error(`Bad exit direction: ${o.dir}`);t.stairs[o.dir>>>1]++;continue}}}n.hasFeature("arena")&&t.features.arena++,n.hasFeature("bridge")&&t.features.bridge++,n.hasFeature("overpass")&&t.features.over++,n.hasFeature("pit")&&t.features.pit++,n.hasFeature("ramp")&&t.features.ramp++,n.hasFeature("spikes")&&t.features.spike++,n.hasFeature("underpass")&&t.features.under++,n.hasFeature("wall")&&t.features.wall++,n.hasFeature("river")&&t.features.river++,n.hasFeature("wide")&&t.features.wide++}return t.size<2&&(e.width>1||e.height>1)&&(t.size=2),t}build(){this.init();let e;if(e=this.fillGrid(),!e.ok||(e=this.preinfer(),!e.ok))return e;let t=this.inferScreens();return t.ok?(e=this.refineMetascreens(t.value),!e.ok||(e=this.checkMetascreens(t.value),!e.ok)?e:this._requirePitDestination&&!this.requireEligiblePitDestination(t.value)?{ok:!1,fail:"no eligible pit destination"}:(this.meta=t.value,F)):t}fillGrid(){let e;return e=this.initialFill(),!e.ok||(e=this.addEdges(),!e.ok)||(e=this.addEarlyFeatures(),!e.ok)||(e=this.refine(),!e.ok)?e:this.refineEdges()?(this.removeSpurs(),this.removeTightLoops(),e=this.addLateFeatures(),!e.ok||(e=this.addStairs(...this.params.stairs??[]),!e.ok)?e:F):{ok:!1,fail:"refineEdges"}}init(){}initialFill(){return this.fillCave(this.initialFillType),F}fillCave(e){for(let t=.5;t<this.h;t++)for(let i=.5;i<this.w;i++)t>1&&this.grid.set2(t-.5,i,e),i>1&&this.grid.set2(t,i-.5,e),this.grid.set2(t,i,e);this.count=this.h*this.w}addEdges(){if(!this.params.edges)return F;for(let e=0;e<4;e++){let t=this.params.edges[e]||0;if(!t)continue;let i=le(e&1?this.h:this.w,n=>this.grid.border(e,n));for(let n of this.random.ishuffle(i))if(!this.grid.get(n)&&(e&1?e===1?this.addLeftEdge(n)&&t--:this.addRightEdge(n)&&t--:e===0?this.addUpEdge(n)&&t--:this.addDownEdge(n)&&t--,!t))break;if(t)return{ok:!1,fail:`can't fit all edges shuffling ${this.loc}
missing ${t} ${e}`}}return F}addUpEdge(e){let t=e+2048,i=t-8,o=i-8-8,a=t+8,c=a+8+8;if(this.grid.isBorder(i)){if(this.grid.get(i))return!1}else if(this.grid.get(e-16)||this.grid.isBorder(o)&&this.grid.get(o))return!1;if(this.grid.isBorder(a)){if(this.grid.get(a))return!1}else if(this.grid.get(e+16)||this.grid.isBorder(c)&&this.grid.get(c))return!1;return this.fixed.add(e),this.grid.set(e,this.upEdgeType),this.grid.set(i,""),this.grid.set(a,""),!0}addDownEdge(e){let t=e-2048,i=t-8,n=t+8;return!this.grid.get(t)||this.grid.isBorder(i)&&this.grid.get(i)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"n"),this.grid.set(i,""),this.grid.set(n,""),!0)}addLeftEdge(e){let t=e+8,i=t-2048,n=t+2048;return!this.grid.get(t)||this.grid.isBorder(i)&&this.grid.get(i)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"c"),!0)}addRightEdge(e){let t=e-8,i=t-2048,n=t+2048;return!this.grid.get(t)||this.grid.isBorder(i)&&this.grid.get(i)||this.grid.isBorder(n)&&this.grid.get(n)?!1:(this.fixed.add(e),this.grid.set(e,"c"),!0)}addEarlyFeatures(){return this.addSpikes(this.params.features?.spike??0)?this.addOverpasses(this.params.features?.over??0)?F:{ok:!1,fail:"add overpasses"}:{ok:!1,fail:`add spikes
${this.grid.show()}`}}addLateFeatures(){return this.addArenas(this.params.features?.arena??0)?this.addUnderpasses(this.params.features?.under??0)?this.addPits(this.params.features?.pit??0)?this.addRamps(this.params.features?.ramp??0)?F:{ok:!1,fail:"addRamps"}:{ok:!1,fail:"addPits"}:{ok:!1,fail:"addUnderpasses"}:{ok:!1,fail:`addArenas
${this.grid.show()}`}}addArenas(e){if(!e)return!0;let t=this.grid;for(let i of this.random.ishuffle(this.grid.screens())){let n=i|2056;if(!this.isEligibleArena(n))continue;let o=this.extract(this.grid,i),a=o.substring(0,4)+"a"+o.substring(5);if(!this.orig.tileset.getMetascreensFromTileString(a).length){console.log(`no tile ${a}`);continue}if(this.fixed.add(n),t.set(n,"a"),e--,!e)return!0}return!1}isEligibleArena(e){let t=this.grid,i=e-8,n=i-8,o=e+8,a=o+8;return!(t.get(e)!=="c"&&t.get(e)!=="w"||t.get(i)||t.get(o)||!t.isBorder(i)&&t.get(n)||!t.isBorder(o)&&t.get(a))}addUnderpasses(e){return this.addStraightScreenLate(e,"b",2048)}addOverpasses(e){let t=0;for(;e;){let i=this.random.nextInt(this.h-2)+1,n=this.random.nextInt(this.w-2)+1,o=i<<12|n<<4|2056;if(this.grid.get(o)!=="c"){if(++t>10)throw new Error("Bad attempts");continue}this.grid.set(o,"b"),this.fixed.add(o),this.grid.set(o-8,""),this.grid.set(o+8,""),e--}return!0}addPits(e){return this.addStraightScreenLate(e,"p")}addRamps(e){return this.addStraightScreenLate(e,"/",8)}addStraightScreenLate(e,t,i){if(!e)return!0;for(let n of this.random.ishuffle(this.grid.screens())){let o=n|2056;if(this.grid.get(o)!=="c")continue;if(i){let d=o-i,f=o+i;if(this.grid.get(d)||this.grid.get(f))continue}let a=this.extract(this.grid,n),l=a.substring(0,4)+t+a.substring(5);if(!!this.orig.tileset.getMetascreensFromTileString(l).length&&(this.fixed.add(o),this.grid.set(o,t),e--,!e))return!0}return!1}addSpikes(e){if(!e)return!0;let t=0;for(;e>0;){if(++t>20)return!1;let i=Math.min(e,Math.floor(this.h*.6),this.maxSpikes);for(;i<e-1&&i>this.minSpikes;)this.random.next()<.2&&i--;let n=i>2&&this.w>3?this.random.nextInt(this.w-2)+1:this.random.nextInt(this.w);i>e-this.minSpikes&&(i>=this.h-2?i=this.h-2:i=e);let a=this.random.nextInt(this.h-i-2)+1<<12|n<<4|2056,l=a+(i-1<<12);for(let f=a-4096;i&&f<=l+4096;f+=2048)this.grid.get(f)!=="c"&&(i=0);if(!i)continue;let c=[a-8,a+8,l-8,l+8],d=this.tryClear(c);if(!!d.length){for(let f of d)this.grid.set(f,"");this.fixed.add(a-2048),this.fixed.add(a-4096),this.fixed.add(l+2048),this.fixed.add(l+4096);for(let f=a;f<=l;f+=2048)this.fixed.add(f),this.grid.set(f,"s");e-=i,t=0}}return e===0}canRemove(e){return e===this.initialFillType}tryClear(e){let t=new Map;for(let c of e){if(this.fixed.has(c))return[];t.set(c,"")}let i=this.grid.partition(t),[n]=i.values();if(n.size===i.size)return[...e];let o=new Set,a=new Set(i.values());for(let c of this.fixed)o.add(i.get(c));if(o.size>this.maxPartitions)return[];let l=[...e];for(let c of a)o.has(c)||l.push(...c);return l}refine(){let e=new Set;for(let i=0;i<this.grid.data.length;i++)this.grid.data[i]&&e.add(this.grid.coord(i));let t=0;for(;this.count>this.size;){if(t++>50)throw new Error("refine failed: attempts");let i=0;for(let n of this.random.ishuffle([...e])){if(this.grid.isBorder(n)||!this.canRemove(this.grid.get(n))||this.fixed.has(n))continue;if(i>3)break;let o=this.grid.partition(this.removalMap(n)),[a]=o.values();if(a.size===o.size&&o.size>1)i++,e.delete(n),(n&2056)===2056&&this.count--,this.grid.set(n,"");else{let l;for(let d of o.values())(!l||d.size>l.size)&&(l=d);if(![...this.fixed].every(d=>l.has(d)))continue;let c=[...l].filter(d=>(d&2056)==2056).length;if(c<this.size)continue;i++,e=l,this.count=c,this.grid.set(n,"");for(let[d,f]of o)f!==l&&this.grid.set(d,"")}}if(!i)return this.looseRefine?F:{ok:!1,fail:`refine ${this.count} > ${this.size}
${this.grid.show()}`}}return F}removalMap(e){return new Map([[e,""]])}refineEdges(){let e=[];for(let o=0;o<this.grid.data.length;o++){if(!this.grid.data[o])continue;let a=this.grid.coord(o);this.grid.isBorder(a)||this.fixed.has(a)||(a^a>>8)&8&&e.push(a)}this.random.shuffle(e);let t=this.grid.partition(new Map),i=t.size,n=new Set(t.values()).size;for(let o of e){let a=this.grid.partition(new Map([[o,""]])),[l]=a.values();(l.size===a.size||new Set(a.values()).size===n)&&a.size===i-1&&(i--,this.grid.set(o,""))}return!0}removeSpurs(){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++){let i=e<<12|2056|t<<4;if(this.grid.get(i))continue;let n=i-2048,o=i+2048,a=i-8,l=i+8;(this.grid.get(n)||this.grid.get(o))&&(this.grid.get(a)||this.grid.get(l))&&(this.random.nextInt(2)?(this.grid.set(n,""),this.grid.set(o,"")):(this.grid.set(a,""),this.grid.set(l,"")))}}removeTightLoops(){for(let e=0;e<this.h-1;e++){let t=e<<12|2048;for(let i=0;i<this.w-1;i++){let n=t|i<<4|8;this.isTightLoop(n)&&this.breakTightLoop(n)}}}isTightLoop(e){for(let t=0;t<6144;t+=2048)for(let i=0;i<24;i+=8){let n=t|i;if(n!==2056&&this.grid.get(e+n)!=="c")return!1}return!0}breakTightLoop(e){let t=this.random.nextInt(65536),i=t&1?t&4096|8:t&16|2048;this.grid.set(e+i,"")}addStairs(e=0,t=0){let i=[e,t];if(!i[0]&&!i[1])return F;for(let n of this.random.ishuffle(this.grid.screens()))if(!!this.tryAddStair(n,i)&&!i[0]&&!i[1])return F;return{ok:!1,fail:"stairs"}}addEarlyStair(e,t){let i=[],n=e-8,o=e+8,a=e-2048,l=e+2048,c=[e-8,e+8];if(t==="<"){if(c.push(l),i.push([a,""]),this.grid.get(n)==="c"&&this.grid.get(o)==="c"&&this.random.nextInt(3))return i.push([l,""],[e,"<"]),i}else t===">"&&(c.push(a),i.push([l,""]));if(c=c.filter(f=>this.grid.get(f)==="c"),!c.length)return[];let d=this.random.nextInt(c.length);for(let f=0;f<c.length;f++)f!==d&&i.push([c[f],""]);return i.push([e,t]),i}tryAddStair(e,t){if(this.fixed.has(e|2056))return!1;let i=this.extract(this.grid,e),n=t[0]&&t[1],o=t[0]+t[1],a=this.random.nextInt(o)<t[0],l=[a?0:1];n&&l.push(a?1:0);for(let c of l){let d="<>"[c],f=i.substring(0,4)+d+i.substring(5);if(this.orig.tileset.getMetascreensFromTileString(f).length)return this.grid.set(e|2056,d),t[c]--,!0}return!1}tryConnect(e,t,i,n=1){for(;n-- >0;){let o=new Map,a=e;if((e&t&2056)!==2056)throw new Error(`bad start ${ee(e)} or end ${ee(t)}`);for(o.set(a,i);a!==t;){let l=[];for(let h of[8,-8,2048,-2048]){let p=a+h,m=a+2*h;this.fixed.has(m)||(o.get(m)??this.grid.get(m))||this.grid.isBorder(p)||l.push(h)}if(!l.length)break;let c=(t>>12)-(a>>12),d=(t&240)-(a&240),f=new Set(l);c<0&&f.delete(2048),c>0&&f.delete(-2048),d<0&&f.delete(8),d>0&&f.delete(-8),l.push(...f,...f);let u=this.random.pick(l);o.set(a+u,i),o.set(a=a+2*u,i)}if(a===t){for(let[l,c]of o)this.grid.set(l,c),(l&2056)===2056&&this.count++;return!0}}return!1}tryAddLoop(e,t=1){let i=new Ge;for(let l=0;l<this.grid.data.length;l++){let c=this.grid.coord(l);this.grid.get(c)||this.grid.isBorder(c)||(this.grid.get(He(c))||i.union([c,He(c)]),this.grid.get(re(c))||i.union([c,re(c)]))}let n=new U(()=>[]);for(let l of this.grid.screens()){let c=l+2056;if(!!this.grid.get(c))for(let d of[8,-8,2048,-2048]){let f=c+d;if(this.grid.isBorder(f)||this.grid.get(f))continue;let u=c+2*d;if(this.grid.get(u))continue;let h=new Map([[f,e]]),p=this.extract(this.grid,l,{replace:h});this.orig.tileset.getMetascreensFromTileString(p).length&&n.get(i.find(u)).push([f,u])}}let o=new Map;for(let l of n.values())if(!(l.length<2))for(let[c]of l)o.set(c,l);let a=[...o.values()];if(!a.length)return!1;for(;t-- >0;){let l=this.random.pick(a),[[c,d],[f,u]]=this.random.ishuffle(l);if(this.grid.set(c,e),this.grid.set(f,e),this.tryConnect(d,u,e,5))return!0;this.grid.set(c,""),this.grid.set(f,"")}return!1}tryExtrude(e,t,i=1){for(;i--;)for(let n of this.random.ishuffle(this.grid.screens())){let o=n+2056;if(!this.grid.get(o))continue;let a=this.extract(this.grid,n);for(let l of this.random.ishuffle([0,1,2,3])){let c=o+Kt[l],d=o+2*Kt[l];if(this.grid.get(c)||this.grid.isBorder(c)||this.grid.get(d))continue;let f=ci[l],u=a.substring(0,f)+e+a.substring(f+1);if(this.orig.tileset.getMetascreensFromTileString(u).length){this.grid.set(c,e),this.grid.set(d,e);let h=this.tryContinueExtrude(e,t,d);if(h)return h;this.grid.set(d,""),this.grid.set(c,"")}}}return 0}tryContinueExtrude(e,t,i){let n=this.extract(this.grid,i-2056),o=this.orig.tileset.getMetascreensFromTileString(n).length>0;if(t===1)return o?1:0;if(o&&!this.random.nextInt(t))return 1;for(let a of this.random.ishuffle([0,1,2,3])){let l=i+Kt[a],c=i+2*Kt[a];if(this.grid.get(l)||this.grid.isBorder(l)||this.grid.get(c))continue;let d=ci[a],f=n.substring(0,d)+e+n.substring(d+1);if(this.orig.tileset.getMetascreensFromTileString(f).length){this.grid.set(l,e),this.grid.set(c,e);let u=this.tryContinueExtrude(e,t-1,c);if(u)return u+1;this.grid.set(c,""),this.grid.set(l,"")}if(o)break}return o?1:0}tryAdd(e={}){let t=this.orig.tileset,{attempts:i=1,char:n="c",start:o,loop:a=!1}=e;for(let l=0;l<i;l++){let c=o!=null?[o&61680]:this.random.ishuffle(this.grid.screens());for(let d of c){let f=d+2056;if(!this.grid.get(f))continue;let u=this.extract(this.grid,d);for(let h of this.random.ishuffle([0,1,2,3])){let p=f+Kt[h],m=f+2*Kt[h];if(this.fixed.has(p)||this.fixed.has(m))continue;let g=this.grid.get(p),y=this.grid.get(m);if(g&&(y||g!==n)||this.grid.isBorder(p))continue;if(!a){let x=this.extract(this.grid,m-2056,{replace:new Map([[p,""]])});if(/\S/.test(x))continue}let w=ci[h],b=u.substring(0,w)+n+u.substring(w+1);if(t.getMetascreensFromTileString(b).length){this.count++,this.grid.set(p,n),this.grid.set(m,n);let x=this.extract(this.grid,m-2056);if(t.getMetascreensFromTileString(x).length)return 1;this.grid.set(m,y),this.grid.set(p,g),this.count--}}}}return 0}preinfer(){let e;return this.params.features?.spike&&(e=this.preinferSpikes(),!e.ok)?e:F}preinferSpikes(){return F}inferScreens(){let e=[];for(let n of this.grid.screens()){let o=this.extract(this.grid,n),a=this.orig.tileset.getMetascreensFromTileString(o).filter(c=>!c.data.mod);if(!a.length){if(this.grid.show().length>1e5)debugger;return{ok:!1,fail:`infer screen ${ee(n)}: [${o}]
${this.grid.show()}`}}let l=this.random.pick(a);e.push(l),l.hasFeature("wall")&&this.walls++,l.hasFeature("bridge")&&this.bridges++}let t=!0,i=new Be(this.params.id,this.orig.tileset,this.h,this.w);for(let n=0;n<this.h;n++)for(let o=0;o<this.w;o++){let a=e[n*this.w+o];if(i.set(n<<4|o,a),a.isEmpty()||(t=!1),n){let l=i.get(n-1<<4|o);if(this.orig.tileset.isBannedVertical(l,a))return{ok:!1,fail:`bad vertical neighbor at ${n}${o}: ${l.name} ${a.name}`}}if(o){let l=i.get(n<<4|o-1);if(this.orig.tileset.isBannedHorizontal(l,a))return{ok:!1,fail:`bad horizontal neighbor at ${n}${o}: ${l.name} ${a.name}`}}}return t?{ok:!1,fail:"all screens empty"}:{ok:!0,value:i}}refineMetascreens(e){let t=this.params.features?.bridge||0,i=this.params.features?.wall||0;for(let n of this.random.ishuffle(e.allPos())){let o=(n<<8|n<<4)&61680,a=this.extract(this.grid,o),l=e.get(n);if(!(this.bridges<=t&&l.hasFeature("bridge"))){if(this.addBlocks&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"block"))){l.hasFeature("bridge")&&this.bridges--;continue}if(l.hasFeature("bridge")&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"bridge"))){this.bridges--;continue}if(this.walls<i&&!l.hasFeature("wall")&&this.tryMeta(e,n,this.orig.tileset.withMod(a,"wall"))){this.walls++;continue}}}return this.bridges!==t?{ok:!1,fail:`refineMeta bridges want ${t} got ${this.bridges}
${e.show()}`}:this.walls!==i?{ok:!1,fail:`refineMeta walls want ${i} got ${this.walls}
${e.show()}`}:F}tryMeta(e,t,i){for(let n of i)if(!!this.checkMeta(e,new Map([[t,n]])))return e.set(t,n),!0;return!1}checkMeta(e,t){let i=t?{with:t}:{},n=e.traverse(i);return new Set(n.values()).size===this.maxPartitions}requireEligiblePitDestination(e){let t=!1,i=!1;for(let n of e.allPos()){let o=e.get(n);if(o.hasFeature("river")||o.hasFeature("empty"))continue;let a=(o.data.edges||"").split("").map(l=>l===" "?"":l);if(a[0]&&a[2]&&(t=!0),(a[1]&&a[3]||o.hasFeature("spikes"))&&(i=!0),t&&i)return!0}return!1}checkMetascreens(e){if(!this.params.features?.statue)return F;let t=0;for(let i of e.allPos()){let n=e.get(i);t+=n.data.statues?.length||0}return t<this.params.features.statue?{ok:!1,fail:"insufficient statue screens"}:F}},Mt=class extends R{constructor(){super(...arguments);this.initialFillType="w";this.upEdgeType="n"}setUpEdgeType(e){return this.upEdgeType=e,this}isEligibleArena(e){return!(e&61440)&&super.isEligibleArena(e)}addEdges(){let e=this.grid,t=super.addEdges();if(!t.ok)return t;let i=this.params.features?.arena;if(!i)return F;let n=[];for(let o=0;o<this.w;o++){let a=o<<4|2056;e.get(a-2048)&&n.push(a)}if(n.length<i)return{ok:!1,fail:`not enough edges
${e.show()}`};for(let o of this.random.ishuffle(n)){if(!i)break;let a=o-8,l=a-8,c=l-8,d=l-2048,f=l+2048,u=o+8,h=u+8,p=h+8,m=h-2048,g=h+2048;!e.isBorder(a)&&(e.isBorder(c)&&e.get(c)||e.isBorder(d)&&e.get(d)||e.isBorder(f)&&e.get(f))||!e.isBorder(u)&&(e.isBorder(p)&&e.get(p)||e.isBorder(m)&&e.get(m)||e.isBorder(g)&&e.get(g))||(this.fixed.add(o),e.set(o,"a"),e.set(a,""),e.set(l,""),e.set(u,""),e.set(h,""),this.grid.set(o,"a"),i--)}return F}addArenas(){return!0}},Ss=class extends R{refineMetascreens(s){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++)this.grid.get(e<<12|t<<4|2056)==="a"&&s.set(e<<4|t,s.rom.metascreens.cryptArena_statues);return super.refineMetascreens(s)}isEligibleArena(s){return!this.grid.get(s-2048)&&super.isEligibleArena(s)}},ci=[1,3,7,5],Kt=[-2048,-8,2048,8];function vs(r,s,e=!1){let t=new hi(r,s,e),i=new fi(s,t,e);return[t,i]}var fi=class extends R{constructor(e,t,i){super(e);this.location=e;this.under=t;this.reverse=i;this.downStairs=[]}init(){this.downStairs=[]}build(){return this.under.attempt<this.attempt&&(this.under.meta=void 0,this.under.shuffle(this.random),!this.under.meta)?{ok:!1,fail:"dependent failed"}:super.build()}finishInternal(){if(!this.meta||!this.under.meta)throw new Error("impossible");this.under.finish(),super.finishInternal();for(let[e,t]of he.zip(this.under.upStairs,this.downStairs))this.meta.attach(t,this.under.meta,e)}addEarlyFeatures(){let e=super.addEarlyFeatures();if(!e.ok)return e;let t=16,i=0,n=16,o=0,a=1;for(let l of[...this.under.underBridges,-1,...this.under.upStairs]){if(l===-1){a=0;continue}let c=l>>>4,d=l&15;t=Math.min(d,t),i=Math.max(d,i),n=Math.min(c-a,n),o=Math.max(c+a,o)}e:for(let l=0;l<10;l++){let c=[],d=this.random.nextInt(this.w-(i-t))+t,u=this.random.nextInt(this.h-(o-n))+n-n<<4+(d-t);for(let h of this.under.underBridges){let p=h+u,m=p>>>4,g=p&15,y=m<<12|g<<4|2056;if(this.grid.get(y)!=="c")continue e;c.push([y,"b"]),c.push([y-8,""]),c.push([y+8,""])}for(let h of this.under.upStairsEffective){let p=h+u,m=p>>>4,g=p&15,y=m<<12|g<<4|2056;if(this.grid.get(y)!=="c")continue e;c.push([y,this.reverse?"<":">"]),c.push([y+(this.reverse?-2048:2048),""]);let w=this.addEarlyStair(y,this.reverse?"<":">");if(!w.length)continue e;c.push(...w)}for(let[h,p]of c)p&&this.fixed.add(h),(p==="<"||p===">")&&this.downStairs.push(kr(h)),this.grid.set(h,p);return F}return{ok:!1,fail:"add fixed stairs with early features"}}addStairs(e=0,t=0){return this.reverse?super.addStairs(e-this.under.upStairs.length,t):super.addStairs(e,t-this.under.upStairs.length)}addOverpasses(){return!0}},hi=class extends R{constructor(e,t,i){super(e);this.loc=e;this.overpass=t;this.reverse=i;this.underBridges=[];this.upStairs=[];this.upStairsEffective=[]}init(){this.underBridges=[],this.upStairs=[],this.upStairsEffective=[]}build(){let e=super.build();if(!e.ok)return e;if(!this.meta)throw new Error("impossible");let t=this.reverse?"stair:down":"stair:up";for(let n of this.meta.allPos()){let o=this.meta.get(n);if(o.hasFeature("underpass")&&this.underBridges.push(n),o.hasFeature(t)){let a=0;for(let l of o.data.exits)l.type==="stair:up"&&l.entrance<32768&&(a=-16),l.type==="stair:down"&&l.entrance>32768&&(a=16);this.upStairsEffective.push(n+a),this.upStairs.push(n)}}if(!this.underBridges.length)throw new Error(`Expected bridge in ${this.loc}
${this.meta.show()}`);if(!this.upStairs.length)throw new Error(`Expected stair in ${this.loc}
${this.meta.show()}`);let i=0;for(let[,n,[o]]of this.orig.exits())n===t&&o>>>8===this.overpass.id&&i++;return this.upStairs=this.random.shuffle(this.upStairs).slice(0,i),F}};var It=class extends R{constructor(){super(...arguments);this.maxAttempts=400}refineEdges(){return!0}preinfer(){let e=[];for(let i=0;i<this.h;i++)for(let n=0;n<this.w;n++){let o=i<<12|n<<4|2056;this.grid.get(o)&&e.push(o)}let t=e.filter(i=>this.tryClear([i]).length===1);if(!t.length)return{ok:!1,fail:"all critical?"};for(let i=0;i<t.length;i++)for(let n=0;n<i;n++)if(this.tryClear([t[i],t[n]]).length>2)return super.preinfer();return{ok:!1,fail:"unable to find pair of mutually critical tiles"}}},Cs=class extends It{removeTightLoops(){}};var rt=class{constructor(s,e,t){this.h=s;this.w=e;this.valid=t;this.fixed=new Set;this.size=0;this.data=new Uint8Array(s*e)}fill(){for(let s=0;s<this.h;s++)for(let e=0;e<this.w;e++){let t=s*this.w+e;s>0&&(this.data[t]|=1),e>0&&(this.data[t]|=2),s<this.h-1&&(this.data[t]|=4),e<this.w-1&&(this.data[t]|=8)}}isBorder(s,e){let t=s%this.w,i=(s-t)/this.w;return this.isBorder2(i,t,e)}isBorder2(s,e,t){if(t===0)return!s;if(t===1)return!e;if(t===2)return s>=this.h-1;if(t===3)return e>=this.w-1;throw new Error("bad direction")}delete2(s,e,t=s*this.w+e){if(this.fixed.has(t))return!1;let i=new Map;i.set(t,0);for(let n=0;n<4;n++){if(this.isBorder2(s,e,n))continue;let o=t+this.delta(n),a=this.data[o],l=a&~(1<<(n^2));if(a!==l){if(this.fixed.has(o))return!1;i.set(o,l)}}return this.try(i)}delete(s){let e=s%this.w,t=(s-e)/this.w;return this.delete2(t,e,s)}deleteEdge2(s,e,t,i=s*this.w+e){if(this.fixed.has(i))return!1;if(this.isBorder2(s,e,t))return this.data[i]&=~(1<<t),!0;let n=new Map,o=i+this.delta(t);return this.fixed.has(o)?!1:(n.set(i,this.data[i]&~(1<<t)),n.set(o,this.data[o]&~(1<<(t^2))),this.try(n))}deleteEdge(s,e){let t=s%this.w,i=(s-t)/this.w;return this.deleteEdge2(i,t,e,s)}refine(s,e){let t=0,i=new Set;for(let n=0;n<this.data.length;n++)this.data[n]&&t++,this.fixed.has(n)||i.add(n);for(;t>e;){let n=!1;for(let o of s.ishuffle(i)){if(t<=e)break;if(!this.data[o]){t--;continue}this.delete(o)&&(n=!0,t--)}if(!n)return!1}return!0}validate(){for(let s=0;s<this.h;s++)for(let e=0;e<this.w;e++){let t=s*this.w+e,i=this.data[t];if(s&&!(this.data[t-this.w]&4)!=!(i&1))throw new Error(`invalid above ${s}${e}`);if(e&&!(this.data[t-1]&8)!=!(i&2))throw new Error(`invalid left of ${s}${e}`)}}addEdge(s,e,t){let i=s*this.w+e;this.data[i]|=1<<t,this.isBorder2(s,e,t)||(this.data[i+this.delta(t)]|=1<<(t^2))}consolidate(s,e){let t=new ii;for(let n=0;n<this.data.length;n++)!this.fixed.has(n)&&this.data[n]&&t.add(this.data[n]);let i=1e3;for(;t.unique()>e&&--i;){let n=[...t].sort((c,d)=>d[1]-c[1]),o=n[e][1],a=new Set(n.filter(c=>c[1]<=o).map(c=>c[0])),l=this.findEligibleConsolidates(a);if(!l.length)return[];for(let[c,d]of s.pick(l))this.data[c]&&t.delete(this.data[c]),d&&t.add(d),this.data[c]=d}return i?[...t].map(n=>n[0]):[]}consolidateFixed(s,e){let t=new ii;for(let n=0;n<this.data.length;n++){let o=this.data[n];!this.fixed.has(n)&&e.has(o)&&t.add(o)}let i=1e3;for(;t.unique()&&--i;){let n=this.findEligibleConsolidates(e);if(!n.length)return!1;for(let[o,a]of s.pick(n)){let l=this.data[o];e.has(l)&&t.delete(l),e.has(a)&&t.add(a),this.data[o]=a}}return!!i}findEligibleConsolidates(s){let e=[],t=[];for(let i=0;i<this.data.length;i++){if(this.fixed.has(i))continue;let n=this.data[i];if(!!s.has(n))for(let o=0;o<4;o++){if(this.isBorder(i,o))continue;let a=this.delta(o);if(this.fixed.has(i+a))continue;let l=1<<o;if(s.has(n^l))continue;let c=1<<(o^2),d=this.data[i+a],f=new Map([[i,n^l],[i+a,d^c]]);if(!!this.check(f)&&(e.push(f),!s.has(d^c)&&s.has(d))){t.push(f);break}}}return t.length?t:e}try(s){if(!this.check(s))return!1;for(let[e,t]of s)this.data[e]=t;return!0}check(s){let e=new Ge;for(let t=0;t<this.h;t++)for(let i=0;i<this.w;i++){let n=t*this.w+i,o=s?.get(n)??this.data[n];o&&e.union([n]),t>0&&o&1&&e.union([n,n-this.w]),i>0&&o&2&&e.union([n,n-1]),t<this.h-1&&o&4&&e.union([n,n+this.w]),i<this.w-1&&o&8&&e.union([n,n+1])}return e.roots().length===1}addPath(s,e){let t,i;if(!this.size)t=s.nextInt(this.h),i=s.nextInt(this.w);else{let c=[];for(let f=0;f<this.data.length;f++)this.data[f]&&this.data[f]!==15&&c.push(f);if(!c.length)return!1;let d=s.pick(c);i=d%this.w,t=(d-i)/this.w}let n=new Map,o=t*this.w+i,a=0,l=!0;for(;;){let c=!1,d=n.get(o)??this.data[o],f=!1;for(let u of s.ishuffle([0,1,2,3])){let h=1<<u;if(d&h)continue;let p=d|h;if(this.valid&&!this.valid.has(p))continue;let m=t+Mo[u],g=i+Io[u];if(m<0||g<0||m>=this.h||g>=this.w)continue;let y=m*this.w+g,w=n.get(y)??this.data[y],b=w|1<<(u^2);if(w){if(w===b||this.valid&&!this.valid.has(b))continue;c=!0}l=!this.valid||this.valid.has(b),n.set(o,p),n.set(y,b),i=g,t=m,o=y,f=!0;break}if(!f||c||this.data[o]||(this.size++||this.size++,l&&e&&this.size>=e)||l&&s.nextInt(15)<a++)break}if(!n.size||!l)return!1;for(let[c,d]of n)this.data[c]=d;return!0}toGrid(s){let e=new Ze(this.h,this.w);for(let t=0;t<this.h;t++)for(let i=0;i<this.w;i++){let n=t*this.w+i,o=this.data[n];if(!o)continue;let a=t<<12|i<<4|2056;e.set(a,s);for(let l=0;l<4;l++){if(!(o&1<<l))continue;let c=l&1?8:2048;e.set(l&2?a+c:a-c,s)}}return e}delta(s){return(s&2?1:-1)*(s&1?1:this.w)}show(){let s=[];for(let e=0;e<this.h;e++){let t="";for(let i=0;i<this.w;i++)t+=" \u2575\u2574\u2518\u2577\u2502\u2510\u2524\u2576\u2514\u2500\u2534\u250C\u251C\u252C\u253C"[this.data[e*this.w+i]];s.push(t)}return s.join(`
`)}},ks=class{constructor(s,e,t){this.grid=s;this._i=e*s.w+t}get x(){return this._i%this.grid.w}get y(){return Math.floor(this._i/this.grid.w)}go(s){let e=this.grid.delta(s),t=this._i+e,i=1<<s,n=1<<(s^2);this.grid.data[this._i]|=i,this.grid.data[this._i=t]|=n}directedPath(s,e,t){for(;;){let i=this.y,n=this.x,o=[];if(e<i&&o.push(0),t<n&&o.push(1),e>i&&o.push(2),t>n&&o.push(3),!o.length)return;this.go(s.pick(o))}}},Mo=[-1,0,1,0],Io=[0,-1,0,1];var os=class extends R{constructor(){super(...arguments);this.maxAttempts=250}initialFill(){let e;return e=this.initialFillEarly(),!e.ok||(this.initialFillLate(),e=this.connectEarlyToLate(),!e.ok)?e:(this.count=[...this.grid.screens()].filter(t=>this.grid.get(t+2056)).length,F)}initialFillEarly(){let e=new rt(this.h,this.w,this.getValidEarlyScreens()),t=0,i=this.targetEarly();for(;t++<20&&e.size<i;)e.addPath(this.random,i)&&(t=0);return this.grid.data=e.toGrid(this.early).data,this.addAllFixed(),F}initialFillLate(){for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++){let i=e<<12|t<<4|2056;this.grid.get(i)||this.grid.set(i,"c")}for(let e=0;e<this.h;e++)for(let t=0;t<this.w;t++)for(let i of[8,2048]){let n=e<<12|t<<4|2056,o=n+i,a=n+2*i;!this.grid.isBorder(o)&&!this.grid.get(o)&&this.grid.get(n)==="c"&&this.grid.get(a)==="c"&&this.grid.set(o,"c")}}connectEarlyToLate(){for(let e of this.random.ishuffle(this.grid.screens()))for(let t of[8,2048]){let i=e|2056,n=i+t,o=i+2*t;if(this.grid.isBorder(n)||this.grid.get(n))continue;this.grid.set(n,"c");let a=this.extract(this.grid,i-2056),l=this.extract(this.grid,o-2056);(!this.orig.tileset.getMetascreensFromTileString(a).length||!this.orig.tileset.getMetascreensFromTileString(l).length)&&this.grid.set(n,"")}return F}pruneDisconnected(){let e=new Set(this.grid.partition().values()),t=0;for(let i of e)if([...i].some(o=>this.grid.get(o)===this.early))t+=[...i].filter(o=>(o&2056)===2056).length;else for(let o of i){if(this.fixed.has(o))return{ok:!1,fail:`fixed tile ${ee(o)} disconnected`};this.grid.set(o,"")}return t<this.params.size?(console.error(this.grid.show()),{ok:!1,fail:"too much disconnected"}):F}getValidEarlyScreens(){if(!this.validEarlyScreens){let e=new Set;for(let t of this.orig.tileset){let i=t.edgeIndex(this.early);i!=null&&e.add(i)}this.validEarlyScreens=e}return this.validEarlyScreens}addEarlyFeatures(){if(!this.addArenas(this.params.features?.arena??0))return{ok:!1,fail:"addArenas"};let e;return e=this.pruneDisconnected(),e.ok?super.addEarlyFeatures():e}},Es=class extends os{constructor(){super(...arguments);this.early="w";this.maxAttempts=250}targetEarly(){let e=this.params.features?.wide;return e!=null?e+2+this.random.nextInt(3):0}initialFillEarly(){let e=new rt(this.h,this.w);e.fill();let t=le(e.data.length).slice(e.w),i=this.random.pick(t);if(!e.deleteEdge(i,1))return{ok:!1,fail:"initial stair"};if(!e.deleteEdge(i,2))return{ok:!1,fail:"initial stair"};if(!e.deleteEdge(i,3))return{ok:!1,fail:"initial stair"};e.fixed.add(i);let n=new Set(t);n.delete(i);let o=[];for(let d of this.random.ishuffle(n)){let f=function(g){return e.delete(g)?(e.fixed.add(g),!0):!1},u=this.params.features?.arena??0;if(o.length>=u)break;if(d>e.data.length-2*e.w||e.fixed.has(d))continue;let h=!e.isBorder(d,1),p=!e.isBorder(d,3);if(h&&e.fixed.has(d-1)||p&&e.fixed.has(d+1)||e.fixed.has(d-e.w)||e.fixed.has(d+e.w)||!(e.data[d]&4))continue;if(!f(d-e.w))return{ok:!1,fail:"initial arena"};if(h&&!f(d-1))return{ok:!1,fail:"initial arena"};if(p&&!f(d+1))return{ok:!1,fail:"initial arena"};let m=d+e.w;if((e.data[m]&5)!==5)return{ok:!1,fail:"initial arena"};if(!e.deleteEdge(m,1))return{ok:!1,fail:"initial arena"};if(!e.deleteEdge(m,3))return{ok:!1,fail:"initial arena"};e.deleteEdge(m+e.w,2),e.fixed.add(m),o.push(d),e.fixed.add(d)}if(!e.refine(this.random,this.targetEarly()))return{ok:!1,fail:"refine"};let a=new Set;for(let d=1;d<16;d++)this.getValidEarlyScreens().has(d)||a.add(d);if(!e.consolidateFixed(this.random,a))return{ok:!1,fail:"consolidate"};this.grid.data=e.toGrid("w").data;let l=(d,f)=>{let u=d%e.w,p=(d-u)/e.w<<12|u<<4|2056;this.grid.set(p,f);for(let m of[-2056,-2048,-2040,-8,0,8,2040,2048,2056])this.fixed.add(p+m)};l(i,">");for(let d of o)l(d,"a");let c=3;for(let d of this.grid.screens())this.grid.get(d+2056)&&c++;return this.size=c,F}addStairs(e,t){return super.addStairs(e,t?t-1:0)}addArenas(){return!0}connectEarlyToLate(){for(let e=0;e<this.h;e++){let t=e<<12|2056;for(let i=0;i<this.w;i++){let n=t|i<<4;this.grid.get(n)==="a"&&this.grid.set(n-2048,"c")}}return F}preinfer(){let e=new Map;for(let n=0;n<this.grid.data.length;n++)this.grid.data[n]==="w"&&e.set(this.grid.coord(n),"");let t=this.grid.partition(e),i=new Set;for(let[n,o]of t)this.grid.get(n)==="<"&&i.add(o);return i.size<2?{ok:!1,fail:"stairs bunched"}:F}refineMetascreens(e){for(let t of e.allPos())e.get(t).hasFeature("arena")&&e.set(t,e.rom.metascreens.fortressArena_through);return F}refineEdges(){return!0}};var nt=class extends os{constructor(){super(...arguments);this.early="r";this.maxAttempts=250}targetEarly(){return this.params.features?.river??0}preinfer(){if([...this.orig.exits()].length<2)return F;let e=new Map;for(let n=0;n<this.grid.data.length;n++)this.grid.data[n]==="r"&&e.set(this.grid.coord(n),"");let t=this.grid.partition(e),i=[];for(let n=0;n<this.grid.data.length;n++)(this.grid.data[n]==="<"||this.grid.data[n]===">"||this.grid.data[n]&&this.grid.isBorder(this.grid.coord(n)))&&i.push(t.get(this.grid.coord(n)));return new Set(i).size<i.length?{ok:!1,fail:`river didn't matter
${this.grid.show()}`}:super.preinfer()}addLateFeatures(){return F}addArenas(e){if(!e)return!0;let t=this.grid;for(let i of this.random.ishuffle(this.grid.screens())){let n=i|2056,o=n-8,a=o-8,l=n+8,c=l+8,d=n-2048,f=n+2048;if(t.get(n)!=="c"||t.get(d)!=="c"||t.get(f)!=="c")continue;let u=t.isBorder(o)?"":this.extract(t,a-2056),h=t.isBorder(l)?"":this.extract(t,c-2056);if(!/[^ c]/.test(u+h)&&(t.isBorder(o)||(t.set(o,""),t.set(a,""),t.set(a-8,""),t.set(a-2048,""),t.set(a+2048,"")),t.isBorder(l)||(t.set(l,""),t.set(c,""),t.set(c+8,""),t.set(c-2048,""),t.set(c+2048,"")),this.fixed.add(n),this.fixed.add(d),this.fixed.add(f),t.set(n,"a"),e--,!e))return this.pruneDisconnected(),!0}return!1}},Rs=class extends nt{constructor(){super(...arguments);this.addBlocks=!1}initialFillEarly(){let e=new rt(this.h,this.w,this.getValidEarlyScreens()),t=2+this.random.nextInt(this.w-4),i=2+this.random.nextInt(this.w-4),n=new ks(e,this.h-1,i);return n.go(0),n.directedPath(this.random,1,t),n.go(0),this.grid.data=e.toGrid("r").data,this.addAllFixed(),F}addEdges(){let e=-1,t=this.h-1<<12|2056;for(let o=0;o<this.w;o++)this.grid.get(t|o<<4)==="r"&&(e=o);if(e<0)throw new Error("no river on bottom edge");let i=t|this.random.nextInt(e)<<4,n=t|e+1+this.random.nextInt(this.w-1-e)<<4;return this.grid.set(i,">"),this.grid.set(i-8,""),this.grid.set(i+8,""),this.grid.set(n,">"),this.grid.set(n-8,""),this.grid.set(n+8,""),this.fixed.add(i),this.fixed.add(n),F}addStairs(){return F}checkMeta(e,t){let i=t?{flight:!0,with:t}:{flight:!0},n=e.traverse(i);return new Set(n.values()).size===this.maxPartitions}},Ts=class extends R{constructor(){super(...arguments);this.addBlocks=!1}pickWidth(){return super.pickWidth()+this.random.nextInt(2)}initialFill(){let e=new U(()=>[]);for(let d of this.orig.tileset){if(!d.hasFeature("spikes")||!d.data.edges)continue;let f=0;for(let u=0;u<4;u++)d.data.edges[u]==="s"&&(f|=1<<u);e.get(f).push(...d.gridTiles())}let t=1+this.random.nextInt(this.w-2),i=1+this.random.nextInt(this.h-2),n=i<<4|t,o=this.posToGrid(n,2056),a=i<this.h/2?2:0;this.insertTile(n,this.random.pick(e.get(1<<a)));for(let d=4;d>=0;d--){n+=Fo[a],o=o+ui[a];let f=a^2,u=[];for(let[p,m]of e){if(!(p&1<<f))continue;let g=p&~(1<<f);if(!(d?!g:g))for(let y of m)u.push(p)}let h;for(let p of this.random.ishuffle(u))if(!this.grid.isBorder(o+ui[p])&&this.insertTile(n,this.random.pick(e.get(p)))){h=31-Math.clz32(p&~(1<<f));break}if(h==null)return{ok:!1,fail:"spikes"};a=h}let l=[];for(let d=3;d<this.h-3;d++)for(let f=1;f<this.w-1;f++)l.push(d<<12|f<<4|2056);let c=!1;for(let d of this.random.ishuffle(l))if(!this.grid.get(d)){for(let f of ui){if(this.grid.get(d+f)!=="c")continue;this.grid.set(d,"r");let u=2056&~Math.abs(f);this.grid.set(d+u,"r"),this.grid.set(d-u,"r");let h=this.random.pick([-u,u]);this.grid.set(d+2*h,"r"),this.grid.set(d+3*h,"r"),this.grid.set(d+2*h-f,"c"),c=!0;break}if(c)break}if(!c)return{ok:!1,fail:"nucleate river"};for(let d=5+this.random.nextInt(3);d>0;d--)if(!this.tryAdd({char:"c"}))return{ok:!1,fail:"fill cave"};for(let d=0;d<this.grid.data.length;d++)if(this.grid.data[d]&&this.grid.isBorder(this.grid.coord(d)))return{ok:!1,fail:"border"};return F}checkMeta(e,t){let i=t?{flight:!0,with:t}:{flight:!0},n=e.traverse(i);return new Set(n.values()).size===this.maxPartitions}refine(){return F}refineEdges(){return!0}addSpikes(e){return!0}refineMetascreens(e){let t=super.refineMetascreens(e);if(!t.ok)return t;function i(a){return[...new Set(a.values())].filter(c=>{for(let d of c)if(e.exitType(d)?.startsWith("stair"))return!0;return!1}).length}let n=i(e.traverse()),o=i(e.traverse({flight:!0}));return n===o?{ok:!1,fail:"flight not required"}:F}},ui=[-2048,-8,2048,8],Fo=[-16,-1,16,1],Ms=class extends nt{constructor(){super(...arguments);this.addBlocks=!1}fillGrid(){let e=[],t=0;for(let l of this.random.ishuffle(le(this.w-2,c=>c+1))){if(e.length===1&&(l-e[0])**2<=1)continue;let c=this.h-1<<12|l<<4|2056;if(this.grid.set(c,"c"),this.grid.set(be(c),"c"),this.grid.set(re(c),"n"),this.fixed.add(c),this.fixed.add(be(c)),this.fixed.add(re(c)),e.push(l),t++,e.length===2)break}if(e.length<2)return{ok:!1,fail:"initial edges"};let i=this.w,n=this.random.nextInt(Math.abs(e[0]-e[1])-1)+Math.min(e[0],e[1])+1;for(let l=1;l<2*this.w;l++)l!==2*n+1&&(this.grid.set(this.h-2<<12|l<<3|2048,"r"),this.fixed.add(this.h-1<<12|l<<3|2048));let o=this.params.features.river;for(;i<o;){let l=this.tryAdd({char:"r"});if(!l)return{ok:!1,fail:`failed to extrude river
${this.grid.show()}`};i+=l,t+=l}let a=this.params.size;for(;t<a;){let l=this.tryAdd();if(!l)return{ok:!1,fail:"failed to extrude cave"};t+=l}return this.addStairs(...this.params.stairs??[])}checkMeta(){return!0}refineMetascreens(e){let t=super.refineMetascreens(e);if(!t.ok)return t;function i(l){let c=0;for(let d of new Set(l.values()))for(let f of d)if(e.exitType(f)==="edge:bottom"){c+=d.size;break}return c}let n=i(e.traverse({noFlagged:!0})),o=i(e.traverse());if(n===o)return{ok:!1,fail:"bridge didn't matter"};let a=i(e.traverse({flight:!0}));return o===a?{ok:!1,fail:"flight not required"}:F}},Is=class extends nt{constructor(){super(...arguments);this.pattern=["               "," rrrrrrrrrrrrr "," r           r "," r rrrrrrrrr r "," r r       r r "," r r rrrrr r r "," r r r   r r r "," r r r   r r r "," r r r   r r r "," r r r < r r r "," r r r c r r r "," r r rrrrr r r "," r r       r r "," r rrrrrrrrr r "," r           r "," rrrrrrrrrrrrr ","               "]}initialFill(){return this.insertPattern(this.pattern)}addEdges(){let e;for(let n=0;n<this.grid.data.length;n++)if(this.grid.data[n]==="r"){e=this.grid.coord(n)-2056;break}if(e==null)throw new Error("no corner");let t=[];for(let n=0;n<this.pattern.length;n++)for(let o=1;o<this.pattern[n].length-1;o++)!((o^n)&1)||this.pattern[n][o]===" "&&t.push(e+(n<<11|o<<3));let i=this.random.shuffle([..."ccrrrrrrrr"]);for(let n of this.random.ishuffle(t)){let o=i[i.length-1];if(!(o==="c"&&[...this.extract(this.grid,n-2056)].filter(a=>a==="r").length<4)&&(this.canSet(n,o)&&this.grid.set(n,i.pop()),!i.length))break}for(let n=0;n<6;n++)this.tryAdd({char:"c"});return F}refine(){let e=[...this.params.stairs??[]];if(e[0]--,e[0]||e[1]){let n=this.addStairs(...e);if(!n.ok)return n}let t=0;for(let n of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,n).replace(/ /g,"")==="c"&&(e[0]&&!this.grid.get(n+8)&&(this.grid.set(n+2056,"<"),e[0]--),this.fixed.add(n+2056),++t>=2))break;let i=this.grid.partition();return new Set(i.values()).size>1?{ok:!1,fail:"orphans"}:F}fillGrid(){let e;return e=this.initialFill(),!e.ok||(e=this.addEdges(),!e.ok)||(e=this.refine(),!e.ok)?e:F}checkMeta(e,t){let i=e.traverse(t?{with:t}:{}),n=[];for(let o of new Set(i.values())){let a=0;for(let l of new Set([...o]))e.exitType(l)&&a++;n.push(a)}return n.filter(o=>o>0).length===1}refineMetascreens(e){if(!this.checkMeta(e))return{ok:!1,fail:"initial checkMeta"};let t=super.refineMetascreens(e);if(!t.ok)return t;function i(a){let l=0;for(let c of new Set(a.values()))for(let d of c)if(e.exitType(d)){l+=c.size;break}return l}let n=i(e.traverse()),o=i(e.traverse({flight:!0}));return n===o?{ok:!1,fail:"flight not required"}:F}};var Fs=class extends R{build(){let{h:s,w:e}=this,t=this.orig.rom,i=new rt(s,e);i.fill();let n=s*e<28?0:this.random.nextInt(s-1),o=this.random.nextInt(e),a=new Set;function l(S,M){i.delete2(S,M),a.add(S*i.w+M)}function c(S){return!S.startsWith("edge")}a.add(n*i.w+o),o&&l(n,o-1),o<i.w-1&&l(n,o+1),n&&(l(n-1,o),o&&l(n-1,o-1),o<i.w-1&&l(n-1,o+1));for(let S of a)i.fixed.add(S);let d=new Set;for(let S=0;S<4;S++){let M=S&1?s:e,G=this.random.shuffle(le(M)),Z=S&2?M:0,Q=this.params.edges?.[S]??0;for(;Q&&G.length;){let _=S&1?G.pop():Z,ie=S&1?Z:G.pop(),K=_*i.w+ie;!i.data[K]||i.fixed.has(K)||(i.addEdge(_,ie,S),d.add(_<<4|ie),Q--)}if(Q)return{ok:!1,fail:`could not add all edges: ${S} ${Q}
${i.toGrid("c").show()}
${i.data}`}}let f=0,u=i.h*i.w*(this.random.next()*.15+.4);for(let S of this.random.ishuffle(le(i.data.length<<2))){let M=S>>>2,G=S&3;if(!i.isBorder(M,G)&&i.deleteEdge(M,G)&&++f>=u)break}let h=new Set,p=new Set,m=[],g=[],y;for(let S of this.orig.tileset){if(S.hasFeature("arena")){y=S;continue}else if(S.hasFeature("empty")){m[0]=S;continue}let M=S.edgeIndex("s");if(M==null)throw new Error("bad edges");let G=S.data.exits?.some(Z=>c(Z.type));(G?g:m)[M]=S,(S.sid<0?p:h).add(S.sid)}if(!y)throw new Error("never found arena");let w=i.consolidate(this.random,h.size),b=new Set(w.map(S=>m[S].sid));if(!b.size)return{ok:!1,fail:"consolidate failed"};let x=[...p].filter(S=>b.has(S)),E=[...h].filter(S=>!b.has(S));if(x.length>E.length)throw new Error("out of space");if(x.length){let S=-1;for(;t.metascreens.getById(S).length;)S--;let M=S;for(let G=0;G<x.length;G++)t.metascreens.renumber(E[G],S),t.metascreens.renumber(x[G],E[G]),S=x[G];t.metascreens.renumber(M,x[x.length-1])}let k=new Be(this.orig.id,this.orig.tileset,s,e);for(let S=0;S<i.h;S++)for(let M=0;M<i.w;M++){let G=S===n&&M===o;k.set(S<<4|M,G?y:m[i.data[S*i.w+M]])}let A=[...this.orig.exits()].filter(S=>c(S[1])).length;for(let S of this.random.ishuffle(k.allPos())){if(!A)break;if(d.has(S))continue;let M=S&15,G=S>>>4,Z=g[i.data[G*i.w+M]];!Z||(k.set(S,Z),A--)}return A?{ok:!1,fail:"could not place all doors"}:F}};function Er(r){let{swamp:s}=r.metatilesets,e=r.metascreens,t=[[3,218,172],[4,228,170],[5,229,170],[6,230,170],[7,231,170],[8,240,170],[9,241,170],[10,242,170],[11,243,170],[12,220,170],[13,221,170]];for(let[i,n,o]of t)s.getTile(i).copyFrom(n).setAlternative(o);e.swampEmpty.screen.set2d(0,[[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[168,204],[210,204],[210,204],[210,204],[210,226],[226,200]]),e.swampE.screen.set2d(76,[[8,9],[12,11],[3,3]]),e.swampWSE.screen.set2d(37,[[,,4],[8,9,5],[,10,6],[,11,7],[,3,3]]),e.swampW.screen.set2d(36,[[4],[],[6],[7,13],[3,3]]),e.swampWS.screen.set2d(71,[[8,9],[12,11],[3,3]]),e.registerFix(15,0)}var Gs=class extends R{initialFill(){let e=this.size+3,t=this.random.nextInt(this.w)<<4|this.h-1<<12|2056;this.grid.isBorder(ut(t))||this.fixed.add(ut(t,2)),this.grid.isBorder(He(t))||this.fixed.add(He(t,2)),this.grid.set(t,">"),this.fixed.add(t),this.grid.set(be(t),"w"),this.fixed.add(be(t)),this.fixed.add(ut(t)),this.fixed.add(He(t));let i=this.random.nextInt(this.w)<<4|2056,n=re(i,2);if(this.grid.set(i,"<"),this.fixed.add(i),this.grid.set(re(i),"w"),this.fixed.add(re(i)),this.grid.set(n,"w"),this.fixed.add(n),this.grid.set(re(n),"w"),this.fixed.add(re(n)),this.fixed.add(ut(n)),this.fixed.add(He(n)),!this.tryConnect(be(t,2),re(n,2),"w",10))return{ok:!1,fail:"initial connect"};for(;this.count<e;)if(!this.tryAddLoop("w",10))return{ok:!1,fail:"add loops"};return F}refine(){return F}refineEdges(){return!0}addArenas(){return!0}addStairs(){return F}refineMetascreens(e){console.log(e.show());for(let i=0;i<e.height;i++)for(let n=0;n<e.width;n++){let o=i<<4|n,a=e.get(o),l=a.edgeIndex("w");if(a.hasFeature("arena"))this.arena=o+16<<8|1;else if(l===5){if(o<16||!e.get(o-16).hasFeature("arena")){e.set(o,e.rom.metascreens.goaWideHallNS_stairs);let c=(o<<8|o<<4)&61680|2056;this.grid.set(c,"H")}}else l===1&&(this.stair=o<<8|2)}if(this.reachable=void 0,!this.checkMeta(e))return{ok:!1,fail:"initial meta check"};console.log(e.show());let t=this.orig.rom.metascreens.goaWideHallNS_deadEnd;for(let i=0;i<e.width;i++)for(let n=0;n<e.height;n++){let o=n<<12|i<<4|2056,a=0;for(;n+a<e.height&&this.grid.get(o+a*4096)==="H";)a++;if(!a)continue;let l=[new Map,new Map];for(let d=0;d<a;d++)l[d&1].set(n+d<<4|i,t);let c=!1;for(let d of this.random.ishuffle(l)){if(!d.size){c=!0;continue}if(!!this.checkMeta(e,d)){for(let[f,u]of d)e.set(f,u),this.grid.set(o+4096*((f>>4)-n),"=");c=!0;break}}if(!c)return{ok:!1,fail:"could not rectify hallway"};n+=a}return super.refineMetascreens(e)}checkMeta(e,t){let i=t?{with:t}:{},n=e.traverse(i),o=n.get(this.stair);return o!==n.get(this.arena)?(console.log(`stair not connected to arena
${e.show()}`),!1):this.reachable==null?o&&o.size<n.size*.95?(console.log("too small"),!1):(this.reachable=o?.size,!0):o?.size>this.reachable*.95}};function Rr(r,s){let{metatilesets:{cave:e,fortress:t,iceCave:i,labyrinth:n,pyramid:o}}=r;r.metascreens.registerFix(14,1);{for(let l of[n,o])l.getTile(43).copyFrom(25).replaceIn(...l),l.getTile(186).copyFrom(27).replaceIn(...l);for(let l of[t,n,o,e])l.getTile(25).copyFrom(23).replaceIn(...l),l.getTile(27).copyFrom(24).replaceIn(...l);for(let l of[i,e,o])l.getTile(23).copyFrom(197),l.getTile(24).copyFrom(197);n.getTile(23).copyFrom(198).setAlternative(197),n.getTile(24).copyFrom(196).setAlternative(197)}let a=new U(()=>[]);for(let l of r.metatilesets.labyrinth)a.get(l.sid).push(l);for(let[l,c]of a){let d=r.screens[l],f=c.map(p=>p.data.tilesets.labyrinth?.removeWall),[u,...h]=new Set(f.filter(p=>p!=null));if(u!=null){if(d.set2d(u,[[197,197],[208,197]]),h.length)throw new Error("bad remove");for(let p=0;p<f.length;p++)f[p]==null&&(c[p].data.tilesets.labyrinth.addWall=[u])}if(!(c.length<2)){if(c.length>2){let p=s.pick(c.filter(m=>m.data.tilesets.labyrinth?.addWall));c.splice(c.indexOf(p),1),p.remove()}for(let p of c){let m=p.data.tilesets.labyrinth?.addWall;if(m!=null){p.data.mod="block";for(let g of m)d.set2d(g,[[23,23],[24,24]])}else p.flag="always"}}}}var Bs=class{constructor(s){this.location=s}shuffle(s){if(this.meta)throw new Error("impossible");let e=this.location.meta;Bo(e,s),s.nextInt(2)&&Ao(this.location.rom);let t=[...e.exits()].filter(a=>a[1]==="stair:up"),i=[...e.exits()].filter(a=>a[1]==="stair:down");s.shuffle(t),s.shuffle(i);for(let a of[...e.exits()])if(a[2][0]>>>8!==this.location.id){let l=(a[1]==="stair:up"?t:i).pop();e.setExit(l[0],l[1],a[2])}if(t.length!==i.length)throw new Error("length mismatch");let n=s.shuffle([...i]);for(let a=0;a<i.length;a++)i[a]===n[a]&&(s.shuffle(n),a=-1);let o=this.location.id<<8;for(let a=0;a<t.length;a++)e.setExitOneWay(t[a][0],t[a][1],[o|i[a][0],i[a][1]]),e.setExitOneWay(n[a][0],n[a][1],[o|t[a][0],t[a][1]]);this.meta=e}finish(){}};function Bo(r,s){let e=s.nextInt(2)+6,t=s.nextInt(3)+2;if(e===7&&t===3)return;let{branchNWSE:i,branchNWE:n,branchWSE:o,branchNWE_upStair:a,deadEndW:l,deadEndE:c}=r.rom.metascreens,d=e<<4|t,f=o;e===7&&t===1&&(f=c),e===7&&t===5&&(f=l),r.set2d(99,[[i],[i],[i]]),r.set2d(d-16,[[n],[a],[f]]),r.moveExit(115,d)}function Ao(r){let s=r.locations.Pyramid_Draygon.meta,e=r.locations.Pyramid_Main.meta,{metascreens:{hallSE:t,deadEndW_downStair:i,wideHallNE:n,wideHallNW:o,fortressArena_through:a,deadEndS_stairs:l}}=r;s.width=2,s.set2d(0,[[null,l],[null,a],[n,o]]),s.moveExit(32,1),e.set2d(3,[[t,i]]),e.moveExit(3,4),e.attach(4,s,1)}function Tr(r,s,e){let t=new mi(r),i=new pi(s,t),n=new xi(e,i);return[t,i,n]}var mi=class extends R{constructor(){super(...arguments);this.patterns=[["     "," >cc ","   c ","   b ","   c "],["     "," cc> "," c   "," b   "," c   "],["   c ","   b ","   c "," >cc ","     "],[" c   "," b   "," c   "," cc> ","     "]]}initialFill(){let e=this.random.pick(this.patterns);this.count=3;let t=this.insertPattern(e,{top:1,bottom:1});if(!t.ok)return t;this.addAllFixed();for(let i=0;i<this.grid.data.length;i++){if(this.grid.data[i]!==">")continue;let n=this.grid.coord(i);this.stair=n>>>8&240|n>>>4&15}return F}addEdges(){let e=10;for(;this.count<this.size&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"addEdges"}}addEarlyFeatures(){let e=!1;for(let t of this.random.ishuffle(this.grid.screens()))if(this.extract(this.grid,t)===" c  c  c "){this.grid.set(t+2056,"b"),e=!0;break}return e?super.addStairs(0,2):{ok:!1,fail:"could not add bridge"}}refine(){return F}addLateFeatures(){return F}addStairs(){return F}},pi=class extends R{constructor(e,t){super(e);this.location=e;this.upper=t;this.maxAttempts=200}build(){return this.upper.attempt<this.attempt&&(this.upper.meta=void 0,this.upper.shuffle(this.random),!this.upper.meta)?{ok:!1,fail:"dependent failed"}:super.build()}initialFill(){let e=[],t=!0,i=this.upper.meta,n=this.upper.stair;if(i.get(n).isEmpty()||(n+=16,t=!1),n==null)throw new Error("no stair found");for(let x of i.allPos())i.get(x).hasFeature("overpass")&&e.push(x);this.random.shuffle(e);let o=n>>>4,a=n&15,l=a,c=o;for(let x of e){let E=x>>>4,k=x&15;o=Math.min(o,E),a=Math.min(a,k),l=Math.max(l,k),c=Math.max(c,E)}let d=c-o+1,f=l-a+1,u=o<<4|a,h=1+this.random.nextInt(this.w-f-2),m=(this.random.nextInt(this.h-d-(t?1:0))<<4|h)-u,g=(n&15)-a<f/2;n+=m;for(let x=0;x<e.length;x++)e[x]+=m;let y=t?"    <  c ":g?"    <c   ":"   c<    ";if(!this.insertTile(e[0],"   cbc   ")||!this.insertTile(e[1],"   cbc   "))throw new Error("Could not insert bridge tile");if(!this.insertTile(n,y)){let x=[-1,1,16,-16,15,17,-15,-17],E=!1;for(let k of this.random.ishuffle(x))if(this.insertTile(n+k,y)){n+=k,E=!0;break}if(!E)throw new Error("Could not insert stair")}this.stair=n,this.addAllFixed(),this.count=3;let w=g?1:-1,b=t?16:w;return!e.includes(n+w)&&!this.tryConnect(this.posToGrid(n+b,2056),this.posToGrid(e[0]-w,2056),"c",10)?{ok:!1,fail:"could not connect stair to bridge"}:this.tryConnect(this.posToGrid(e[0]+w,2056),this.posToGrid(e[1]+w,2056),"c",10)?F:{ok:!1,fail:"could not connect bridges"}}addEdges(){let e=100;for(;this.count<this.size-4&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"could not populate"}}refine(){return F}refineEdges(){return!0}addUnderpasses(){return!0}addArenas(){for(let e of this.random.ishuffle(this.grid.screens())){if(!(e&61440))continue;let t=e+2056;if(!(this.fixed.has(t)||this.grid.get(t))&&!(this.grid.get(ut(t,2))||this.grid.get(He(t,2)))&&this.grid.get(re(t,2))==="c"&&!!this.canSetAll(new Map([[re(t),"c"],[t,"a"],[be(t),"c"],[be(t,2),"c"]])))return this.grid.set(re(t),"c"),this.grid.set(t,"a"),this.grid.set(be(t),"c"),this.fixed.add(t),this.fixed.add(be(t,2)),!0}return!1}addStairs(e=0,t=0){return super.addStairs(e-1,t)}finishInternal(){if(!this.meta)throw new Error("impossible");this.upper.finish(),super.finishInternal();let e=this.upper.meta,t=this.upper.stair,i=this.stair;t!=null&&i!=null&&this.meta.attach(i,e,t,"stair:up","stair:down")}},xi=class extends R{constructor(e,t){super(e);this.main=t}build(){return this.main.attempt<this.attempt&&(this.main.meta=void 0,this.main.shuffle(this.random),!this.main.meta)?{ok:!1,fail:"dependent failed"}:super.build()}findArena(e){for(let t of e.allPos())if(e.get(t).hasFeature("arena"))return t;throw new Error("never found arena")}initialFill(){let e=this.main.meta,t=this.findArena(e),i=this.posToGrid(t,2056);return this.grid.set(i,"a"),this.grid.set(be(i),"c"),this.grid.set(re(i),"c"),this.fixed.add(i),this.fixed.add(re(i)),this.fixed.add(re(i,2)),F}addEdges(){let e=10,t=2+this.random.nextInt(2);for(;this.count<t&&e;)this.tryAdd()||e--;return e?F:{ok:!1,fail:"addEdges"}}refine(){return F}addLateFeatures(){return F}inferScreens(){let e=super.inferScreens();if(!e.ok)return e;let t=e.value,i=this.findArena(t),n=this.main.meta;return t.set(i+15,this.orig.tileset.unreachableVariant(n.get(i+15))),t.set(i+16,this.orig.tileset.unreachableVariant(n.get(i+16))),t.set(i+17,this.orig.tileset.unreachableVariant(n.get(i+17))),e}finishInternal(){if(!this.meta)throw new Error("impossible");this.main.finish();let e=this.main.meta,t=this.findArena(this.meta);super.finishInternal(),e.setExit(t,"seamless:up",[this.meta.id<<8|t,"seamless:down"]),this.meta.freeFlags=new Set(e.freeFlags)}reportFailure(){throw new Error("Completely failed to shuffle Karmine Kensu map")}},gi=class extends R{constructor(){super(...arguments);this.looseRefine=!0}pickWidth(){return 8}pickHeight(){return 5}initialFill(){if(this.grid.height!==5||this.grid.width!==8)throw new Error("bad size");return Ze.writeGrid2d(this.grid,0,gi.PATTERN),this.count=36,F}addSpikes(){let e=this.random.nextInt(4);for(let n=1;n<10;n++)for(let o=0;o<4;o++){let a=2*o+5+n*17;if(o===e)this.grid.data[a]="c";else{let l=this.grid.coord(a);this.fixed.add(l),n===5&&(this.fixed.add(l+8),this.fixed.add(l+16),this.fixed.add(l-8),this.fixed.add(l-16))}}let t=0;for(let n of this.random.ishuffle(this.grid.screens())){if(t===3)break;let o=n|2056,a=be(o),l=be(o,2),c=re(o),d=re(o,2),f=ut(o),u=He(o);if(this.grid.get(o)!=="c"||this.grid.get(a)==="s"||this.grid.get(l)==="s"||this.grid.get(c)==="s"||this.grid.get(d)==="s")continue;let h=[],p=[];for(let m of[c,f,u])this.grid.get(m)==="c"&&(this.grid.get(2*m-o)==="s"?p.push(m):h.push(m));if(!(p.length>1)&&!(!h.length&&!p.length)){for(;h.length+p.length>1&&!(h.length+p.length===2&&!h.includes(c)&&!p.includes(c));){let[m]=h.splice(this.random.nextInt(h.length),1);this.grid.set(m,"")}this.grid.set(a,""),this.fixed.add(o),this.grid.set(o,"<"),t++}}return new Set(this.grid.partition().values()).size===1}addStairs(){return F}},as=gi;as.PATTERN=["                 ","   ccccccccccc   ","   c c c c c c   "," ccc s s s s ccc "," c c s s s s c c "," ccccscscscscccc "," c c s s s s c c "," ccc s s s s ccc ","   c c c c c c   ","   ccccccccccc   ","                 "];function Mr(r,s,e){let t=r.locations;Lo(r,e);let i=new bs(r,e);i.add(),i.shuffles.length||i.add(new R(t.EastCave1),new R(t.EastCave2),new R(t.EastCave3),...vs(t.SealedCave1,t.SealedCave2),new R(t.SealedCave3),new R(t.SealedCave4),new R(t.SealedCave5),new R(t.SealedCave6),new R(t.SealedCave7),new R(t.SealedCave8),new R(t.WindmillCave),new R(t.ZebuCave),new Fs(t.Swamp),new R(t.MtSabreWest_Cave1),new R(t.MtSabreWest_Cave2),new R(t.MtSabreWest_Cave3),new R(t.MtSabreWest_Cave4),new R(t.MtSabreWest_Cave5),new R(t.MtSabreWest_Cave6),new It(t.MtSabreWest_Cave7),new R(t.MtSabreNorth_Cave1),new R(t.MtSabreNorth_Cave2),new R(t.MtSabreNorth_Cave3),new R(t.MtSabreNorth_Cave4),new R(t.MtSabreNorth_Cave5),new R(t.MtSabreNorth_Cave6),new R(t.MtSabreNorth_Cave7),new R(t.MtSabreNorth_Cave8),new R(t.MtSabreNorth_Cave9),new R(t.MtSabreNorth_LeftCell2),new R(t.MtSabreNorth_SummitCave),new R(t.KirisaPlantCave1),new R(t.KirisaPlantCave2),new R(t.KirisaPlantCave3),new R(t.FogLampCave1),new R(t.FogLampCave2),new R(t.FogLampCave3),new Cs(t.FogLampCaveDeadEnd),...vs(t.FogLampCave5,t.FogLampCave4,!0),...vs(t.FogLampCave7,t.FogLampCave6),new It(t.WaterfallCave1),new R(t.WaterfallCave2),new Mt(t.WaterfallCave3),new Rs(t.WaterfallCave4),new nt(t.EvilSpiritIsland2).requirePitDestination(),new It(t.EvilSpiritIsland3),new nt(t.EvilSpiritIsland4),new Es(t.SaberaPalace1).requirePitDestination(),new R(t.SaberaPalace2),new R(t.SaberaPalace2_West),new R(t.JoelSecretPassage),new R(t.MtHydra_Cave1),new R(t.MtHydra_Cave2),new R(t.MtHydra_Cave3),new R(t.MtHydra_Cave4),new R(t.MtHydra_Cave5),new R(t.MtHydra_Cave6),new Mt(t.MtHydra_Cave7),new R(t.MtHydra_Cave8),new R(t.MtHydra_Cave9),new R(t.MtHydra_Cave10),new Mt(t.Styx1).setUpEdgeType("c"),new Ms(t.Styx2).requirePitDestination(),new R(t.Styx3),new Is(t.OasisCaveMain),new R(t.DesertCave1),new R(t.DesertCave2),new R(t.Pyramid_Branch),new Bs(t.Pyramid_Main),new Ss(t.Crypt_Entrance),new Mt(t.Crypt_Hall1).setUpEdgeType("c"),new R(t.Crypt_DeadEndLeft),new R(t.Crypt_DeadEndRight),new R(t.Crypt_Branch),new R(t.Crypt_Hall2),new Gs(t.GoaFortress_Kelbesque),new nt(t.GoaFortress_Sabera),new R(t.GoaFortress_Mado1).requirePitDestination(),new R(t.GoaFortress_Mado2),new R(t.GoaFortress_Mado3),new R(t.GoaFortress_Karmine1),new R(t.GoaFortress_Karmine2),new R(t.GoaFortress_Karmine4),new as(t.GoaFortress_Karmine6),...Tr(t.GoaFortress_Karmine3,t.GoaFortress_Karmine5,t.GoaFortress_Kensu),new Ts(t.OasisCave_Entrance)),i.shuffleAll(),console.log(String(i))}function Lo(r,s=new Tt(1)){gr(r),Er(r),Rr(r,s)}var Vt=typeof __VERSION__=="object"?__VERSION__:{},wi=Vt.STATUS||"unstable",Ir=Vt.VERSION||"HEAD",hf=Vt.LABEL||"HEAD",Fr=Vt.HASH||"HEAD",uf=Vt.DATE||new Date,mf=Vt.PREV||"";var Oo={};po(Oo,{default:()=>bi});var bi=go("");var un=xo(fn());function*hn(r){let s=new TextDecoder("UTF-8"),e=r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength),t=e.byteLength,i=0;for(;i+4<t;){let o=n(0,100);if(!o&&!e[i+1]&&!e[i+2]&&!e[i+2])break;let a=parseInt(n(124,12),8),l=n(156,1);if(n(257,6)==="ustar"){let c=n(345,155);c&&(o=`${c}/${o}`)}if(l==="0"||l===""){let c=e.subarray(i+512,i+512+a);yield{filename:o,contents:c}}i+=512+Math.ceil(a/512)*512}function n(o,a){let l=i+o,c=e.subarray(l,l+a).indexOf(0),d=c<0?l+a:l+c;return s.decode(e.subarray(l,d))}}function Ia(r){return(s,e)=>{let t=r(s),i=r(e);return t<i?-1:t>i?1:0}}function Ai(r,s=e=>e){let e=()=>{let t=r();return e=()=>s(t),e()};return()=>e()}var mn=Ai(()=>[...hn((0,un.default)(bi))].sort(Ia(r=>r.filename)));function Ns(r){return Array.isArray(r)?r.map(Ns):typeof r!="object"?r:Object.fromEntries(Object.entries(r).map(([s,e])=>[s,Ns(e)]))}var Fa=new TextDecoder,pn=r=>Fa.decode(r);function Ga({filename:r,contents:s}){return{filename:r,contents:pn(s)}}var xn=Ai(()=>mn().filter(({filename:r})=>r.endsWith(".s")).map(Ga),Ns),gn=Ai(()=>Object.fromEntries(mn().filter(({filename:r})=>r.endsWith(".nss")).map(({filename:r,contents:s})=>[r,pn(s)])),Ns);var Li=class{constructor(s,e,t,i){this.filename=s,this.chrdata=Array.from(new Uint8Array(e)),this.palette=t,this.rendered=Array.from(new Uint8Array(i.data))}};async function Af(r){let s=document.createElement("canvas");s.width=112,s.height=100;let e=s.getContext("2d");e.imageSmoothingEnabled=!1,e.fillStyle="#155fd9",e.fillRect(0,0,s.width,s.height);let t=new ImageData(new Uint8ClampedArray(r.rendered),128,128),i=await createImageBitmap(t,{resizeQuality:"pixelated"});return e.drawImage(i,0,0,16,24,24,2,16*4,24*4),s.toDataURL("image/png")}async function Ba(r,s){let e=r.byteLength/16,t=8,i=0,n=document.createElement("canvas");n.width=128,n.height=128;let a=n.getContext("2d").createImageData(128,128),l=new Uint8ClampedArray(r);for(let c=0;c<e;++c){let d=c*16,f=c%16*8,u=Math.floor(c/16)*8;for(let h=0;h<t;++h){let p=l[d+h],m=l[d+h+8];for(let g=0;g<t;++g){let y=7-g,w=p>>y&1,b=(m>>y&1)<<1,x=(w|b)+i*4,E=Oa[s[x]],k=(f+g)*4+(u+h)*4*128;a.data[0+k]=E[0],a.data[1+k]=E[1],a.data[2+k]=E[2],a.data[3+k]=x==0?0:255}}}return a}var zs=class{constructor(s,e,t,i){this.name=s,this.converter=e,this.nssdata=t,this.description=i}static async init(s,e,t,i){let n=await t;return new zs(s,e,n,i)}static applyPatch(s,e,t){if(!zs.isCustom(s))return;let i=t?262144:0;for(let[n,o]of Pt.getChr(s.converter))for(let a of o)for(let l=0;l<16;++l)e[a+l+i]=s.nssdata.chrdata[n*16+l];for(let[n,o]of Pt.getPalette(s.converter))for(let a of o)switch(n){case"color0":e[a]=s.nssdata.palette[0];break;case"color1":e[a]=s.nssdata.palette[1];break;case"color2":e[a]=s.nssdata.palette[2];break;case"color3":e[a]=s.nssdata.palette[3];break;case"metasprite":e[a+i]=0;break}}},xt=zs;xt.isCustom=s=>s.name!="Simea";var Ds=class{constructor(){this.mapping=new Map;this.mapping.set("simea",new Map([["Simea",xt.init("Simea","simea",wn("Simea.nss"),"The original main character of Crystalis")],["Mesia",xt.init("Mesia","simea",wn("Mesia.nss"),"Secondary protagonist Mesia takes the spotlight! Artwork by jroweboy")]]))}static get(s){return this.instance||(this.instance=new Ds),this.instance.mapping.get(s)}};function C(r,s,e){return 262160+r*8192+s*4096+e*16}var Pt=class{constructor(){this.chrMapping=new Map;this.paletteMapping=new Map;this.simeaChrMapping=this.generateSimeaMapping(),this.simeaPaletteMapping=this.generateSimeaPalette(),this.chrMapping.set("simea",this.simeaChrMapping),this.paletteMapping.set("simea",this.simeaPaletteMapping)}static getChr(s){return this.instance||(this.instance=new Pt),this.instance.chrMapping.get(s)}static getPalette(s){return this.instance||(this.instance=new Pt),this.instance.paletteMapping.get(s)}generateSimeaPalette(){let s=new Map,e=27888+16;return s.set("color0",[e+0]),s.set("color1",[e+1]),s.set("color2",[e+2]),s.set("color3",[e+3]),s.set("metasprite",[245844+16]),s}generateSimeaMapping(){let t=new Map;t.set(0,[C(8,0,26)]),t.set(1,[C(8,0,27)]),t.set(16,[C(8,0,0)]),t.set(17,[C(8,0,1)]),t.set(32,[C(8,0,32)]),t.set(33,[C(8,0,33)]),t.set(2,[C(8,0,28)]),t.set(3,[C(8,0,29)]),t.set(18,[C(8,0,2)]),t.set(19,[C(8,0,3)]),t.set(20,[C(8,0,4)]),t.set(21,[C(8,0,5)]),t.set(34,[C(8,0,34)]),t.set(35,[C(8,0,35)]),t.set(36,[C(8,0,36)]),t.set(37,[C(8,0,37)]),t.set(6,[C(8,0,30)]),t.set(7,[C(8,0,31)]),t.set(22,[C(8,0,6)]),t.set(23,[C(8,0,7)]),t.set(38,[C(8,0,38)]),t.set(39,[C(8,0,39)]),t.set(64,[C(8,0,20)]),t.set(65,[C(8,0,21)]),t.set(80,[C(8,0,52)]),t.set(81,[C(8,0,53)]),t.set(50,[C(8,0,60)]),t.set(51,[C(8,0,61)]),t.set(66,[C(8,0,24)]),t.set(67,[C(8,0,25)]),t.set(82,[C(8,0,56)]),t.set(68,[C(8,0,22)]),t.set(69,[C(8,0,23)]),t.set(84,[C(8,0,54)]),t.set(112,[C(8,0,14)]),t.set(113,[C(8,0,15)]),t.set(128,[C(8,0,46)]),t.set(129,[C(8,0,47)]),t.set(114,[C(8,0,18)]),t.set(115,[C(8,0,19)]),t.set(130,[C(8,0,48)]),t.set(131,[C(8,0,51)]),t.set(116,[C(8,0,16)]),t.set(117,[C(8,0,17)]),t.set(133,[C(8,0,49)]),t.set(160,[C(8,0,8)]),t.set(161,[C(8,0,9)]),t.set(176,[C(8,0,40)]),t.set(146,[C(8,0,58)]),t.set(147,[C(8,0,59)]),t.set(162,[C(8,0,12)]),t.set(163,[C(8,0,13)]),t.set(178,[C(8,0,44)]),t.set(179,[C(8,0,45)]),t.set(164,[C(8,0,10)]),t.set(165,[C(8,0,11)]),t.set(181,[C(8,0,43)]);let i=new Map(t);for(let[o,a]of i){let l=o+8,c=a.map(d=>d+1024);t.set(l,c)}t.set(192,[C(11,1,0)]),t.set(193,[C(11,1,1)]),t.set(208,[C(11,1,2)]),t.set(209,[C(11,1,3)]),t.set(224,[C(11,1,4)]),t.set(225,[C(11,1,5)]),t.set(194,[C(11,1,36)]),t.set(195,[C(11,1,37)]),t.set(210,[C(11,1,6)]),t.set(211,[C(11,1,7)]),t.set(226,[C(11,1,38)]),t.set(227,[C(11,1,39)]),t.set(196,[C(11,1,32)]),t.set(197,[C(11,1,33)]),t.set(212,[C(11,1,34)]),t.set(213,[C(11,1,35)]),t.set(214,[C(11,1,20)]),t.set(215,[C(11,1,21)]),t.set(230,[C(11,1,22)]),t.set(231,[C(11,1,23)]),t.set(54,[C(11,1,12)]),t.set(55,[C(11,1,13)]),t.set(70,[C(11,1,50)]),t.set(71,[C(11,1,51)]),t.set(86,[C(11,1,46)]),t.set(87,[C(11,1,47)]),t.set(102,[C(11,1,18)]),t.set(103,[C(11,1,19)]),t.set(118,[C(11,1,8)]),t.set(119,[C(11,1,9)]),t.set(134,[C(11,1,40)]),t.set(135,[C(11,1,41)]),t.set(150,[C(11,1,44)]),t.set(151,[C(11,1,45)]),t.set(166,[C(11,1,10)]),t.set(167,[C(11,1,11)]),t.set(182,[C(11,1,42)]),t.set(183,[C(11,1,43)]);let n=o=>[C(8,0,o)+1024*2,C(8,0,o)+1024*3,C(8,1,o),C(8,1,o)+1024,C(8,1,o)+1024*2];return t.set(240,n(16)),t.set(241,n(17)),t.set(242,n(18)),t.set(243,n(19)),t.set(244,n(20)),t.set(245,n(21)),t.set(246,n(22)),t.set(247,n(23)),t.set(248,[C(8,1,237)]),t.set(249,n(25)),t.set(250,n(26)),t.set(252,n(48)),t.set(253,n(49)),t.set(254,n(50)),t.set(255,n(51)),t}};async function wn(r){let s=gn()[r],e=r.replace(/^.*[\\\/]/,"");return Pa(e,s)}function bn(r){let s="",e="",t=0;for(;t<r.length;)if(r[t]==="["){++t;let i=r.indexOf("]",t),n=parseInt(r.slice(t,i),16)-1;s+=e.repeat(n),t=i+1}else e=r.slice(t,t+2),s+=e,t+=2;return s}function yn(r,s){return r.match(new RegExp(".{1,"+s+"}","g"))||[]}function Aa(r){let s=yn(r,2).map(e=>parseInt(e,16));return new Uint8Array(s)}function La(r){return r.map(s=>parseInt(s,16))}async function Pa(r,s){let e=new Map(s.split(`
`).filter(a=>a.includes("=")).map(a=>a.split("=")).map(a=>[a[0],a[1]])),t=e.get("Palette")||"",i=La(yn(bn(t).slice(0,32),2)),n=Aa(bn(e.get("CHRMain")||"")),o=await Ba(new Uint8ClampedArray(n),i);return new Li(r,n,i,o)}var Oa=[[84,84,84],[0,30,116],[8,16,144],[48,0,136],[68,0,100],[92,0,48],[84,4,0],[60,24,0],[32,42,0],[8,58,0],[0,64,0],[0,60,0],[0,50,60],[0,0,0],[0,0,0],[0,0,0],[152,150,152],[8,76,196],[48,50,236],[92,30,228],[136,20,176],[160,20,100],[152,34,32],[120,60,0],[84,90,0],[40,114,0],[8,124,0],[0,118,40],[0,102,120],[0,0,0],[0,0,0],[0,0,0],[236,238,236],[76,154,236],[120,124,236],[176,98,236],[228,84,236],[236,88,180],[236,106,100],[212,136,32],[160,170,0],[116,196,0],[76,208,32],[56,204,108],[56,180,204],[60,60,60],[0,0,0],[0,0,0],[236,238,236],[168,204,236],[188,188,236],[212,178,236],[236,174,236],[236,174,212],[236,180,176],[228,196,144],[204,210,120],[180,222,120],[168,226,144],[152,226,180],[160,214,228],[160,162,160],[0,0,0],[0,0,0]];function vn(r,s,e){return new Pi(s,e).smudge(r)}function*Wa(r){let s=0;for(;s<r.length;){let e=r.indexOf(`
`,s)+1||r.length;yield r.substring(s,e),s=e}}var Pi=class{constructor(s,e){this.cpu=s;this.prg=e}smudge(s){let e="";for(let t of Wa(s))e+=this.smudgeLine(t);return e}smudgeLine(s){let e=/^([^;]*?)<@([0-9a-f]+)(?: (.*?))?@>(.*\n?)$/i.exec(s);if(e){let[,i,n,o,a]=e,l=parseInt(n,16),c=Na(this.cpu,this.prg,l,o);return i+c+a}let t="";for(;;){let i=/^([^;]*?)\[@([0-9a-f]+)(:[0-9]+|:[wdb])?@\](.*\n?)/i.exec(s);if(!i){t+=s;break}let[,n,o,a,l]=i;s=l,t+=n;let c=parseInt(o,16);t+=Da(this.prg,c,a)}return t}};function Na(r,s,e,t){let i=t,[n,o]=r.disasm(s[e])||["brk","imp"],a=r.argLen(o);return i||(a>0&&(i=s[e+1]),a>1&&(i=i|s[e+2]<<8)),n+(a?" "+r.format(o,i):"")}function Da(r,s,e){let t=r[s];if(e===":w")return t|=r[s+1]<<8,`($${Sn(t,4)})`;if(/:\d+/.test(e)){let i=parseInt(e.substring(1)),n='"';for(let o=0;o<i;o++){let a=String.fromCharCode(r[s+o]);'"\\'.includes(a)&&(a="\\"+a),n+=a}return n+='"',n}else return e===":d"?String(t):e===":b"?`%${t.toString(2).padStart(8,"0")}`:`$${Sn(t,2)}`}var Oi=class{constructor(s){this.plain=s}fix(s,e,t){}format(s,e){return this.plain}},Ot=class extends Oi{constructor(e){super("");this.fix=e}static set(e){return new Ot(t=>t.set(e))}},$t=Ot;$t.push=new Ot(e=>e.push()),$t.alt=new Ot(e=>e.alt()),$t.pop=new Ot(e=>e.pop()),$t.merge=new Ot(e=>e.merge());function Sn(r,s=2){return r.toString(16).padStart(s,"0")}var Le={of:(...r)=>{let s=0n;for(let e of r)s|=1n<<BigInt(e);return s},from:r=>{let s=0n;for(let e of r)s|=1n<<BigInt(e);return s},containsAll:(r,s)=>!(s&~r),with:(r,s)=>r|1n<<BigInt(s),without:(r,s)=>r&~(1n<<BigInt(s)),has:(r,s)=>!!(r&1n<<BigInt(s)),bits:r=>{let s=[],e=0;for(;r;){let t=Number(r&0xffffffffn),i=32;for(;t;){let n=Math.clz32(t)+1;i-=n,t<<=n,n===32&&(t=0),s.push(e|i)}r>>=32n,e+=32}return s},clone:r=>r,empty:r=>!r,difference:(r,s)=>r&~s};var Us=class{constructor(s){this.worlds=s;let e=new Set,t=new Set,i=new Map,n=new Map;for(let f=0;f<s.length;f++){let u=s[f],h=f<<24;for(let[p,m]of u.requirements){e.add(h|p);for(let g of m)for(let y of g)t.add(h|y)}for(let[p,m]of u.items)n.set(h|p,m);for(let[p,m]of u.slots)i.set(h|p,m)}this.itemInfos=new Map(n),this.slotInfos=new Map(i),this.progression=new Set(t);for(let f of n.keys())t.add(f);let o=new Set,a=new Set,l=new Set;for(let f of t)(e.has(f)?o:l).add(f);for(let f of e)t.has(f)||a.add(f);this.common=o.size,this.slots=new ni([...o,...a]),this.items=new ni([...o,...l]);let c=[],d=[];for(let f=0;f<s.length;f++){let u=f<<24;for(let[h,p]of s[f].requirements){let m=this.slots.index(u|h);if(m==null)throw new Error(`Provided a non-slot? ${ee(h)}`);for(let g of p){let y=[...g].map(w=>this.items.index(u|w)??Ye());(c[m]||(c[m]=[])).push(Le.from(y));for(let w of y)(d[w]||(d[w]=new Set)).add(m)}}}for(let f=0;f<this.slots.length;f++)if(!c[f]||!c[f].length){let u=this.slots.get(f)??NaN,h=this.checkName(u);console.error(`Nothing provided $${ee(u)}: ${h} (index ${f})`)}this.graph=new ri(c),this.unlocks=new ri(d.map(us))}async shuffle(s,e,t=200,i,n){i&&i.addTasks(Math.floor(t/10));for(let o=0;o<t;o++){i&&o%10===9&&(i.addCompleted(1),await new Promise(requestAnimationFrame));let a=new oi;this.prefill(a,e);let l=this.compressFill(a),c=this.itemPool(l.values(),e),d=Le.from(new Set(c)),f=Math.floor(o/5);if(!this.fillInternal(l,c,d,e,s,f))continue;let u=n?[]:void 0,h=this.traverse(m=>l.get(m),Le.of(),u);if(h.size!==this.slots.length){let m=b=>`${String(b).padStart(3)} ${this.slots.get(b).toString(16).padStart(3,"0")} ${this.checkName(this.slots.get(b))}`,g=b=>`${String(b).padStart(3)} ${this.items.get(b).toString(16).padStart(3,"0")} ${this.checkName(this.items.get(b))}`,y=new Set([...this.slots].map(b=>b[0]));for(let b of h)y.delete(b);let w=new Map;for(let b of y)w.set(m(b),this.graph.get(b).map(x=>`
    `+Le.bits(x).map(g).join(" & ")).join(""));console.error(`Initial fill never reached slots:
  ${[...w.keys()].sort().map(b=>b+w.get(b)).join(`
  `)}`);continue}this.expandFill(l,a);let p=this.fillNonProgression(a,s,e);if(p!=null){if(i&&i.addCompleted(Math.floor((t-o)/100)),n){for(let[m,g]of a){let y=this.checkName(m).replace(/^[0-9a-f]{3} /,"");n.addSlot(m,y,g)}if(u)for(let[m,...g]of u)(m<this.common||l.has(m))&&n.addCheck(this.slots.get(m),g.map(y=>this.items.get(y)))}return p}}return null}fillInternal(s,e,t,i,n,o){let a=new Set(s.keys());for(let l=e.pop();l!=null;l=e.pop()){if(!Le.has(t,l))continue;let c=this.itemInfoFromIndex(l);t=Le.without(t,l);let d=this.expandReachable(this.traverse(h=>s.get(h),t),n);i.shuffle(d);let f=!1,u=new Set(s.keys());for(let h of d){if(u.has(h))continue;u.add(h);let p=this.slotInfoFromIndex(h);if(!(!p||!this.fits(p,c,n))){s.set(h,l),f=!0;break}}if(!f){if(u.clear(),o-- >0){for(let h of d){if(u.has(h)||!s.has(h)||a.has(h))continue;u.add(h);let p=this.slotInfoFromIndex(h);if(!p||!this.fits(p,c,n))continue;let m=s.replace(h,l)??Ye();t=Le.with(t,m),e.push(m),i.shuffle(e),f=!0;break}if(f)continue}return!1}}return!0}expandReachable(s,e){let t=[];for(let i of s){let n=this.slotInfoFromIndex(i);!n||e.preserveUniqueChecks()&&!n.unique||Cn(t,i,n.weight||1)}return t}itemPool(s,e){let t=new Set(s),i=[];for(let[n,o]of this.itemInfos){let a=this.items.index(n);a!=null&&(!this.progression.has(n)||t.has(a)||Cn(i,a,o.weight||1))}return e.shuffle(i)}fits(s,e,t){if(t.preserveUniqueChecks()&&e.unique&&!s.unique)return!1;let i=e.preventLoss||s.preventLoss;return!(s.lossy&&e.losable&&i)}fillNonProgression(s,e,t){let i=[[],[],[]],n=[[],[]];for(let[c,d]of this.itemInfos){if(s.hasValue(c))continue;let f=2;d.losable&&d.preventLoss&&(f=1),e.preserveUniqueChecks()&&d.unique&&(f=0),i[f].push(c)}for(let[c,d]of this.slotInfos){if(s.has(c))continue;let f=d.lossy&&d.preventLoss?0:1;n[f].push(c)}for(let c of[...i,...n])t.shuffle(c);let o=c=>this.checkName(c),a=he.count(he.concat(...n)),l=he.count(he.concat(...i));if(l>a)throw console.log(`Slots ${a}:
  ${[...he.concat(...n)].map(o).join(`
  `)}`),console.log(`Items ${l}:
  ${[...he.concat(...i)].map(o).join(`
  `)}`),new Error("Too many items");for(let c of he.concat(...i)){let d=!1;for(let f of[...n]){if(d)break;for(let u=0;u<f.length;u++)if(this.fits(this.slotInfos.get(f[u]),this.itemInfos.get(c),e)){s.set(f[u],c),d=!0,f.splice(u,1);break}}if(!d)return console.log(`Slots:
  ${[...he.concat(...n)].map(o).join(`
  `)}`),console.error(`REROLL: Could not place item ${o(c)}`),null}return new Map(s)}traverse(s,e,t){e=Le.clone(e);let i=new Set,n=new Set;for(let o=0;o<this.slots.length;o++){if(this.graph.get(o)==null){console.dir(this);let a=this.slots.get(o);throw new Error(`Unreachable slot ${a?.toString(16)}`)}n.add(o)}for(let o of n){if(n.delete(o),i.has(o))continue;let a=this.graph.get(o);if(a==null)throw new Error(`Not in graph: ${o}`);for(let l=0,c=a.length;l<c;l++){if(!Le.containsAll(e,a[l]))continue;t&&t.push([o,...Le.bits(a[l])]),i.add(o);let d=[];o<this.common&&d.push(o);let f=s(o);f!=null&&d.push(f);for(let u of d){e=Le.with(e,u);for(let h of this.unlocks.get(u)||[]){if(this.graph.get(h)==null)throw console.dir(this),new Error(`Adding bad node ${h} from unlock ${u}`);n.add(h)}}break}}return i}expandFill(s,e){for(let[t,i]of s){let n=this.slots.get(t),o=this.items.get(i);if(n==null||o==null)throw new Error("missing");e.replace(n,o)}}compressFill(s){let e=new oi;for(let[t,i]of s){let n=this.slots.index(t),o=this.items.index(i);if(n==null||o==null)throw new Error(`Bad slot/item: ${t} ${n} ${i} ${o}`);e.set(n,o)}return e}checkName(s){return this.worlds[s>>>24].checkName(s&16777215)}prefill(s,e){for(let t=0;t<this.worlds.length;t++){let i=t<<24,n=this.worlds[t].prefill(e);for(let[o,a]of n)s.set(i|o,i|a)}}itemInfoFromIndex(s){let e=this.items.get(s);if(e==null)throw new Error(`Bad item: ${s}`);return this.itemInfoFromId(e)}itemInfoFromId(s){let e=this.itemInfos.get(s);if(e==null)throw new Error(`Missing info: ${ee(s)}`);return e}slotInfoFromIndex(s){let e=this.slots.get(s);if(e==null)throw new Error(`Bad slot: ${s}`);return this.slotInfoFromId(e)}slotInfoFromId(s){let e=this.slotInfos.get(s);if(e!=null)return e}};function Cn(r,s,e){for(let t=0;t<e;t++)r.push(s)}var Hs=class{constructor(s,e,t,i=1){this.rom=s;this._width=t,this._height=e,this.element=document.createElement("div"),this.canvas=document.createElement("canvas"),this.element.appendChild(this.canvas),this.canvas.width=t,this.canvas.height=e,this.ctx=this.canvas.getContext("2d")||Ye(),this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.palettes=new Uint32Array(1024),this.layers=le(i,()=>new Uint32Array(t*e)),this.data=this.layers[0];for(let n=0;n<256;n++)for(let o=0;o<4;o++){let a=za[s.palettes[n].color(o)];this.palettes[n<<2|o]=a|4278190080}}useLayer(s){this.data=this.layers[s]||Ye(`Bad layer: ${s}`)}resizeWidth(s,e){let t=new Uint32Array(e*this._height),i=Math.min(e,this._width);for(let n=0;n<this._height;n++)t.subarray(n*e,n+e+i).set(s.subarray(n*this._width,n*this._width+i));return t}resizeHeight(s,e){let t=new Uint32Array(this._width*e),i=this._width*Math.min(e,this._height);return t.subarray(0,i).set(s.subarray(0,i)),t}get width(){return this._width}set width(s){for(let e=0;e<this.layers.length;e++)this.layers[e]=this.resizeWidth(this.layers[e],s);this._width=s,this.canvas.width=s}get height(){return this._height}set height(s){for(let e=0;e<this.layers.length;e++)this.layers[e]=this.resizeHeight(this.layers[e],s);this._height=s,this.canvas.height=s}get minX(){return this._minX}get maxX(){return this._maxX}get minY(){return this._minY}get maxY(){return this._maxY}fill(s){this.data.fill(s)}clear(s){let e=s!=null?this.palettes[s<<2]:0;this._minX=this._minY=1/0,this._maxX=this._maxY=-1/0,this.layers[0].fill(e);for(let t=1;t<this.layers.length;t++)this.layers[t].fill(0)}toDataUrl(s=!1){return this.canvas.toDataURL("image/png")}render(){let s=this.canvas,e=this.ctx;for(let t=0;t<this.layers.length;t++){t&&(s=document.createElement("canvas"),s.width=this.canvas.width,s.height=this.canvas.height,e=s.getContext("2d")||Ye());let i=new Uint8Array(this.layers[t].buffer),n=e.getImageData(0,0,this._width,this._height);n.data.set(i),e.putImageData(n,0,0),t&&this.ctx.drawImage(s,0,0)}}rect(s,e,t,i,n){let o=Math.max(0,s),a=Math.max(0,e),l=Math.min(this._height,s+t),c=Math.min(this._width,e+i);for(s=o;s<l;s++)for(e=a;e<c;e++)this.data[s*this._width+e]=n}tile(s,e,t,i){if(e<0||s<0||e+8>=this._width||s+8>=this._height)return;let n=this.rom.patterns.get(t).flip(i<<6);for(let o=0;o<8;o++){let a=n.pixels[8|o]<<1,l=n.pixels[o];for(let c=7;c>=0;c--){let d=a&2|l&1;a>>>=1,l>>>=1,d&&(this.data[(s+o)*this._width+e+c]=this.palettes[i&1020|d])}}this._minX=Math.min(this._minX,e),this._maxX=Math.max(this._maxX,e+8),this._minY=Math.min(this._minY,s),this._maxY=Math.max(this._maxY,s+8)}metatile(s,e,t,i,n=0){let o=this.rom.locations[i],a=[...o.tilePatterns];o.animation&&(a[1]=this.rom.tileAnimations[o.animation].pages[n&7]);let l=[...o.tilePalettes,127],c=this.rom.tilesets[o.tileset],d=l[c.attrs[t]];for(let f=0;f<2;f++)for(let u=0;u<2;u++){let h=c.tiles[f<<1|u][t],p=a[h&128?1:0]<<6|h&127,m=e+(u<<3),g=s+(f<<3);this.tile(g,m,p,d<<2)}}metasprite(s,e,t,i,n=0,o=0){let a=this.rom.locations[i],l=this.rom.metasprites[t],c=[64,66,...a.spritePatterns],d=[0,1,...a.spritePalettes],f=!1;if(l.mirrored!=null&&(l=this.rom.metasprites[l.mirrored],f=!0),!l||!l.used)return;let u=o&l.frameMask;for(let[h,p,m,g]of l.sprites[u]){if(h==128)break;h=kn(h),p=kn(p),g=g+n&255;let y=c[g>>6],w=d[m&3]+176&255,b=y<<6|g&63;f&&(h=-8-h,m^=64),this.tile(s+p,e+h,b,w<<2|m>>6)}}text(s,e,t,i=18){for(let n=0;n<t.length;n++)this.tile(s,e+8*n,t.charCodeAt(n)|3840,i<<2)}},za=[5395026,11796480,10485760,11599933,7602281,91,95,6208,12048,543240,26368,1196544,7153664,0,0,0,12899815,16728064,14421538,16729963,14090399,6818519,6588,21681,27227,35843,43776,2918400,10777088,0,0,0,16316664,16755516,16742785,16735173,16730354,14633471,4681215,46327,57599,58229,259115,7911470,15065624,7895160,0,0,16777215,16773822,16300216,16300248,16758527,16761855,13095423,10148607,8973816,8650717,12122296,16119980,16777136,16308472,0,0];function kn(r){return r<128?r:r-256}function V(r){return r}(e=>{function r({id:t},{x:i,y:n}){let o=i>>>8,a=i>>>4&15,l=n>>>8,c=n>>>4&15;return t<<16|l<<12|o<<8|c<<4|a}e.from=r;function s(t,i,n){let o=t;if(i){let a=(o&240)+(i<<4);for(;a>=240;){if((o&61440)>=61440)return-1;a-=240,o+=4096}for(;a<0;){if(!(o&61440))return-1;a+=240,o-=4096}o=o&-241|a}if(n){let a=(o&15)+n;for(;a>=16;){if((o&3840)>=1792)return-1;a-=16,o+=256}for(;a<0;){if(!(o&3840))return-1;a+=16,o-=256}o=o&-16|a}return o}e.add=s})(V||(V={}));var En=Symbol("[LocationMap data]"),gt=class extends Hs{constructor(e,t=0){super(e,1,1,4);this.rom=e;this.flags=new Set;this._maxWidth=1/0;let i=e.locations[t];this.width=(i.used?i.width:1)*256,this.height=(i.used?i.height:1)*240,this.location=i;let n=o=>{let a=o.offsetX,l=o.offsetY,c=o.target;for(;c&&c!==this.element;)c=c.parentElement;if(!c)return;let d=a>>8,f=Math.floor(l/240),u=a-256*d>>4,h=l-240*f>>4,m=this.location.id<<16|f<<12|d<<8|h<<4|u;gt.setData(o,{tile:m,target:this})};this.element.addEventListener("mousemove",n),this.element.addEventListener("mousedown",n),this.element.addEventListener("mouseup",n),this.element.addEventListener("click",n),this.redraw()}static getData(e){return e[En]}static setData(e,t){e[En]=t}get id(){return this.location.id}set id(e){this.location=this.rom.locations[e],this.height=(this.location.used?this.location.height:1)*240,this.width=(this.location.used?this.location.width:1)*256,this.ensureWidth(),this.redraw()}get maxWidth(){return this._maxWidth}set maxWidth(e){this._maxWidth=e,this.ensureWidth()}ensureWidth(){if(this.width<=this._maxWidth){this.element.style.transform="",this.element.style.width="",this.element.style.height="";return}let e=this._maxWidth/this.width,t=(1-e)*50;this.element.style.transform=`translate(-${t}%,-${t}%) scale(${e})`,this.element.style.width=`${this.width*e}px`,this.element.style.height=`${this.height*e}px`}clearOverlay(){this.useLayer(1),this.fill(0),this.useLayer(3),this.fill(0),this.render()}overlayShade(e){this.useLayer(3),this.fill(e)}overlayArea(e,t,i){for(let n of e){if(n>>>16!==this.location.id)continue;let o=n>>>12&15,a=n>>>8&15,l=n>>>4&15,c=n&15,d=240*o+16*l,f=256*a+16*c;i!=null&&(this.useLayer(3),this.rect(d-1,f-1,18,18,0)),this.useLayer(1),e.has(V.add(n,-1,0))||this.rect(d-1,f-1,2,18,t),e.has(V.add(n,0,-1))||this.rect(d-1,f-1,18,2,t),e.has(V.add(n,1,0))||this.rect(d+15,f-1,2,18,t),e.has(V.add(n,0,1))||this.rect(d-1,f+15,18,2,t)}}redraw(){this.useLayer(0),this.clear(this.location.tilePalettes[0]);for(let e=0;e<this.location.height;e++)for(let t=0;t<this.location.width;t++){let i=this.location.screens[e][t];this.drawScreen(this.rom.screens[i],e,t)}this.useLayer(2);for(let e of this.location.spawns){let t=0,{x:i,y:n}=e;n-=e.yt&240;let o,a=0;if(e.isNpc()){let l=this.rom.npcs[e.id];if(!l||!l.data)continue;i+=8,n+=12,o=(a>>5)+2&3|l.data[3]}else if(e.isChest())o=170;else if(e.isMonster()){let l=this.rom.objects[e.monsterId];if(!l)continue;o=l.metasprite,l.action==41?o=a&32?107:104:[42,94].includes(l.action)&&(o=(a>>5)+2&3|l.data[31])}e.patternBank&&(t+=64),o!=null&&this.metasprite(n,i,o,this.location.id,t)}this.render()}drawScreen(e,t,i){let n=t*240,o=i*256,a=this.rom.tilesets[this.location.tileset],l,c=!1;for(let d of this.location.flags)if(d.xs===i&&d.ys===t){l=d.flag,this.rom.flags[l]?.logic.assumeTrue&&(c=!0);break}for(let d=0;d<240;d+=16)for(let f=0;f<16;f++){let u=e.tiles[d|f];u<32&&(this.flags.has(l)||c)&&(u=a.alternates[u]),this.metatile(n+d,o+f*16,u,this.location.id,0)}}};var P;(d=>{function r(...f){return[[].concat(...f.map(([u])=>u))]}d.and=r;function s(...f){let u=[];for(let h of f){if(h===d.OPEN)return d.OPEN;h!==d.CLOSED&&u.push(...t(h))}return u.length?u:d.CLOSED}d.or=s;function e(f,u){if(f===d.OPEN)return t(u);if(u===d.OPEN)return t(f);if(f===d.CLOSED||u===d.CLOSED)return d.CLOSED;let h=new c;for(let p of f)for(let m of u)h.addList([...p,...m]);return t(h)}d.meet=e;function t(f){return f instanceof c?[...he.map(f,u=>[...u])]:f}d.freeze=t;function i(f){return f instanceof c?f.label():f.map(u=>u.join("&")).join("|")}d.label=i;function n(f){let u=f[Symbol.iterator](),{value:h,done:p}=u.next();if(p||!u.next().done)return!1;let m=h[Symbol.iterator]();return Boolean(m.next().done)}d.isOpen=n;function o(f){let u=f[Symbol.iterator]();return Boolean(u.next().done)}d.isClosed=o,d.OPEN=[[]],d.CLOSED=[];class c{constructor(u){this.self=u;this.map=new Map}[Symbol.iterator](){return this.map.values()}addInternal(u,h){for(let p of h)if(Array.isArray(p))throw new Error;if(h.has(this.self)||this.map.has(u))return!1;for(let[p,m]of this.map){if(Rn(h,m))return!1;Rn(m,h)&&this.map.delete(p)}return this.map.set(u,h),!0}addRoute(u){return this.addInternal(u[qs],u.deps)}addAll(u){for(let h of u)this.addList(h)}addList(u){let h=[...new Set(u)].sort(),p=new Set(h);this.addInternal(h.join("&"),p)}restrict(u){let h=[...this.map.values()];this.map.clear();for(let p of h)for(let m of u)this.addList([...p,...m])}label(){return[this.map.keys()].join("|")}}d.Builder=c})(P||(P={}));function Rn(r,s){if(r.size<s.size)return!1;for(let e of s)if(!r.has(e))return!1;return!0}var qs=Symbol("depsLabel"),Xe=class{constructor(s,e){this.target=s;let t=[...new Set(e)].sort();this.deps=new Set(t),this[qs]=t.join("&"),this.label=`${this.target}:${this[qs]}`}};qs;var Ks=class{constructor(s){this.rom=s;this.tiles=new U(s=>Ua(this.rom,s));this.bosses=new U(s=>new Ni(s));this.statues=new Map;this.flags=new U(s=>new U(e=>new U(t=>new Ui(s,e,t))));this.meets=new U(s=>new U(e=>new Hi(s,e)));this._seamless=new U(s=>new Wi(s))}tile(s){return s&4?void 0:this.tiles.get(s)}boss(s,e){return e?this.rage||(this.rage=new zi(s,this.rom.flags.RageSkip.id)):this.bosses.get(s)}statue(s){let e=P.label(s),t=this.statues.get(e);return t||this.statues.set(e,t=new Di(s)),t}flag(s,e,t){return s||(s=Ha),this.flags.get(s).get(e).get(t)}meet(s,e){return this.meets.get(s).get(e)}seamless(s){return this._seamless.get(s)}label(s,e){return s.label?s.label(e):"Terrain"}},j;(f=>{f.FLY=2,f.BLOCKED=4,f.SLOPE=32,f.PAIN=128,f.BITS=166,f.SWAMP=256,f.BARRIER=512,f.SLOPE8=1024,f.SLOPE9=2048,f.DOLPHIN=4096;function d(u,h){return u.label?.(h)??"Terrain"}f.label=d})(j||(j={}));var Wi=class{constructor(s){this._delegate=s;this.enter=s.enter,this.exit=s.exit}label(s){return`Seamless(${j.label(this._delegate,s)})`}},Wt=class{constructor(s,e=P.OPEN){this.enter=s;this.exit=[[15,e]]}get kind(){return"Simple"}label(s){let e=[];return P.isOpen(this.enter)||e.push(`enter = ${Pe(this.enter,s)}`),P.isOpen(this.exit[0][1])||e.push(`exit = ${Pe(this.exit[0][1],s)}`),`${this.kind}(${e.join(", ")})`}},Vs=class{constructor(s,e,t=4){this.enter=s;this.exit=e?[[15&~t,e],[t,P.OPEN]]:[[15,P.OPEN]]}get kind(){return"South"}label(s){if(this.exit.length===1)return Wt.prototype.label.call(this,s);let e=[];return P.isOpen(this.enter)||e.push(`enter = ${Pe(this.enter,s)}`),P.isOpen(this.exit[0][1])||e.push(`other = ${Pe(this.exit[0][1],s)}`),P.isOpen(this.exit[1][1])||e.push(`south = ${Pe(this.exit[1][1],s)}`),`${this.kind}(${e.join(", ")})`}};function Ua(r,s){let e=P.OPEN,t,i=4;return s&j.DOLPHIN&&s&j.FLY?(s&j.SLOPE&&(t=r.flags.ClimbWaterfall.r),e=[[r.flags.CurrentlyRidingDolphin.c],[r.flags.Flight.c]]):(s&j.SLOPE9?t=r.flags.ClimbSlope9.r:s&j.SLOPE8?t=r.flags.ClimbSlope8.r:s&j.SLOPE&&(t=r.flags.ClimbSlope10.r),s&j.FLY&&(e=r.flags.Flight.r)),s&j.SWAMP&&(e=e.map(n=>[r.flags.TravelSwamp.c,...n])),s&j.PAIN&&(e=e.map(n=>[r.flags.CrossPain.c,...n])),s&j.BARRIER&&(e=e.map(n=>[r.flags.ShootingStatue.c,...n]),t=r.flags.ShootingStatueSouth.r,i=1),new Vs(e,t,i)}var Ni=class extends Wt{constructor(e){super(P.OPEN,[[e]]);this._flag=e}get kind(){return"Boss"}},Di=class extends Vs{constructor(e){super(P.OPEN,e);this._req=e}get kind(){return"Statue"}},zi=class{constructor(s,e){this._rageFlag=s;this._rageSkipFlag=e;this.enter=P.OPEN;this.exit=[[11,[[s],[e]]],[4,P.OPEN]]}label(){return"Rage"}},Ui=class extends Wt{constructor(s,e,t){if(s.exit.length!==1||t.exit.length!==1)throw console.error(s,t),new Error("bad flag");let i=[[e]],n=e>=0?P.meet(t.enter,i):t.enter,o=e>=0?P.meet(t.exit[0][1],i):t.exit[0][1];super(P.or(s.enter,n),P.or(s.exit[0][1],o))}get kind(){return"Flag"}},Ha=new Wt(P.CLOSED,P.CLOSED);function Tn(r){let s=[];for(let e=0;e<r.exit.length;e++)for(let t=0;t<4;t++)r.exit[e][0]&1<<t&&(s[t]=e);for(let e=0;e<4;e++)if(s[e]==null)throw new Error(`Bad terrain: ${r.exit.map(t=>t[0]).join(",")}`);return s}var Hi=class{constructor(s,e){this.left=s;this.right=e;let t=Tn(s),i=Tn(e),n=new Set,o=[];for(let a=0;a<4;a++)n.add(t[a]<<2|i[a]);for(let a of n){let[l,c]=s.exit[a>>2],[d,f]=e.exit[a&3];o.push([l&d,P.meet(c,f)])}this.enter=P.meet(s.enter,e.enter),this.exit=o}get kind(){return"Terrain"}label(s){if(this.exit.length===1)return Wt.prototype.label.call(this,s);let e=[];P.isOpen(this.enter)||e.push(`enter = ${Pe(this.enter,s)}`);for(let[t,i]of this.exit){let n=[t&1?"N":"",t&2?"W":"",t&4?"S":"",t&8?"E":""].join("");e.push(`exit${n} = ${Pe(i,s)}`)}return`${this.kind}(${e.join(", ")})`}};function Pe(r,s){let e=[...r],t=e.map(i=>he.isEmpty(i)?"open":[...i].map(n=>s.flags[n]?.debug).join(" & ")).join(") | (");return e.length>1?`(${t})`:e.length?t:"never"}j.debugLabel=Pe;typeof window=="object"&&(window.debugLabel=Pe);var js=class{constructor(s,e){this.rom=s;this.world=e;this.element=document.createElement("div"),this.element.addEventListener("click",t=>this.click(t)),this.element.addEventListener("mousemove",t=>this.move(t)),this.renderArea(0)}click(s){let e=gt.getData(s);if(!e)return;let t=this.world.tiles.get(e.tile);if(t!=null){if(t.area===this.area){let i=t.exit!=null?this.world.tiles.get(t.exit):null;i&&i.area!==this.area&&(t=i)}t.area&&t.area!==this.area&&this.renderArea(t.area.id)}}move(s){let e=gt.getData(s);if(!e)return;let t=this.world.tiles.get(e.tile);if(t==null)return;let i=t.exit!=null&&!this.area.tiles.has(t.exit);e.target.element.style.cursor=i?"pointer":"default"}clear(){for(;this.element.childNodes.length;)this.element.childNodes[0].remove()}renderArea(s){this.clear();let e=document.createElement("select");e.appendChild(document.createElement("option")),e.children[0].textContent="Select location";for(let i of this.rom.locations){if(!i.used)continue;let n=this.world.locations[i.id]?.areas[Symbol.iterator]().next().value;if(n==null)continue;let o=document.createElement("option");o.textContent=`${ee(i.id)} ${i.name}`,o.value=String(n.id),e.appendChild(o)}e.addEventListener("change",()=>{this.renderArea(Number(e.value))}),this.element.appendChild(e),this.area=this.world.areas[s];let t=document.createElement("pre");t.textContent=`Area ${s}
Locations: ${this.area.locations.size}
Tiles: ${this.area.tiles.size}
Terrain: ${j.label(this.area.terrain,this.rom)}
Checks:
  ${[...new Set(this.area.checks.map(([i,n])=>`${i.debug}: ${Pe(n,this.rom)}`))].join(`
  `)}
Routes:
  ${Pe(this.area.routes,this.rom).split(" | ").join(`
  `).replace(/[()]/g,"")}`,this.element.appendChild(t);for(let i of this.area.locations){let n=this.rom.locations[i],o=document.createElement("h2");o.textContent=n.name,this.element.appendChild(o),this.element.appendChild(this.makeLocation(this.area,n))}}makeLocation(s,e){let t=new gt(this.rom,e.id);t.maxWidth=574,t.overlayShade(1426063360);for(let i of this.world.locations[e.id].areas)i!==s&&t.overlayArea(i.tiles,4294901760);return t.overlayArea(s.tiles,4278255615,0),t.render(),t.element}};var ds;(o=>{function r(a){switch(a){case 0:return"N";case 1:return"W";case 2:return"S";case 3:return"E"}throw new Error(`Bad direction: ${a}`)}o.name=r;function s(){return[0,1,2,3]}o.all=s,o.North=0,o.West=1,o.South=2,o.East=3})(ds||(ds={}));var qe;(i=>{function r(n,o){return{*[Symbol.iterator](){let{x:a,y:l}=o;a+=8;for(let c of[-16,0]){let d=a+c;for(let f of[-16,0]){let u=l+f;yield V.from(n,{x:d,y:u})}}}}}i.trigger=r;function s(n,...o){let a=new Set,l=[...n];for(let[c,d]of o)for(let f of l)a.add(V.add(f,c,d));return a}i.adjust=s;function e(n){let o=[];for(let a=0;a<240;a++)o.push(n&-256|a);return o}i.screen=e;function t(n,...o){let a=new Set,l=[...n];for(let c of o)for(let d of l)a.add(d&65535|c.id<<16);return a}i.atLocation=t})(qe||(qe={}));function Nt(r){return r}(e=>{e.from=(t,i)=>typeof t=="number"||!i?Number(t)>>>8:t.id<<8|i.y>>>8<<4|i.x>>>8;function s(t){return t>>>8}e.fromTile=s})(Nt||(Nt={}));function Se(r){return r}(e=>{function r(t,i){return t*(1<<24)+i}e.of=r;function s(t){return[Math.floor(t/(1<<24)),t%(1<<24)]}e.split=s})(Se||(Se={}));var[]=[ee],Ys=class{constructor(s,e,t=!1){this.rom=s;this.flagset=e;this.tracker=t;this.terrainFactory=new Ks(this.rom);this.terrains=new Map;this.checks=new U(()=>new Set);this.slots=new Map;this.items=new Map;this.itemUses=new U(()=>[]);this.exits=new Map;this.exitSet=new Set;this.seamlessExits=new Set;this.tiles=new Ge;this.neighbors=new U(()=>0);this.routes=new U(()=>new P.Builder);this.routeEdges=new U(()=>new rs);this.requirementMap=new U(s=>new P.Builder(s));this.limeTreeEntranceLocation=-1;for(let i of s.items)for(let n of i.itemUseData)n.kind==="expect"?this.itemUses.get(n.want).push([i,n]):n.kind==="location"&&this.itemUses.get(~n.want).push([i,n]);this.aliases=new Map([[s.flags.ChangeAkahana,s.flags.Change],[s.flags.ChangeSoldier,s.flags.Change],[s.flags.ChangeStom,s.flags.Change],[s.flags.ChangeWoman,s.flags.Change],[s.flags.ParalyzedKensuInDanceHall,s.flags.Paralysis],[s.flags.ParalyzedKensuInTavern,s.flags.Paralysis]]),e.assumeTriggerGlitch()&&(this.seamlessExits.add=()=>this.seamlessExits);for(let i of s.locations)this.processLocation(i);this.addExtraChecks(),this.unionNeighbors(),this.recordExits(),this.buildNeighbors(),this.addAllRoutes(),this.consolidateChecks(),this.buildRequirementMap()}addExtraChecks(){let{locations:{Leaf_ToolShop:s,MezameShrine:e,Oak:t,Shyron_ToolShop:i},flags:{AbleToRideDolphin:n,BallOfFire:o,BallOfThunder:a,BallOfWater:l,BallOfWind:c,Barrier:d,BlizzardBracelet:f,BowOfMoon:u,BowOfSun:h,BreakStone:p,BreakIce:m,BreakIron:g,BrokenStatue:y,BuyHealing:w,BuyWarp:b,ClimbWaterfall:x,ClimbSlope8:E,ClimbSlope9:k,ClimbSlope10:A,CrossPain:S,CurrentlyRidingDolphin:M,Flight:G,FlameBracelet:Z,FormBridge:Q,GasMask:_,GlowingLamp:ie,InjuredDolphin:K,LeadingChild:ue,LeatherBoots:N,Money:L,OpenedCrypt:ke,RabbitBoots:Ee,Refresh:q,RepairedStatue:pe,RescuedChild:fe,ShellFlute:We,ShieldRing:_e,ShootingStatue:we,ShootingStatueSouth:Re,StormBracelet:oe,Sword:vt,SwordOfFire:Te,SwordOfThunder:$e,SwordOfWater:Ne,SwordOfWind:ct,TornadoBracelet:Ut,TravelSwamp:je,TriggerSkip:O,UsedBowOfMoon:et,UsedBowOfSun:Me,WildWarp:tt},items:{MedicalHerb:H,WarpBoots:Y}}=this.rom,W=this.entrance(e),ye=this.entrance(t);this.addCheck([W],wt(u,h),[ke.id]),this.addCheck([W],u.r,[et.id]),this.addCheck([W],h.r,[Me.id]),this.addCheck([W],wt(n,We),[M.id]),this.addCheck([ye],wt(ue),[fe.id]),this.addItemCheck([W],wt(ie,y),pe.id,{lossy:!0,unique:!0});for(let xe of this.rom.shops){if(xe.location===s.id||xe.location===i.id||!xe.used||xe.type!==1)continue;let Ct=[xe.location<<16|136];for(let kt of xe.contents)kt===H.id?this.addCheck(Ct,L.r,[w.id]):kt===Y.id&&this.addCheck(Ct,L.r,[b.id])}let De=ct.r,Ie=Te.r,ze=Ne.r,st=$e.r;if(!this.flagset.orbsOptional()){let xe=ot(c,Ut),Ct=ot(o,Z),kt=ot(l,f),ei=ot(a,oe);if(De=P.meet(De,xe),Ie=P.meet(Ie,Ct),ze=P.meet(ze,kt),st=P.meet(st,ei),this.flagset.assumeSwordChargeGlitch()){let Et=function(Ht){return ti.map(ft=>ft[0]===Ht.c?ft:[Ht.c,...ft])},ti=P.or(De,Ie,ze,st);De=Et(ct),Ie=Et(Te),ze=Et(Ne),st=Et($e)}}this.addCheck([W],De,[p.id]),this.addCheck([W],Ie,[m.id]),this.addCheck([W],ze,[Q.id]),this.addCheck([W],st,[g.id]),this.addCheck([W],ot(ct,Te,Ne,$e),[vt.id]),this.addCheck([W],G.r,[x.id,A.id]),this.addCheck([W],ot(G,Ee),[E.id]),this.addCheck([W],ot(G,Ee),[k.id]),this.addCheck([W],d.r,[we.id,Re.id]),this.addCheck([W],_.r,[je.id]);let hs=this.flagset.changeGasMaskToHazmatSuit()?_:N;if(this.addCheck([W],ot(G,Ee,hs),[S.id]),this.flagset.leatherBootsGiveSpeed()&&this.addCheck([W],N.r,[E.id]),this.flagset.assumeGhettoFlight()&&this.addCheck([W],wt(M,Ee),[x.id]),this.flagset.fogLampNotRequired()){let xe=this.flagset.requireHealedDolphinToRide();this.addCheck([W],xe?K.r:[[]],[n.id])}this.flagset.guaranteeBarrier()||this.addCheck([W],[[L.c,w.c],[L.c,_e.c],[L.c,q.c]],[we.id,Re.id]),this.flagset.assumeFlightStatueSkip()&&this.addCheck([W],[[L.c,G.c]],[we.id]),this.flagset.guaranteeGasMask()||this.addCheck([W],[[L.c,w.c],[L.c,q.c]],[je.id,S.id]),this.flagset.assumeWildWarp()&&this.addCheck([W],P.OPEN,[tt.id]),this.flagset.assumeTriggerGlitch()&&(this.addCheck([W],P.OPEN,[O.id]),this.addCheck([W],O.r,[S.id,E.id,k.id]))}addExtraRoutes(){let{flags:{BuyWarp:s,SwordOfThunder:e,Teleport:t,WildWarp:i},locations:{MezameShrine:n}}=this.rom;if(this.addRoute(new Xe(this.entrance(n),[])),this.flagset.teleportOnThunderSword()){let o=this.rom.townWarp.thunderSwordWarp;this.addRoute(new Xe(this.entrance(o[0],o[1]&31),[e.c,s.c])),this.addRoute(new Xe(this.entrance(o[0],o[1]&31),[e.c,t.c]))}if(this.flagset.assumeWildWarp())for(let o of this.rom.wildWarp.locations){if(o===this.rom.locations.UndergroundChannel.id)continue;let a=this.entrance(o),l=this.terrains.get(a)??Ye("bad entrance");for(let c of l.enter)this.addRoute(new Xe(a,[i.c,...c]))}}consolidateChecks(){for(let[s,e]of this.checks){let t=this.tiles.find(s);if(s!==t){for(let i of e)this.checks.get(t).add(i);this.checks.delete(s)}}}buildRequirementMap(){for(let[e,t]of this.checks)for(let{checks:i,requirement:n}of t)for(let o of i){let a=this.requirementMap.get(o);for(let l of n)for(let c of this.routes.get(e)||[])a.addList([...l,...c])}if(!Mn)return;let s=[];for(let[e,t]of this.requirementMap){let i=n=>this.rom.flags[n].name;for(let n of t)s.push(`${i(e)}: ${[...n].map(i).join(" & ")}
`)}s.sort((e,t)=>e<t?-1:e>t?1:0),console.log(s.join(""))}getLocationList(s="Crystalis"){let e=Mn?t=>t.debug:t=>t.name;return{worldName:s,requirements:this.requirementMap,items:this.items,slots:this.slots,checkName:t=>e(this.rom.flags[t]),prefill:t=>{let{Crystalis:i,MesiaInTower:n,LeafElder:o}=this.rom.flags,a=new Map([[n.id,i.id]]);return this.flagset.guaranteeSword()&&a.set(o.id,512|t.nextInt(4)),a}}}processLocation(s){!s.used||(this.processLocationTiles(s),this.processLocationSpawns(s),this.processLocationItemUses(s))}unionNeighbors(){for(let[s,e]of this.terrains){let t=V.add(s,0,1);this.terrains.get(t)===e&&this.tiles.union([s,t]);let i=V.add(s,1,0);this.terrains.get(i)===e&&this.tiles.union([s,i])}}addAllRoutes(){this.addExtraRoutes();for(let[s,e]of this.neighbors){let[t,i]=Se.split(s),n=this.terrains.get(t),o=this.terrains.get(i);if(!n||!o)throw new Error(`missing terrain ${ee(n?t:i)}`);for(let[a,l]of n.exit)if(!!(a&e))for(let c of l)for(let d of o.enter)this.addRoute(new Xe(i,[...c,...d]),t)}if(typeof document=="object"){let s=document.getElementById("debug");s&&s.appendChild(new js(this.rom,this.getWorldData()).element)}}getWorldData(){let s=0,e=new U(()=>({})),t=le(256,()=>({areas:new Set,tiles:new Set})),i=[];for(let n of this.tiles.sets()){let o=this.tiles.find(he.first(n)),a=this.terrains.get(o);if(!a)continue;let l=this.routes.has(o)?P.freeze(this.routes.get(o)):[];if(!l.length)continue;let c={checks:[],id:s++,locations:new Set,routes:l,terrain:a,tiles:new Set};i.push(c);for(let d of n){let f=d>>>16;c.locations.add(f),c.tiles.add(d),t[f].areas.add(c),t[f].tiles.add(d),e.get(d).area=c}}for(let[n,o]of this.exits)e.has(n)&&(e.get(n).exit=o);for(let[n,o]of this.checks){let a=e.get(n).area;if(!!a)for(let{checks:l,requirement:c}of o)for(let d of l){let f=this.rom.flags[d]||Ye();a.checks.push([f,c])}}return{tiles:e,areas:i,locations:t}}addRoute(s,e){if(e!=null){this.routeEdges.get(e).add(s);for(let a of this.routes.get(e))this.addRoute(new Xe(s.target,[...a,...s.deps]));return}let t=new rs,i=new rs,n=s;t.add(n);let o=t[Symbol.iterator]();for(;;){let{value:a,done:l}=o.next();if(l)return;i.add(a),t.delete(a);let c=new rs,d=a.target;if(this.routes.get(d).addRoute(a))for(let u of this.routeEdges.get(d))c.add(new Xe(u.target,[...a.deps,...u.deps]));for(let u of c)i.has(u)||(t.delete(u),t.add(u))}}recordExits(){for(let[s,e]of this.exits)this.exitSet.add(Se.of(this.tiles.find(s),this.tiles.find(e)));for(let s of this.exitSet){let[e,t]=Se.split(s);if(this.terrains.get(e)!==this.terrains.get(t))continue;let i=Se.of(t,e);this.exitSet.has(i)&&(this.tiles.union([e,t]),this.exitSet.delete(s),this.exitSet.delete(i))}}buildNeighbors(){for(let[s,e]of this.terrains){if(!e)continue;let t=V.add(s,1,0),i=this.terrains.get(t);i&&i!==e&&this.handleAdjacentNeighbors(s,t,ds.North);let n=V.add(s,0,1),o=this.terrains.get(n);o&&o!==e&&this.handleAdjacentNeighbors(s,n,ds.West)}for(let s of this.exitSet){let[e,t]=Se.split(s);if(!this.terrains.has(e)||!this.terrains.has(t))continue;let i=Se.of(this.tiles.find(e),this.tiles.find(t));this.neighbors.set(i,this.neighbors.get(i)|1)}}handleAdjacentNeighbors(s,e,t){let i=this.tiles.find(s),n=this.tiles.find(e);if(!this.seamlessExits.has(e)){let o=Se.of(n,i);this.neighbors.set(o,this.neighbors.get(o)|1<<t)}if(!this.seamlessExits.has(s)){let o=t^2,a=Se.of(i,n);this.neighbors.set(a,this.neighbors.get(a)|1<<o)}}processLocationTiles(s){let e=new Map,t=new Set,i=(s.id&248)===88;for(let c of s.spawns)if(c.isWall())e.set(Nt.from(s,c),c.id&3);else if(c.isMonster()&&c.id===63){let d=Nt.from(s,c)<<8|c.yt<<4;for(let f=4;f<=11;f++)for(let u=-3;u<=3;u++)t.add(V.add(d,u,f))}let n=this.rom.tilesets[s.tileset],o=this.rom.tileEffects[s.tileEffects-179],a=c=>{let d=s.screens[(c&61440)>>>12][(c&3840)>>>8];return o.effects[this.rom.screens[d].tiles[c&255]]},l=(c,d,f)=>{if(c&=j.BITS,s.id===26&&(c|=j.SWAMP),(s.id===96||s.id===104)&&(c|=j.DOLPHIN),s.id===100&&(d&61680)<4144&&(c|=j.DOLPHIN),f&&(c|=j.BARRIER),!(c&j.DOLPHIN)&&c&j.SLOPE){let u=d,h=0;for(;a(u)&j.SLOPE;)u=V.add(u,1,0),h++;h<6?c&=~j.SLOPE:h<9?c|=j.SLOPE8:h<10&&(c|=j.SLOPE9)}if(c&j.PAIN){for(let u of[[0,1],[1,0],[0,-1],[-1,0]])if(!(a(V.add(d,...u))&(j.PAIN|j.FLY))){c&=~j.PAIN;break}}return this.terrainFactory.tile(c)};for(let c=0,d=s.height;c<d;c++){let f=s.screens[c],u=s.id<<8|c<<4;for(let h=0,p=s.width;h<p;h++){let m=this.rom.screens[f[h]],g=u|h,y=g&255,w=e.get(g),b=i?this.rom.flags.AlwaysTrue.id:w!=null?this.wallCapability(w):s.flags.find(k=>k.screen===y)?.flag,x=s.pits.find(k=>k.fromScreen===g);x&&this.exits.set(g<<8|136,x.toScreen<<8|136);let E=this.rom.flags[b]?.logic??{};for(let k=0;k<240;k++){let A=g<<8|k,S=m.tiles[k];E.assumeTrue&&S<32&&(S=n.alternates[S]);let M=s.isShop()?0:o.effects[S],G=t.has(A),Z=l(M,A,G);if(S<32&&n.alternates[S]!==S&&b!=null&&!E.assumeTrue&&!E.assumeFalse){let Q=l(o.effects[n.alternates[S]],A,G);Q&&(Z=this.terrainFactory.flag(Z,E.track?b:-1,Q))}Z&&this.terrains.set(A,Z)}}}for(let c of s.exits){let{dest:d,entrance:f}=c,u=V.from(s,c),h;if(c.isSeamless()){h=u&65535|d<<16;let p=V.from(s,c);this.seamlessExits.add(p);let m=this.terrains.get(p);m&&this.terrains.set(p,this.terrainFactory.seamless(m))}else h=this.entrance(this.rom.locations[d],f&31);this.exits.set(u,h),d===this.rom.locations.LimeTreeLake.id&&this.rom.locations.LimeTreeLake.entrances[f].y>160&&(this.limeTreeEntranceLocation=s.id)}}processLocationSpawns(s){for(let e of s.spawns)e.isTrigger()?this.processTrigger(s,e):e.isNpc()?this.processNpc(s,e):e.isBoss()?this.processBoss(s,e):e.isChest()?this.processChest(s,e):e.isMonster()?this.processMonster(s,e):e.type===3&&e.id===224&&this.processKeyUse(qe.screen(V.from(s,e)),this.rom.flags.UsedWindmillKey.r)}processTrigger(s,e){let t=this.rom.trigger(e.id);if(!t)throw new Error(`Missing trigger ${e.id.toString(16)}`);let i=this.filterRequirements(t.conditions),n=this.filterAntiRequirements(t.conditions),o=V.from(s,e),a=qe.trigger(s,e),l=[];for(let c of t.flags){let d=this.flag(c);d?.logic.track&&l.push(d.id)}switch(l.length&&this.addCheck(a,i,l),t.message.action){case 25:t.id===134&&!this.flagset.assumeRabbitSkip()?a=qe.adjust(a,[0,-1],[0,1]):t.id===186&&!this.flagset.assumeTeleportSkip()&&!this.flagset.disableTeleportSkip()&&(a=qe.atLocation(a,this.rom.locations.CordelPlainEast,this.rom.locations.CordelPlainWest)),this.flagset.assumeTriggerGlitch()&&(n=P.or(n,this.rom.flags.TriggerSkip.r)),this.addTerrain(a,this.terrainFactory.statue(n));break;case 29:this.addBossCheck(a,this.rom.bosses.Mado1,i);break;case 8:case 11:case 12:case 13:case 15:this.addItemGrantChecks(a,i,t.id);break;case 24:{let c=this.flagset.chargeShotsOnly()?P.meet(i,wt(this.rom.flags.WarpBoots)):i;this.addItemCheck(a,c,this.rom.flags.StomFightReward.id,{lossy:!0,unique:!0});break}case 30:this.addItemCheck(a,i,this.rom.flags.MesiaInTower.id,{lossy:!0,unique:!0});break;case 31:this.handleBoat(o,s,i);break;case 27:s===this.rom.locations.Portoa_PalaceEntrance&&(a=qe.adjust(a,[-2,0]),n=this.rom.flags.TalkedToFortuneTeller.r),this.handleMovingGuard(a,s,n);break}for(let[c,d]of this.itemUses.get(e.type<<8|e.id))this.processItemUse([V.from(s,e)],P.OPEN,c,d)}processNpc(s,e){let t=this.rom.npcs[e.id];if(!t||!t.used)throw new Error(`Unknown npc: ${ee(e.id)}`);let i=t.spawnConditions.get(s.id)||[],n=this.filterRequirements(i),o=V.from(s,e),a=[this.terrains.has(o)?o:this.walkableNeighbor(o)??o];for(let[d,f]of this.itemUses.get(e.type<<8|e.id))this.processItemUse(a,n,d,f);if(t===this.rom.npcs.SaberaDisguisedAsMesia&&this.addBossCheck(a,this.rom.bosses.Sabera1,n),t.data[2]&4&&!this.flagset.assumeStatueGlitch()){let d;d=this.filterAntiRequirements(i),t===this.rom.npcs.Rage?(a=qe.adjust(a,[2,-1],[2,0],[2,1],[2,2]),a=qe.adjust(a,[0,-6],[0,-2],[0,2],[0,6])):t===this.rom.npcs.PortoaThroneRoomBackDoorGuard?d=P.or(this.rom.flags.MesiaRecording.r,wt(this.rom.flags.Paralysis,this.rom.flags.QueenNotInThroneRoom)):t===this.rom.npcs.SoldierGuard&&(d=void 0),d&&this.addTerrain(a,this.terrainFactory.statue(d))}if(t===this.rom.npcs.FortuneTeller&&(a=qe.adjust(a,[0,0],[2,0])),P.isClosed(n))return;let[[...l]]=n;for(let d of t.globalDialogs){let f=this.flag(~d.condition),u=this.flag(d.condition);if(f?.logic.assumeFalse||u?.logic.assumeTrue)return;f?.logic.track&&l.push(f.id)}let c=t.localDialogs.get(s.id)??t.localDialogs.get(-1)??[];for(let d of c){let f=[...l],u=this.flag(d.condition),h=this.flag(~d.condition);if(u?.logic.track&&f.push(u.id),!u?.logic.assumeFalse&&!h?.logic.assumeTrue&&this.processDialog(a,t,f,d),u?.logic.assumeTrue||h?.logic.assumeFalse)break;h?.logic.track&&l.push(h.id)}}processDialog(s,e,t,i){this.addCheckFromFlags(s,[t],i.flags);let n={lossy:!0,unique:!0};switch(i.message.action){case 8:this.processKeyUse(s,[t]);break;case 20:this.addItemCheck(s,[t],this.rom.flags.SlimedKensu.id,n);break;case 16:this.addItemCheck(s,[t],this.rom.flags.AsinaInBackRoom.id,n);break;case 17:this.addItemCheck(s,[t],256|e.data[1],n);break;case 3:case 10:this.addItemCheck(s,[t],256|e.data[0],n);break;case 9:let o=e.data[1];o!==255&&this.addItemCheck(s,[t],256|o,n);break;case 25:this.addItemCheck(s,[t],this.rom.flags.AkahanaFluteOfLimeTradein.id,n);break;case 26:this.addItemCheck(s,[t],this.rom.flags.Rage.id,n);break;case 27:break}}processLocationItemUses(s){for(let[e,t]of this.itemUses.get(~s.id))this.processItemUse([this.entrance(s)],P.OPEN,e,t)}handleMovingGuard(s,e,t){if(this.flagset.assumeStatueGlitch())return;let i=[];for(let n of e.spawns.slice(0,2))if(n.isNpc()&&this.rom.npcs[n.id].isParalyzable()){i.push([this.rom.flags.Paralysis.c]);break}this.flagset.assumeTriggerGlitch()&&i.push([this.rom.flags.TriggerSkip.c]),this.addTerrain(s,this.terrainFactory.statue([...t,...i].map(us)))}handleBoat(s,e,t){let i=this.walkableNeighbor(s);if(i==null)throw new Error("Could not find walkable neighbor.");let n=s>>8&240|s>>4&15,o=s>>4&240|s&15,a;for(let u of e.exits)u.yt===n&&u.xt<o&&(a=u);if(!a)throw new Error("Could not find boat exit");let l=this.rom.locations[a.dest];if(!l)throw new Error("Bad destination");let c=l.entrances[a.entrance],d=V.from(l,c),f=d;for(;;){f=V.add(f,0,-1);let u=this.walkableNeighbor(f);if(u!=null){let h={enter:P.freeze(t),exit:[[15,P.OPEN]]};this.addTerrain([i],h),this.exits.set(i,u),this.exitSet.add(Se.of(i,u)),this.exits.set(d,u),this.exitSet.add(Se.of(d,u)),this.terrains.set(d,this.terrainFactory.tile(0));return}}}addItemGrantChecks(s,e,t){let i=this.itemGrant(t),n=256|i;if(i==null)throw new Error(`missing item grant for ${t.toString(16)}`);let o=t>=128;this.addItemCheck(s,e,n,{lossy:!0,unique:!0,preventLoss:o})}addTerrain(s,e){for(let t of s){let i=this.terrains.get(t);i!=null&&this.terrains.set(t,this.terrainFactory.meet(i,e))}}addCheck(s,e,t){if(P.isClosed(e))return;let i={requirement:P.freeze(e),checks:t};for(let n of s)!this.terrains.has(n)||this.checks.get(n).add(i)}addItemCheck(s,e,t,i){this.addCheck(s,e,[t]),this.slots.set(t,i);let n=this.rom.itemGets[this.rom.slots[t&255]],o=this.rom.items[n.itemId],a=o?.unique,l=n.isLosable(),c=a||o===this.rom.items.OpelStatue,d=1;o===this.rom.items.SwordOfWind&&(d=5),o===this.rom.items.SwordOfFire&&(d=5),o===this.rom.items.SwordOfWater&&(d=10),o===this.rom.items.SwordOfThunder&&(d=15),o===this.rom.items.Flight&&(d=15),this.items.set(512|n.id,{unique:a,losable:l,preventLoss:c,weight:d})}addCheckFromFlags(s,e,t){let i=[];for(let n of t){let o=this.flag(n);o?.logic.track&&i.push(o.id)}i.length&&this.addCheck(s,e,i)}walkableNeighbor(s){if(this.isWalkable(s))return s;for(let e of[-1,1]){let t=V.add(s,e,0),i=V.add(s,0,e);if(this.isWalkable(t))return t;if(this.isWalkable(i))return i}}isWalkable(s){return!(this.getEffects(s)&j.BITS)}ensurePassable(s){return this.isWalkable(s)?s:this.walkableNeighbor(s)??s}getEffects(s){let e=this.rom.locations[s>>>16],t=this.rom.tileEffects[e.tileEffects-179].effects,i=e.screens[(s&61440)>>>12][(s&3840)>>>8];return t[this.rom.screens[i].tiles[s&255]]}processBoss(s,e){let{bosses:t}=this.rom,{Rage:i,StatueOfSun:n,StatueOfMoon:o}=t,a=e.id===201,l=e.id===202,c=e.id===195,d=c?i:a?o:l?n:t.fromLocation(s.id),f=V.from(s,e);if(!d||!d.flag)throw new Error(`Bad boss at ${s.name}`);let u=f&-256,h=this.terrainFactory.boss(d.flag.id,c),p=le(240,m=>u|m);this.addTerrain(p,h),!a&&!l&&this.addBossCheck(p,d)}addBossCheck(s,e,t=P.OPEN){if(e.flag==null)throw new Error(`Expected a flag: ${e}`);let i=P.meet(t,this.bossRequirements(e));e===this.rom.bosses.Draygon2?this.addCheck(s,i,[e.flag.id]):this.addItemCheck(s,i,e.flag.id,{lossy:!1,unique:!0})}processChest(s,e){if(this.rom.slots[e.id]>=112)return;let t=256|e.id,i=this.rom.slots[e.id];if(i>=112)return;let n=this.rom.items[i],o=this.flagset.preserveUniqueChecks()?!!n?.unique:!0;this.addItemCheck([V.from(s,e)],P.OPEN,t,{lossy:!1,unique:o})}processMonster(s,e){let t=this.rom.objects[e.monsterId];if(!(t instanceof ht))return;let{Money:i,RageSkip:n,Sword:o,SwordOfWind:a,SwordOfFire:l,SwordOfWater:c,SwordOfThunder:d}=this.rom.flags;if(s.id===this.limeTreeEntranceLocation&&t.isBird()&&this.flagset.assumeRageSkip()&&this.addCheck([this.entrance(s)],P.OPEN,[n.id]),!t.goldDrop)return;let f=[V.from(s,e)];if(!this.flagset.guaranteeMatchingSword()){this.addCheck(f,o.r,[i.id]);return}let u=[a,l,c,d].filter((h,p)=>t.elements&1<<p);this.addCheck(f,ot(...u),[i.id])}processItemUse(s,e,t,i){s=new Set([...s].map(a=>this.walkableNeighbor(a)??a));let n=[[512|t.id]];t.itemUseData.some(a=>a.tradeNpc()===this.rom.npcs.Aryllis.id)&&n[0].push(this.rom.flags.Change.c),t===this.rom.items.MedicalHerb&&(n[0][0]=this.rom.flags.BuyHealing.c);let o=P.meet(e,n);switch(this.addCheckFromFlags(s,o,i.flags),i.message.action){case 16:this.processKeyUse(s,o);break;case 8:case 11:case 12:case 13:case 15:case 28:this.addItemGrantChecks(s,o,t.id);break;case 2:this.addItemCheck(s,o,256|this.rom.npcs[i.want&255].data[1],{lossy:!0,unique:!0});break}}processKeyUse(s,e){let[t,...i]=new Set([...s].map(a=>Nt.from(a)));if(t==null||i.length)throw new Error("Expected one screen");let o=this.rom.locations[t>>>8].flags.find(a=>a.screen===(t&255));if(o==null)throw new Error("Expected flag on screen");this.addCheck(s,e,[o.flag])}bossRequirements(s){if(s===this.rom.bosses.Rage)return this.tracker&&this.flagset.randomizeTrades()?this.rom.flags.Sword.r:[[this.rom.npcs.Rage.dialog()[0].condition]];let e=s.object,t=new P.Builder;if(this.tracker&&this.flagset.shuffleBossElements()||!this.flagset.guaranteeMatchingSword())t.addAll(this.rom.flags.Sword.r);else{let n=this.flagset.guaranteeSwordMagic()?s.swordLevel:1,o=this.rom.objects[e];for(let a=0;a<4;a++)o.isVulnerable(a)&&t.addAll(this.swordRequirement(a,n))}let i=[];if(s.npc!=null&&s.location!=null){let n=s.npc.spawns(this.rom.locations[s.location]);i.push(...this.filterRequirements(n)[0])}return s===this.rom.bosses.Insect?i.push(this.rom.flags.InsectFlute.c,this.rom.flags.GasMask.c):s===this.rom.bosses.Draygon2&&i.push(this.rom.flags.BowOfTruth.c),this.flagset.guaranteeRefresh()&&i.push(this.rom.flags.Refresh.c),t.restrict([i]),P.freeze(t)}swordRequirement(s,e){let t=[this.rom.flags.SwordOfWind,this.rom.flags.SwordOfFire,this.rom.flags.SwordOfWater,this.rom.flags.SwordOfThunder][s];if(e===1)return t.r;let i=[[this.rom.flags.BallOfWind,this.rom.flags.TornadoBracelet],[this.rom.flags.BallOfFire,this.rom.flags.FlameBracelet],[this.rom.flags.BallOfWater,this.rom.flags.BlizzardBracelet],[this.rom.flags.BallOfThunder,this.rom.flags.StormBracelet]][s];return e===3?wt(t,...i):i.map(n=>[t.c,n.c])}itemGrant(s){for(let[e,t]of this.rom.itemGets.actionGrants)if(e===s)return t;throw new Error(`Could not find item grant ${s.toString(16)}`)}filterRequirements(s){let e=[];for(let t of s)if(t<0){if(this.flag(~t)?.logic?.assumeTrue)return P.CLOSED}else{let i=this.flag(t);if(i?.logic.assumeFalse)return P.CLOSED;i?.logic.track&&e.push(i.id)}return[e]}filterAntiRequirements(s){let e=[];for(let t of s)if(t>=0){if(this.flag(~t)?.logic?.assumeFalse)return P.OPEN}else{let i=this.flag(~t);if(i?.logic.assumeTrue)return P.OPEN;i?.logic.track&&e.push([i.id])}return e}flag(s){let e=s,t=this.rom.flags[e];return this.aliases.get(t)??t}entrance(s,e=0){return typeof s=="number"&&(s=this.rom.locations[s]),this.tiles.find(V.from(s,s.entrances[e]))}wallCapability(s){switch(s){case 0:return this.rom.flags.BreakStone.id;case 1:return this.rom.flags.BreakIce.id;case 2:return this.rom.flags.FormBridge.id;case 3:return this.rom.flags.BreakIron.id;default:throw new Error(`bad wall type: ${s}`)}}};function wt(...r){return[r.map(s=>s.id)]}function ot(...r){return r.map(s=>[s.id])}var Mn=!1;function Fn(r){if(!r.compressedMapData){r.compressedMapData=!0;for(let s=0;s<3;s++)r.metascreens.renumber(256|s,320|s),delete r.screens[256|s]}}function Gn(r){if(!r.compressedMapData)throw new Error("Must compress first");let{grass:s,town:e,cave:t,dolphinCave:i,pyramid:n,river:o,sea:a,lime:l,mountain:c,shrine:d,desert:f,mountainRiver:u,swamp:h,house:p,fortress:m,labyrinth:g,iceCave:y,tower:w}=r.metatilesets;r.moveScreens([h],4),r.moveScreens([p],4),r.moveScreens([e],4),r.moveScreens([l],4),r.moveScreens([d],4),r.moveScreens([w],4),r.moveScreens([c,u],4),r.moveScreens([t,n,m,g,y],5);let[]=[a,i,s,o,f]}var[]=[ms];function Bn(r,s){let o=r.objects[159],a=r.objects[127],l=r.objects[141];l.used=!0,l.name="Crumbling Horizontal Platform",l.sfx=o.sfx,o.data.forEach((f,u)=>l.data[u]=f),l.data[3]=a.data[3];let c=new Set([127-80,141-80]),d=new Set([126-80,159-80]);for(let f of r.locations){if(!f.pits.length)continue;let u=s.nextInt(3)<1;for(let h of f.spawns)!h.isMonster()||(d.has(h.id)&&(h.id=(u?159:126)-80),c.has(h.id)&&(h.id=(u?141:127)-80))}}var[]=[ee];function Ke(r,s,...e){let t=s,i=0,n;for(;(n=e[i++])!=null;)if(typeof n=="number")r[t++]=n;else if(typeof n=="string")for(let o of n)r[t++]=o.charCodeAt(0);else throw new Error("bad data")}function An(r){r[107924]=255,r[118213]=168,r[106870]=255,r[108620]=255,r[120899]=160,r[122987]&=7,r[122991]&=7,r[122995]&=7,r[122999]&=7,r[123003]&=7,r[123012]&=7,r[123035]&=7,r[123065]&=7,r[123141]=47,r[123511]=0,r[123750]=64,r[123761]=0,r[123783]=0,r[123793]=0,Ke(r,106856,51,51),Ke(r,107662,51,51),r[105393]=112,r[105397]=113,r[105079]=114,r[105963]=115,r[106565]=116,r[106721]=117,r[106725]=118,r[106729]=119,r[108037]=120,r[107457]=121,r[107461]=122,r[107465]=123,Ke(r,123063,192,0),Ke(r,123690,192,0),Ke(r,123696,192,0),Ke(r,123702,192,0),Ke(r,123104,192,0),Ke(r,123110,192,0),r[116739]=0,Ke(r,116749,162,179),r[109190]=254,Ke(r,513749,37,41,57,58,59,71,60,62,132,70,178,66,180,65,255);for(let s of[231255,231287,231291,231319,231323,231387,231391,231419,231423,231451,231455,231525,231557,231561,231589])r[s]|=1;Ke(r,157038,"Simea",16,0,"     ",16,0)}function Ln(r,s){gl(r),Za(r),ja(r),Ya(r),Ja(r,s),Tl(r),Ml(r),Rl(r),Qa(r),_a(r),sl(r),Xa(r),fl(r),il(r),vl(r,s),yl(r),s.requireHealedDolphinToRide()&&ol(r),s.saharaRabbitsRequireTelepathy()&&al(r),cl(r,s),rl(r,s),nl(r),s.teleportOnThunderSword()?(ll(r),r.townWarp.thunderSwordWarp=[r.locations.Shyron.id,65]):dl(r),el(r),s.fogLampNotRequired()&&tl(r,s),wl(r),bl(r),hl(r),ul(r,s),s.disableRabbitSkip()&&ml(r),s.disableFlightStatueSkip()&&pl(r),Sl(r,s),$a(r),s.chargeShotsOnly()&&Cl(r),s.orbsOptional()&&kl(r),s.noBowMode()&&El(r),xl(r),s.hardcoreMode()&&Il(r),s.shouldUpdateHud()&&(Va(r),r.writeMonsterNames=!0),s.shouldColorSwordElements()&&Ka(r),s.hasStatTracking()&&qa(r)}function qa(r){for(let x=0;x<4;x++)r.patterns.set(5376,41+x,Ue.BLANK_TILES[x]);if(r.prg[143082]===40)return;r.prg[143082]=40;let t=143364,i=144132,n=128-1;for(let x=t;x<i;x++)r.prg[x]>=41&&r.prg[x]<=45&&(r.prg[x]+=n);let o=42,a=160;for(let x=t;x<i;x+=192)r.prg[x+a]=o;let l=new Map([[66,a]]),c=142469,d=142546;for(let x=c;x<d;x++)l.has(r.prg[x])&&(r.prg[x]=l.get(r.prg[x]));for(let x=t;x<i;x+=192)for(let E=123;E<=127;E++)r.prg[x+E]==o+n&&(r.prg[x+E]=o);let f=3,u=2,h=144376,p=144440;for(let x=h;x<p;x++){let E=r.prg[x];for(let k=0;k<8;k+=2){let A=f<<k,S=u<<k;(E&A)==A&&(E=E&(255^3<<k)|S)}r.prg[x]=E}let m=144440,g=4*f,y=[15,48,15,17];for(let x=0;x<y.length;x++)r.prg[m+g+x]=y[x];r.prg[m+u*4+3]=8;let w=145114,b=145222;for(let x=w;x<b;x+=4)r.prg[x]+=128}function Ka(r){function s(e,t){for(let i=0;i<=10;i++){if(i===8)continue;let n=r.patterns.get(i|e),o=[...n.pixels];for(let a=0;a<n.pixels.length;a++)n.pixels[a]=o[a^8],a>>>3===t&&(n.pixels[a]|=o[a])}}s(4240),s(4304),s(4368),s(4432),s(4496)}function Va(r){r.patterns.set(3584,0,Ue.HUD_LF),r.patterns.set(3584,1,Ue.HUD_PW),r.patterns.set(3584,2,Ue.HUD_EY),r.patterns.set(3584,3,Ue.HUD_LV),r.patterns.set(3584,4,Ue.HUD_DL),r.patterns.set(3584,5,Ue.HUD_MP),r.patterns.set(3584,6,Ue.HUD_EX),r.patterns.set(3584,26,Ue.HUD_CLOSE_LEFT),r.patterns.set(3584,27,Ue.HUD_CLOSE_RIGHT)}function ja(r){r.items.GlowingLamp.itemUseData[0].message.action=11}function Ya(r){let s=r.nextFreeTrigger("mezame");s.used=!0,s.conditions=[~r.flags.AlwaysTrue.id],s.message=ns.of({action:4}),s.flags=[r.flags.AlwaysTrue.id],r.locations.MezameShrine.spawns.push(J.of({tile:136,type:2,id:s.id}))}function Za(r){let s=new Set([129,139,144,153,166,167,168,169,170,171,172,r.allocatedTriggers.get("zombie warp")]);for(let e of r.locations)!e.used||(e.spawns=e.spawns.filter(t=>!t.isTrigger()||!s.has(t.id)))}function Ja(r,s){if(r.objects[16].atk=3,r.objects[17].atk=6,r.objects[18].atk=8,r.objects[24].atk=3,r.objects[19].atk=5,r.objects[25].atk=5,r.objects[23].atk=7,r.objects[26].atk=7,r.objects[20].atk=3,r.objects[21].atk=6,r.objects[22].atk=8,r.objects[28].atk=3,r.objects[29].atk=3,r.objects[30].atk=5,r.objects[27].atk=7,r.objects[31].atk=7,s.slowDownTornado()){let e=r.objects[18];e.speed=7,e.data[12]=96}}function Xa(r){let s=r.trigger(160);s.used=!0,s.conditions=[],s.flags=[],s.message=ns.of({part:0,index:0,action:21}),r.objects[94].data[13]=254,r.items.InsectFlute.itemUseData[0].flags=[r.flags.UsedInsectFlute.id]}function Qa(r){r.items.OpelStatue.selectedItemValue=0}function _a(r){for(let s of[96,100,101,102,103,104,105,106,107,108,109,111])for(let e of[0,1,2])r.patterns.set(s<<6,e,r.patterns.get(94<<6,e).pixels);r.objects[12].metasprite=169}function $a(r){for(let s in[4,5,8,9])r.tileEffects[188-179].effects[s]=24,r.tileEffects[181-179].effects[s]=24}function el(r){let{tiles:s}=r.screens[161];s[40]=159,s[55]=35,s[56]=35,s[57]=33,s[71]=141,s[72]=143,s[86]=153,s[87]=154,s[88]=140}function tl(r,s){let{flags:{AlwaysTrue:e,InjuredDolphin:t,FogLamp:i,KensuInCabin:n,ReturnedFogLamp:o},items:{ShellFlute:a},locations:{BoatHouse:l,Portoa_FishermanHouse:c},npcs:d}=r,f=s.requireHealedDolphinToRide();a.itemUseData[0].want=f?t.id:e.id,d.KensuInCabin.data[0]=103,d.KensuInCabin.localDialogs.get(-1)[0].message.action=10,d.KensuInCabin.localDialogs.get(-1)[0].flags=[],d.KensuInCabin.spawnConditions.set(l.id,[o.id,~n.id]),d.Fisherman.spawnConditions.set(c.id,[i.id]),r.itemGets[100].flags=[],r.itemGets[103].copyFrom(r.itemGets[100])}function sl(r){for(let s of r.locations)for(let e of s.spawns)e.isChest()&&(e.timed=!1)}function il(r){let s=r.locations;s.GoaFortress_Kelbesque.spawns[0].x-=16,s.GoaFortress_Zebu.spawns.splice(1,1),s.GoaFortress_Tornel.spawns.splice(2,1),s.GoaFortress_Asina.spawns.splice(2,1),s.GoaFortress_Kensu.spawns.splice(3,1),s.GoaFortress_Kensu.spawns.splice(1,1)}function rl(r,s){let{items:{AlarmFlute:e},flags:{TalkedToZebuStudent:t,ZebuStudent:i},locations:{MezameShrine:n,Leaf_StudentHouse:o,WaterfallCave4:a,ZebuCave:l},npcs:{WindmillGuard:c,Zebu:d}}=r;if(r.itemGets[49].inventoryRowStart=32,e.unique=!0,e.basePrice=0,s.zebuStudentGivesItem())c.data[1]=49;else{c.data[1]=255;let h=c.dialog(o)[0];h.condition=~t.id,h.flags.push(t.id),Pn(d.spawns(l),i.id,t.id),n.spawns.push(J.of({screen:0,tile:155,type:2,id:49})),n.spawns.push(J.of({screen:0,tile:149,type:2,id:73})),r.itemGets[73].itemId=r.items.MedicalHerb.id}let f=[[33,.72],[31,.9]],u=0;for(let h of r.shops)if(h.type===1)for(let p=0,m=h.contents.length;p<m;p++){if(h.contents[p]!==49)continue;let[g,y]=f[u++%f.length];h.contents[p]=g,r.shopDataTablesAddress&&(h.prices[p]=Math.round(h.prices[p]*y))}r.itemGets[91].itemId=29,a.spawn(25).id=16}function nl(r){let{flags:{Karmine:s,Mado1:e},npcs:{Brokahana:t}}=r,i=ar(t.localDialogs.get(-1))[0];if(i.condition!==~s.id)throw new Error(`Bad brokahana condition: ${i.condition}`);i.condition=~e.id}function ol(r){let{flags:{InjuredDolphin:s,ShellFlute:e},npcs:{Fisherman:t,FishermanDaughter:i}}=r;t.spawnConditions.set(214,[e.id,s.id]);let n=i.localDialogs.get(-1);n.unshift(n[0].clone()),n[0].condition=~s.id,n[1].condition=~e.id}function al(r){let{flags:{Telepathy:s},npcs:{Deo:e,SaharaBunny:t}}=r;t.globalDialogs.push(di.of(~s.id,[26,18])),e.globalDialogs.push(di.of(~s.id,[26,19]))}function ll(r){let{flags:{WarpShyron:s}}=r;r.itemGets[3].flags.push(s.id)}function dl(r){r.itemGets[3].acquisitionAction.action=22}function cl(r,s){if(s.leatherBootsGiveSpeed()){let e=r.items[47];if(e.menuName="Speed Boots",e.messageName="Speed Boots",s.changeGasMaskToHazmatSuit()){let t=r.items[41];t.menuName="Hazmat Suit",t.messageName="Hazmat Suit"}}for(let e=5;e<12;e+=2)r.items[e].menuName=r.items[e].menuName.replace("Ball","Orb"),r.items[e].messageName=r.items[e].messageName.replace("Ball","Orb")}function fl(r){let{flags:{BallOfWind:s,TornadoBracelet:e},npcs:{Tornel:t}}=r,i=t.localDialogs.get(33),n=[i[0],i[2],i[2].clone(),i[1]];n[1].condition=~e.id,n[2].condition=~s.id,n[3].condition=-1,t.localDialogs.set(33,n)}function hl(r){let{CordelPlainEast:s,KirisaMeadow:e,UndergroundChannel:t}=r.locations;for(let i of[s,e,t])for(let n of i.spawns)n.isChest()&&(n.data[2]|=32)}function ul(r,s){let{CordelPlainEast:e,CordelPlainWest:t}=r.locations;for(let i of e.spawns)(i.isChest()||s.disableTeleportSkip()&&i.isTrigger())&&t.spawns.push(i.clone())}function ml(r){for(let s of r.locations.MtSabreNorth_Main.spawns)s.isTrigger()&&s.id===134&&s.x===1856&&(s.x+=16,s.y+=16)}function pl(r){let s=r.hitboxes[r.objects.guardianStatueMissile.hitbox],e=r.hitboxes[6];r.objects.guardianStatueMissile.hitbox=e.id,e.x0=s.x0-6,e.w=s.w+12,e.y0=s.y0-2,e.h=s.h+4}function xl(r){r.messages.parts[32][15].text+=`
Item: [:ITEM:]`}function gl(r){let{flags:{WarpZombie:s},locations:{ZombieTown:e}}=r;r.flags.insertZombieWarpFlag();let t=r.messages.parts[33][0];t.text=[" {1a:Leaf}      {16:Brynmaer} {1d:Oak} ","{0c:Nadare}'s  {1e:Portoa}   {14:Amazones} ","{19:Joel}      Zombie   {20:Swan} ","{23:Shyron}    {18:Goa}      {21:Sahara}"].join(`
`);let i=r.nextFreeTrigger("zombie warp");i.used=!0,i.conditions=[],i.message=ns.of({}),i.flags=[s.id];for(let n of e.spawns)n.isTrigger()&&n.id===138&&(n.id=i.id);if(r.townWarp.locations.splice(7,0,e.id),r.townWarp.locations.pop()!==255)throw new Error("unexpected")}function wl(r){r.trigger(138).conditions=[~r.flags.CurrentlyRidingDolphin.id],r.messages.parts[29][16].text=`The cave entrance appears
to be underwater. You'll
need to swim.`}function bl(r){let s=r.nextFreeTrigger("channel item");s.used=!0,s.conditions=[r.flags.CurrentlyRidingDolphin.id,~r.flags.UndergroundChannelUnderwaterChest.id];let e=r.messages.alloc();e.text="Dolphin: {:HERO:}, I just found a [3b:Love Pendant] under the water!",s.message=ns.of({part:e.part,index:e.id,action:15});let t=r.locations.UndergroundChannel.spawns.find(i=>i.isChest());t.data[2]=2,t.yt++,t.id=s.id,r.itemGets.actionGrants.set(s.id,59)}function yl(r){let e=r.npcs[13].localDialogs.get(53)[0];e.message.action=23}function Sl(r,s){let e=r.locations.LimeTreeLake,t=r.screens[r.metascreens.limeTreeLake.sid];if(s.disableRageSkip()){t.set2d(32,t.get2d(0,143)),t.set2d(42,t.get2d(58,1)),t.set2d(16,t.get2d(32,4)),t.set2d(26,t.get2d(42,5)),t.set2d(27,t.get2d(0,16));for(let n of e.spawns)n.tile+=32;let i=r.metascreens.limeTreeLake.findExitByType("cave");i.entrance+=8192,i.exits=i.exits.map(n=>n+32)}else t.set2d(144,[[118,118,118,118,119,120,null,null,null,null,121,122,118,118,118,118],[118,118,119,120,null,null,null,null,null,null,null,null,121,122,118,118]])}function vl(r,s){function e(H,Y){let W=H.indexOf(Y);if(W<0)throw new Error(`Could not find element ${Y} in ${H}`);H.splice(W,1)}function t(H,Y){let W=H.findIndex(Y);if(W<0)throw new Error(`Could not find element in ${H}`);H.splice(W,1)}let{locations:{BoatHouse:i,Brynmaer:n,Crypt_Draygon2:o,Joel_Shed:a,Leaf_ElderHouse:l,MtSabreNorth_SummitCave:c,MtSabreWest_Upper:d,PortoaPalace_ThroneRoom:f,Portoa_PalaceEntrance:u,Portoa_AsinaRoom:h,Portoa_FortuneTeller:p,Shyron_Temple:m,StomHouse:g,Swan_DanceHall:y,Swan_Tavern:w,WindmillCave:b,WaterfallCave4:x,WaterfallValleyNorth:E,ZebuCave:k,ZombieTown_HouseBasement:A},items:{GlowingLamp:S,KeyToPrison:M,LovePendant:G,StatueOfOnyx:Z},npcs:{Akahana:Q,AkahanaInBrynmaer:_,Asina:ie,AztecaInShyron:K,Clark:ue,Draygon:N,FortuneTeller:L,Kensu:ke,KensuInCabin:Ee,KensuInSwan:q,LeafElder:pe,LeafRabbit:fe,OakChild:We,OakElder:_e,OakMother:we,PortoaPalaceFrontGuard:Re,PortoaQueen:oe,PortoaThroneRoomBackDoorGuard:vt,Rage:Te,Stom:$e,StonedAkahana:Ne,Tornel:ct,WindmillGuard:Ut,Zebu:je},flags:O}=r;ke.localDialogs.delete(w.id),q.link(ke.id),q.used=!0,q.data=[...ke.data],ke.data[0]=S.id,y.spawns.find(H=>H.isNpc()&&H.id===ke.id).id=q.id,G.itemUseData[0].want=256|q.id,Ne.linkDialog(Q.id),_.used=!0,_.link(Q.id),_.data=[...Q.data],n.spawns.find(H=>H.isNpc()&&H.id===Q.id).id=_.id,Z.itemUseData[0].want=256|_.id,pe.dialog(l).splice(0,0,...pe.dialog(l).splice(2,1)),fe.dialog()[2].condition=O.RescuedLeafElder.id,fe.dialog()[2].flags.push(O.TalkedToLeafRabbit.id),fe.dialog()[3].flags.push(O.TalkedToLeafRabbit.id),Ut.spawns(b)[1]=~O.WindmillGuardAlarmFluteTradein.id,e(Q.spawns(x),~O.BehindWhirlpool.id),e(Ne.spawns(x),~O.BehindWhirlpool.id);function et(H){H.reverse();for(let Y=0;Y<H.length;Y++){let W=H[Y+1];H[Y].condition=W?~W.condition:-1}}for(let H=0;H<4;H++){let Y=_e.dialog()[H];Y.condition!==r.flags.OakElder.id&&(Y.message.action=3)}(()=>{let[H,Y,W,ye]=we.dialog();ye.condition=~O.RescuedChild.id,Y.condition=-1,we.dialog().splice(0,4,ye,W,H,Y)})();for(let H of[32,33,34,124,125])et(r.npcs[H].dialog());We.dialog().unshift(...We.dialog().splice(1,1)),vt.spawnConditions.set(f.id,[~O.QueenNotInThroneRoom.id,~O.MesiaRecording.id]),Re.dialog()[1].condition=O.MesiaRecording.id,oe.dialog()[3].condition=O.SwordOfWater.id,oe.dialog()[3].message.action=3,oe.dialog()[4].flags.push(O.PortoaQueenGoingAway.id),oe.spawns(f)[1]=~O.MesiaRecording.id,oe.spawns(h)[0]=O.MesiaRecording.id,oe.dialog()[1].condition=O.MesiaRecording.id,L.spawns(p)[1]=~O.MesiaRecording.id,ue.spawnConditions.set(A.id,[~O.Clark.id]),ue.spawnConditions.set(a.id,[O.Clark.id]),je.localDialogs.set(k.id,[it.of(~O.TalkedToZebuInCave.id,[0,26],[O.TalkedToZebuInCave.id]),it.of(O.LeafVillagersRescued.id,[0,29]),it.of(O.LeafAbduction.id,[0,28]),it.of(O.ZebuAtWindmill.id,[0,29]),it.of(O.UsedWindmillKey.id,[0,27,3]),it.of(-1,[0,29])]),e(je.spawns(k),~O.BehindWhirlpool.id),ct.spawnConditions.delete(d.id),$e.spawnConditions.delete(g.id),e(ie.spawns(h),~O.CalmedAngrySea.id);let Me=r.npcs[52];Me.spawnConditions.set(f.id,[O.MesiaRecording.id,~O.PortoaQueen.id]),Me.localDialogs.set(u.id,Me.localDialogs.get(-1)),Me.data[0]=r.items.FluteOfLime.id;let tt=r.messages.alloc();tt.text="The queen left this for you.",Me.localDialogs.set(f.id,[it.of(~O.PortoaQueen.id,[tt.part,tt.id,3]),it.of(-1,[10,14])]),f.spawns.push(J.of({yt:3,xt:12,type:1,patternBank:1,id:Me.id})),oe.localDialogs.set(h.id,oe.dialog().splice(0,2)),oe.localDialogs.set(f.id,oe.dialog()),oe.localDialogs.delete(-1),Ee.spawnConditions.set(i.id,[~O.AbleToRideDolphin.id,O.ReturnedFogLamp.id]),Ee.dialog()[0].message.action=2,K.spawns(m).push(~O.ShyronMassacre.id),r.trigger(130).conditions.push(~O.ShyronMassacre.id),Te.dialog()[0].condition=O.SwordOfWater.id,N.spawnConditions.set(o.id,[~O.Draygon2.id]),je.dialog(m).unshift(...je.dialog(m).splice(1,1)),r.trigger(128).conditions=[~O.ShyronMassacre.id,O.TalkedToZebuInShyron.id,O.SwordOfThunder.id],r.trigger(129).conditions=[],s.barrierRequiresCalmSea()&&r.trigger(132).conditions.push(O.CalmedAngrySea.id),r.trigger(140).conditions.push(O.TalkedToZebuInCave.id),r.trigger(141).used=!1;for(let H of c.spawns)H.isTrigger()&&H.id===141&&(H.id=178);t(E.spawns,H=>H.isTrigger()&&H.id===141),r.trigger(178).conditions.push(O.Kelbesque1.id),r.trigger(178).flags.push(~O.LeafVillagersCurrentlyAbducted.id,~O.LeafElderCurrentlyAbducted.id,O.LeafVillagersRescued.id),r.trigger(140).conditions.push(~O.Kelbesque1.id),r.trigger(134).conditions.push(~O.Kelbesque1.id),e(M.itemUseData[0].flags,~O.LeafVillagersCurrentlyAbducted.id),Pn(r.trigger(187).conditions,~O.Rage.id,~O.MesiaRecording.id)}function Cl(r){for(let s of[8,9,39])r.objects[s].collisionPlane=0;r.npcs.Brokahana.data[0]=r.items.FruitOfLime.id}function kl(r){for(let s of[16,20,24,29])r.objects[s].terrainSusceptibility&=-5,r.objects[s].level=2}function El(r){let{flags:{UsedBowOfTruth:s},locations:{Crypt_Draygon2:e,MezameShrine:t}}=r,i;for(let n of t.spawns)n.isTrigger()&&n.tile===136&&(i=r.trigger(n.id));if(!i)throw new Error("Could not find start trigger");i.flags.push(s.id),r.tileEffects[185-179].effects[88]=0,t.meta.setExit(0,"door",[e.meta.id<<8|16,"edge:bottom"])}function Rl(r){r.objects[51].elements=15}function Tl(r){r.tileEffects[181-179].effects[116]=6,r.tileEffects[182-179].effects[70]=6}function Ml(r){for(let s of r.objects)s instanceof ht&&(s.isProjectile()||s.isBoss()||s.isFlyer()||s!==r.objects.mimic&&(s.terrainSusceptibility|=3))}function Pn(r,s,e){for(let t=0;t<r.length;t++)if(r[t]===s){r[t]=e;return}throw new Error(`Could not find ${s} in ${r.join(",")}`)}function Il(r){for(let s of r.locations)s.checkpoint=s.saveable=!1}function On(r,s,e){if(!s.randomizeTrades())return;let{items:{StatueOfOnyx:t,FogLamp:i,LovePendant:n,KirisaPlant:o,IvoryStatue:a},locations:{Swan_DanceHall:l,PortoaPalace_ThroneRoom:c},npcs:{KensuInSwan:d}}=r,f=new Map,u=[[t,0,"Akahana"],[i,0,"Fisherman"],[n,0,"Kensu"],[o,0,"Aryllis"],[a,0,"Slimed Kensu"]],h=u.map(([g,y,w])=>{if(g.trades.indexOf(y)<0||y>=g.itemUseData.length)throw new Error(`not a trade: ${g} ${y}`);return[g.itemUseData[y],g.id,w]});e.shuffle(h);for(let[g,y]of u){let[w,b,x]=h.pop();g.itemUseData[y]=w,r.spoiler&&r.spoiler.addTrade(g.id,g.messageName,x),w.want===356&&s.fogLampNotRequired()&&([...r.npcs[100].spawnConditions.values()][0][0]=512|g.id),f.set(b,g.id)}r.itemGets.actionGrants=new Map([...r.itemGets.actionGrants].map(([g,y])=>[f.get(g)??g,y]));let p=r.items[e.nextInt(4)];r.npcs[195].localDialogs.get(-1)[0].condition=512|p.id,r.spoiler&&r.spoiler.addTrade(p.id,p.messageName,"Rage"),r.npcs.PortoaQueen.dialog(c)[1].condition=512|p.id;let m=r.items[e.nextInt(4)*2+6];for(let g of r.npcs[95].localDialogs.values())for(let y=2;y<g.length;y++)if(g[y].message.action===3){g[y-2].condition=~(512|m.id-1),g[y-1].condition=~(512|m.id),r.spoiler&&r.spoiler.addTrade(m.id,m.messageName,"Tornel");break}d.dialog(l)[0].message.mid="13:00"}function Wn(r){let s=new Map;for(let e of r.items)for(let t of e.trades)s.set(e.itemUseData[t].want&255,e.id);return s}function Dn(r){let{flags:{AkahanaStatueOfOnyxTradein:s,AsinaInBackRoom:e,BehindWhirlpool:t,KensuInSwan:i,MtSabreNorthSummit:n,MtSabreWestTornel:o,PortoaQueen:a,Rage:l,RepairedStatue:c,SlimedKensu:d,StomFightReward:f,UndergroundChannelUnderwaterChest:u,ZebuAtWindmill:h},npcs:{AkahanaInBrynmaer:p,Aryllis:m,Fisherman:g,PortoaQueen:y},locations:{PortoaPalace_ThroneRoom:w}}=r;L("03:06",",","");let b=Wn(r);function x(q){let pe=b.get(q.id);if(!pe)throw new Error(`No trade-in for ${q.name}`);return r.items[pe]}h.item.isMagic()||ue("00:1b"),L("00:1b","[41:Refresh]",N(h.item));let E=x(p);L("02:01","an unusual statue",Nn(E)),L("02:02","a statue",`the ${Zs(E)}`),L("02:02","[29:Gas Mask]",N(s)),f.item.isMagic()||ue("03:01"),L("03:01","[43:Telepathy]",N(f));let k=Bl(r);L("03:01","[06:Tornado Bracelet]",N(k)),L("05:0a","[06:Tornado Bracelet]",N(k)),L("05:0a","[44:Teleport]",N(o));let A=x(g);L("09:01","[35:Fog Lamp]",N(A)),L("09:04","[35:Fog Lamp]",N(A)),L("09:05","[35:Fog Lamp]",N(A)),L("09:06","lamp",Zs(A));let S=y.dialog(w)[1].condition;L("0a:0c","[28:Flute of Lime]",N(a)),L("0a:0d","[02:Sword of Water]",N(S)),e.item.isMagic()||ue("0b:01"),L("0b:01","[45:Recover]",N(e)),t.item.isMagic()||(ue("0b:01"),ue("1d:12")),L("0b:01","[46:Barrier]",N(t)),L("1d:12","[46:Barrier]",N(t));let M=ke(79,78,77,76,71,70,69,68,75,74,73,72);M?L("0d:00","[35:Fog Lamp]",N(M)):L("0d:00","that a [35:Fog Lamp] was","there was treasure");let G=r.npcs.Rage.dialog()[0].condition;L("0e:03","[02:Sword of Water]",N(G)),L("0e:03","[09:Ball of Water]",N(l)),L("10:0c","that's","is"),L("10:0c",/, is in the\+lighthouse/,"");let Z=x(m);L("12:05","[3c:Kirisa Plant]",N(Z)),L("12:10","the plant",`the ${Zs(Z)}`),L("12:10","[3c:Kirisa Plant]",N(Z));let Q=`Our illustrious chief seeks ${Nn(Z)}.`;L("12:09",/[^]*/,Q),L("12:0a",/[^]*/,Q);let _=x(r.npcs.KensuInSwan);L("13:02","[3b:Love Pendant]",N(_)),L("13:00","pendant",Zs(_)),i.item.isMagic()||ue("13:02"),L("13:02","[47:Change]",N(i));let ie=x(r.npcs.SlimedKensu);L("18:06","[3d:Ivory Statue]",N(ie)),L("18:07","[3d:Ivory Statue]",N(ie)),L("18:06","It's in a room","{0b:Karmine} is"),d.item.isMagic()||L("18:07","teach","give"),L("18:07","[48:Flight]",N(d)),n.item.isMagic()||ue("1c:10"),L("1c:10","[42:Paralysis]",N(n)),L("20:06","Statue of Gold",N(c));let K=r.allocatedTriggers.get("channel item");K!=null&&L(r.trigger(K).message.mid,"[3b:Love Pendant]",N(u));{let q=r.messages.alloc();r.trigger(134).message.mid=q.mid,q.text="{:HERO:}, there's nothing to see here! Return to Zebu at once!",r.messages.parts[28][15].text="{:HERO:}, you cannot climb this yet! Seek out [44:Teleport] at once!"}function ue(q){L(q,/teach\s+you\s+the\s+magic\s+of/,"bestow upon you the")}function N(q){return typeof q=="number"?q=r.items[r.itemGets[q&255].itemId]:q instanceof pr||(q=q.item),`[${ee(q.id)}:${q.messageName}]`}function L(q,pe,fe){let[We,_e]=q.split(":").map(Re=>parseInt(Re,16)),we=r.messages.parts[We][_e];we.text=we.text.replace(pe,fe)}function ke(...q){let pe=[fe=>Fl.has(fe),fe=>Gl.has(fe),fe=>Ee(fe).unique];for(let fe of pe)for(let We of q){let we=[...r.locations[We].spawns].reverse();for(let Re of we){if(!Re.isChest())continue;let oe=r.slots[Re.id];if(oe<=72&&fe(oe))return r.items[oe]}}}function Ee(q){let pe=r.itemGets[q];return r.items[pe.itemId]}}var Fl=new Set([62,63,64]),Gl=new Set([0,1,2,3,65,66,67,68,69,70,71,72]);function Bl(r){let{Tornel:s}=r.npcs;for(let e of s.localDialogs.values())for(let t=2;t<e.length;t++){let i=~e[t].condition;if(i>516&&i<=524&&!(i&1))return r.items[i&255]}return r.items.TornadoBracelet}function Nn(r){let s=r.rom.items;switch(r){case s.StatueOfOnyx:return"an unusual statue";case s.FluteOfLime:return"a rare instrument";case s.FogLamp:return"a brilliant lamp";case s.LovePendant:return"a beautiful charm";case s.KirisaPlant:return"a fragrant plant";case s.IvoryStatue:return"an exotic statue"}return li(),"a valuable item"}function Zs(r){let s=r.rom.items;switch(r){case s.StatueOfOnyx:return"statue";case s.FluteOfLime:return"instrument";case s.FogLamp:return"lamp";case s.LovePendant:return"pendant";case s.KirisaPlant:return"plant";case s.IvoryStatue:return"statue"}return li(),"item"}function Un(r){let{locations:{Portoa:s,PortoaPalace_ThroneRoom:e,Portoa_PalaceEntrance:t,UndergroundChannel:i,WaterfallCave2:n,WaterfallCave3:o}}=r;qi(t,"edge:bottom",183,s),qi(e,"door",146,i),qi(n,"stair:up",191,o),Ll(r)}function qi(r,s,e,t){let[i,...n]=[...r.meta.exits()].filter(([,g])=>g===s);if(!i)throw new Error(`Could not find ${s} in ${r}`);if(n.length)throw new Error(`Ambiguous ${s} in ${r}`);let[o,a]=i[2],l=o>>>8;if(l===t.id)return;let c=o&255,d=r.rom.locations[l],u=d.meta.get(c).data.exits.find(g=>g.type===a);if(!u)throw new Error(`Bad entrance in ${d}`);let h=((u.entrance&61440)>>>8|(u.entrance&240)>>>4)+Al[u.dir];d.spawns.length>17&&d.spawns.pop();let p=t.spawns.findIndex(g=>g.isTrigger()&&g.id===e),m=p>=0?t.spawns.splice(p,1)[0]:J.of({type:2,id:e});m.xt=(c&15)<<4|h&15,m.yt=c&240|h>>>4,d.spawns.push(m)}var Al=[16,0,0,0];function Ll(r){let{locations:{MtSabreNorth_Main:s,ValleyOfWind:e}}=r;for(let t of zn(e,17)){let i=r.locations[t>>>8],n=t&255;Js(i,n,r.flags.OpenedSealedCave)}for(let t of zn(s,4)){let i=r.locations[t>>>8];if(i.data.fixed||i.spawns.length>15)continue;let n=t&255;Js(i,n,r.flags.OpenedPrison);let o=i.meta.get(n).findExitByType("cave").entrance,a=J.of({screen:n,coord:o,type:2,id:173});if(i.spawns.push(a),i.spawns.length>15)continue;let l=J.of({screen:n,coord:o-4112,type:4,id:44});i.spawns.splice(1,0,l)}}function zn(r,s){let e=new Set([r,r.id<<8|s]),t=new Set;for(let n of r.meta.exits())n[0]===s&&(n[1]==="cave"||n[1]==="gate")&&t.add(n[2]);let i=[];for(let n of t){if(e.has(n[0]))continue;let o=r.rom.locations[n[0]>>>8],a=n[0]&255;if(!o.meta.customFlags.has(a)){if(n[1]==="cave"||n[1]==="gate"){let l=o.meta.get(a);l.flag==="custom:true"?i.push(n[0]):console.error(`No flag for ${l.name}`);continue}if(!e.has(o)){e.add(o);for(let l of o.meta.exits())l[1]==="cave"||l[1]==="gate"||t.add(l[2])}}}return console.log(`From ${r}: ${i.map(n=>n.toString(16))}`),i}function Js(r,s,e,t){e?r.meta.customFlags.set(s,e):r.meta.customFlags.delete(s),!t&&(r===r.rom.locations.CordelPlainEast?Js(r.rom.locations.CordelPlainWest,s,e,!0):r===r.rom.locations.CordelPlainWest&&Js(r.rom.locations.CordelPlainEast,s,e,!0))}function Hn(r){Pl(r)}function Pl(r){let{locations:{AngrySea:s},npcs:{Dolphin:e},metascreens:{beachCabinEntrance:t,beachCave:i,beachExitN:n,boatChannel:o}}=r;e.spawnScripts=[];let a=new Set(le(16,l=>l));for(let l=0;l<s.entrances.length;l++){let c=s.entrances[l],d=s.meta.get(c.screen),f;if(d===o){if(s.meta.get(c.screen-1)!==t)throw new Error(`Bad boatChannel entrance ${c}`);c=Rt.of({screen:c.screen-1,tile:0}),d=t}d===t?f={entrance:Rt.of({screen:c.screen-17,coord:47336}),movement:5}:d===i?f={entrance:Rt.of({screen:c.screen,coord:59400}),movement:8}:d===n&&(f={entrance:Rt.of({screen:c.screen,coord:55544}),movement:9}),f&&(a.delete(l),e.spawnScripts[l]=f)}[e.channelSpawn,e.evilSpiritIslandSpawn]=a,e.spawnScripts[e.channelSpawn]={entrance:Rt.of({x:424,y:120}),movement:6},e.spawnScripts[e.evilSpiritIslandSpawn]={entrance:Rt.of({x:424,y:120}),movement:7}}function Kn(r){let s=new Set;for(let e of r.locations)for(let t of e.pits??[])s.add(t.dest<<8|t.toScreen);for(let e of s){let t=r.locations[e>>8],i=e&255,n=t.exits.filter(d=>d.screen===i),o=t.entrances.filter(d=>d.screen===i),a=new Map(n.map(d=>[d.tile,d])),l=new Ge;for(let d of a.keys())for(let f of qn)a.has(d+f)&&l.union([d,d+f]);let c=l.map();for(let d of o)for(let f of qn){let u=c.get(d.tile+f);for(let h of u??[]){let p=a.get(h),m=ur.of({screen:e&255,tile:h+f,dest:p.dest,entrance:p.entrance});t.exits.push(m)}}}}var qn=[1,-1,16,-16];function Vn(r,s){let e=[...r.townWarp.locations].filter(l=>l!==255),t=s.nextInt(e.length),i=e[t],n=64;(i===r.locations.Shyron.id||i===r.locations.Shyron_Temple.id)&&(n=65),r.townWarp.thunderSwordWarp=[i,n];let o=768-e.length+t,a=r.itemGets[3].flags;for(let l=0;l<a.length;l++)if(a[l]===765){a[l]=o;return}a.push(o)}function jn(r,s,e){let t=new Set(le(256,o=>o).filter(o=>o in r.objects));for(let[o]of Dt)t.delete(o);for(let[o,a]of Dt)for(let l of t)r.objects[o].base===r.objects[l].base&&(Dt.set(l,a),t.delete(o));for(let o of[200,249,250])r.objects[o].attackType=o>240?254:255,r.objects[o].statusEffect=0;r.objects[125].elements|=8;let i=new Set([87,94,104,125,136,151,155,158]),n=new Set([80,83,95,105]);for(let[o,{sdef:a,swrd:l,hits:c,satk:d,dgld:f,sexp:u}]of Dt){let h=r.objects[o].data,p=i.has(o)?1:0;if(h[2]|=128,h[6]=c,h[7]=d,h[8]=a|l<<4,h[16]=h[16]&15|f<<4,h[17]=u,(p?s.shuffleBossElements():s.shuffleMonsterElements())&&!n.has(o)){let m=[...r.objects[o].elements.toString(2).padStart(4,"0")];e.shuffle(m),r.objects[o].elements=Number.parseInt(m.join(""),2)}}if(s.shuffleMonsterElements()){let o=e.nextInt(4);for(let a of n)r.objects[a].elements=1<<o}}var Dt=new Map([[63,"p","Sorceror shot",,,,19,,,],[75,"m","wraith??",2,,2,22,4,61],[79,"m","wraith",1,,2,20,4,61],[80,"m","Blue Slime",,,1,16,2,32],[81,"m","Weretiger",,,1,21,4,40],[82,"m","Green Jelly",4,,3,16,4,36],[83,"m","Red Slime",6,,4,16,4,48],[84,"m","Rock Golem",6,,11,24,6,85],[85,"m","Blue Bat",,,,4,,32],[86,"m","Green Wyvern",4,,4,24,6,52],[87,"b","Vampire",3,,12,18,,110],[88,"m","Orc",3,,4,21,4,57],[89,"m","Red Flying Swamp Insect",3,,1,21,4,57],[90,"m","Blue Mushroom",2,,1,21,4,44],[91,"m","Swamp Tomato",3,,2,35,4,52],[92,"m","Flying Meadow Insect",3,,3,23,4,81],[93,"m","Swamp Plant",,,,,,36],[94,"b","Insect",,1,8,6,,100],[95,"m","Large Blue Slime",5,,3,20,4,52],[96,"m","Ice Zombie",5,,7,14,4,57],[97,"m","Green Living Rock",,,1,9,4,28],[98,"m","Green Spider",4,,4,22,4,44],[99,"m","Red/Purple Wyvern",3,,4,30,4,65],[100,"m","Draygonia Soldier",6,,11,36,4,89],[101,"m","Ice Entity",3,,2,24,4,52],[102,"m","Red Living Rock",,,1,13,4,40],[103,"m","Ice Golem",7,2,11,28,4,81],[104,"b","Kelbesque",4,6,12,29,,120],[105,"m","Giant Red Slime",7,,40,90,4,102],[106,"m","Troll",2,,3,24,4,65],[107,"m","Red Jelly",2,,2,14,4,44],[108,"m","Medusa",3,,4,36,8,77],[109,"m","Red Crab",2,,1,21,4,44],[110,"m","Medusa Head",,,1,29,4,36],[111,"m","Evil Bird",,,2,30,6,65],[113,"m","Red/Purple Mushroom",3,,5,19,6,69],[114,"m","Violet Earth Entity",3,,3,18,6,61],[115,"m","Mimic",,,3,26,15,73],[116,"m","Red Spider",3,,4,22,6,48],[117,"m","Fishman",4,,6,19,5,61],[118,"m","Jellyfish",,,3,14,3,48],[119,"m","Kraken",5,,11,25,7,73],[120,"m","Dark Green Wyvern",4,,5,21,5,61],[121,"m","Sand Monster",5,,8,6,4,57],[123,"m","Wraith Shadow 1",,,,9,7,44],[124,"m","Killer Moth",,,2,35,,77],[125,"b","Sabera",3,7,13,24,,110],[128,"m","Draygonia Archer",1,,3,20,6,61],[129,"m","Evil Bomber Bird",,,1,19,4,65],[130,"m","Lavaman/blob",3,,3,24,6,85],[132,"m","Lizardman (w/ flail(",2,,3,30,6,81],[133,"m","Giant Eye",3,,5,33,4,81],[134,"m","Salamander",2,,4,29,8,77],[135,"m","Sorceror",2,,5,31,6,65],[136,"b","Mado",4,8,10,30,,110],[137,"m","Draygonia Knight",2,,3,24,4,77],[138,"m","Devil",,,1,18,4,52],[139,"b","Kelbesque 2",4,6,11,27,,110],[140,"m","Wraith Shadow 2",,,,17,4,48],[144,"b","Sabera 2",5,7,21,27,,120],[145,"m","Tarantula",3,,3,21,6,73],[146,"m","Skeleton",,,4,30,6,69],[147,"b","Mado 2",4,8,11,25,,120],[148,"m","Purple Giant Eye",4,,10,23,6,102],[149,"m","Black Knight (w/ flail)",3,,7,26,6,89],[150,"m","Scorpion",3,,5,29,2,73],[151,"b","Karmine",4,,14,26,,110],[152,"m","Sandman/blob",3,,5,36,6,98],[153,"m","Mummy",5,,19,36,6,110],[154,"m","Tomb Guardian",7,,60,37,6,106],[155,"b","Draygon",5,6,16,41,,110],[158,"b","Draygon 2",7,6,28,40,,,],[160,"m","Ground Sentry (1)",4,,6,26,,73],[161,"m","Tower Defense Mech (2)",5,,8,36,,85],[162,"m","Tower Sentinel",,,1,,,32],[163,"m","Air Sentry",3,,2,26,,65],[165,"b","Vampire 2",3,,12,27,,100],[164,"b","Dyna",6,5,32,,,,],[180,"b","dyna pod",6,5,48,26,,,],[184,"p","dyna counter",15,,,42,,,],[185,"p","dyna laser",15,,,42,,,],[186,"p","dyna bubble",,,,36,,,],[188,"m","vamp2 bat",,,,16,,15],[191,"p","draygon2 fireball",,,,26,,,],[193,"m","vamp1 bat",,,,16,,15],[195,"p","giant insect spit",,,,35,,,],[196,"m","summoned insect",4,,2,42,,98],[197,"p","kelby1 rock",,,,22,,,],[198,"p","sabera1 balls",,,,19,,,],[199,"p","kelby2 fireballs",,,,11,,,],[200,"p","sabera2 fire",,,1,6,,,],[201,"p","sabera2 balls",,,,17,,,],[202,"p","karmine balls",,,,25,,,],[203,"p","sun/moon statue fireballs",,,,39,,,],[204,"p","draygon1 lightning",,,,37,,,],[205,"p","draygon2 laser",,,,36,,,],[206,"p","draygon2 breath",,,,36,,,],[224,"p","evil bomber bird bomb",,,,2,,,],[226,"p","summoned insect bomb",,,,47,,,],[227,"p","paralysis beam",,,,23,,,],[228,"p","stone gaze",,,,33,,,],[229,"p","rock golem rock",,,,24,,,],[230,"p","curse beam",,,,10,,,],[231,"p","mp drain web",,,,11,,,],[232,"p","fishman trident",,,,15,,,],[233,"p","orc axe",,,,24,,,],[234,"p","Swamp Pollen",,,,37,,,],[235,"p","paralysis powder",,,,17,,,],[236,"p","draygonia solider sword",,,,28,,,],[237,"p","ice golem rock",,,,20,,,],[238,"p","troll axe",,,,27,,,],[239,"p","kraken ink",,,,24,,,],[240,"p","draygonia archer arrow",,,,12,,,],[241,"p","??? unused",,,,16,,,],[242,"p","draygonia knight sword",,,,9,,,],[243,"p","moth residue",,,,19,,,],[244,"p","ground sentry laser",,,,13,,,],[245,"p","tower defense mech laser",,,,23,,,],[246,"p","tower sentinel laser",,,,8,,,],[247,"p","skeleton shot",,,,11,,,],[248,"p","lavaman shot",,,,14,,,],[249,"p","black knight flail",,,,18,,,],[250,"p","lizardman flail",,,,21,,,],[252,"p","mado shuriken",,,,36,,,],[253,"p","guardian statue missile",,,,23,,,],[254,"p","demon wall fire",,,,23,,,]].map(([r,s,e,t=0,i=0,n=0,o=0,a=0,l=0])=>[r,{id:r,type:s,name:e,sdef:t,swrd:i,hits:n,satk:o,dgld:a,sexp:l}]));function Ol(r){console.log("flip sabera entrance");let s=r[0];s.set2d(113,[[s.rom.metascreens.deadEndE_upStair],[s.rom.metascreens.caveEmpty]]),s.moveExits([129,"stair:down",113,"stair:up"]),r[1]=113,r[2]="stair:up"}function Wl(r,s){console.log("flip karmine entrance");let e=r[0],t=e.rom.metascreens;e.set2d(32,[[t.caveEmpty,t.hallNS],[t.deadEndE_upStair,t.hallNW]]),e.replaceMonsters(s),e.moveExits([48,"stair:down",48,"stair:up"]),r[2]="stair:up"}function Nl(r){console.log("flip karmine exit");let s=r[0],e=s.rom.metascreens;s.set2d(1,[[e.deadEndS_stairs,e.caveEmpty]]),s.moveExits([2,"stair:down",1,"stair:up"]),r[1]=1,r[2]="stair:up"}function Ki(r){console.log("flip generic exit");let s=r[0],e=s.rom.metascreens;s.width<2&&(s.width=2),s.set2d(0,[[e.hallSE,e.deadEndW_downStair]]),s.moveExits([0,"stair:up",1,"stair:down"]),r[1]=1,r[2]="stair:down"}function Vi(r,s){r[3](r,s),r[3]=void 0}function Yn(r,s){let e=r.locations,t=[0,1,2,3];s.shuffle(t);let i=[[e.GoaFortress_Kelbesque.meta,131,"stair:down"],[e.GoaFortress_Sabera.meta,129,"stair:down",Ol],[e.GoaFortress_Mado1.meta,114,"stair:down"],[e.GoaFortress_Karmine1.meta,48,"stair:down",Wl]],n=[[e.GoaFortress_Zebu.meta,0,"stair:up",Ki],[e.GoaFortress_Tornel.meta,0,"stair:up",Ki],[e.GoaFortress_Asina.meta,0,"stair:up",Ki],[e.GoaFortress_Kensu.meta,2,"stair:down",Nl]],o=[[e.GoaFortress_Entrance.meta,0,"edge:top"]],a=[],l=!0,c=o[0];for(let d of t){let f=l||i[d][3]||o[o.length-1][3],u=f?s.pick([!1,!0]):!0;console.log(`FLOOR ${d}: up ${l} flexible ${!!f} reverse ${u}`);let h=u?n[d]:i[d];console.log(`push b ${r.locations[h[0].id].name}`),a.push(h),l!==(h[2]==="stair:down")&&(h[3]?Vi(h,s):Vi(c,s)),o.push(c=u?i[d]:n[d]),console.log(`push a ${r.locations[c[0].id].name}`),l=c[2]==="stair:up"}l&&Vi(c,s),a.push([e.GoaFortress_Exit.meta,1,"stair:up"]);for(let d=0;d<o.length;d++)o[d][0].attach(o[d][1],a[d][0],a[d][1],o[d][2],a[d][2])}var Dl=6,zl=33,ji=new Map([["pawn",54],["inn",55],["armor",56],["tool",57],["tavern",59]]),Ul=new Set(["inn","armor","tool","pawn"]),Zn=new Set([...Ul,"house","tavern"]);function Jn(r,s,e){let{locations:{Crypt_Hall1:t,Goa:i,GoaFortress_Exit:n,Shyron:o},metascreens:{squareTownNE_house:a,fortressTownEntrance:l,mountainPathE_gate:c}}=r,d=new Set([i.id,o.id]),f=new Set([a.data.id,l.data.id,c.data.id]);if(s.shuffleAreas())for(let b of[i,n,o,t])b.data.houseType="palace";let u=new U(()=>[]),h=new U(()=>[]),p=new U(()=>new Set);for(let b of r.locations){if(!b.used||b.data.houseType==null)continue;let x;for(let[E,k,A]of b.meta.exits()){let S=(E&240)<<4|b.meta.get(E).findExitByType(k).entrance>>>8;(!x||S>x[3])&&(x=[E,k,A,S])}for(let[E,k,A]of[x]){let S={type:b.data.houseType,inside:[b.id<<8|E,k],outside:A},M=A[0];h.get(M).push(S),u.get(b.data.houseType).push(S);let G=r.locations[M>>>8].screens[M>>>4&15][M&15];p.get(G).add(M)}}let m=new Map,g=new Map;for(let[b,x]of e.ishuffle(p))x.size>=2||f.has(b)?g.set(b,x):m.set(b,x);let y=new Set,w=u.get("inn");for(let[,b]of[...g,...m]){let x=new Map,E=!0;for(let k of b){for(let A of h.get(k)){let S=E&&Zn.has(A.type)?[...Zn].map(N=>u.get(N)):[u.get(x.get(A.outside[1])??A.type)];S=S.filter(N=>N.length),A.type==="palace"&&d.has(A.outside[0]>>>8)&&(S=S.map(N=>N.filter(L=>!d.has(L.inside[0]>>>8))));let M=[...b].every(N=>!y.has(N>>>8));!M&&S.length>1?S=S.filter(N=>N!==w):M&&S.some(N=>N===w)&&(S=[w]);let G=e.pickAndRemove(...S);if(G.type==="inn")for(let N of b)y.add(N>>>8);if(x.set(A.outside[1],G.type),r.spoiler&&r.spoiler.addHouse(G.inside[0]>>>8,A.outside[0]>>>8),Be.connect(r,A.outside,G.inside),!E||ji.get(A.type)===ji.get(G.type))continue;let Z=r.locations[A.outside[0]>>>8];if(Z.meta.tileset!==r.metatilesets.town)continue;let Q=Be.findExitTiles(r,A.outside);if(Q.length>1)continue;let _=Q[0]-32;(Q[0]&240)<32&&(_-=3856);let ie=_>>8,K=_&255,ue=ji.get(G.type)??(Z.meta.get(ie).data.tallHouses?.includes(K)?zl:Dl);r.screens[Z.screens[ie>>4][ie&15]].tiles[K]=ue}E=!1}}}function Xn(r,s,e){let t=[],i=[];for(let n of r.locations)if(!Hl.has(n.id)){for(let o of n.spawns)if(o.isChest()){let a=r.slots[o.id];if(a>=112&&i.push(o.id),s.preserveUniqueChecks()){let l=r.itemGets[a];if(r.items[l?.itemId]?.unique)continue}if(o.isInvisible())continue;t.push(o.id)}}e.shuffle(t),r.slots.setMimicCount(i.length),[...he.zip(i,t,(n,o)=>r.slots.swap(n,o))]}var Hl=new Set([182]);function Qn(r,s){for(let e of r.locations)(e.id&248)!==88&&e.meta.replaceMonsters(s)}var Xs=class{constructor(s){this.rom=s;this.monsterConstraints=new Map;this.npcConstraints=new Map;this.allSpritePalettes=new Set;let e=new U(()=>[]);for(let t of s.locations)if(!!t.used)for(let i=0;i<t.spawns.length;i++){let n=t.spawns[i];!n.used||(n.isMonster()?e.get(n.monsterId).push([t,i,n]):(n.isNpc()||n.isBoss())&&e.get(~n.id).push([t,i,n]))}for(let[t,i]of e)if(t<0){let n=s.npcs[~t],o=[n.data[3]];if(!s.metasprites[o[0]])throw new Error(`bad NPC: ${~t}`);n.data[2]===208&&o.push(192);let l=n.data[2]<128?n.data[2]&112:0,c=this.computeConstraint(o,i,!0,l);~t===95&&(c=c.ignorePalette()),this.npcConstraints.set(~t,c)}else{let n=me.ALL,o=this.rom.objects[t];for(let a of Yi(s,o)){let c=s.objectActions[a.action]?.data.metasprites||(()=>[a.metasprite]),d=this.computeConstraint(c(a),i,a.id===t,a.data[1]),f=n.meet(d);if(!f)throw new Error(`Bad meet for ${t} with ${a.id}`);if(f&&(n=f),a.data[4]&2){let u=this.computeConstraint([a.data[20]],i,!1,a.data[1]),h=n.meet(u);if(!h)throw new Error(`Bad meet for ${t} bonus ${a.id}`);n=h}}this.monsterConstraints.set(o.id,n),o.constraint=n}}getMonsterConstraint(s,e){let t=this.monsterConstraints.get(e)||me.NONE;return(s&88)===88||!this.rom.objects[e].goldDrop?t:t.meet(me.COIN)||me.NONE}getNpcConstraint(s,e){let t=this.npcConstraints.get(e)||me.NONE;return s===30&&e===96?t.meet(me.STOM_FIGHT):s===160&&e===201?t.meet(me.GUARDIAN_STATUE):t}shufflePalettes(s){let e=[...this.allSpritePalettes];for(let[t,i]of this.monsterConstraints)this.monsterConstraints.set(t,i.shufflePalette(s,e));for(let[t,i]of this.npcConstraints)this.npcConstraints.set(t,i.shufflePalette(s,e))}configure(s,e){if(!e.used)return;let t=this.rom.slots[e.id],i=e.isMonster()?this.monsterConstraints.get(e.monsterId):e.isNpc()?this.npcConstraints.get(e.id):e.isChest()?t<112?me.TREASURE_CHEST:me.MIMIC:void 0;if(!!i){if(i.shift===3||i.float.length>=2)throw new Error("don't know what to do with two floats");if(!i.float.length)e.patternBank=Number(i.shift===2);else if(i.float[0].has(s.spritePatterns[0]))e.patternBank=0;else if(i.float[0].has(s.spritePatterns[1]))e.patternBank=1;else if(e.isMonster())throw new Error("no matching pattern bank")}}computeConstraint(s,e,t,i=0){let n=new Set,o=new Set;for(let c of s.map(d=>this.rom.metasprites[d])){for(let d of c.palettes())o.add(d);for(let d of c.patternBanks(i))n.add(d)}t=t&&n.size==1&&[...n][0]===2;let a=new Map;for(let[c,,d]of e)a.set(d.patternBank&&t?~c.id:c.id,d);let l;for(let[c,d]of a){let f=this.rom.locations[c<0?~c:c];for(let h of o)h>1&&this.allSpritePalettes.add(f.spritePalettes[h-2]);let u=me.fromSpawn(o,n,f,d,t);l=l?l.join(u):u,!t&&d.patternBank&&(l=l.shifted())}if(!l)throw new Error("Expected child to appear");return l}};function*Yi(r,s){yield s;let e=s.spawnedReplacement();e&&(yield*Yi(r,e));let t=s.spawnedChild();t&&(yield*Yi(r,t)),s.id===80&&(yield r.objects.largeBlueSlime),s.id===83&&(yield r.objects.largeRedSlime)}function $n(r,s,e){let t=new Xs(r);s.shuffleSpritePalettes()&&t.shufflePalettes(e);let i=new Ji(s,{});for(let n of r.locations)n.used&&i.populate(n);i.shuffle(e,t)}var Ji=class{constructor(s,e){this.flags=s;this.report=e;this.monsters=[];this.used=[];this.locations=[]}populate(s){let{maxFlyers:e=0,nonFlyers:t={},skip:i=!1,tower:n=!1,fixedSlots:o={},...a}=_n[s.id]||{};for(let u of Object.keys(a))throw new Error(`Unexpected property '${u}' in MONSTER_ADJUSTMENTS[${s.id}]`);let l=i===!0||!this.flags.shuffleTowerMonsters()&&n||!s.spritePatterns||!s.spritePalettes,c=[],d=[],f=12;for(let u of l?[]:s.spawns){if(++f,!u.used||!u.isMonster())continue;let h=u.monsterId;if(!Dt.has(h)||Dt.get(h).type!=="m")continue;let p=s.rom.objects[h];if(!(p instanceof ht))continue;let m=u.patternBank,g=s.spritePatterns[m],y=p.palettes(!0),w=y.includes(2)?s.spritePalettes[0]:void 0,b=y.includes(3)?s.spritePalettes[1]:void 0;c.push({id:h,pat:g,pal2:w,pal3:b,patBank:m}),(this.report[`start-${h.toString(16)}`]=this.report[`start-${h.toString(16)}`]||[]).push("$"+s.id.toString(16)),d.push(f)}(!c.length||i)&&(d=[]),this.locations.push({location:s,slots:d}),this.monsters.push(...c)}shuffle(s,e){let t=e.rom;for(this.report["pre-shuffle locations"]=this.locations.map(i=>i.location.id),this.report["pre-shuffle monsters"]=this.monsters.map(i=>i.id),s.shuffle(this.locations),s.shuffle(this.monsters),this.report["post-shuffle locations"]=this.locations.map(i=>i.location.id),this.report["post-shuffle monsters"]=this.monsters.map(i=>i.id);this.locations.length;){let{location:i,slots:n}=this.locations.pop(),o=this.report["$"+i.id.toString(16).padStart(2,"0")]=[],{maxFlyers:a=0,nonFlyers:l={},tower:c=!1}=_n[i.id]||{};if(c)continue;let d=a,f=me.forLocation(i.id);i.bossId()!=null;for(let m of i.spawns)if(m.isChest()&&!m.isInvisible())t.slots[m.id]<112?f=f.meet(me.TREASURE_CHEST,!0):f=f.meet(me.MIMIC,!0);else if(m.isNpc()||m.isBoss()){let g=e.getNpcConstraint(i.id,m.id);f=f.meet(g,!0),m.isNpc()&&(m.id===107||m.id===104)&&(f=f.meet(me.KENSU_CHEST,!0))}else if(m.isMonster()&&!(t.objects[m.monsterId]instanceof ht)){let g=e.getMonsterConstraint(i.id,m.monsterId);f=f.meet(g,!0)}else m.isShootingWall(i)&&(f=f.meet(me.SHOOTING_WALL,!0));o.push(`Initial pass: ${f.fixed.map(m=>m.size<1/0?"["+[...m].join(", ")+"]":"all")}`);let u=new Map,h=m=>{let g=t.objects[m.id];if(g.monsterClass){let M=u.get(g.monsterClass);if(M!=null&&M!==m.id)return!1}let y=Zi.has(m.id),w=ql.has(m.id);if(y){if(!d)return!1;--d}let b=e.getMonsterConstraint(i.id,m.id),x=f.tryMeet(b);if(!x&&f.pal2.size<1/0&&f.pal3.size<1/0&&this.flags.shuffleSpritePalettes()&&(x=f.tryMeet(b,!0)),!x)return!1;let E;if(p){let M=t.objects[m.id];if(!(M instanceof ht))throw new Error(`non-monster: ${M}`);if(E=p(M),E==null)return!1}o.push(`  Adding ${m.id.toString(16)}: ${x}`),f=x,g.monsterClass&&u.set(g.monsterClass,m.id);let k=0;if(y||w){for(let M=0;M<n.length;M++)if(n[M]in l){k=M;break}}else for(let M=0;M<n.length;M++)if(!(n[M]in l)){k=M;break}(this.report[`mon-${m.id.toString(16)}`]=this.report[`mon-${m.id.toString(16)}`]||[]).push("$"+i.id.toString(16));let A=n[k],S=i.spawns[A-13];return y?(S.data[0]=253,S.data[1]=255):p?(S.screen=E>>>8,S.tile=E&255):A in l&&(S.y+=l[A][0]*16,S.x+=l[A][1]*16),S.monsterId=m.id,o.push(`    slot ${A.toString(16)}: ${S}`),n.splice(k,1),!0},p=i.monstersMoved||n.length&&this.flags.randomizeMaps()?i.monsterPlacer(s):null;if(d&&n.length)for(let m=0;m<Math.min(40,this.monsters.length);m++)Zi.has(this.monsters[m].id)&&h(this.monsters[m])&&this.monsters.splice(m,1);for(let m=0;m<this.monsters.length&&n.length;m++)if(h(this.monsters[m])){let[g]=this.monsters.splice(m,1);Zi.has(g.id)||this.used.push(g),m--}for(let m=0;m<this.used.length&&n.length;m++)h(this.used[m])&&(this.used.push(...this.used.splice(m,1)),m--);if(f.fix(i,s),n.length){console.error(`Failed to fill location ${i.id.toString(16)} ${i.name}: ${n.length} remaining`);for(let m of n){let g=i.spawns[m-13];g.x=g.y=0,g.id=176,g.data[0]=254}}for(let m of i.spawns)e.configure(i,m)}}},Zi=new Set([89,92,110,111,129,138,163,196]),ql=new Set([85,93,124,188,193]),_n={[3]:{fixedSlots:{pat1:96},maxFlyers:2},[7]:{nonFlyers:{[15]:[0,-3],[16]:[-10,0],[17]:[0,4]}},[20]:{maxFlyers:2},[21]:{maxFlyers:2},[26]:{fixedSlots:{pal3:35,pat1:79},maxFlyers:2,nonFlyers:{[16]:[4,0],[17]:[5,0],[18]:[4,0],[19]:[5,0],[20]:[4,0],[21]:[4,0]}},[27]:{skip:!0},[32]:{maxFlyers:1},[33]:{fixedSlots:{pat1:80},maxFlyers:1},[39]:{nonFlyers:{[13]:[0,16]}},[40]:{maxFlyers:1},[41]:{maxFlyers:1},[43]:{nonFlyers:{[20]:[32,-8]}},[64]:{maxFlyers:2,nonFlyers:{[19]:[12,-16]}},[65]:{maxFlyers:2,nonFlyers:{[21]:[0,-6]}},[66]:{maxFlyers:2,nonFlyers:{[13]:[0,8],[14]:[-8,8]}},[71]:{maxFlyers:1,nonFlyers:{[13]:[-8,-8]}},[74]:{maxFlyers:1,nonFlyers:{[14]:[4,0],[15]:[0,-3],[16]:[0,4]}},[76]:{},[77]:{maxFlyers:1},[78]:{maxFlyers:1},[79]:{},[87]:{fixedSlots:{pat1:77}},[89]:{tower:!0},[90]:{tower:!0},[91]:{tower:!0},[96]:{fixedSlots:{pal3:8,pat1:82},maxFlyers:2,skip:!0},[100]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[104]:{fixedSlots:{pal3:8,pat1:82},skip:!0},[105]:{maxFlyers:1,nonFlyers:{[23]:[4,6]}},[106]:{maxFlyers:1,nonFlyers:{[21]:[0,24]}},[108]:{maxFlyers:1,nonFlyers:{[23]:[0,24]}},[109]:{maxFlyers:1,nonFlyers:{[17]:[16,0],[27]:[0,0],[28]:[6,0]}},[120]:{maxFlyers:1,nonFlyers:{[22]:[-8,-8]}},[124]:{maxFlyers:1,nonFlyers:{[21]:[-39,84]}},[132]:{nonFlyers:{[18]:[0,-4],[19]:[0,4],[20]:[-6,0],[21]:[14,12]}},[136]:{maxFlyers:1},[137]:{maxFlyers:1},[138]:{maxFlyers:1,nonFlyers:{[13]:[7,0],[14]:[0,0],[15]:[7,3],[16]:[0,6],[17]:[11,-16]}},[143]:{skip:!0},[144]:{maxFlyers:2,nonFlyers:{[20]:[-11,-3],[21]:[0,16]}},[145]:{maxFlyers:2,nonFlyers:{[24]:[0,14],[25]:[4,-16]}},[152]:{maxFlyers:2,nonFlyers:{[20]:[-6,6],[21]:[0,-16]}},[158]:{maxFlyers:2},[162]:{maxFlyers:1,nonFlyers:{[18]:[0,11],[19]:[6,0]}},[165]:{nonFlyers:{[23]:[6,6],[24]:[-6,0],[25]:[-1,-7]}},[166]:{skip:!0},[168]:{skip:!0},[169]:{maxFlyers:2,nonFlyers:{[22]:[26,-16],[23]:[0,32]}},[171]:{maxFlyers:2,nonFlyers:{[13]:[1,0],[14]:[2,-2]}},[173]:{maxFlyers:2,nonFlyers:{[24]:[0,8],[25]:[0,-8]}},[175]:{nonFlyers:{[13]:[0,0],[14]:[0,0],[19]:[59,-38]}},[180]:{maxFlyers:2,nonFlyers:{[17]:[6,0],[18]:[0,6]}},[215]:{skip:!0}};function Qi(r,s,e){new Xi(r,s,e).shuffle()}var Xi=class{constructor(s,e,t){this.rom=s;this.flags=e;this.random=t}shuffle(){this.shuffleBackgrounds()}shuffleBackgrounds(){let s=new U(()=>[]);for(let t of this.rom.locations)!t.tilePalettes.some(i=>i!==154)||s.get(t.colorGroup).push(t);let e=[new Map,new Map];for(let t of s.values())for(let i of t)for(let n=0;n<2;n++)for(let o=0;o<2;o++){let a=e[n].get(i.tilePatterns[o]);a||e[n].set(i.tilePatterns[o],a=new Set),a.add(i.tilePalettes[n])}for(let t of s.values()){let i=t[0],n=[new Set,new Set];for(let l=0;l<2;l++)n[l]=new Set([...e[l].get(i.tilePatterns[0]),...e[l].get(i.tilePatterns[1])]);let o=this.random.pick([...n[0]]),a=this.random.pick([...n[1]]);for(let l of t)l.tilePalettes[0]=o,l.tilePalettes[1]=a}}};function es(r,s){s.eastCave?Kl(r,s.eastCave):s.classicLimeTreeToLeaf&&Vl(r),jl(r),Yl(r),Xl(r),Ql(r),Zl(r)}(s=>{function r(e,t){let i={};if(e.addEastCave()){i.eastCave={};let n=["cordel","lime","goa","desert"],o=t.nextInt(4);[i.eastCave.exit1]=n.splice(o,1),i.eastCave.exit2=t.pick(n)}else e.connectLimeTreeToLeaf()&&(i.classicLimeTreeToLeaf=!0);return i}s.generateOptions=r})(es||(es={}));function Kl(r,s){let{locations:{EastCave1:e,EastCave2:t,EastCave3:i,SealedCave1:n,ValleyOfWind:o},metascreens:{boundaryE_cave:a,branchNSE:l,branchNWE:c,branchNWSE:d,branchNWS:f,branchWSE:u,caveEmpty:h,deadEndE:p,deadEndE_downStair:m,deadEndE_upStair:g,deadEndN_stairs:y,deadEndS:w,deadEndS_stairs:b,deadEndW:x,deadEndW_downStair:E,hallNE:k,hallNS:A,hallNW:S,hallSE:M,hallWS:G,hallWE:Z,hallNS_entrance:Q,hallNS_ramp:_,hallNS_wall:ie}}=r;r.locations.allocate(e),r.locations.allocate(t),s.exit2&&r.locations.allocate(i);for(let K of[e,t,i])K.bgm=K.originalBgm=23,K.entrances=[],K.exits=[],K.pits=[],K.spawns=[],K.flags=[],K.width=K.height=1,K.screens=[[128]],K.tilePalettes=[26,27,5],K.originalTilePalettes=[26,27,5],K.tileset=136,K.tileEffects=181,K.tilePatterns=[20,2],K.spritePatterns=[...n.spritePatterns],K.spritePalettes=[...n.spritePalettes];e.meta=new Be(e.id,r.metatilesets.cave,5,5),e.meta.set2d(0,[[p,G,h,M,x],[h,A,M,S,h],[M,d,f,h,h],[A,_,k,Z,G],[Q,k,x,g,S]]),t.meta=new Be(t.id,r.metatilesets.cave,5,5),t.meta.set2d(0,[[p,G,w,h,w],[h,A,A,h,A],[h,l,c,u,S],[h,_,h,k,G],[p,S,h,h,y]]),o.meta.set2d(51,[[a]]),r.tileEffects[0].effects[192]=0,e.meta.attach(67,t.meta,68),e.meta.attach(64,o.meta,51),s.exit1&&(e.meta.set2d(4,[[E]]),eo(e,4,s.exit1)),s.exit2&&(i.meta=new Be(i.id,r.metatilesets.cave,3,1),i.meta.set2d(0,[[b],[ie],[Q]]),i.spawns.push(J.from([24,7,35,0])),i.flags.push(mr.of({screen:16,flag:r.flags.alloc(512)})),t.meta.set2d(64,[[m]]),t.meta.attach(64,i.meta,0),eo(i,32,s.exit2)),e.spawns.push(J.of({screen:33,tile:135,timed:!0,id:2}),J.of({screen:18,tile:136,timed:!1,id:2}),J.of({screen:19,tile:137,timed:!0,id:2}),J.of({screen:50,tile:104,timed:!1,id:2}),J.of({screen:65,tile:136,timed:!0,id:2}),J.of({screen:51,tile:152,timed:!0,id:2}),J.of({screen:3,tile:136,timed:!0,id:2})),t.spawns.push(J.of({screen:1,tile:136,timed:!0,id:2}),J.of({screen:17,tile:72,timed:!1,id:2}),J.of({screen:18,tile:119,timed:!0,id:2}),J.of({screen:20,tile:40,timed:!1,id:2}),J.of({screen:35,tile:133,timed:!0,id:2}),J.of({screen:49,tile:136,timed:!0,id:2}),J.of({screen:51,tile:138,timed:!1,id:2}),J.of({screen:52,tile:152,timed:!0,id:2}),J.of({screen:65,tile:130,timed:!0,id:2}),J.of({y:272,x:1144,type:2,id:89}),J.of({y:112,x:264,type:2,id:124})),r.slots.swap(49,89)}function eo(r,s,e){let{locations:{CordelPlainEast:t,CordelPlainWest:i,Desert2:n,GoaValley:o,LimeTreeValley:a},metascreens:{bendNE:l,bendSE:c,boundaryN_trees:d,boundaryW_cave:f,cornerNE:u,cornerNW:h,cornerSE:p,cornerSE_cave:m,cornerSW:g}}=r.rom,y,w;switch(e){case"lime":y=a,w=16,y.resizeScreens(0,1,0,0),y.meta.spliceColumns(0,1,2,[[h,d],[f,c],[g,p]]);break;case"cordel":let b=[[f,c],[g,p]];y=t,w=85,y.meta.set2d(85,b),i.meta.set2d(85,b);break;case"goa":y=o,w=17,y.meta.set2d(1,[[h,u],[f,l]]);break;case"desert":y=n,w=83,y.meta.set2d(83,[[m]]);break}r.meta.attach(s,y.meta,w)}function Vl(r){let{locations:{ValleyOfWind:s,LimeTreeValley:e},metascreens:{exitE:t,exitW_southwest:i,overworldEmpty_alt:n}}=r;s.meta.set2d(84,[[t]]),e.meta.set2d(16,[[i],[n]]),s.meta.attach(84,e.meta,16)}function jl(r){let{TowerEntrance:s,Crypt_Teleporter:e}=r.locations;e.meta.attach(0,s.meta,0,"teleporter","teleporter")}function Yl(r){let{flags:{OpenedSwanGate:s},locations:{SwanGate:e},npcs:{SoldierGuard:t}}=r;e.spawns.push(J.of({xt:10,yt:2,type:1,id:45}),J.of({xt:11,yt:2,type:1,id:45})),t.localDialogs.get(e.id)[0].flags.push(s.id)}function Zl(r){Jl(r.locations.SaberaPalace2_West,r.locations.SaberaPalace2,0,1,16,32,48,49,65,81,97)}function Jl(r,s,...e){r.rom.locations.allocate(r,s),r.bgm=s.bgm,r.entrances=[],r.exits=[],r.pits=[],r.spawns=[],r.flags=[],r.width=r.height=1,r.screens=[[128]],r.tilePalettes=qt(s.tilePalettes),r.originalTilePalettes=qt(s.originalTilePalettes),r.tileset=s.tileset,r.tileEffects=s.tileEffects,r.tilePatterns=qt(s.tilePatterns),r.spritePatterns=qt(s.spritePatterns),r.spritePalettes=qt(s.spritePalettes);let i=0,n=0;for(let a of e)i=Math.max(i,(a>>>4)+1),n=Math.max(n,(a&15)+1);r.meta=new Be(r.id,s.meta.tileset,i,n);for(let a of e)r.meta.set(a,s.meta.get(a)),s.meta.set(a,s.meta.tileset.empty);let o=new Set(e);r.flags=s.flags.filter(a=>o.has(a.screen)),s.flags=s.flags.filter(a=>!o.has(a.screen)),r.spawns=s.spawns.filter(a=>o.has(a.screen)),s.spawns=s.spawns.filter(a=>!o.has(a.screen)),s.meta.moveExitsAndPitsTo(r.meta)}function Xl(r){let s=r.locations.GoaFortress_Kensu.meta;for(let[e,t]of s.exits())e<16||t.startsWith("seamless")||s.deleteExit(e,t)}function Ql(r){r.locations.ZebuCave.spawns.find(s=>s.isTrigger()).yt+=3}var _l=["!Random Key","!Curious Key","!Bronze Key","!Silver Key","!Golden Key","!Ancient Key","!Small Key","!Shiny Key","!Mysterious Key","!Magic Key","!Backdoor Key","!Skeleton Key","Piano Key","Encryption Key","Private Key","Public Key","Key Card","Any Key","Space Bar","Return Key","Imaginary Key","Giant Key","Out of Key","Key of C","Key of G","Key of B Flat","Key of F Sharp","Lockpick","Transponder Key","Sharp Key","Flat Key","Locke and Key","Major Key","Minor Key","Cookie","Turkey","Monkey","Ctrl Key","Escape Key","Car Key","Clock Key","Florida Key","Key Lime Pie","Keystone","Answer Key"],$l=["!Random Flute","!Wooden Flute","!Metal Flute","!Piccolo","Horn of Plenty","!Ocarina","Fairy Ocarina","Ocarina of Time","!Pan Pipes","!Bugle","!Bagpipes","Kazoo","Lute","Harp","Guitar","Electric Guitar","!Tin Whistle","Magic Whistle","Dog Whistle","!Recorder","!Accordion","!Harmonica","Sousaphone","Trumpet","French Horn","Trombone","Euphonium","Tuba","Clarinet","Saxophone","Oboe","Bassoon","Violin","Viola","Cello","Theramin","Synthesizer","Moog Synth","Piano","Harpsichord","Pipe Organ","Note Block","Snare Drum","Xylophone","Marimba","Tambourine","Tornelsbane","Flute of Power"],ed=["!Random Lamp","!Bronze Lamp","!Silver Lamp","!Gold Lamp","!Oil Lamp","!Magic Lamp","Genie Lamp","Dull Lamp","Desk Lamp","Shimmering Lamp","Broken Lamp","Brass Lantern","Overhead Lamp","Pedestal Lamp","Incubation Lamp","Fluorescent Lamp","Ultraviolet Lamp","Heat Lamp","Recessed Lighting","Laser Pointer","Spotlight","Flashlight","Search Light","Batsignal","Candelabra","Chandelier","Birthday Candle","Tallow Candle","Wax Candle","Tanning Bed","CRT"],td=["!Random Statue","!Rusty Statue","!Forbidden Statue","Golden Idol","!Strange Statue","!Glass Statue","!Copper Statue","!White Statue","Invisible Statue","Burt Figurine","Draygon Figurine","Karmine Figurine","Mado Figurine","Sabera Figurine","Kelbesque Figurine","Flail Guy Trophy","Metroid Amiibo","Model of Dyna","Jeff Peters Statue","M. Toki Statue","Statue of Liberty","Colossus of Rhodes","Mattrick Figurine","Dragondarch Statue","Overswarm Statue","Trueblue83 Statue","TheAxeMan Idol","Acmlm Figurine","CodeGorilla Trophy"],sd=["!Random Bow","Crossbow","Autocrossbow","Long Bow","Compound Bow","Silver Arrows","Wooden Bow","Violin Bow","Tae Bo","Botox","Bo Derek","Bo Diddley","Bo Dallas","Rainbow","Hair Bow","Bow Tie","!Bow of Earth","!Bow of Stars","!Bow of Wind","!Bow of Fire","!Bow of Water","!Bow of Thunder","!Bow of Light","!Bow of Darkness","Bow of Lies","Bow of Life","Bow of Death","Bow of Freedom","JBowe","KLINGSBO","LILLABO","SVALBO","Buriza-Do Kyanon","Windforce","Eaglehorn"];function to(r,s,e){if(!s.unidentifiedItems())return;let t=(...c)=>c.map(d=>r.items[d]),i=t(50,51,52),n=t(39,40,49,54),o=t(53,57),a=t(37,56,58,61),l=t(62,63,64);for(let[c,[...d]]of[[i,_l],[n,$l],[o,ed],[a,td],[l,sd]]){let f=(s.communityJokes()?d:d.filter(h=>h.startsWith("!"))).map(h=>h.replace(/^!/,""));e.shuffle(f);let u=e.shuffle([0,1,2,3]);for(let h of c){let p=f.pop();r.spoiler&&r.spoiler.addUnidentifiedItem(h.id,h.messageName,p),h.menuName=h.messageName=p,h.palette=u.pop()}}}var id=new Map([["Sword of Wind",["Sord of Wind","Sowrd of Wind","Sword of Wien"]],["Sword of Fire",["Sword of Frirer"]],["Sword of Water",["Horde of Otters"]],["Sword of Thunder",["Sorg of Chunker"]],["Flame Bracelet",["Fame Bracelet"]],["Storm Bracelet",["Stom Bracelet"]],["Sacred Shield",["Scared Shield"]],["Bow of Truth",["Bow of Strewth"]],["Statue of Onyx",["Statue of Onxy"]],["Ivory Statue",["Ivory Statute"]],["Fog Lamp",["Frog Lamp","Smog Lamp","Dog Lamp","Bog Lamp","Fog Lump"]],["Glowing Lamp",["Glowing Lump"]],["Key to Stxy",["Key to Styx"]],["Insect Flute",["Bug Flute","Bug Whistle"]],["Flute of Lime",["Flute of Grime"]],["Iron Necklace",["I Ron Necklace"]],["Shield Ring",["Sho Ring"]],["Deo's Pendant",["Rabbit Necklace","Bunny Pendant"]],["Speed Boots",["Hermes Sandals"]],["Rabbit Boots",["Deo's Boots","Jumping Boots","Rabid Boots"]],["Alarm Flute",["Pocket Rooster","Alarm Clock"]],["Shell Flute",["Conch Shell","Dolphin Flute"]],["Eye Glasses",["3D Glasses","X-Ray Goggles"]],["Kirisa Plant",["Kilika Plant"]],["Refresh",["Refresherize","Cure","Cura","Curaga"]],["Recover",["Recoverize","Esuna"]],["Paralysis",["Paralycize","Stop","Pew Pew"]],["Telepathy",["Telepathize","Clairvoyance","ESP","Head Talk"]],["Teleport",["Teleportate","Warp","Go"]],["Change",["Changeify","Transform","Disguise"]],["Barrier",["Barrierize","Protect","Wall","Shield"]],["Flight",["Flyify","Blight","Super Jump"]],["Fruit of Lime",["Fruit of Crime","Gold Needle","Soft"]],["Medical Herb",["Potion","Hi Potion"]],["Fruit of Repun",["Anti-Slime Pill","Maiden's Kiss"]]]),rd=new Map([["Aryllis",["Mimic Queen"]],["Akahana",["Steve","Jerkahana","Mashamahana"]],["Asina",["Athena","Jrowina"]],["Azteca",["Steve"]],["Clark",["Steve","Fred","Mattrick","Clarktrick"]],["Deo",["Steve"]],["Kelbesque",["Linebacker"]],["Kensu",["Steve","Jerksu"]],["Karmine",["Slimelord"]],["Nadare",["Steve"]],["Mado",["Steve"]],["Rage",["Steve"]],["Sabera",["Flamelord"]],["Stom",["Steve"]],["Tornel",["Steve"]],["Zebu",["Steve","Pervy Old Man"]]]),nd=new Map([["Poison Slime",["Mattrick Slime"]],["Mud Golem",["Bear"]],["Axe Wereboar",["The Axeman"]],["Pillbug",["Tomato"]],["Ice Golem",["Polar Bear"]],["Flail Guy",["Kfal's Dude"]],["Flail Knight",["Kfal's Knight"]],["Flying Plant",["Obnoxious Turnip"]],["Beholder",["Floating Eye"]],["Burt",["Bert","Bort","Sorceror"]],["Mummy",["Tornel Hugger"]],["Robot Sentry",["C-3PO","T-1000","Johnny 5"]],["Robot Enforcer",["ED-209","R2-D2","Agent Smith"]],["Robocopter",["Cylon Drone","Megatron","Roflcopter","Roflcopter","Roflcopter"]],["DYNA",["GLaDOS","HAL-9000","Multivac"]]]);function so(r,s,e){!s.communityJokes()||(od(r,s,e),ld(r,e),dd(r,e))}function od(r,s,e){if(s.unidentifiedItems()||"sphereAnalysis"in globalThis)return;let t=e.next()<.05?r.items:[r.items[e.nextInt(72)]];for(let i of t){if(!i)continue;let n=id.get(i.messageName)||[],o=Math.floor(e.nextInt(3*n.length+1)/3);o<n.length?i.messageName=i.menuName=n[o]:i.messageName===i.menuName&&(i.messageName=i.menuName=_i(i.messageName,e))}}function _i(r,s){let e=r.split(""),t=s.nextInt(e.length-1);return e[t]===" "||e[t+1]===" "?r:(e[t].toUpperCase()===e[t]?e.splice(t+1,1):[e[t],e[t+1]]=[e[t+1],e[t]],e.join(""))}function io(r,s){for(let e of r.messages.parts)for(let t of e)t.text=s(t.text);r.messages.personNames=r.messages.personNames.map(s),ad(r,s)}function ro(r,s){return e=>e.includes(r)?e.split(r).join(s):e}function ad(r,s){for(let e of r.objects)e.displayName&&(e.displayName=s(e.displayName))}function ld(r,s){let e=r.messages.parts[0][24];e.text="Rachel: "+e.text.replace("is the village of","village is");let t=[...rd].flatMap(([a,l])=>["",...l,...l].map(c=>[a,c])),[i,n]=s.pick(t),o=n||_i(i,s);o!==i&&io(r,ro(i,o))}function dd(r,s){for(let e=0;e<10;e++){let[t,i]=s.pick([...nd]),o=s.pick(["",...i,...i,...i])||_i(t,s);o!==t&&io(r,ro(t,o))}}function no(r){let{locations:s}=r,{CordelPlainEast:e,CordelPlainWest:t,WaterfallValleyNorth:i,WaterfallValleySouth:n,MezameShrine:o,MtSabreWest_Cave1:a}=s;e.meta.reconcileExits(t.meta);for(let l of i.meta.allPos()){let c=i.meta.get(l),d=n.meta.get(l);c.isEmpty()&&!d.isEmpty()?i.meta.set(l,d):d.isEmpty()&&!c.isEmpty()&&n.meta.set(l,c)}for(let l of s)!l.used||(l.exits=[],l.entrances=[],l.meta.writeEntrance0());o.meta.getExit(0,"door")||o.meta.attach(0,o.meta,0,"door","door");for(let l of s)!l.used||l!==a&&(l.meta.write(),l===t&&a.used&&a.meta.write())}var Qs=class{constructor(s){this.rom=s;this.slots=[];this.route=[];this.mazes=[];this.trades=[];this.walls=[];this.unidentifiedItems=[];this.wildWarps=[];this.houses=[];this.flags=""}addCheck(s,e){this.route.push(new $i(this,s,e))}addSlot(s,e,t){this.slots[s&255]=new er(this.rom,s&255,e,t&255)}addMaze(s,e,t){this.mazes.push({id:s,name:e,maze:t})}addTrade(s,e,t){this.trades.push({itemId:s,item:e,npc:t})}addUnidentifiedItem(s,e,t){this.unidentifiedItems.push({itemId:s,oldName:e,newName:t})}addWall(s,e,t){this.walls.push({location:s,oldElement:e,newElement:t})}addWildWarp(s,e){this.wildWarps.push({id:s,name:e})}addHouse(s,e){this.houses.push({houseId:s,townId:e,house:this.rom.locations[s].name,town:this.rom.locations[e].name})}formatCondition(s){return this.rom.flags[s]?.name}formatConditionList(s){let e=[];for(let t of s){let i=this.rom.flags[t];i?.logic.track&&e.push(i.name)}return e.join(", ")}},$i=class{constructor(s,e,t){this.spoiler=s;this.condition=e;this.deps=t}toString(){let s=0;return(this.condition&-128)===256&&(s=512|this.spoiler.rom.slots[this.condition&255]),`${this.spoiler.formatCondition(this.condition)}${s?` (${this.spoiler.formatCondition(s)})`:""}: [${this.spoiler.formatConditionList(this.deps)}]`}},er=class{constructor(s,e,t,i){this.slot=e;this.slotName=t;this.item=i;this.itemName=oo(s,i),this.originalItem=oo(s,e)}toString(){return`${this.itemName}: ${this.slotName} (${this.originalItem})`}};function oo(r,s){return s>=112?"Mimic":r.items[r.itemGets[s].itemId].messageName}var ao=new Map([["stair:up","C"],["edge:top","N"],["edge:left","W"],["edge:right","E"],["cave","C"],["door","C"],["door2","C"],["door3","C"],["fortress","F"]]),tr=new Map([["N","S"],["S","N"],["E","W"],["W","E"],["C","X"],["X","C"],["F","O"],["O","F"]]);function cd(r,[s,e,[t,i]]){let n=ao.get(e)||tr.get(ao.get(i)),o=!1,a=r.id.toString(16),l=(r.id<<8|s).toString(16)+" "+e,c=r.rom.locations[t>>>8],d=t&255,f=t.toString(16)+" "+i,u=c.id.toString(16),h={loc:c,pos:d,type:i,area:u,key:f,reverse:null,origRev:null,get conn(){return tr.get(n)},set conn(m){n=tr.get(m)},get shuffle(){return o},set shuffle(m){if(m&&!n)throw new Error("shuffle without conn");o=m}},p={loc:r,pos:s,type:e,key:l,reverse:h,area:a,origRev:h,get conn(){return n},set conn(m){n=m},get shuffle(){return o},set shuffle(m){if(m&&!n)throw new Error("shuffle without conn");o=m}};return h.reverse=h.origRev=p,p}function lo(r,s){return typeof s=="string"?r.type===s:typeof s=="number"?r.pos===s:s instanceof ms?r.reverse.loc===s:s.every(e=>lo(r,e))}function co(r,s,e){if(!s.shuffleAreas())return;let{locations:t}=r,i=new Map,n=new U(()=>[]);for(let w of r.locations)for(let b of w.meta.exits()){if(w===t.CordelPlainEast&&(b[0]&15)<5||w===t.CordelPlainWest&&(b[0]&15)>4||w.isTower())continue;let x=cd(w,b);if(x.loc!==t.Portoa_FortuneTeller&&x.reverse.loc!==t.Portoa_FortuneTeller&&!i.has(x.key)){if(i.has(x.reverse.key))throw new Error(`Inconsistent exits: ${x.key} | ${x.reverse.key}`);i.set(x.key,x),i.set(x.reverse.key,x.reverse),n.get(x.loc).push(x),n.get(x.reverse.loc).push(x.reverse)}}function o(w,...b){let x=[];for(let E of n.get(w))for(let k of b)if(lo(E,k)){x.push(E);break}return x}for(let w of o(t.ValleyOfWind,"door","windmill"))w.area="windmill";for(let w of o(t.AngrySea,100))w.area="lighthouse";o(t.Portoa_FishermanIsland,"edge:right")[0].oneWay=!0;function a(w,...b){for(let x of o(w,...b))x.shuffle=!0}function l(...w){let b=new Set(w);for(let x of w)for(let E of n.get(x))b.has(E.reverse.loc)||(E.shuffle=!0)}if(l(t.Leaf_OutsideStart),a(t.ValleyOfWind,"cave","door","edge:bottom","edge:top","edge:left","edge:right"),l(t.WindmillCave),l(t.EastCave1,t.EastCave2,t.EastCave3),l(t.ZebuCave,t.MtSabreWest_Cave1),l(t.CordelPlainWest,t.CordelPlainEast),l(t.WaterfallValleyNorth,t.WaterfallValleySouth),l(t.KirisaMeadow),l(t.LimeTreeLake),a(t.Portoa_FishermanIsland,"edge:right"),a(t.PortoaPalace_ThroneRoom,"door"),a(t.Joel,"edge:bottom"),l(t.JoelSecretPassage),a(t.EvilSpiritIsland1,"stair:up"),a(t.ZombieTown,"cave"),a(t.AngrySea,"edge:top"),l(t.SwanGate),a(t.GoaValley,"edge:left"),l(t.Desert1),l(t.GoaFortressBasement),l(t.DesertCave1),l(t.SaharaOutsideCave),l(t.DesertCave2),a(t.Desert2,"stair:down"),!s.shuffleHouses()){let w=[[t.ZombieTown,"fortress"],[t.MtHydra,"gate"],[t.Desert2,"fortress"],[t.Goa,"edge:top"],[t.Portoa,"fortress"],[t.Shyron,"fortress"],[t.GoaValley,"fortress"],[t.OasisCave_Entrance,"stair:up"],[t.MtHydra_OutsideShyron,"gate"],[t.Crypt_Entrance,"crypt"]];for(let[b,x]of w){let[E]=o(b,x);E.conn="F",E.shuffle=!0}}{let[w]=o(t.Oak,"edge:bottom");w.conn="X",w.shuffle=!0}let c=new Ge;for(let w of i.values())w.shuffle||c.union([w.area,w.reverse.area]);let d=new U(()=>[]);for(let w of i.values())!w.shuffle||d.get(w.area=c.find(w.area)).push(w);let f=n.get(t.MezameShrine)[0].area;function u(){let w=new Set,b=new Map,x=[];for(let k of[f,...d.keys()]){if(w.has(k))continue;let A=new Set([k]),S=[];for(let M of A){w.add(M);for(let G of d.get(M))b.set(G,x.length),S.push(G),!(G.oneWay||w.has(G.reverse.area))&&A.add(G.reverse.area)}x.push(S)}let E=0;for(let k=1;k<x.length;k++)x[k].length<x[E].length&&(E=k);return[x.length,b,x[E]]}let h=new U(()=>[]);for(let w of i.values())!w.shuffle||!w.conn||h.get(w.conn).push(w);for(let w of"NWCF"){let b=h.get(w),x=e.shuffle([...b]).map(E=>E.reverse);for(let E=0;E<x.length;E++){let k=b[E],A=x[E];[k.reverse,A.reverse]=[A,k]}}let p=0,[m,g,y]=u();for(;p-- >0||m>1;){let w=e.pick(y),b=h.get(w.conn);if(m>1){let A=g.get(w);b=b.filter(S=>g.get(S)!==A)}let x=e.pick(b),E=w.reverse,k=x.reverse;if(w.reverse=k,k.reverse=w,x.reverse=E,E.reverse=x,[m,g,y]=u(),p<-10)debugger}for(let w of i.values()){if(w.reverse!==w.origRev){let b=function(x){return`${x.loc.name} ${x.type}(${x.pos.toString(16)})`};console.log(`${b(w)}  =>  ${b(w.reverse)}  (was ${b(w.origRev)})`)}w.loc.meta.attach(w.pos,w.reverse.loc.meta,w.reverse.pos,w.type,w.reverse.type)}}function fo(r){for(let s of r.locations){let e=new Set;for(let t of s.spawns)if(!!t.isTrigger()&&e.has(t.coord))throw new Error(`Overlapping triggers on ${s} at ${t.coord.toString(16)}`)}}var sr=!0,ho=wr("asm");function Bu(r){return r?/^[0-9a-f]{1,8}$/i.test(r)?Number.parseInt(r,16):xs(r):Tt.newSeed()}var{}={watchArray:hr};function fd(r,s){let e={_ALLOW_TELEPORT_OUT_OF_BOSS:r.hardcoreMode()&&r.shuffleBossElements(),_ALLOW_TELEPORT_OUT_OF_TOWER:!0,_AUDIBLE_WALLS:r.audibleWallCues(s),_AUTO_EQUIP_BRACELET:r.autoEquipBracelet(s),_BARRIER_REQUIRES_CALM_SEA:!0,_BUFF_DEOS_PENDANT:r.buffDeosPendant(),_BUFF_DYNA:r.buffDyna(),_CHECK_FLAG0:!0,_CTRL1_SHORTCUTS:r.controllerShortcuts(s),_CUSTOM_SHOOTING_WALLS:!0,_DISABLE_SHOP_GLITCH:r.disableShopGlitch(),_DISABLE_STATUE_GLITCH:r.disableStatueGlitch(),_DISABLE_SWORD_CHARGE_GLITCH:r.disableSwordChargeGlitch(),_DISABLE_TRIGGER_SKIP:r.disableTriggerGlitch(),_DISABLE_WARP_BOOTS_REUSE:r.disableShopGlitch(),_DISABLE_WILD_WARP:!1,_EXPAND_PRG:sr,_EXTRA_EXTENDED_SCREENS:!0,_EXTRA_PITY_MP:!0,_FIX_BLIZZARD_SPAWN:!0,_FIX_COIN_SPRITES:!0,_FIX_OPEL_STATUE:!0,_FIX_SHAKING:!0,_FIX_SWORD_MANA_CHECK:!0,_FIX_VAMPIRE:!0,_HAZMAT_SUIT:r.changeGasMaskToHazmatSuit(),_LEATHER_BOOTS_GIVE_SPEED:r.leatherBootsGiveSpeed(),_MAX_SCALING_IN_TOWER:r.maxScalingInTower(),_MONEY_AT_START:r.shuffleHouses()||r.shuffleAreas(),_NERF_FLIGHT:!0,_NERF_MADO:!0,_NEVER_DIE:r.neverDie(),_NORMALIZE_SHOP_PRICES:r.shuffleShops(),_PITY_HP_AND_MP:!0,_PROGRESSIVE_BRACELET:!0,_RABBIT_BOOTS_CHARGE_WHILE_WALKING:r.rabbitBootsChargeWhileWalking(),_RANDOM_FLYER_SPAWNS:!0,_REQUIRE_HEALED_DOLPHIN_TO_RIDE:r.requireHealedDolphinToRide(),_REVERSIBLE_SWAN_GATE:!0,_SAHARA_RABBITS_REQUIRE_TELEPATHY:r.saharaRabbitsRequireTelepathy(),_SIMPLIFY_INVISIBLE_CHESTS:!0,_SOFT_RESET_SHORTCUT:!0,_STATS_TRACKING:r.hasStatTracking(),_TELEPORT_ON_THUNDER_SWORD:r.teleportOnThunderSword(),_TINK_MODE:!r.guaranteeMatchingSword(),_TRAINER:r.trainer(),_TWELFTH_WARP_POINT:!0,_UNIDENTIFIED_ITEMS:r.unidentifiedItems(),_ENEMY_HP:r.shouldUpdateHud(),_UPDATE_HUD:r.shouldUpdateHud(),_WARP_FLAGS_TABLE:!0,_ZEBU_STUDENT_GIVES_ITEM:r.zebuStudentGivesItem()};return Object.keys(e).filter(t=>e[t]).map(t=>`.define ${t} ${e[t]}
`).join("")}function hd(r,s){for(let e of s)xt.applyPatch(e,r,sr)}async function Au(r,s,e,t,i,n){let o=16+(r[6]&4?512:0)+(r[4]<<14)+(r[5]<<13);if(r.length>o&&(r=r.slice(0,o)),sr&&r.length<524288){if(r.length<524288){let h=new Uint8Array(r.length+262144);h.subarray(0,262160).set(r.subarray(0,262160)),h.subarray(524304).set(r.subarray(262160)),h[4]<<=1,r=h}let u=r.subarray(16);u.subarray(507904,524288).set(u.subarray(245760,262144))}let a=r.slice(16);if(An(r.subarray(16)),typeof s!="number")throw new Error("Bad seed");let l=xs(s.toString(16).padStart(8,"0")+String(e.filterOptional()))>>>0,c=new Tt(l),d=t||[],f=[];for(let u=0;u<5;u++)try{return await ud(r,e,s,c,i,n,d,a)}catch(h){f.push(h),console.error(`Attempt ${u+1} failed: ${h.stack}`)}throw new Error(`Shuffle failed: ${f.map(u=>u.stack).join(`

`)}`)}async function ud(r,s,e,t,i,n,o,a){let l=String(s),c=s.filterRandom(t),d=new br(r),f=String(c);d.flags.defrag(),Fn(d),Gn(d),typeof window=="object"&&(window.rom=d),d.spoiler=new Qs(d),i&&(i.spoiler=d.spoiler),f!==l&&(d.spoiler.flags=f),Ln(d,c),xr(d),es(d,es.generateOptions(c,t)),d.scalingLevels=48,c.shuffleShops()&&pd(d,c,t),c.shuffleGoaFloors()&&Yn(d,t),xd(d),gd(d,c,t),Bn(d,t),c.nerfWildWarp()&&d.wildWarp.locations.fill(0),c.randomizeWildWarp()&&bd(d,c,t),c.randomizeThunderTeleport()&&Vn(d,t),jn(d,c,t),to(d,c,t),so(d,c,t),On(d,c,t),c.shuffleHouses()&&Jn(d,c,t),c.shuffleAreas()&&co(d,c,t),Un(d),c.randomizeMaps()&&Mr(d,c,t),no(d),Qn(d,t),c.shuffleMimics()&&Xn(d,c,t),c.shuffleMonsters()&&$n(d,c,t);let u=new Ys(d,c),h=new Us([u.getLocationList()]);if(!c.noShuffle()){let w=await h.shuffle(c,t,void 0,n,d.spoiler);if(w){for(let[b,x]of w)d.slots[b&255]=x&255;d.slots.setCheckCount(w.size)}else return[r,-1]}c.shuffleShops()&&Ed(d,c.bargainHunting()?t:void 0),c.buffMedicalHerb()&&(d.items.MedicalHerb.value=80,d.items.FruitOfPower.value=56),c.storyMode()&&vd(d),c.blackoutMode()&&Sd(d),md(d,c,t),Dn(d),Hn(d),fo(d),c.buffDyna()&&yd(d,c),c.trainer()&&(d.wildWarp.locations=[10,26,53,72,109,110,140,170,172,176,182,159,166,88,92,0]),c.randomizeMusic("early")&&uo(d,c,t),c.shuffleTilePalettes("early")&&Qi(d,c,t),kd(d,c),t.shuffle(d.randomNumbers.values);async function p(w){let b=fd(c,w),x=new dr(si.P02),E=new fr;E.enter(lr.concat(new ai(b,"flags.s"),...xn().map(({filename:A,contents:S})=>new ai(vn(S,si.P02,a),A,{lineContinuations:!0}))));let k=new cr(E,x);return x.tokens(k),x.module()}d.messages.compress();let m=r.slice(16);d.modules.set(ho,await p("early")),d.writeData(m),d.modules.set(ho,await p("late"));let g=o?.some(w=>xt.isCustom(w))||!1,y=Cd(r,e,l,m,g);return c.randomizeMusic("late")&&uo(d,c,t),c.noMusic("late")&&wd(d),c.shuffleTilePalettes("late")&&Qi(d,c,t),Kn(d),d.writeData(),hd(r,o),[r,y]}function md(r,s,e){let{}={rom:r,flags:s,random:e};r.messages.parts[2][2].text=`
{01:Akahana} is handed a statue.#
Thanks for finding that.
I was totally gonna sell
it for tons of cash.#
Here, have this lame
[29:Gas Mask] or something.`,r.messages.parts[0][14].text="It's dangerous to go alone! Take this.",r.messages.parts[0][14].fixText()}function pd(r,s,e){let t={[0]:{contents:[],shops:[]},[1]:{contents:[],shops:[]}};for(let i of r.shops){if(!i.used||i.location===255)continue;let n=t[i.type];n&&(n.contents.push(...i.contents.filter(o=>o!==255)),n.shops.push(i),i.contents=[])}for(let i of Object.values(t)){let n=null,o=[...i.contents];for(e.shuffle(o);o.length;){(!n||!n.length)&&(n&&o.shift(),n=[...i.shops,...i.shops,...i.shops,...i.shops],e.shuffle(n));let a=o[0],l=n[0];l.contents.length<4&&!l.contents.includes(a)&&(l.contents.push(a),o.shift()),n.shift()}}for(let i of Object.values(t))for(let n of i.shops){for(;n.contents.length<4;)n.contents.push(255);n.contents.sort((o,a)=>o-a)}}function xd(r){for(let s of r.locations)if(!!s.used){for(let e of s.spawns)if(e.isWall()){let t=e.id&15;e.id=t|t<<4;let i=e.isShootingWall(s);e.data[2]=i?51:35}}}function gd(r,s,e){if(!s.randomizeWalls())return;let t=[[5,56],[17],[106],[20]];function i(o){return o.data[2]&32?o.id>>>4&3:o.id&3}let n=new U(()=>[]);for(let o of r.locations)n.get(o.data.area).push(o);for(let o of n.values()){let a=e.nextInt(4),l=e.pick(t[a]),c=!1;for(let d of o)for(let f of d.spawns)if(f.isWall()){let u=i(f);if(u===2)continue;if(u===3){let h=e.nextInt(4);r.spoiler&&r.spoiler.addWall(d.name,u,h),f.data[2]|=32,f.id=48|h}else!c&&r.spoiler&&(r.spoiler.addWall(d.name,u,a),c=!0),f.data[2]|=32,f.id=u<<4|a,d.tilePalettes[2]=l}}}function wd(r){for(let s of[...r.locations,...r.bosses.musics])s.bgm=0}function uo(r,s,e){let t=new U(()=>[]),i=new Set;for(let a of r.locations){if(a.id===95||a.id===0||!a.used)continue;let l=a.musicGroup;i.add(a.bgm),t.get(l).push(a)}for(let a of r.bosses.musics)t.set(a,[a]),i.add(a.bgm);let n=[...i],o=new Set;for(let a of t.values()){let l=e.pick(n);for(let c of a)c.bgm=l,o.add(c)}}function bd(r,s,e){let t=[];for(let i of r.locations)i&&i.used&&i.id&&!i.isShop()&&(i.id&248)!==88&&i!==r.locations.Crypt_Draygon2&&i!==r.locations.Crypt_Teleporter&&i!==r.locations.MesiaShrine&&i!==r.locations.LimeTreeLake&&t.push(i);e.shuffle(t),r.wildWarp.locations=[];for(let i of[...t.slice(0,15).sort((n,o)=>n.id-o.id)])r.wildWarp.locations.push(i.id),r.spoiler&&r.spoiler.addWildWarp(i.id,i.name);r.wildWarp.locations.push(0)}function yd(r,s){r.objects[184].collisionPlane=1,r.objects[184].immobile=!0,r.objects[185].collisionPlane=1,r.objects[185].immobile=!0,r.objects[51].collisionPlane=2,r.adHocSpawns[40].slotRangeLower=28,r.adHocSpawns[41].slotRangeUpper=28,r.adHocSpawns[42].slotRangeUpper=28}function Sd(r){let s=new Set([r.metatilesets.cave.tilesetId,r.metatilesets.fortress.tilesetId,r.metatilesets.iceCave.tilesetId,r.metatilesets.labyrinth.tilesetId,r.metatilesets.pyramid.tilesetId]);for(let e of r.locations)s.has(e.tileset)&&e.tilePalettes.fill(154)}var vd=r=>{let s=[r.flags.Kelbesque1.id,r.flags.Sabera1.id,r.flags.Mado1.id,r.flags.Kelbesque2.id,r.flags.Sabera2.id,r.flags.Mado2.id,r.flags.Karmine.id,r.flags.Draygon1.id,r.flags.SwordOfWind.id,r.flags.SwordOfFire.id,r.flags.SwordOfWater.id,r.flags.SwordOfThunder.id];r.npcs[203].spawnConditions.get(166).push(...s)};function Cd(r,s,e,t,i){let n=xs(t),o=n.toString(16).padStart(8,"0").toUpperCase(),a=wi==="unstable"?Fr.substring(0,7).padStart(7,"0").toUpperCase()+"     ":Ir.substring(0,12).padEnd(12," "),l=s.toString(16).padStart(8,"0").toUpperCase(),c=(u,...h)=>{u+=16;for(let p of h)if(typeof p=="string")for(let m of p)r[u++]=m.charCodeAt(0);else if(typeof p=="number")r[u++]=p;else throw new Error(`Bad value: ${p}`)},d=(u,h)=>{let p=[];for(let m=0;m<u.length||m<h.length;m++)p.push(u[m]||" "),p.push(h[m]||" ");return p.join("")};c(161743,d("  VERSION     SEED      ",`  ${a}${l}`));let f;if(e.length>46){if(e.length>92)throw new Error("Flag string way too long!");f=e.substring(46,92).padEnd(46," "),e=e.substring(0,46)}return e=e.padEnd(46," "),c(161791,d(e.substring(0,23),e.substring(23))),f&&c(161839,d(f.substring(0,23),f.substring(23))),i&&c(161923,126),c(161925,d(o.substring(0,4),o.substring(4))),c(153366,"RANDOMIZER"),wi==="unstable"&&c(153404,"BETA"),n}function kd(r,s){s.decreaseEnemyDamage()&&r.scaling.setPhpFormula(e=>16+6*e),r.scaling.setExpScalingFactor(s.expScalingFactor()),s.disableShopGlitch()?r.coinDrops.values=[0,5,10,15,25,40,65,105,170,275,445,600,700,800,900,1e3]:r.coinDrops.values=[0,1,2,4,8,16,30,50,100,200,300,400,500,600,700,800],r.items.CarapaceShield.defense=r.items.TannedHide.defense=3,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=9,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=13,r.items.PsychoArmor.defense=r.items.PsychoShield.defense=20,r.items.CeramicSuit.defense=r.items.BattleShield.defense=32,r.items.CarapaceShield.defense=r.items.TannedHide.defense=2,r.items.PlatinumShield.defense=r.items.BronzeArmor.defense=10,r.items.MirroredShield.defense=r.items.PlatinumArmor.defense=14,r.items.BattleArmor.defense=24}var Ed=(r,s)=>{for(let t of r.shops)if(t.type!==3)for(let i=0,n=t.prices.length;i<n;i++)t.contents[i]<128?t.prices[i]=s?s.nextNormal(1,.3,.5,1.5):1:t.type!==2?t.prices[i]=0:t.prices[i]=s?s.nextNormal(1,.5,.375,1.625):1;let e=le(48,t=>t);r.shops.rescale=!0,r.shops.toolShopScaling=e.map(t=>Math.round(8*2**(t/10))),r.shops.armorShopScaling=e.map(t=>Math.round(8*2**((47-t)/12)));for(let t=13;t<39;t++)r.items[t].basePrice=Rd[t]},Rd={13:4,14:16,15:50,16:325,17:1e3,18:2e3,19:4e3,21:6,22:20,23:75,24:250,25:1e3,26:4800,29:25,30:30,31:45,32:40,33:36,34:200,35:150,36:65,38:300},[]=[ee];var _s=r=>"",ir=r=>r===!0?!1:r,rr=class{constructor(s,e){this.flag=s;this.opts=e;rr.flags.set(s,this)}static all(){return[...this.flags.values()]}},Oe=rr;Oe.flags=new Map;var ve=class{constructor(s,e,t,i){this.name=e;this.description=t;this.flags=i.map(n=>n instanceof Oe?[n,!0]:n),s.presets.set(mo(e),this)}static all(){return dt.instance||(dt.instance=new dt),[...dt.instance.presets.values()]}get flagString(){return this._flagString==null&&(this._flagString=String(new is(`@${this.name}`))),this._flagString}};function mo(r){return r.toLowerCase().replace(/[^a-z]/g,"")}var dt=class{constructor(){this.presets=new Map;this.Casual=new ve(this,"Casual",`
      Basic flags for a relatively easy playthrough.  This is a good
      place to start.`,[X.PreserveUniqueChecks,X.NoShuffleMimics,X.DecreaseEnemyDamage,X.GuaranteeRefresh,X.GuaranteeStartingSword,X.ExperienceScalesFaster,X.NoCommunityJokes,z.NoThunderSwordWarp,$.Shops,$.Dyna,[$.Maps,"!"],[$.WildWarp,"!"],ge.SpoilerLog]);this.Classic=new ve(this,"Classic",`
      Provides a relatively quick playthough with a reasonable amount of
      challenge.  Similar to older versions.`,[X.GuaranteeStartingSword,X.NoCommunityJokes,D.StatueGlitch,[z.NoThunderSwordWarp,"!"],[$.Maps,"!"],ge.SpoilerLog]);this.Standard=new ve(this,"Standard",`
      Well-balanced, standard race flags.`,[ne.RandomizeWeaknesses,z.StoryMode,ge.SpoilerLog]);this.NoBowMode=new ve(this,"No Bow Mode",`
      The tower is open from the start, as soon as you're ready for it.`,[ne.RandomizeWeaknesses,ne.TowerRobots,te.MaxScalingInTower,z.NoBowMode,ge.SpoilerLog]);this.Advanced=new ve(this,"Advanced",`
      A balanced randomization with quite a bit more difficulty.`,[D.GhettoFlight,D.MtSabreRequirementSkip,D.StatueGlitch,[D.SwordChargeGlitch,"!"],se.Barrier,se.BattleMagic,se.GasMask,te.MaxScalingInTower,ne.RandomizeWeaknesses,ne.TowerRobots,z.OrbsNotRequired,z.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.UnidentifiedKeyItems,ge.SpoilerLog]);this.WildWarp=new ve(this,"Wild Warp",`
      Significantly opens up the game right from the start with wild
      warp in logic.`,[X.GuaranteeRefresh,I.RandomizeWildWarp,ne.RandomizeWeaknesses,ne.TowerRobots,z.OrbsNotRequired,z.StoryMode,ge.SpoilerLog]);this.Mystery=new ve(this,"Mystery",`
      Even the options are random.`,[[I.ShuffleAreas,"?"],[I.ShuffleHouses,"?"],[I.RandomizeMaps,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeWildWarp,"?"],[z.OrbsNotRequired,"?"],[z.NoBowMode,"?"],[z.StoryMode,"?"],[z.VanillaDolphin,"?"],[z.NoThunderSwordWarp,"?"],[D.RageSkip,"?"],[D.TriggerSkip,"?"],[D.StatueGlitch,"?"],[D.GhettoFlight,"?"],[D.SwordChargeGlitch,"?"],[D.MtSabreRequirementSkip,"?"],[Qe.RandomizeMusic,"?"],[Qe.RandomizeMapColors,"?"],[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],[X.NoShuffleMimics,"?"],[X.PreserveUniqueChecks,"?"],[se.Barrier,"?"],[se.BattleMagic,"?"],[se.GasMask,"?"],[$.Dyna,"?"],[$.BonusItems,"?"],[$.Maps,"?"],ge.SpoilerLog]);this.Hardcore=new ve(this,"Hardcore",`
      Not for the faint of heart.  Good luck.`,[se.Barrier,se.BattleMagic,te.ExperienceScalesSlower,te.MaxScalingInTower,te.Permadeath,z.OrbsNotRequired,z.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.UnidentifiedKeyItems]);this.FullStupid=new ve(this,"The Full Stupid",`
      Only a few noble fools have ever completed this.  Be sure to record this
      because pics or it didn't happen.`,[se.Barrier,se.BattleMagic,te.Blackout,te.ExperienceScalesSlower,te.MaxScalingInTower,te.Permadeath,ne.RandomizeWeaknesses,ne.TowerRobots,z.OrbsNotRequired,z.StoryMode,I.RandomizeMaps,I.ShuffleAreas,I.ShuffleHouses,I.RandomizeTrades,I.RandomizeWallElements,I.ShuffleGoaFloors,I.UnidentifiedKeyItems]);this.Tournament2022Early=new ve(this,"Tournament 2022 Early Rounds",`
      Lots of potential complexity, but within reason.  Requires all swords and
      bosses, as well as a few glitches, but guarantees a starting sword.`,[X.GuaranteeStartingSword,D.StatueGlitch,D.StatueGauntletSkip,[ne.RandomizeWeaknesses,"?"],z.OrbsNotRequired,z.StoryMode,[z.VanillaDolphin,"?"],[z.NoThunderSwordWarp,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]]);this.Tournament2022Mid=new ve(this,"Tournament 2022 Mid Rounds",`
      Some additional challenges compared to the early rounds: some additional
      mystery flags and glitches, as well as max difficulty scaling in the
      tower.`,[[X.GuaranteeStartingSword,"?"],[D.GhettoFlight,"?"],[D.StatueGlitch,"?"],[D.MtSabreRequirementSkip,"?"],[D.StatueGauntletSkip,"?"],te.MaxScalingInTower,[te.NoBuffMedicalHerb,"?"],[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],[se.Barrier,"?"],[se.BattleMagic,"?"],z.StoryMode,[z.VanillaDolphin,"?"],[z.OrbsNotRequired,"?"],[z.NoThunderSwordWarp,"?"],[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]]);this.Tournament2022Finals=new ve(this,"Tournament 2022 Finals Round",`
      Many of the more difficult mystery flags from the mid rounds are now
      always on, plus entrance shuffle.`,[[X.GuaranteeStartingSword,"?"],D.GhettoFlight,D.StatueGlitch,D.MtSabreRequirementSkip,D.StatueGauntletSkip,te.NoBuffMedicalHerb,te.MaxScalingInTower,[ne.RandomizeWeaknesses,"?"],[ne.TowerRobots,"?"],se.Barrier,se.BattleMagic,z.StoryMode,[z.VanillaDolphin,"?"],[z.OrbsNotRequired,"?"],[z.NoThunderSwordWarp,"?"],I.ShuffleHouses,[I.RandomizeWallElements,"?"],[I.ShuffleGoaFloors,"?"],[I.RandomizeSpriteColors,"?"],[I.RandomizeTrades,"?"],[I.UnidentifiedKeyItems,"?"]])}static get(s){return this.instance||(this.instance=new dt),this.instance.presets.get(mo(s))}},nr=class{constructor(){this.flags=new Map}static all(){return[...this.sections]}static flag(s,e){nr.sections.add(this.instance||(this.instance=new this));let t=new Oe(s,e);if(!s.startsWith(this.instance.prefix))throw new Error(`bad flag ${s} ${e}`);return this.instance.flags.set(s,t),t}},Ce=nr;Ce.sections=new Set;var Ve=class extends Ce{constructor(){super(...arguments);this.prefix="W";this.name="World"}},I=Ve;I.RandomizeMaps=Ve.flag("Wm",{name:"Randomize maps",text:`Individual maps are randomized.  For now this is only a subset of
           possible maps.  A randomized map will have all the same features
           (exits, chests, NPCs, etc) except things are moved around.`,hard:!0}),I.ShuffleAreas=Ve.flag("Wa",{name:"Shuffle areas",text:"Shuffles some or all area connections.",hard:!0}),I.ShuffleHouses=Ve.flag("Wh",{name:"Shuffle house entrances",text:`Shuffles all the house entrances, as well as a handful of other
           things, like the palace/fortress-type entrances at the top of
           several towns, and standalone houses.`,hard:!0}),I.RandomizeTrades=Ve.flag("Wt",{name:"Randomize trade-in items",text:`Items expected by various NPCs will be shuffled: specifically,
           Statue of Onyx, Kirisa Plant, Love Pendant, Ivory Statue, Fog
           Lamp, and Flute of Lime (for Akahana).  Rage will expect a
           random sword, and Tornel will expect a random bracelet.`,hard:!0}),I.UnidentifiedKeyItems=Ve.flag("Wu",{name:"Unidentified key items",text:`Item names will be generic and effects will be shuffled.  This
           includes keys, flutes, lamps, and statues.`,hard:!0}),I.RandomizeWallElements=Ve.flag("We",{name:"Randomize elements to break walls",text:`Walls will require a randomized element to break.  Normal rock and
           ice walls will indicate the required element by the color (light
           grey or yellow for wind, blue for fire, bright orange ("embers") for
           water, or dark grey ("steel") for thunder.  The element to break
           these walls is the same throughout an area.  Iron walls require a
           one-off random element, with no visual cue, and two walls in the
           same area may have different requirements.`}),I.ShuffleGoaFloors=Ve.flag("Wg",{name:"Shuffle Goa fortress floors",text:"The four areas of Goa fortress will appear in a random order."}),I.RandomizeSpriteColors=Ve.flag("Ws",{name:"Randomize sprite colors",text:`Monsters and NPCs will have different colors.  This is not an
           optional flag because it affects what monsters can be grouped
           together.`}),I.RandomizeWildWarp=Ve.flag("Ww",{name:"Randomize wild warp",text:`Wild warp will go to Mezame Shrine and 15 other random locations.
           These locations will be considered in-logic.`,excludes:["Vw"]});var zt=class extends Ce{constructor(){super(...arguments);this.prefix="R";this.name="Routing"}},z=zt;z.StoryMode=zt.flag("Rs",{name:"Story Mode",text:`Draygon 2 won't spawn unless you have all four swords and have
           defeated all major bosses of the tetrarchy.`}),z.NoBowMode=zt.flag("Rb",{name:"No Bow mode",text:`No items are required to finish the game.  An exit is added from
           Mezame shrine directly to the Draygon 2 fight (and the normal entrance
           is removed).  Draygon 2 spawns automatically with no Bow of Truth.`}),z.OrbsNotRequired=zt.flag("Ro",{name:"Orbs not required to break walls",text:"Walls can be broken and bridges formed with level 1 shots."}),z.NoThunderSwordWarp=zt.flag("Rt",{name:"No Sword of Thunder warp",text:`Normally when acquiring the thunder sword, the player is instantly
           warped to a random town.  This flag disables the warp.  If set as
           "R!t", then the warp will always go to Shyron, like in vanilla.`,modes:"!"}),z.VanillaDolphin=zt.flag("Rd",{name:"Vanilla Dolphin interactions",text:`By default, the randomizer changes a number of dolphin and boat
           interactions: (1) healing the dolphin and having the Shell Flute
           is no longer required before the fisherman spawns: instead, he
           will spawn as soon as you have the item he wants; (2) talking to
           Kensu in the beach cabin is no longer required for the Shell Flute
           to work: instead, the Shell Flute will always work, and Kensu will
           spawn after the Fog Lamp is turned in and will give a key item
           check.  This flag restores the vanilla interaction where healing
           and shell flute are required, and Kensu no longer drops an item.`});var at=class extends Ce{constructor(){super(...arguments);this.prefix="G";this.name="Glitches";this.description=`
      By default, the randomizer disables all known glitches (except ghetto
      flight).  These flags selectively re-enable certain glitches.  Most of
      these flags have two modes: normally enabling a glitch will add it as
      possibly required by logic, but clicking a second time will add a '!'
      and enable the glitch outside of logic (e.g. "G!c").`}},D=at;D.GhettoFlight=at.flag("Gf",{name:"Ghetto flight",text:`Ghetto flight allows using Dolphin and Rabbit Boots to fly up the
           waterfalls in the Angry Sea (without calming the whirlpools).
           This is done by swimming up to a diagonal beach and jumping
           in a different direction immediately before disembarking.`}),D.StatueGlitch=at.flag("Gs",{name:"Statue glitch",text:`Statue glitch allows getting behind statues that block certain
           entrances: the guards in Portoa, Amazones, Oak, Goa, and Shyron,
           as well as the statues in the Waterfall Cave.  It is done by
           approaching the statue from the top right and holding down and
           left on the controller while mashing B.`,modes:"!"}),D.MtSabreRequirementSkip=at.flag("Gn",{name:"Mt Sabre requirements skip",text:`Entering Mt Sabre North normally requires (1) having Teleport,
           and (2) talking to the rabbit in Leaf after the abduction (via
           Telepathy).  Both of these requirements can be skipped: first by
           flying over the river in Cordel plain rather than crossing the
           bridge, and then by threading the needle between the hitboxes in
           Mt Sabre North.`,modes:"!"}),D.StatueGauntletSkip=at.flag("Gg",{name:"Statue gauntlet skip",text:`The shooting statues in front of Goa and Stxy normally require
           Barrier to pass safely.  With this flag, Flight can also be used
           by flying around the edge of the statue.`,modes:"!"}),D.SwordChargeGlitch=at.flag("Gc",{name:"Sword charge glitch",text:`Sword charge glitch allows charging one sword to the level of
           another sword by equipping the higher-level sword, re-entering
           the menu, changing to the lower-level sword without exiting the
           menu, creating a hard save, resetting, and then continuing.`,hard:!0,modes:"!"}),D.TriggerSkip=at.flag("Gt",{name:"Trigger skip",text:`A wide variety of triggers and exit squares can be skipped by
           using an invalid item every frame while walking.  This allows
           bypassing both Mt Sabre North entrance triggers, the Evil Spirit
           Island entrance trigger, triggers for guards to move, slopes,
           damage tiles, and seamless map transitions.`,hard:!0,modes:"!"}),D.RageSkip=at.flag("Gr",{name:"Rage skip",text:`Rage can be skipped by damage-boosting diagonally into the Lime
           Tree Lake screen.  This provides access to the area beyond the
           lake if flight or bridges are available.  For simplicity, the
           logic only assumes this is possible if there's a flyer.`,hard:!0,modes:"!"});var cs=class extends Ce{constructor(){super(...arguments);this.prefix="A";this.name="Aesthetics";this.description=`
      These flags don't directly affect gameplay or shuffling, but they do
      affect the experience significantly enough that there are three modes
      for each: "off", "optional" (no exclamation point), and "required"
      (exclamation point).  The first two are equivalent for seed generation
      purposes, so that you can play the same seed with either setting.
      Setting it to "!" will change the seed.`}},Qe=cs;Qe.RandomizeMusic=cs.flag("Am",{name:"Randomize background music",modes:"!",optional:ir}),Qe.NoMusic=cs.flag("As",{name:"No background music",optional:_s}),Qe.RandomizeMapColors=cs.flag("Ac",{name:"Randomize map colors",modes:"!",optional:ir});var $s=class extends Ce{constructor(){super(...arguments);this.prefix="M";this.name="Monsters"}},ne=$s;ne.RandomizeWeaknesses=$s.flag("Me",{name:"Randomize monster weaknesses",text:"Monster and boss elemental weaknesses are shuffled."}),ne.TowerRobots=$s.flag("Mt",{name:"Shuffle tower robots",text:`Tower robots will be shuffled into the normal pool.  At some
           point, normal monsters may be shuffled into the tower as well.`,hard:!0});var lt=class extends Ce{constructor(){super(...arguments);this.prefix="E";this.name="Easy Mode";this.description=`
      The following options make parts of the game easier.`}},X=lt;X.NoShuffleMimics=lt.flag("Et",{name:"Don't shuffle mimics.",text:"Mimics will be in their vanilla locations."}),X.PreserveUniqueChecks=lt.flag("Eu",{name:"Keep unique items and consumables separate",text:`Normally all items and mimics are shuffled into a single pool and
           distributed from there.  If this flag is set, unique items
           (specifically, anything that cannot be sold) will only be found in
           either (a) checks that held unique items in vanilla, or (b) boss
           drops.  Chests containing consumables in vanilla may be safely
           ignored, but chests containing unique items in vanilla may still
           end up with non-unique items because of bosses like Vampire 2 that
           drop consumables.  If mimics are shuffled, they will only be in
           consumable locations.`}),X.DecreaseEnemyDamage=lt.flag("Ed",{name:"Decrease enemy damage",text:`Enemy attack power will be significantly decreased in the early game
           (by a factor of 3).  The gap will narrow in the mid-game and eventually
           phase out at scaling level 40.`}),X.GuaranteeStartingSword=lt.flag("Es",{name:"Guarantee starting sword",text:`The Leaf elder is guaranteed to give a sword.  It will not be
           required to deal with any enemies before finding the first sword.`}),X.GuaranteeRefresh=lt.flag("Er",{name:"Guarantee refresh",text:`Guarantees the Refresh spell will be available before fighting
           Tetrarchs.`}),X.ExperienceScalesFaster=lt.flag("Ex",{name:"Experience scales faster",text:'Less grinding will be required to "keep up" with the game difficulty.',excludes:["Hx"]}),X.NoCommunityJokes=lt.flag("Ec",{name:"No community jokes",text:`Skip community jokes, such as funny/misspelled item, monster, or
           character names.  This will make it easier to look up information
           in guides/FAQs if necessary.`});var ts=class extends Ce{constructor(){super(...arguments);this.prefix="N";this.name="No guarantees";this.description=`
      Removes various guarantees from the logic.`}},se=ts;se.BattleMagic=ts.flag("Nw",{name:"Battle magic not guaranteed",text:`Normally, the logic will guarantee that level 3 sword charges are
           available before fighting the tetrarchs (with the exception of Karmine,
           who only requires level 2).  This disables that check.`,hard:!0}),se.MatchingSword=ts.flag("Ns",{name:'Matching sword not guaranteed ("Tink Mode")',text:`Enables "tink strats", where wrong-element swords will still do a
           single damage per hit.  Player may be required to fight monsters
           (including bosses) with tinks.`,hard:!0}),se.Barrier=ts.flag("Nb",{name:"Barrier not guaranteed",text:`Normally, the logic will guarantee Barrier (or else refresh and shield
           ring) before entering Stxy, the Fortress, or fighting Karmine.  This
           disables that check.`,hard:!0}),se.GasMask=ts.flag("Ng",{name:"Gas mask not guaranteed",text:`The logic will not guarantee gas mask before needing to enter the swamp,
           nor will leather boots (or hazmat suit) be guaranteed to cross long
           stretches of spikes.  Gas mask is still guaranteed to kill the insect.`,hard:!0});var bt=class extends Ce{constructor(){super(...arguments);this.prefix="H";this.name="Hard mode"}},te=bt;te.NoBuffMedicalHerb=bt.flag("Hm",{name:"Don't buff medical herb or fruit of power",text:`Medical Herb is not buffed to heal 80 damage, which is helpful to make
           up for cases where Refresh is unavailable early.  Fruit of Power is not
           buffed to restore 56 MP.`,hard:!0}),te.MaxScalingInTower=bt.flag("Ht",{name:"Max scaling level in tower",text:"Enemies in the tower spawn at max scaling level.",hard:!0}),te.ExperienceScalesSlower=bt.flag("Hx",{name:"Experience scales slower",text:'More grinding will be required to "keep up" with the difficulty.',excludes:["Ex"],hard:!0}),te.ChargeShotsOnly=bt.flag("Hc",{name:"Charge shots only",text:"Stabbing is completely ineffective.  Only charged shots work.",hard:!0}),te.Blackout=bt.flag("Hz",{name:"Blackout",text:"All caves and fortresses are permanently dark.",hard:!0}),te.Permadeath=bt.flag("Hh",{name:"Permadeath",text:"Hardcore mode: checkpoints and saves are removed.",hard:!0});var yt=class extends Ce{constructor(){super(...arguments);this.name="Vanilla";this.prefix="V";this.description=`
      Options to restore vanilla behavior changed by default.`}},$=yt;$.Dyna=yt.flag("Vd",{name:"Don't buff Dyna",text:`By default, we makes the Dyna fight a bit more of a challenge.
           Side pods will fire significantly more.  The safe spot has been
           removed.  The revenge beams pass through barrier.  Side pods can
           now be killed.  This flag prevents that change.`}),$.BonusItems=yt.flag("Vb",{name:"Don't buff bonus items",text:`Leather Boots are changed to Speed Boots, which increase player walking
           speed (this allows climbing up the slope to access the Tornado Bracelet
           chest, which is taken into consideration by the logic).  Deo's pendant
           restores MP while moving.  Rabbit boots enable sword charging up to
           level 2 while walking (level 3 still requires being stationary, so as
           to prevent wasting tons of magic).`}),$.Maps=yt.flag("Vm",{name:"Vanilla maps",text:`Normally the randomizer adds a new "East Cave" to Valley of Wind,
           borrowed from the GBC version of the game.  This cave contains two
           chests (one considered a key item) on the upper floor and exits to
           two random areas (chosen between Lime Tree Valley, Cordel Plain,
           Goa Valley, or Desert 2; the quicksand is removed from the entrances
           to Pyramid and Crypt), one unblocked on the lower floor, and one
           down the stairs and behind a rock wall from the upper floor.  This
           flag prevents adding that cave.  If set as "V!m" then a direct path
           will instead be added between Valley of Wind and Lime Tree Valley
           (as in earlier versions of the randomizer).`,modes:"!"}),$.Shops=yt.flag("Vs",{name:"Vanilla shops",text:`By default, we disable shop glitch, shuffle shop contents, and tie
           the prices to the scaling level (item shops and inns increase by a
           factor of 2 every 10 scaling levels, armor shops decrease by a
           factor of 2 every 12 scaling levels).  This flag prevents all of
           these changes, restoring shops to be completely vanilla.`}),$.WildWarp=yt.flag("Vw",{name:"Vanilla wild warp",text:`By default, Wild Warp is nerfed to only return to Mezame Shrine.
           This flag restores it to work like normal.  Note that this will put
           all wild warp locations in logic unless the flag is set as (V!w).`,modes:"!"}),$.Hud=yt.flag("Vh",{name:"Vanilla HUD",text:`By default, the blue status bar (HUD) at the bottom of the screen
           is reorganized a bit, including displaying enemies' names and HP.
           This can be set either as Vh (which will optionally disable the
           changes, and will produce the same seed as not setting Vh) or as
           V!h (which requires all players to disable it to get the same
            seed).`,modes:"!",optional:ir});var fs=class extends Ce{constructor(){super(...arguments);this.prefix="Q";this.name="Quality of Life";this.description=`
      The following quality-of-life flags turn <i>off</i> improvements that
      are normally on by default.  They are optional and will not affect the
      seed generation.  They may be toggled freely in race mode.`}},St=fs;St.NoAutoEquip=fs.flag("Qa",{name:"Don't automatically equip orbs and bracelets",text:`Prevents adding a quality-of-life improvement to automatically equip
           the corresponding orb/bracelet whenever changing swords.`,optional:_s}),St.NoControllerShortcuts=fs.flag("Qc",{name:"Disable controller shortcuts",text:`By default, we disable second controller input and instead enable
           some new shortcuts on controller 1: Start+A+B for wild warp, and
           Select+B to quickly change swords.  To support this, the action of
           the start and select buttons is changed slightly.  This flag
           disables this change and retains normal behavior.`,optional:_s}),St.AudibleWallCues=fs.flag("Qw",{name:"Audible wall cues",text:`Provide an audible cue when failing to break a non-iron wall.
           The intended way to determine which sword is required for normal
           cave walls is by looking at the color.  This causes the level 3
           sword sound of the required element to play when the wall fails
           to break.  Note that fortress walls (iron in vanilla) do not give
           this hint, since there is no visual cue for them, either.`,optional:_s});var ss=class extends Ce{constructor(){super(...arguments);this.prefix="D";this.name="Debug Mode";this.description=`
      These options are helpful for exploring or debugging.  Note that,
      while they do not directly affect any randomization, they
      <i>do</i> factor into the seed to prevent cheating, and they
      will remove the option to generate a seed for racing.`}},ge=ss;ge.SpoilerLog=ss.flag("Ds",{name:"Generate a spoiler log",text:`Note: <b>this will change the placement of items</b> compared to a
           seed generated without this flag turned on.`}),ge.TrainerMode=ss.flag("Dt",{name:"Trainer mode",text:`Installs a trainer for practicing certain parts of the game.
           At the start of the game, the player will have all swords, basic
           armors and shields, all worn items and magics, a selection of
           consumables, bow of truth, maximum cash, all warp points activated,
           and the Shyron massacre will have been triggered.  Wild warp is
           reconfigured to provide easy access to all bosses.  Additionally,
           the following button combinations are recognized:<ul>
             <li>Start+Up: increase player level
             <li>Start+Down: increase scaling level
             <li>Start+Left: get all balls
             <li>Start+Right: get all bracelets
             <li>Start+B+Down: get a full set of consumable items
             <li>Start+B+Left: get all advanced armors
             <li>Start+B+Right: get all advanced shields
           </ul>`}),ge.NeverDie=ss.flag("Di",{name:"Player never dies"}),ge.NoShuffle=ss.flag("Dn",{name:"Do not shuffle items",text:`Items will not be shuffled. WARNING: This disables the logic and
           is very likely to result in an unwinnable seed`});var is=class{constructor(s="@Casual"){if(typeof s!="string"){this.flags=new Map;for(let[i,n]of s)this.set(i.flag,n);return}if(s.startsWith("@")){let i=dt.get(s.substring(1));if(!i)throw new or(`Unknown preset: ${s}`);this.flags=new Map(i.flags);return}this.flags=new Map,s=s.replace(/[^A-Za-z0-9!?]/g,"");let e=/([A-Z])([a-z0-9!?]+)/g,t;for(;t=e.exec(s);){let[,i,n]=t,o=/([!?]|^)([a-z0-9]+)/g;for(;t=o.exec(n);){let[,a,l]=t;for(let c of l)this.set(i+c,a||!0)}}}filterOptional(){return new is(new Map([...this.flags].map(([s,e])=>[s,s.opts.optional?s.opts.optional(e):e])))}filterRandom(s){function e(t,i){return i!=="?"?i:s.pick([!0,!1,...t.opts.modes||""])}return new is(new Map([...this.flags].map(([t,i])=>[t,e(t,i)])))}toString(){let s=new U(()=>new U(()=>[]));for(let[t,i]of this.flags){if(t.flag.length!==2)throw new Error(`Bad flag ${t.flag}`);if(!i)continue;let n=s.get(t.flag[0]),o=i===!0?"":i;n.get(o).push(t.flag[1])}let e=[];for(let[t,i]of s.sortedEntries()){let n=t;for(let[o,a]of i.sortedEntries())n+=o+a.sort().join("");e.push(n)}return e.join(" ")}toggle(s){let e=Oe.flags.get(s);if(!e)return console.error(`Bad flag: ${s}`),!1;let t=this.flags.get(e)||!1,i=[!1,!0,...e.opts.modes||"","?",!1],n=i.indexOf(t);if(n<0)throw new Error(`Bad current mode ${t}`);let o=i[n+1];return this.flags.set(e,o),o}set(s,e){let t=Oe.flags.get(s);if(!t){console.error(`Bad flag: ${s}`);return}if(!e)this.flags.delete(t);else if(e===!0||e==="?"||t.opts.modes?.includes(e))this.flags.set(t,e);else{console.error(`Bad flag mode: ${s[0]}${e}${s.substring(1)}`);return}for(let i of t.opts.excludes||[])this.flags.delete(Oe.flags.get(i))}check(s,...e){let t=s instanceof Oe?s:Oe.flags.get(s);return e.length||e.push(!0),e.includes(t&&this.flags.get(t)||!1)}get(s){let e=s instanceof Oe?s:Oe.flags.get(s);return e&&this.flags.get(e)||!1}preserveUniqueChecks(){return this.check(X.PreserveUniqueChecks)}shuffleMimics(){return this.check(X.NoShuffleMimics,!1)}buffDeosPendant(){return this.check($.BonusItems,!1)}changeGasMaskToHazmatSuit(){return this.check($.BonusItems,!1)}slowDownTornado(){return this.check($.BonusItems,!1)}leatherBootsGiveSpeed(){return this.check($.BonusItems,!1)}rabbitBootsChargeWhileWalking(){return this.check($.BonusItems,!1)}shuffleSpritePalettes(){return this.check(I.RandomizeSpriteColors)}shuffleMonsters(){return!0}shuffleShops(){return this.check($.Shops,!1)}bargainHunting(){return this.shuffleShops()}shuffleTowerMonsters(){return this.check(ne.TowerRobots)}shuffleMonsterElements(){return this.check(ne.RandomizeWeaknesses)}shuffleBossElements(){return this.shuffleMonsterElements()}buffMedicalHerb(){return this.check(te.NoBuffMedicalHerb,!1)}decreaseEnemyDamage(){return this.check(X.DecreaseEnemyDamage)}trainer(){return this.check(ge.TrainerMode)}neverDie(){return this.check(ge.NeverDie)}noShuffle(){return this.check(ge.NoShuffle)}chargeShotsOnly(){return this.check(te.ChargeShotsOnly)}barrierRequiresCalmSea(){return!0}connectLimeTreeToLeaf(){return this.check($.Maps,"!")}addEastCave(){return this.check($.Maps,!1)}zebuStudentGivesItem(){return!this.shuffleAreas()&&!this.shuffleHouses()}fogLampNotRequired(){return this.check(z.VanillaDolphin,!1)}storyMode(){return this.check(z.StoryMode)}noBowMode(){return this.check(z.NoBowMode)}requireHealedDolphinToRide(){return this.check(z.VanillaDolphin)}saharaRabbitsRequireTelepathy(){return!0}teleportOnThunderSword(){return this.check(z.NoThunderSwordWarp,!1,"!")}randomizeThunderTeleport(){return this.check(z.NoThunderSwordWarp,!1)}orbsOptional(){return this.check(z.OrbsNotRequired)}shuffleGoaFloors(){return this.check(I.ShuffleGoaFloors)}shuffleHouses(){return this.check(I.ShuffleHouses)}shuffleAreas(){return this.check(I.ShuffleAreas)}randomizeMaps(){return this.check(I.RandomizeMaps)}randomizeTrades(){return this.check(I.RandomizeTrades)}unidentifiedItems(){return this.check(I.UnidentifiedKeyItems)}randomizeWalls(){return this.check(I.RandomizeWallElements)}guaranteeSword(){return this.check(X.GuaranteeStartingSword)}guaranteeSwordMagic(){return this.check(se.BattleMagic,!1)}guaranteeMatchingSword(){return this.check(se.MatchingSword,!1)}guaranteeGasMask(){return this.check(se.GasMask,!1)}guaranteeBarrier(){return this.check(se.Barrier,!1)}guaranteeRefresh(){return this.check(X.GuaranteeRefresh)}communityJokes(){return this.check(X.NoCommunityJokes,!1)}disableSwordChargeGlitch(){return this.check(D.SwordChargeGlitch,!1)}disableTeleportSkip(){return this.check(D.MtSabreRequirementSkip,!1)}disableRabbitSkip(){return this.check(D.MtSabreRequirementSkip,!1)}disableShopGlitch(){return this.check($.Shops,!1)}disableStatueGlitch(){return this.check(D.StatueGlitch,!1)}disableRageSkip(){return this.check(D.RageSkip,!1)}disableTriggerGlitch(){return this.check(D.TriggerSkip,!1)}disableFlightStatueSkip(){return this.check(D.StatueGauntletSkip,!1)}assumeSwordChargeGlitch(){return this.check(D.SwordChargeGlitch)}assumeGhettoFlight(){return this.check(D.GhettoFlight)}assumeTeleportSkip(){return this.check(D.MtSabreRequirementSkip)}assumeRabbitSkip(){return this.check(D.MtSabreRequirementSkip)}assumeStatueGlitch(){return this.check(D.StatueGlitch)}assumeTriggerGlitch(){return this.check(D.TriggerSkip)}assumeFlightStatueSkip(){return this.check(D.StatueGauntletSkip)}assumeWildWarp(){return this.check($.WildWarp,!0)||this.check(I.RandomizeWildWarp)}assumeRageSkip(){return this.check(D.RageSkip)}nerfWildWarp(){return this.check($.WildWarp,!1)&&this.check(I.RandomizeWildWarp,!1)}allowWildWarp(){return!this.nerfWildWarp()}randomizeWildWarp(){return this.check(I.RandomizeWildWarp,!0)}blackoutMode(){return this.check(te.Blackout)}hardcoreMode(){return this.check(te.Permadeath)}buffDyna(){return!this.check($.Dyna)}maxScalingInTower(){return this.check(te.MaxScalingInTower)}expScalingFactor(){return this.check(te.ExperienceScalesSlower)?.25:this.check(X.ExperienceScalesFaster)?2.5:1}autoEquipBracelet(s){return s==="early"||this.check(St.NoAutoEquip,!1)}controllerShortcuts(s){return s==="early"||this.check(St.NoControllerShortcuts,!1)}randomizeMusic(s){return this.check(Qe.RandomizeMusic,s==="early"?"!":!0)}shuffleTilePalettes(s){return this.check(Qe.RandomizeMapColors,s==="early"?"!":!0)}noMusic(s){return s==="late"&&this.check(Qe.NoMusic)}audibleWallCues(s){return s==="late"&&this.check(St.AudibleWallCues)}shouldColorSwordElements(){return!0}shouldUpdateHud(){return this.check($.Hud,!1)}hasStatTracking(){return!0}};export{xs as a,Lo as b,wi as c,Ir as d,hf as e,Fr as f,uf as g,mf as h,Af as i,xt as j,Ds as k,Pa as l,Bu as m,Au as n,ve as o,Ce as p,is as q};
