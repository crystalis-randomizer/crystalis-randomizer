export function randomizeThunderWarp(rom, random) {
    const towns = [...rom.townWarp.locations].filter(x => x !== 0xff);
    const index = random.nextInt(towns.length);
    const town = towns[index];
    let entrance = 0x40;
    if (town === rom.locations.Shyron.id ||
        town === rom.locations.Shyron_Temple.id) {
        entrance = 0x41;
    }
    rom.townWarp.thunderSwordWarp = [town, entrance];
    const warpFlag = 0x300 - towns.length + index;
    const flags = rom.itemGets[0x03].flags;
    for (let i = 0; i < flags.length; i++) {
        if (flags[i] === 0x2fd) {
            flags[i] = warpFlag;
            return;
        }
    }
    flags.push(warpFlag);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9taXpldGh1bmRlcndhcnAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvanMvcGFzcy9yYW5kb21pemV0aHVuZGVyd2FycC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLFVBQVUsb0JBQW9CLENBQUMsR0FBUSxFQUFFLE1BQWM7SUFLM0QsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQ2xFLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDcEIsSUFBSSxJQUFJLEtBQUssR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNoQyxJQUFJLEtBQUssR0FBRyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFO1FBQzNDLFFBQVEsR0FBRyxJQUFJLENBQUM7S0FDakI7SUFDRCxHQUFHLENBQUMsUUFBUSxDQUFDLGdCQUFnQixHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBSWpELE1BQU0sUUFBUSxHQUFHLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUM5QyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN2QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNyQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7WUFDdEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQztZQUNwQixPQUFPO1NBQ1I7S0FDRjtJQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmFuZG9tfSBmcm9tICcuLi9yYW5kb20uanMnO1xuaW1wb3J0IHtSb219IGZyb20gJy4uL3JvbS5qcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21pemVUaHVuZGVyV2FycChyb206IFJvbSwgcmFuZG9tOiBSYW5kb20pIHtcbiAgLy8gVE9ETyAtIGZsYWcgZm9yIGFkZGluZyB6b21iaWUgdG93biB3YXJwIHBvaW50PyAgZ2l2ZW4gZWZmZWN0IG9uIGZsYWdzLFxuICAvLyBpdCBzZWVtcyBsaWtlIHRoaXMgc2hvdWxkIHByb2JhYmx5IGp1c3QgYmUgcmVxdWlyZWQsIHVubGVzcyB3ZSBhZGRlZFxuICAvLyBhbiBhYnN0cmFjdGlvbiBmb3IgZmxhZ3MgdGhhdCB3b3VsZCBhbGxvdyBub3QgaGFyZGNvZGluZyBudW1iZXJzLlxuXG4gIGNvbnN0IHRvd25zID0gWy4uLnJvbS50b3duV2FycC5sb2NhdGlvbnNdLmZpbHRlcih4ID0+IHggIT09IDB4ZmYpO1xuICBjb25zdCBpbmRleCA9IHJhbmRvbS5uZXh0SW50KHRvd25zLmxlbmd0aCk7XG4gIGNvbnN0IHRvd24gPSB0b3duc1tpbmRleF07XG4gIGxldCBlbnRyYW5jZSA9IDB4NDA7XG4gIGlmICh0b3duID09PSByb20ubG9jYXRpb25zLlNoeXJvbi5pZCB8fFxuICAgICAgdG93biA9PT0gcm9tLmxvY2F0aW9ucy5TaHlyb25fVGVtcGxlLmlkKSB7XG4gICAgZW50cmFuY2UgPSAweDQxO1xuICB9XG4gIHJvbS50b3duV2FycC50aHVuZGVyU3dvcmRXYXJwID0gW3Rvd24sIGVudHJhbmNlXTtcblxuICAvLyBBbHNvIHNldCB0aGUgY29ycmVjdCB3YXJwIHBvaW50IGltbWVkaWF0ZWx5LlxuICAvLyBCeSBkZWZhdWx0LCBpdCdzIHNldCB0byAyZmQgKHNoeXJvbik7IGlmIG5vdCBmb3VuZCwgYWRkIG9uZS5cbiAgY29uc3Qgd2FycEZsYWcgPSAweDMwMCAtIHRvd25zLmxlbmd0aCArIGluZGV4O1xuICBjb25zdCBmbGFncyA9IHJvbS5pdGVtR2V0c1sweDAzXS5mbGFncztcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBmbGFncy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChmbGFnc1tpXSA9PT0gMHgyZmQpIHtcbiAgICAgIGZsYWdzW2ldID0gd2FycEZsYWc7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGZsYWdzLnB1c2god2FycEZsYWcpO1xufVxuIl19